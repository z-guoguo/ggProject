{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Angle, Point, Rectangle } from '../../geometry';\nimport { ArrayExt, FunctionExt } from '../../util';\nimport { Vector } from '../../util/vector';\nimport { View } from '../../view/view';\nexport class Snapline extends View {\n  constructor(options) {\n    super();\n\n    const {\n      graph\n    } = options,\n          others = __rest(options, [\"graph\"]);\n\n    this.graph = graph;\n    this.options = Object.assign({\n      tolerance: 10\n    }, others);\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n    this.render();\n    this.parseFilter();\n\n    if (!this.disabled) {\n      this.startListening();\n    }\n  }\n\n  get model() {\n    return this.graph.model;\n  }\n\n  get containerClassName() {\n    return this.prefixClassName('widget-snapline');\n  }\n\n  get verticalClassName() {\n    return `${this.containerClassName}-vertical`;\n  }\n\n  get horizontalClassName() {\n    return `${this.containerClassName}-horizontal`;\n  }\n\n  get disabled() {\n    return this.options.enabled !== true || this.graph.options.snapline.enabled !== true;\n  }\n\n  enable() {\n    if (this.disabled) {\n      this.options.enabled = true;\n      this.graph.options.snapline.enabled = true;\n      this.startListening();\n    }\n  }\n\n  disable() {\n    if (!this.disabled) {\n      this.options.enabled = false;\n      this.graph.options.snapline.enabled = false;\n      this.stopListening();\n    }\n  }\n\n  setFilter(filter) {\n    this.options.filter = filter;\n    this.parseFilter();\n  }\n\n  render() {\n    const container = this.containerWrapper = new Vector('svg');\n    const horizontal = this.horizontal = new Vector('path');\n    const vertical = this.vertical = new Vector('path');\n    container.addClass(this.containerClassName);\n    horizontal.addClass(this.horizontalClassName);\n    vertical.addClass(this.verticalClassName);\n    container.setAttribute('width', '100%');\n    container.setAttribute('height', '100%');\n    horizontal.setAttribute('display', 'none');\n    vertical.setAttribute('display', 'none');\n    container.append([horizontal, vertical]);\n\n    if (this.options.className) {\n      container.addClass(this.options.className);\n    }\n\n    this.container = this.containerWrapper.node;\n  }\n\n  startListening() {\n    this.stopListening();\n    this.graph.on('node:mousedown', this.captureCursorOffset, this);\n    this.graph.on('node:mousemove', this.snapOnMoving, this);\n    this.model.on('batch:stop', this.onBatchStop, this);\n    this.delegateDocumentEvents({\n      mouseup: 'hide',\n      touchend: 'hide'\n    });\n  }\n\n  stopListening() {\n    this.graph.off('node:mousedown', this.captureCursorOffset, this);\n    this.graph.off('node:mousemove', this.snapOnMoving, this);\n    this.model.off('batch:stop', this.onBatchStop, this);\n    this.undelegateDocumentEvents();\n  }\n\n  parseFilter() {\n    this.filterShapes = {};\n    this.filterCells = {};\n    this.filterFunction = null;\n    const filter = this.options.filter;\n\n    if (Array.isArray(filter)) {\n      filter.forEach(item => {\n        if (typeof item === 'string') {\n          this.filterShapes[item] = true;\n        } else {\n          this.filterCells[item.id] = true;\n        }\n      });\n    } else if (typeof filter === 'function') {\n      this.filterFunction = filter;\n    }\n  }\n\n  onBatchStop({\n    name,\n    data\n  }) {\n    if (name === 'resize') {\n      this.snapOnResizing(data.cell, data);\n    }\n  }\n\n  captureCursorOffset({\n    view,\n    x,\n    y\n  }) {\n    const targetView = view.getDelegatedView();\n\n    if (targetView && this.isNodeMovable(targetView)) {\n      const pos = view.cell.getPosition();\n      this.offset = {\n        x: x - pos.x,\n        y: y - pos.y\n      };\n    }\n  }\n\n  isNodeMovable(view) {\n    return view && view.cell.isNode() && view.can('nodeMovable');\n  }\n\n  snapOnResizing(node, options) {\n    if (this.options.resizing && !options.snapped && options.ui && options.direction && options.trueDirection) {\n      const view = this.graph.renderer.findViewByCell(node);\n\n      if (view && view.cell.isNode()) {\n        const nodeBbox = node.getBBox();\n        const nodeBBoxRotated = nodeBbox.bbox(node.getAngle());\n        const nodeTopLeft = nodeBBoxRotated.getTopLeft();\n        const nodeBottomRight = nodeBBoxRotated.getBottomRight();\n        const angle = Angle.normalize(node.getAngle());\n        const tolerance = this.options.tolerance || 0;\n        let verticalLeft;\n        let verticalTop;\n        let verticalHeight;\n        let horizontalTop;\n        let horizontalLeft;\n        let horizontalWidth;\n        const snapOrigin = {\n          vertical: 0,\n          horizontal: 0\n        };\n        const direction = options.direction;\n        const trueDirection = options.trueDirection;\n        const relativeDirection = options.relativeDirection;\n\n        if (trueDirection.indexOf('right') !== -1) {\n          snapOrigin.vertical = nodeBottomRight.x;\n        } else {\n          snapOrigin.vertical = nodeTopLeft.x;\n        }\n\n        if (trueDirection.indexOf('bottom') !== -1) {\n          snapOrigin.horizontal = nodeBottomRight.y;\n        } else {\n          snapOrigin.horizontal = nodeTopLeft.y;\n        }\n\n        this.model.getNodes().some(cell => {\n          if (this.isIgnored(node, cell)) {\n            return false;\n          }\n\n          const snapBBox = cell.getBBox().bbox(cell.getAngle());\n          const snapTopLeft = snapBBox.getTopLeft();\n          const snapBottomRight = snapBBox.getBottomRight();\n          const groups = {\n            vertical: [snapTopLeft.x, snapBottomRight.x],\n            horizontal: [snapTopLeft.y, snapBottomRight.y]\n          };\n          const distances = {};\n          Object.keys(groups).forEach(k => {\n            const key = k;\n            const list = groups[key].map(value => ({\n              position: value,\n              distance: Math.abs(value - snapOrigin[key])\n            })).filter(item => item.distance <= tolerance);\n            distances[key] = ArrayExt.sortBy(list, item => item.distance);\n          });\n\n          if (verticalLeft == null && distances.vertical.length > 0) {\n            verticalLeft = distances.vertical[0].position;\n            verticalTop = Math.min(nodeBBoxRotated.y, snapBBox.y);\n            verticalHeight = Math.max(nodeBottomRight.y, snapBottomRight.y) - verticalTop;\n          }\n\n          if (horizontalTop == null && distances.horizontal.length > 0) {\n            horizontalTop = distances.horizontal[0].position;\n            horizontalLeft = Math.min(nodeBBoxRotated.x, snapBBox.x);\n            horizontalWidth = Math.max(nodeBottomRight.x, snapBottomRight.x) - horizontalLeft;\n          }\n\n          return verticalLeft != null && horizontalTop != null;\n        });\n        this.hide();\n        let dx = 0;\n        let dy = 0;\n\n        if (horizontalTop != null || verticalLeft != null) {\n          if (verticalLeft != null) {\n            dx = trueDirection.indexOf('right') !== -1 ? verticalLeft - nodeBottomRight.x : nodeTopLeft.x - verticalLeft;\n          }\n\n          if (horizontalTop != null) {\n            dy = trueDirection.indexOf('bottom') !== -1 ? horizontalTop - nodeBottomRight.y : nodeTopLeft.y - horizontalTop;\n          }\n        }\n\n        let dWidth = 0;\n        let dHeight = 0;\n\n        if (angle % 90 === 0) {\n          if (angle === 90 || angle === 270) {\n            dWidth = dy;\n            dHeight = dx;\n          } else {\n            dWidth = dx;\n            dHeight = dy;\n          }\n        } else {\n          const quadrant = angle >= 0 && angle < 90 ? 1 : angle >= 90 && angle < 180 ? 4 : angle >= 180 && angle < 270 ? 3 : 2;\n\n          if (horizontalTop != null && verticalLeft != null) {\n            if (dx < dy) {\n              dy = 0;\n              horizontalTop = undefined;\n            } else {\n              dx = 0;\n              verticalLeft = undefined;\n            }\n          }\n\n          const rad = Angle.toRad(angle % 90);\n\n          if (dx) {\n            dWidth = quadrant === 3 ? dx / Math.cos(rad) : dx / Math.sin(rad);\n          }\n\n          if (dy) {\n            dHeight = quadrant === 3 ? dy / Math.cos(rad) : dy / Math.sin(rad);\n          }\n\n          const quadrant13 = quadrant === 1 || quadrant === 3;\n\n          switch (relativeDirection) {\n            case 'top':\n            case 'bottom':\n              dHeight = dy ? dy / (quadrant13 ? Math.cos(rad) : Math.sin(rad)) : dx / (quadrant13 ? Math.sin(rad) : Math.cos(rad));\n              break;\n\n            case 'left':\n            case 'right':\n              dWidth = dx ? dx / (quadrant13 ? Math.cos(rad) : Math.sin(rad)) : dy / (quadrant13 ? Math.sin(rad) : Math.cos(rad));\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        switch (relativeDirection) {\n          case 'top':\n          case 'bottom':\n            dWidth = 0;\n            break;\n\n          case 'left':\n          case 'right':\n            dHeight = 0;\n            break;\n\n          default:\n            break;\n        }\n\n        const gridSize = this.graph.getGridSize();\n        let newWidth = Math.max(nodeBbox.width + dWidth, gridSize);\n        let newHeight = Math.max(nodeBbox.height + dHeight, gridSize);\n\n        if (options.minWidth && options.minWidth > gridSize) {\n          newWidth = Math.max(newWidth, options.minWidth);\n        }\n\n        if (options.minHeight && options.minHeight > gridSize) {\n          newHeight = Math.max(newHeight, options.minHeight);\n        }\n\n        if (options.maxWidth) {\n          newWidth = Math.min(newWidth, options.maxWidth);\n        }\n\n        if (options.maxHeight) {\n          newHeight = Math.min(newHeight, options.maxHeight);\n        }\n\n        if (options.preserveAspectRatio) {\n          if (dHeight < dWidth) {\n            newHeight = newWidth * (nodeBbox.height / nodeBbox.width);\n          } else {\n            newWidth = newHeight * (nodeBbox.width / nodeBbox.height);\n          }\n        }\n\n        if (newWidth !== nodeBbox.width || newHeight !== nodeBbox.height) {\n          node.resize(newWidth, newHeight, {\n            direction,\n            relativeDirection,\n            trueDirection,\n            snapped: true,\n            snaplines: this.cid,\n            restrict: this.graph.hook.getRestrictArea(view)\n          });\n\n          if (verticalHeight) {\n            verticalHeight += newHeight - nodeBbox.height;\n          }\n\n          if (horizontalWidth) {\n            horizontalWidth += newWidth - nodeBbox.width;\n          }\n        }\n\n        const newRotatedBBox = node.getBBox().bbox(angle);\n\n        if (verticalLeft && Math.abs(newRotatedBBox.x - verticalLeft) > 1 && Math.abs(newRotatedBBox.width + newRotatedBBox.x - verticalLeft) > 1) {\n          verticalLeft = undefined;\n        }\n\n        if (horizontalTop && Math.abs(newRotatedBBox.y - horizontalTop) > 1 && Math.abs(newRotatedBBox.height + newRotatedBBox.y - horizontalTop) > 1) {\n          horizontalTop = undefined;\n        }\n\n        this.update({\n          verticalLeft,\n          verticalTop,\n          verticalHeight,\n          horizontalTop,\n          horizontalLeft,\n          horizontalWidth\n        });\n      }\n    }\n  }\n\n  snapOnMoving({\n    view,\n    e,\n    x,\n    y\n  }) {\n    const targetView = view.getEventData(e).delegatedView || view;\n\n    if (!this.isNodeMovable(targetView)) {\n      return;\n    }\n\n    const node = targetView.cell;\n    const size = node.getSize();\n    const position = node.getPosition();\n    const cellBBox = new Rectangle(x - this.offset.x, y - this.offset.y, size.width, size.height);\n    const angle = node.getAngle();\n    const nodeCenter = cellBBox.getCenter();\n    const nodeBBoxRotated = cellBBox.bbox(angle);\n    const nodeTopLeft = nodeBBoxRotated.getTopLeft();\n    const nodeBottomRight = nodeBBoxRotated.getBottomRight();\n    const distance = this.options.tolerance || 0;\n    let verticalLeft;\n    let verticalTop;\n    let verticalHeight;\n    let horizontalTop;\n    let horizontalLeft;\n    let horizontalWidth;\n    let verticalFix = 0;\n    let horizontalFix = 0;\n    this.model.getNodes().some(targetNode => {\n      if (this.isIgnored(node, targetNode)) {\n        return false;\n      }\n\n      const snapBBox = targetNode.getBBox().bbox(targetNode.getAngle());\n      const snapCenter = snapBBox.getCenter();\n      const snapTopLeft = snapBBox.getTopLeft();\n      const snapBottomRight = snapBBox.getBottomRight();\n\n      if (verticalLeft == null) {\n        if (Math.abs(snapCenter.x - nodeCenter.x) < distance) {\n          verticalLeft = snapCenter.x;\n          verticalFix = 0.5;\n        } else if (Math.abs(snapTopLeft.x - nodeTopLeft.x) < distance) {\n          verticalLeft = snapTopLeft.x;\n          verticalFix = 0;\n        } else if (Math.abs(snapTopLeft.x - nodeBottomRight.x) < distance) {\n          verticalLeft = snapTopLeft.x;\n          verticalFix = 1;\n        } else if (Math.abs(snapBottomRight.x - nodeBottomRight.x) < distance) {\n          verticalLeft = snapBottomRight.x;\n          verticalFix = 1;\n        } else if (Math.abs(snapBottomRight.x - nodeTopLeft.x) < distance) {\n          verticalLeft = snapBottomRight.x;\n        }\n\n        if (verticalLeft != null) {\n          verticalTop = Math.min(nodeBBoxRotated.y, snapBBox.y);\n          verticalHeight = Math.max(nodeBottomRight.y, snapBottomRight.y) - verticalTop;\n        }\n      }\n\n      if (horizontalTop == null) {\n        if (Math.abs(snapCenter.y - nodeCenter.y) < distance) {\n          horizontalTop = snapCenter.y;\n          horizontalFix = 0.5;\n        } else if (Math.abs(snapTopLeft.y - nodeTopLeft.y) < distance) {\n          horizontalTop = snapTopLeft.y;\n        } else if (Math.abs(snapTopLeft.y - nodeBottomRight.y) < distance) {\n          horizontalTop = snapTopLeft.y;\n          horizontalFix = 1;\n        } else if (Math.abs(snapBottomRight.y - nodeBottomRight.y) < distance) {\n          horizontalTop = snapBottomRight.y;\n          horizontalFix = 1;\n        } else if (Math.abs(snapBottomRight.y - nodeTopLeft.y) < distance) {\n          horizontalTop = snapBottomRight.y;\n        }\n\n        if (horizontalTop != null) {\n          horizontalLeft = Math.min(nodeBBoxRotated.x, snapBBox.x);\n          horizontalWidth = Math.max(nodeBottomRight.x, snapBottomRight.x) - horizontalLeft;\n        }\n      }\n\n      return verticalLeft != null && horizontalTop != null;\n    });\n    this.hide();\n\n    if (horizontalTop != null || verticalLeft != null) {\n      if (horizontalTop != null) {\n        nodeBBoxRotated.y = horizontalTop - horizontalFix * nodeBBoxRotated.height;\n      }\n\n      if (verticalLeft != null) {\n        nodeBBoxRotated.x = verticalLeft - verticalFix * nodeBBoxRotated.width;\n      }\n\n      const newCenter = nodeBBoxRotated.getCenter();\n      const newX = newCenter.x - cellBBox.width / 2;\n      const newY = newCenter.y - cellBBox.height / 2;\n      const dx = newX - position.x;\n      const dy = newY - position.y;\n\n      if (dx !== 0 || dy !== 0) {\n        node.translate(dx, dy, {\n          snapped: true,\n          restrict: this.graph.hook.getRestrictArea(targetView)\n        });\n\n        if (horizontalWidth) {\n          horizontalWidth += dx;\n        }\n\n        if (verticalHeight) {\n          verticalHeight += dy;\n        }\n      }\n\n      this.update({\n        verticalLeft,\n        verticalTop,\n        verticalHeight,\n        horizontalTop,\n        horizontalLeft,\n        horizontalWidth\n      });\n    }\n  }\n\n  isIgnored(snapNode, targetNode) {\n    return targetNode.id === snapNode.id || targetNode.isDescendantOf(snapNode) || this.filterShapes[targetNode.shape] || this.filterCells[targetNode.id] || this.filterFunction && FunctionExt.call(this.filterFunction, this.graph, targetNode);\n  }\n\n  update(metadata) {\n    // https://en.wikipedia.org/wiki/Transformation_matrix#Affine_transformations\n    if (metadata.horizontalTop) {\n      const start = this.graph.localToGraph(new Point(metadata.horizontalLeft, metadata.horizontalTop));\n      const end = this.graph.localToGraph(new Point(metadata.horizontalLeft + metadata.horizontalWidth, metadata.horizontalTop));\n      this.horizontal.setAttributes({\n        d: `M ${start.x},${start.y} L ${end.x},${end.y}`,\n        display: 'inherit'\n      });\n    } else {\n      this.horizontal.setAttribute('display', 'none');\n    }\n\n    if (metadata.verticalLeft) {\n      const start = this.graph.localToGraph(new Point(metadata.verticalLeft, metadata.verticalTop));\n      const end = this.graph.localToGraph(new Point(metadata.verticalLeft, metadata.verticalTop + metadata.verticalHeight));\n      this.vertical.setAttributes({\n        d: `M ${start.x},${start.y} L ${end.x},${end.y}`,\n        display: 'inherit'\n      });\n    } else {\n      this.vertical.setAttribute('display', 'none');\n    }\n\n    this.show();\n  }\n\n  resetTimer() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n  }\n\n  show() {\n    this.resetTimer();\n\n    if (this.container.parentNode == null) {\n      this.graph.container.appendChild(this.container);\n    }\n\n    return this;\n  }\n\n  hide() {\n    this.resetTimer();\n    this.vertical.setAttribute('display', 'none');\n    this.horizontal.setAttribute('display', 'none');\n    const clean = this.options.clean;\n    const delay = typeof clean === 'number' ? clean : clean !== false ? 3000 : 0;\n\n    if (delay > 0) {\n      this.timer = window.setTimeout(() => {\n        if (this.container.parentNode !== null) {\n          this.unmount();\n        }\n      }, delay);\n    }\n\n    return this;\n  }\n\n  onRemove() {\n    this.stopListening();\n    this.hide();\n  }\n\n  dispose() {\n    this.remove();\n  }\n\n}\n\n__decorate([View.dispose()], Snapline.prototype, \"dispose\", null);","map":{"version":3,"mappings":"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","names":["Angle","Point","Rectangle","ArrayExt","FunctionExt","Vector","View","Snapline","constructor","options","graph","others","Object","tolerance","offset","x","y","render","parseFilter","disabled","startListening","model","containerClassName","prefixClassName","verticalClassName","horizontalClassName","enabled","snapline","enable","disable","stopListening","setFilter","filter","container","containerWrapper","horizontal","vertical","addClass","setAttribute","append","className","node","on","captureCursorOffset","snapOnMoving","onBatchStop","delegateDocumentEvents","mouseup","touchend","off","undelegateDocumentEvents","filterShapes","filterCells","filterFunction","Array","isArray","forEach","item","id","name","data","snapOnResizing","cell","view","targetView","getDelegatedView","isNodeMovable","pos","getPosition","isNode","can","resizing","snapped","ui","direction","trueDirection","renderer","findViewByCell","nodeBbox","getBBox","nodeBBoxRotated","bbox","getAngle","nodeTopLeft","getTopLeft","nodeBottomRight","getBottomRight","angle","normalize","verticalLeft","verticalTop","verticalHeight","horizontalTop","horizontalLeft","horizontalWidth","snapOrigin","relativeDirection","indexOf","getNodes","some","isIgnored","snapBBox","snapTopLeft","snapBottomRight","groups","distances","keys","k","key","list","map","value","position","distance","Math","abs","sortBy","length","min","max","hide","dx","dy","dWidth","dHeight","quadrant","undefined","rad","toRad","cos","sin","quadrant13","gridSize","getGridSize","newWidth","width","newHeight","height","minWidth","minHeight","maxWidth","maxHeight","preserveAspectRatio","resize","snaplines","cid","restrict","hook","getRestrictArea","newRotatedBBox","update","e","getEventData","delegatedView","size","getSize","cellBBox","nodeCenter","getCenter","verticalFix","horizontalFix","targetNode","snapCenter","newCenter","newX","newY","translate","snapNode","isDescendantOf","shape","call","metadata","start","localToGraph","end","setAttributes","d","display","show","resetTimer","timer","clearTimeout","parentNode","appendChild","clean","delay","window","setTimeout","unmount","onRemove","dispose","remove","__decorate"],"sourceRoot":"","sources":["../../../src/addon/snapline/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}