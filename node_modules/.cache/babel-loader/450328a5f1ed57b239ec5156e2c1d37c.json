{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.error.cause.js\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Registry } from '../registry';\nimport { Point, Rectangle, Angle } from '../geometry';\nimport { StringExt, ObjectExt, NumberExt } from '../util';\nimport { Markup } from '../view/markup';\nimport { Cell } from './cell';\nimport { ShareRegistry } from './registry';\nimport { PortManager } from './port';\nimport { Interp } from '../common';\nexport class Node extends Cell {\n  constructor(metadata = {}) {\n    super(metadata);\n    this.initPorts();\n  }\n\n  get [Symbol.toStringTag]() {\n    return Node.toStringTag;\n  }\n\n  preprocess(metadata, ignoreIdCheck) {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = metadata,\n          others = __rest(metadata, [\"x\", \"y\", \"width\", \"height\"]);\n\n    if (x != null || y != null) {\n      const position = others.position;\n      others.position = Object.assign(Object.assign({}, position), {\n        x: x != null ? x : position ? position.x : 0,\n        y: y != null ? y : position ? position.y : 0\n      });\n    }\n\n    if (width != null || height != null) {\n      const size = others.size;\n      others.size = Object.assign(Object.assign({}, size), {\n        width: width != null ? width : size ? size.width : 0,\n        height: height != null ? height : size ? size.height : 0\n      });\n    }\n\n    return super.preprocess(others, ignoreIdCheck);\n  }\n\n  isNode() {\n    return true;\n  }\n\n  size(width, height, options) {\n    if (width === undefined) {\n      return this.getSize();\n    }\n\n    if (typeof width === 'number') {\n      return this.setSize(width, height, options);\n    }\n\n    return this.setSize(width, height);\n  }\n\n  getSize() {\n    const size = this.store.get('size');\n    return size ? Object.assign({}, size) : {\n      width: 1,\n      height: 1\n    };\n  }\n\n  setSize(width, height, options) {\n    if (typeof width === 'object') {\n      this.resize(width.width, width.height, height);\n    } else {\n      this.resize(width, height, options);\n    }\n\n    return this;\n  }\n\n  resize(width, height, options = {}) {\n    this.startBatch('resize', options);\n    const direction = options.direction;\n\n    if (direction) {\n      const currentSize = this.getSize();\n\n      switch (direction) {\n        case 'left':\n        case 'right':\n          // Don't change height when resizing horizontally.\n          height = currentSize.height; // eslint-disable-line\n\n          break;\n\n        case 'top':\n        case 'bottom':\n          // Don't change width when resizing vertically.\n          width = currentSize.width; // eslint-disable-line\n\n          break;\n\n        default:\n          break;\n      }\n\n      const map = {\n        right: 0,\n        'top-right': 0,\n        top: 1,\n        'top-left': 1,\n        left: 2,\n        'bottom-left': 2,\n        bottom: 3,\n        'bottom-right': 3\n      };\n      let quadrant = map[direction];\n      const angle = Angle.normalize(this.getAngle() || 0);\n\n      if (options.absolute) {\n        // We are taking the node's rotation into account\n        quadrant += Math.floor((angle + 45) / 90);\n        quadrant %= 4;\n      } // This is a rectangle in size of the un-rotated node.\n\n\n      const bbox = this.getBBox(); // Pick the corner point on the node, which meant to stay on its\n      // place before and after the rotation.\n\n      let fixedPoint;\n\n      if (quadrant === 0) {\n        fixedPoint = bbox.getBottomLeft();\n      } else if (quadrant === 1) {\n        fixedPoint = bbox.getCorner();\n      } else if (quadrant === 2) {\n        fixedPoint = bbox.getTopRight();\n      } else {\n        fixedPoint = bbox.getOrigin();\n      } // Find an image of the previous indent point. This is the position,\n      // where is the point actually located on the screen.\n\n\n      const imageFixedPoint = fixedPoint.clone().rotate(-angle, bbox.getCenter()); // Every point on the element rotates around a circle with the centre of\n      // rotation in the middle of the element while the whole element is being\n      // rotated. That means that the distance from a point in the corner of\n      // the element (supposed its always rect) to the center of the element\n      // doesn't change during the rotation and therefore it equals to a\n      // distance on un-rotated element.\n      // We can find the distance as DISTANCE = (ELEMENTWIDTH/2)^2 + (ELEMENTHEIGHT/2)^2)^0.5.\n\n      const radius = Math.sqrt(width * width + height * height) / 2; // Now we are looking for an angle between x-axis and the line starting\n      // at image of fixed point and ending at the center of the element.\n      // We call this angle `alpha`.\n      // The image of a fixed point is located in n-th quadrant. For each\n      // quadrant passed going anti-clockwise we have to add 90 degrees.\n      // Note that the first quadrant has index 0.\n      //\n      // 3 | 2\n      // --c-- Quadrant positions around the element's center `c`\n      // 0 | 1\n      //\n\n      let alpha = quadrant * Math.PI / 2; // Add an angle between the beginning of the current quadrant (line\n      // parallel with x-axis or y-axis going through the center of the\n      // element) and line crossing the indent of the fixed point and the\n      // center of the element. This is the angle we need but on the\n      // un-rotated element.\n\n      alpha += Math.atan(quadrant % 2 === 0 ? height / width : width / height); // Lastly we have to deduct the original angle the element was rotated\n      // by and that's it.\n\n      alpha -= Angle.toRad(angle); // With this angle and distance we can easily calculate the centre of\n      // the un-rotated element.\n      // Note that fromPolar constructor accepts an angle in radians.\n\n      const center = Point.fromPolar(radius, alpha, imageFixedPoint); // The top left corner on the un-rotated element has to be half a width\n      // on the left and half a height to the top from the center. This will\n      // be the origin of rectangle we were looking for.\n\n      const origin = center.clone().translate(width / -2, height / -2);\n      this.store.set('size', {\n        width,\n        height\n      }, options);\n      this.setPosition(origin.x, origin.y, options);\n    } else {\n      this.store.set('size', {\n        width,\n        height\n      }, options);\n    }\n\n    this.stopBatch('resize', options);\n    return this;\n  }\n\n  scale(sx, sy, origin, options = {}) {\n    const scaledBBox = this.getBBox().scale(sx, sy, origin == null ? undefined : origin);\n    this.startBatch('scale', options);\n    this.setPosition(scaledBBox.x, scaledBBox.y, options);\n    this.resize(scaledBBox.width, scaledBBox.height, options);\n    this.stopBatch('scale');\n    return this;\n  }\n\n  position(arg0, arg1, arg2) {\n    if (typeof arg0 === 'number') {\n      return this.setPosition(arg0, arg1, arg2);\n    }\n\n    return this.getPosition(arg0);\n  }\n\n  getPosition(options = {}) {\n    if (options.relative) {\n      const parent = this.getParent();\n\n      if (parent != null && parent.isNode()) {\n        const currentPosition = this.getPosition();\n        const parentPosition = parent.getPosition();\n        return {\n          x: currentPosition.x - parentPosition.x,\n          y: currentPosition.y - parentPosition.y\n        };\n      }\n    }\n\n    const pos = this.store.get('position');\n    return pos ? Object.assign({}, pos) : {\n      x: 0,\n      y: 0\n    };\n  }\n\n  setPosition(arg0, arg1, arg2 = {}) {\n    let x;\n    let y;\n    let options;\n\n    if (typeof arg0 === 'object') {\n      x = arg0.x;\n      y = arg0.y;\n      options = arg1 || {};\n    } else {\n      x = arg0;\n      y = arg1;\n      options = arg2 || {};\n    }\n\n    if (options.relative) {\n      const parent = this.getParent();\n\n      if (parent != null && parent.isNode()) {\n        const parentPosition = parent.getPosition();\n        x += parentPosition.x;\n        y += parentPosition.y;\n      }\n    }\n\n    if (options.deep) {\n      const currentPosition = this.getPosition();\n      this.translate(x - currentPosition.x, y - currentPosition.y, options);\n    } else {\n      this.store.set('position', {\n        x,\n        y\n      }, options);\n    }\n\n    return this;\n  }\n\n  translate(tx = 0, ty = 0, options = {}) {\n    if (tx === 0 && ty === 0) {\n      return this;\n    } // Pass the initiator of the translation.\n\n\n    options.translateBy = options.translateBy || this.id;\n    const position = this.getPosition();\n\n    if (options.restrict != null && options.translateBy === this.id) {\n      // We are restricting the translation for the element itself only. We get\n      // the bounding box of the element including all its embeds.\n      // All embeds have to be translated the exact same way as the element.\n      const bbox = this.getBBox({\n        deep: true\n      });\n      const ra = options.restrict; // - - - - - - - - - - - - -> ra.x + ra.width\n      // - - - -> position.x      |\n      // -> bbox.x\n      //                ▓▓▓▓▓▓▓   |\n      //         ░░░░░░░▓▓▓▓▓▓▓\n      //         ░░░░░░░░░        |\n      //   ▓▓▓▓▓▓▓▓░░░░░░░\n      //   ▓▓▓▓▓▓▓▓               |\n      //   <-dx->                     | restricted area right border\n      //         <-width->        |   ░ translated element\n      //   <- - bbox.width - ->       ▓ embedded element\n\n      const dx = position.x - bbox.x;\n      const dy = position.y - bbox.y; // Find the maximal/minimal coordinates that the element can be translated\n      // while complies the restrictions.\n\n      const x = Math.max(ra.x + dx, Math.min(ra.x + ra.width + dx - bbox.width, position.x + tx));\n      const y = Math.max(ra.y + dy, Math.min(ra.y + ra.height + dy - bbox.height, position.y + ty)); // recalculate the translation taking the restrictions into account.\n\n      tx = x - position.x; // eslint-disable-line\n\n      ty = y - position.y; // eslint-disable-line\n    }\n\n    const translatedPosition = {\n      x: position.x + tx,\n      y: position.y + ty\n    }; // To find out by how much an element was translated in event\n    // 'change:position' handlers.\n\n    options.tx = tx;\n    options.ty = ty;\n\n    if (options.transition) {\n      if (typeof options.transition !== 'object') {\n        options.transition = {};\n      }\n\n      this.transition('position', translatedPosition, Object.assign(Object.assign({}, options.transition), {\n        interp: Interp.object\n      }));\n      this.eachChild(child => {\n        var _a;\n\n        const excluded = (_a = options.exclude) === null || _a === void 0 ? void 0 : _a.includes(child);\n\n        if (!excluded) {\n          child.translate(tx, ty, options);\n        }\n      });\n    } else {\n      this.startBatch('translate', options);\n      this.store.set('position', translatedPosition, options);\n      this.eachChild(child => {\n        var _a;\n\n        const excluded = (_a = options.exclude) === null || _a === void 0 ? void 0 : _a.includes(child);\n\n        if (!excluded) {\n          child.translate(tx, ty, options);\n        }\n      });\n      this.stopBatch('translate', options);\n    }\n\n    return this;\n  }\n\n  angle(val, options) {\n    if (val == null) {\n      return this.getAngle();\n    }\n\n    return this.rotate(val, options);\n  }\n\n  getAngle() {\n    return this.store.get('angle', 0);\n  }\n\n  rotate(angle, options = {}) {\n    const currentAngle = this.getAngle();\n\n    if (options.center) {\n      const size = this.getSize();\n      const position = this.getPosition();\n      const center = this.getBBox().getCenter();\n      center.rotate(currentAngle - angle, options.center);\n      const dx = center.x - size.width / 2 - position.x;\n      const dy = center.y - size.height / 2 - position.y;\n      this.startBatch('rotate', {\n        angle,\n        options\n      });\n      this.setPosition(position.x + dx, position.y + dy, options);\n      this.rotate(angle, Object.assign(Object.assign({}, options), {\n        center: null\n      }));\n      this.stopBatch('rotate');\n    } else {\n      this.store.set('angle', options.absolute ? angle : (currentAngle + angle) % 360, options);\n    }\n\n    return this;\n  } // #endregion\n  // #region common\n\n\n  getBBox(options = {}) {\n    if (options.deep) {\n      const cells = this.getDescendants({\n        deep: true,\n        breadthFirst: true\n      });\n      cells.push(this);\n      return Cell.getCellsBBox(cells);\n    }\n\n    return Rectangle.fromPositionAndSize(this.getPosition(), this.getSize());\n  }\n\n  getConnectionPoint(edge, type) {\n    const bbox = this.getBBox();\n    const center = bbox.getCenter();\n    const terminal = edge.getTerminal(type);\n\n    if (terminal == null) {\n      return center;\n    }\n\n    const portId = terminal.port;\n\n    if (!portId || !this.hasPort(portId)) {\n      return center;\n    }\n\n    const port = this.getPort(portId);\n\n    if (!port || !port.group) {\n      return center;\n    }\n\n    const layouts = this.getPortsPosition(port.group);\n    const position = layouts[portId].position;\n    const portCenter = Point.create(position).translate(bbox.getOrigin());\n    const angle = this.getAngle();\n\n    if (angle) {\n      portCenter.rotate(-angle, center);\n    }\n\n    return portCenter;\n  }\n  /**\n   * Sets cell's size and position based on the children bbox and given padding.\n   */\n\n\n  fit(options = {}) {\n    const children = this.getChildren() || [];\n    const embeds = children.filter(cell => cell.isNode());\n\n    if (embeds.length === 0) {\n      return this;\n    }\n\n    this.startBatch('fit-embeds', options);\n\n    if (options.deep) {\n      embeds.forEach(cell => cell.fit(options));\n    }\n\n    let {\n      x,\n      y,\n      width,\n      height\n    } = Cell.getCellsBBox(embeds);\n    const padding = NumberExt.normalizeSides(options.padding);\n    x -= padding.left;\n    y -= padding.top;\n    width += padding.left + padding.right;\n    height += padding.bottom + padding.top;\n    this.store.set({\n      position: {\n        x,\n        y\n      },\n      size: {\n        width,\n        height\n      }\n    }, options);\n    this.stopBatch('fit-embeds');\n    return this;\n  } // #endregion\n  // #region ports\n\n\n  get portContainerMarkup() {\n    return this.getPortContainerMarkup();\n  }\n\n  set portContainerMarkup(markup) {\n    this.setPortContainerMarkup(markup);\n  }\n\n  getDefaultPortContainerMarkup() {\n    return this.store.get('defaultPortContainerMarkup') || Markup.getPortContainerMarkup();\n  }\n\n  getPortContainerMarkup() {\n    return this.store.get('portContainerMarkup') || this.getDefaultPortContainerMarkup();\n  }\n\n  setPortContainerMarkup(markup, options = {}) {\n    this.store.set('portContainerMarkup', Markup.clone(markup), options);\n    return this;\n  }\n\n  get portMarkup() {\n    return this.getPortMarkup();\n  }\n\n  set portMarkup(markup) {\n    this.setPortMarkup(markup);\n  }\n\n  getDefaultPortMarkup() {\n    return this.store.get('defaultPortMarkup') || Markup.getPortMarkup();\n  }\n\n  getPortMarkup() {\n    return this.store.get('portMarkup') || this.getDefaultPortMarkup();\n  }\n\n  setPortMarkup(markup, options = {}) {\n    this.store.set('portMarkup', Markup.clone(markup), options);\n    return this;\n  }\n\n  get portLabelMarkup() {\n    return this.getPortLabelMarkup();\n  }\n\n  set portLabelMarkup(markup) {\n    this.setPortLabelMarkup(markup);\n  }\n\n  getDefaultPortLabelMarkup() {\n    return this.store.get('defaultPortLabelMarkup') || Markup.getPortLabelMarkup();\n  }\n\n  getPortLabelMarkup() {\n    return this.store.get('portLabelMarkup') || this.getDefaultPortLabelMarkup();\n  }\n\n  setPortLabelMarkup(markup, options = {}) {\n    this.store.set('portLabelMarkup', Markup.clone(markup), options);\n    return this;\n  }\n\n  get ports() {\n    const res = this.store.get('ports', {\n      items: []\n    });\n\n    if (res.items == null) {\n      res.items = [];\n    }\n\n    return res;\n  }\n\n  getPorts() {\n    return ObjectExt.cloneDeep(this.ports.items);\n  }\n\n  getPortsByGroup(groupName) {\n    return this.getPorts().filter(port => port.group === groupName);\n  }\n\n  getPort(portId) {\n    return ObjectExt.cloneDeep(this.ports.items.find(port => port.id && port.id === portId));\n  }\n\n  getPortAt(index) {\n    return this.ports.items[index] || null;\n  }\n\n  hasPorts() {\n    return this.ports.items.length > 0;\n  }\n\n  hasPort(portId) {\n    return this.getPortIndex(portId) !== -1;\n  }\n\n  getPortIndex(port) {\n    const portId = typeof port === 'string' ? port : port.id;\n    return portId != null ? this.ports.items.findIndex(item => item.id === portId) : -1;\n  }\n\n  getPortsPosition(groupName) {\n    const size = this.getSize();\n    const layouts = this.port.getPortsLayoutByGroup(groupName, new Rectangle(0, 0, size.width, size.height));\n    return layouts.reduce((memo, item) => {\n      const layout = item.portLayout;\n      memo[item.portId] = {\n        position: Object.assign({}, layout.position),\n        angle: layout.angle || 0\n      };\n      return memo;\n    }, {});\n  }\n\n  getPortProp(portId, path) {\n    return this.getPropByPath(this.prefixPortPath(portId, path));\n  }\n\n  setPortProp(portId, arg1, arg2, arg3) {\n    if (typeof arg1 === 'string' || Array.isArray(arg1)) {\n      const path = this.prefixPortPath(portId, arg1);\n      const value = arg2;\n      return this.setPropByPath(path, value, arg3);\n    }\n\n    const path = this.prefixPortPath(portId);\n    const value = arg1;\n    return this.setPropByPath(path, value, arg2);\n  }\n\n  removePortProp(portId, path, options) {\n    if (typeof path === 'string' || Array.isArray(path)) {\n      return this.removePropByPath(this.prefixPortPath(portId, path), options);\n    }\n\n    return this.removePropByPath(this.prefixPortPath(portId), path);\n  }\n\n  portProp(portId, path, value, options) {\n    if (path == null) {\n      return this.getPortProp(portId);\n    }\n\n    if (typeof path === 'string' || Array.isArray(path)) {\n      if (arguments.length === 2) {\n        return this.getPortProp(portId, path);\n      }\n\n      if (value == null) {\n        return this.removePortProp(portId, path, options);\n      }\n\n      return this.setPortProp(portId, path, value, options);\n    }\n\n    return this.setPortProp(portId, path, value);\n  }\n\n  prefixPortPath(portId, path) {\n    const index = this.getPortIndex(portId);\n\n    if (index === -1) {\n      throw new Error(`Unable to find port with id: \"${portId}\"`);\n    }\n\n    if (path == null || path === '') {\n      return ['ports', 'items', `${index}`];\n    }\n\n    if (Array.isArray(path)) {\n      return ['ports', 'items', `${index}`, ...path];\n    }\n\n    return `ports/items/${index}/${path}`;\n  }\n\n  addPort(port, options) {\n    const ports = [...this.ports.items];\n    ports.push(port);\n    this.setPropByPath('ports/items', ports, options);\n    return this;\n  }\n\n  addPorts(ports, options) {\n    this.setPropByPath('ports/items', [...this.ports.items, ...ports], options);\n    return this;\n  }\n\n  insertPort(index, port, options) {\n    const ports = [...this.ports.items];\n    ports.splice(index, 0, port);\n    this.setPropByPath('ports/items', ports, options);\n    return this;\n  }\n\n  removePort(port, options = {}) {\n    return this.removePortAt(this.getPortIndex(port), options);\n  }\n\n  removePortAt(index, options = {}) {\n    if (index >= 0) {\n      const ports = [...this.ports.items];\n      ports.splice(index, 1);\n      options.rewrite = true;\n      this.setPropByPath('ports/items', ports, options);\n    }\n\n    return this;\n  }\n\n  removePorts(portsForRemoval, opt) {\n    let options;\n\n    if (Array.isArray(portsForRemoval)) {\n      options = opt || {};\n\n      if (portsForRemoval.length) {\n        options.rewrite = true;\n        const currentPorts = [...this.ports.items];\n        const remainingPorts = currentPorts.filter(cp => !portsForRemoval.some(p => {\n          const id = typeof p === 'string' ? p : p.id;\n          return cp.id === id;\n        }));\n        this.setPropByPath('ports/items', remainingPorts, options);\n      }\n    } else {\n      options = portsForRemoval || {};\n      options.rewrite = true;\n      this.setPropByPath('ports/items', [], options);\n    }\n\n    return this;\n  }\n\n  getParsedPorts() {\n    return this.port.getPorts();\n  }\n\n  getParsedGroups() {\n    return this.port.groups;\n  }\n\n  getPortsLayoutByGroup(groupName, bbox) {\n    return this.port.getPortsLayoutByGroup(groupName, bbox);\n  }\n\n  initPorts() {\n    this.updatePortData();\n    this.on('change:ports', () => {\n      this.processRemovedPort();\n      this.updatePortData();\n    });\n  }\n\n  processRemovedPort() {\n    const current = this.ports;\n    const currentItemsMap = {};\n    current.items.forEach(item => {\n      if (item.id) {\n        currentItemsMap[item.id] = true;\n      }\n    });\n    const removed = {};\n    const previous = this.store.getPrevious('ports') || {\n      items: []\n    };\n    previous.items.forEach(item => {\n      if (item.id && !currentItemsMap[item.id]) {\n        removed[item.id] = true;\n      }\n    });\n    const model = this.model;\n\n    if (model && !ObjectExt.isEmpty(removed)) {\n      const incomings = model.getConnectedEdges(this, {\n        incoming: true\n      });\n      incomings.forEach(edge => {\n        const portId = edge.getTargetPortId();\n\n        if (portId && removed[portId]) {\n          edge.remove();\n        }\n      });\n      const outgoings = model.getConnectedEdges(this, {\n        outgoing: true\n      });\n      outgoings.forEach(edge => {\n        const portId = edge.getSourcePortId();\n\n        if (portId && removed[portId]) {\n          edge.remove();\n        }\n      });\n    }\n  }\n\n  validatePorts() {\n    const ids = {};\n    const errors = [];\n    this.ports.items.forEach(p => {\n      if (typeof p !== 'object') {\n        errors.push(`Invalid port ${p}.`);\n      }\n\n      if (p.id == null) {\n        p.id = this.generatePortId();\n      }\n\n      if (ids[p.id]) {\n        errors.push('Duplicitied port id.');\n      }\n\n      ids[p.id] = true;\n    });\n    return errors;\n  }\n\n  generatePortId() {\n    return StringExt.uuid();\n  }\n\n  updatePortData() {\n    const err = this.validatePorts();\n\n    if (err.length > 0) {\n      this.store.set('ports', this.store.getPrevious('ports'));\n      throw new Error(err.join(' '));\n    }\n\n    const prev = this.port ? this.port.getPorts() : null;\n    this.port = new PortManager(this.ports);\n    const curr = this.port.getPorts();\n    const added = prev ? curr.filter(item => {\n      if (!prev.find(prevPort => prevPort.id === item.id)) {\n        return item;\n      }\n\n      return null;\n    }) : [...curr];\n    const removed = prev ? prev.filter(item => {\n      if (!curr.find(curPort => curPort.id === item.id)) {\n        return item;\n      }\n\n      return null;\n    }) : [];\n\n    if (added.length > 0) {\n      this.notify('ports:added', {\n        added,\n        cell: this,\n        node: this\n      });\n    }\n\n    if (removed.length > 0) {\n      this.notify('ports:removed', {\n        removed,\n        cell: this,\n        node: this\n      });\n    }\n  }\n\n}\nNode.defaults = {\n  angle: 0,\n  position: {\n    x: 0,\n    y: 0\n  },\n  size: {\n    width: 1,\n    height: 1\n  }\n};\n\n(function (Node) {\n  Node.toStringTag = `X6.${Node.name}`;\n\n  function isNode(instance) {\n    if (instance == null) {\n      return false;\n    }\n\n    if (instance instanceof Node) {\n      return true;\n    }\n\n    const tag = instance[Symbol.toStringTag];\n    const node = instance;\n\n    if ((tag == null || tag === Node.toStringTag) && typeof node.isNode === 'function' && typeof node.isEdge === 'function' && typeof node.prop === 'function' && typeof node.attr === 'function' && typeof node.size === 'function' && typeof node.position === 'function') {\n      return true;\n    }\n\n    return false;\n  }\n\n  Node.isNode = isNode;\n})(Node || (Node = {}));\n\n(function (Node) {\n  Node.config({\n    propHooks(_a) {\n      var {\n        ports\n      } = _a,\n          metadata = __rest(_a, [\"ports\"]);\n\n      if (ports) {\n        metadata.ports = Array.isArray(ports) ? {\n          items: ports\n        } : ports;\n      }\n\n      return metadata;\n    }\n\n  });\n})(Node || (Node = {}));\n\n(function (Node) {\n  Node.registry = Registry.create({\n    type: 'node',\n\n    process(shape, options) {\n      if (ShareRegistry.exist(shape, true)) {\n        throw new Error(`Node with name '${shape}' was registered by anthor Edge`);\n      }\n\n      if (typeof options === 'function') {\n        options.config({\n          shape\n        });\n        return options;\n      }\n\n      let parent = Node;\n\n      const {\n        inherit\n      } = options,\n            config = __rest(options, [\"inherit\"]);\n\n      if (inherit) {\n        if (typeof inherit === 'string') {\n          const base = this.get(inherit);\n\n          if (base == null) {\n            this.onNotFound(inherit, 'inherited');\n          } else {\n            parent = base;\n          }\n        } else {\n          parent = inherit;\n        }\n      }\n\n      if (config.constructorName == null) {\n        config.constructorName = shape;\n      }\n\n      const ctor = parent.define.call(parent, config);\n      ctor.config({\n        shape\n      });\n      return ctor;\n    }\n\n  });\n  ShareRegistry.setNodeRegistry(Node.registry);\n})(Node || (Node = {}));\n\n(function (Node) {\n  let counter = 0;\n\n  function getClassName(name) {\n    if (name) {\n      return StringExt.pascalCase(name);\n    }\n\n    counter += 1;\n    return `CustomNode${counter}`;\n  }\n\n  function define(config) {\n    const {\n      constructorName,\n      overwrite\n    } = config,\n          others = __rest(config, [\"constructorName\", \"overwrite\"]);\n\n    const ctor = ObjectExt.createClass(getClassName(constructorName || others.shape), this);\n    ctor.config(others);\n\n    if (others.shape) {\n      Node.registry.register(others.shape, ctor, overwrite);\n    }\n\n    return ctor;\n  }\n\n  Node.define = define;\n\n  function create(options) {\n    const shape = options.shape || 'rect';\n    const Ctor = Node.registry.get(shape);\n\n    if (Ctor) {\n      return new Ctor(options);\n    }\n\n    return Node.registry.onNotFound(shape);\n  }\n\n  Node.create = create;\n})(Node || (Node = {}));","map":{"version":3,"mappings":"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","names":["Registry","Point","Rectangle","Angle","StringExt","ObjectExt","NumberExt","Markup","Cell","ShareRegistry","PortManager","Interp","Node","constructor","metadata","initPorts","Symbol","toStringTag","preprocess","ignoreIdCheck","x","y","width","height","others","position","Object","size","isNode","options","undefined","getSize","setSize","store","get","resize","startBatch","direction","currentSize","map","right","top","left","bottom","quadrant","angle","normalize","getAngle","absolute","Math","floor","bbox","getBBox","fixedPoint","getBottomLeft","getCorner","getTopRight","getOrigin","imageFixedPoint","clone","rotate","getCenter","radius","sqrt","alpha","PI","atan","toRad","center","fromPolar","origin","translate","set","setPosition","stopBatch","scale","sx","sy","scaledBBox","arg0","arg1","arg2","getPosition","relative","parent","getParent","currentPosition","parentPosition","pos","deep","tx","ty","translateBy","id","restrict","ra","dx","dy","max","min","translatedPosition","transition","interp","object","eachChild","child","excluded","exclude","_a","includes","val","currentAngle","cells","getDescendants","breadthFirst","push","getCellsBBox","fromPositionAndSize","getConnectionPoint","edge","type","terminal","getTerminal","portId","port","hasPort","getPort","group","layouts","getPortsPosition","portCenter","create","fit","children","getChildren","embeds","filter","cell","length","forEach","padding","normalizeSides","portContainerMarkup","getPortContainerMarkup","markup","setPortContainerMarkup","getDefaultPortContainerMarkup","portMarkup","getPortMarkup","setPortMarkup","getDefaultPortMarkup","portLabelMarkup","getPortLabelMarkup","setPortLabelMarkup","getDefaultPortLabelMarkup","ports","res","items","getPorts","cloneDeep","getPortsByGroup","groupName","find","getPortAt","index","hasPorts","getPortIndex","findIndex","item","getPortsLayoutByGroup","reduce","memo","layout","portLayout","getPortProp","path","getPropByPath","prefixPortPath","setPortProp","arg3","Array","isArray","value","setPropByPath","removePortProp","removePropByPath","portProp","arguments","Error","addPort","addPorts","insertPort","splice","removePort","removePortAt","rewrite","removePorts","portsForRemoval","opt","currentPorts","remainingPorts","cp","some","p","getParsedPorts","getParsedGroups","groups","updatePortData","on","processRemovedPort","current","currentItemsMap","removed","previous","getPrevious","model","isEmpty","incomings","getConnectedEdges","incoming","getTargetPortId","remove","outgoings","outgoing","getSourcePortId","validatePorts","ids","errors","generatePortId","uuid","err","join","prev","curr","added","prevPort","curPort","notify","node","name","instance","tag","isEdge","prop","attr","config","propHooks","process","shape","exist","inherit","base","onNotFound","constructorName","ctor","define","call","setNodeRegistry","counter","getClassName","pascalCase","overwrite","createClass","register","Ctor"],"sourceRoot":"","sources":["../../src/model/node.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}