{"ast":null,"code":"export { isNaN, isNumber, isFinite, isInteger, isSafeInteger, clamp, inRange, toFinite, toNumber, toInteger, toSafeInteger, parseInt } from 'lodash-es';\nexport { isNumeric } from '../lang/lang';\n/**\n * Returns the remainder of division of `n` by `m`. You should use this\n * instead of the built-in operation as the built-in operation does not\n * properly handle negative numbers.\n */\n\nexport function mod(n, m) {\n  return (n % m + m) % m;\n}\nexport function random(lower, upper) {\n  if (upper == null) {\n    upper = lower == null ? 1 : lower; // eslint-disable-line\n\n    lower = 0; // eslint-disable-line\n  } else if (upper < lower) {\n    const tmp = lower;\n    lower = upper; // eslint-disable-line\n\n    upper = tmp; // eslint-disable-line\n  }\n\n  return Math.floor(Math.random() * (upper - lower + 1) + lower);\n}\nexport function isPercentage(val) {\n  return typeof val === 'string' && val.slice(-1) === '%';\n}\nexport function normalizePercentage(num, ref) {\n  if (num == null) {\n    return 0;\n  }\n\n  let raw;\n\n  if (typeof num === 'string') {\n    raw = parseFloat(num);\n\n    if (isPercentage(num)) {\n      raw /= 100;\n\n      if (Number.isFinite(raw)) {\n        return raw * ref;\n      }\n    }\n  } else {\n    raw = num;\n  }\n\n  if (!Number.isFinite(raw)) {\n    return 0;\n  }\n\n  if (raw > 0 && raw < 1) {\n    return raw * ref;\n  }\n\n  return raw;\n}\nexport function parseCssNumeric(val, units) {\n  function getUnit(regexp) {\n    const matches = new RegExp(`(?:\\\\d+(?:\\\\.\\\\d+)*)(${regexp})$`).exec(val);\n\n    if (!matches) {\n      return null;\n    }\n\n    return matches[1];\n  }\n\n  const number = parseFloat(val);\n\n  if (Number.isNaN(number)) {\n    return null;\n  } // determine the unit\n\n\n  let regexp;\n\n  if (units == null) {\n    // accept any unit, as well as no unit\n    regexp = '[A-Za-z]*';\n  } else if (Array.isArray(units)) {\n    if (units.length === 0) {\n      return null;\n    }\n\n    regexp = units.join('|');\n  } else if (typeof units === 'string') {\n    regexp = units;\n  }\n\n  const unit = getUnit(regexp);\n\n  if (unit === null) {\n    return null;\n  }\n\n  return {\n    unit,\n    value: number\n  };\n}\nexport function normalizeSides(box) {\n  if (typeof box === 'object') {\n    let left = 0;\n    let top = 0;\n    let right = 0;\n    let bottom = 0;\n\n    if (box.vertical != null && Number.isFinite(box.vertical)) {\n      top = bottom = box.vertical;\n    }\n\n    if (box.horizontal != null && Number.isFinite(box.horizontal)) {\n      right = left = box.horizontal;\n    }\n\n    if (box.left != null && Number.isFinite(box.left)) left = box.left;\n    if (box.top != null && Number.isFinite(box.top)) top = box.top;\n    if (box.right != null && Number.isFinite(box.right)) right = box.right;\n    if (box.bottom != null && Number.isFinite(box.bottom)) bottom = box.bottom;\n    return {\n      top,\n      right,\n      bottom,\n      left\n    };\n  }\n\n  let val = 0;\n\n  if (box != null && Number.isFinite(box)) {\n    val = box;\n  }\n\n  return {\n    top: val,\n    right: val,\n    bottom: val,\n    left: val\n  };\n}","map":{"version":3,"mappings":"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","names":["isNaN","isNumber","isFinite","isInteger","isSafeInteger","clamp","inRange","toFinite","toNumber","toInteger","toSafeInteger","parseInt","isNumeric","mod","n","m","random","lower","upper","tmp","Math","floor","isPercentage","val","slice","normalizePercentage","num","ref","raw","parseFloat","Number","parseCssNumeric","units","getUnit","regexp","matches","RegExp","exec","number","Array","isArray","length","join","unit","value","normalizeSides","box","left","top","right","bottom","vertical","horizontal"],"sourceRoot":"","sources":["../../../src/util/number/number.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}