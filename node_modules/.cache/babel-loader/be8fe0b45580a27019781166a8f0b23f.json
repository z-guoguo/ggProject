{"ast":null,"code":"import { ArrayExt } from '../../util';\nimport { Config } from '../../global/config';\nimport { Graph } from '../../graph/graph';\nimport { Model } from '../../model/model';\nexport class Clipboard {\n  constructor() {\n    this.cells = [];\n  }\n\n  copy(cells, graph, options = {}) {\n    this.options = Object.assign({}, options);\n    const model = Model.isModel(graph) ? graph : graph.model;\n    const cloned = model.cloneSubGraph(cells, options); // sort asc by cell type\n\n    this.cells = ArrayExt.sortBy(Object.keys(cloned).map(key => cloned[key]), cell => cell.isEdge() ? 2 : 1);\n    this.serialize(options);\n  }\n\n  cut(cells, graph, options = {}) {\n    this.copy(cells, graph, options);\n    const model = Graph.isGraph(graph) ? graph.model : graph;\n    model.batchUpdate('cut', () => {\n      cells.forEach(cell => cell.remove());\n    });\n  }\n\n  paste(graph, options = {}) {\n    const localOptions = Object.assign(Object.assign({}, this.options), options);\n    const {\n      offset,\n      edgeProps,\n      nodeProps\n    } = localOptions;\n    let dx = 20;\n    let dy = 20;\n\n    if (offset) {\n      dx = typeof offset === 'number' ? offset : offset.dx;\n      dy = typeof offset === 'number' ? offset : offset.dy;\n    }\n\n    this.deserialize(localOptions);\n    const cells = this.cells;\n    cells.forEach(cell => {\n      cell.model = null;\n      cell.removeProp('zIndex');\n\n      if (dx || dy) {\n        cell.translate(dx, dy);\n      }\n\n      if (nodeProps && cell.isNode()) {\n        cell.prop(nodeProps);\n      }\n\n      if (edgeProps && cell.isEdge()) {\n        cell.prop(edgeProps);\n      }\n    });\n    const model = Graph.isGraph(graph) ? graph.model : graph;\n    model.batchUpdate('paste', () => {\n      model.addCells(this.cells);\n    });\n    this.copy(cells, graph, options);\n    return cells;\n  }\n\n  serialize(options) {\n    if (options.useLocalStorage !== false) {\n      Storage.save(this.cells);\n    }\n  }\n\n  deserialize(options) {\n    if (options.useLocalStorage) {\n      const cells = Storage.fetch();\n\n      if (cells) {\n        this.cells = cells;\n      }\n    }\n  }\n\n  isEmpty() {\n    return this.cells.length <= 0;\n  }\n\n  clean() {\n    this.options = {};\n    this.cells = [];\n    Storage.clean();\n  }\n\n}\nvar Storage;\n\n(function (Storage) {\n  const LOCAL_STORAGE_KEY = `${Config.prefixCls}.clipboard.cells`;\n\n  function save(cells) {\n    if (window.localStorage) {\n      const data = cells.map(cell => cell.toJSON());\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(data));\n    }\n  }\n\n  Storage.save = save;\n\n  function fetch() {\n    if (window.localStorage) {\n      const raw = localStorage.getItem(LOCAL_STORAGE_KEY);\n      const cells = raw ? JSON.parse(raw) : [];\n\n      if (cells) {\n        return Model.fromJSON(cells);\n      }\n    }\n  }\n\n  Storage.fetch = fetch;\n\n  function clean() {\n    if (window.localStorage) {\n      localStorage.removeItem(LOCAL_STORAGE_KEY);\n    }\n  }\n\n  Storage.clean = clean;\n})(Storage || (Storage = {}));","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAIA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAM,MAAOC,SAAP,CAAgB;EAAtBC;IAES,aAAgB,EAAhB;EAgGR;;EA9FCC,IAAI,CACFC,KADE,EAEFC,KAFE,EAGFC,UAAiC,EAH/B,EAGiC;IAEnC,KAAKA,OAAL,GAAYC,kBAAQD,OAAR,CAAZ;IACA,MAAME,KAAK,GAAGR,KAAK,CAACS,OAAN,CAAcJ,KAAd,IAAuBA,KAAvB,GAA+BA,KAAK,CAACG,KAAnD;IACA,MAAME,MAAM,GAAGF,KAAK,CAACG,aAAN,CAAoBP,KAApB,EAA2BE,OAA3B,CAAf,CAJmC,CAMnC;;IACA,KAAKF,KAAL,GAAaP,QAAQ,CAACe,MAAT,CACXL,MAAM,CAACM,IAAP,CAAYH,MAAZ,EAAoBI,GAApB,CAAyBC,GAAD,IAASL,MAAM,CAACK,GAAD,CAAvC,CADW,EAEVC,IAAD,IAAWA,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAFpB,CAAb;IAKA,KAAKC,SAAL,CAAeZ,OAAf;EACD;;EAEDa,GAAG,CACDf,KADC,EAEDC,KAFC,EAGDC,UAAiC,EAHhC,EAGkC;IAEnC,KAAKH,IAAL,CAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,OAAxB;IACA,MAAME,KAAK,GAAGT,KAAK,CAACqB,OAAN,CAAcf,KAAd,IAAuBA,KAAK,CAACG,KAA7B,GAAqCH,KAAnD;IACAG,KAAK,CAACa,WAAN,CAAkB,KAAlB,EAAyB,MAAK;MAC5BjB,KAAK,CAACkB,OAAN,CAAeN,IAAD,IAAUA,IAAI,CAACO,MAAL,EAAxB;IACD,CAFD;EAGD;;EAEDC,KAAK,CAACnB,KAAD,EAAuBC,UAAkC,EAAzD,EAA2D;IAC9D,MAAMmB,YAAY,mCAAQ,KAAKnB,OAAb,GAAyBA,OAAzB,CAAlB;IACA,MAAM;MAAEoB,MAAF;MAAUC,SAAV;MAAqBC;IAArB,IAAmCH,YAAzC;IAEA,IAAII,EAAE,GAAG,EAAT;IACA,IAAIC,EAAE,GAAG,EAAT;;IACA,IAAIJ,MAAJ,EAAY;MACVG,EAAE,GAAG,OAAOH,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCA,MAAM,CAACG,EAAlD;MACAC,EAAE,GAAG,OAAOJ,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCA,MAAM,CAACI,EAAlD;IACD;;IAED,KAAKC,WAAL,CAAiBN,YAAjB;IACA,MAAMrB,KAAK,GAAG,KAAKA,KAAnB;IAEAA,KAAK,CAACkB,OAAN,CAAeN,IAAD,IAAS;MACrBA,IAAI,CAACR,KAAL,GAAa,IAAb;MACAQ,IAAI,CAACgB,UAAL,CAAgB,QAAhB;;MACA,IAAIH,EAAE,IAAIC,EAAV,EAAc;QACZd,IAAI,CAACiB,SAAL,CAAeJ,EAAf,EAAmBC,EAAnB;MACD;;MAED,IAAIF,SAAS,IAAIZ,IAAI,CAACkB,MAAL,EAAjB,EAAgC;QAC9BlB,IAAI,CAACmB,IAAL,CAAUP,SAAV;MACD;;MAED,IAAID,SAAS,IAAIX,IAAI,CAACC,MAAL,EAAjB,EAAgC;QAC9BD,IAAI,CAACmB,IAAL,CAAUR,SAAV;MACD;IACF,CAdD;IAgBA,MAAMnB,KAAK,GAAGT,KAAK,CAACqB,OAAN,CAAcf,KAAd,IAAuBA,KAAK,CAACG,KAA7B,GAAqCH,KAAnD;IACAG,KAAK,CAACa,WAAN,CAAkB,OAAlB,EAA2B,MAAK;MAC9Bb,KAAK,CAAC4B,QAAN,CAAe,KAAKhC,KAApB;IACD,CAFD;IAIA,KAAKD,IAAL,CAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,OAAxB;IAEA,OAAOF,KAAP;EACD;;EAEDc,SAAS,CAACZ,OAAD,EAAgC;IACvC,IAAIA,OAAO,CAAC+B,eAAR,KAA4B,KAAhC,EAAuC;MACrCC,OAAO,CAACC,IAAR,CAAa,KAAKnC,KAAlB;IACD;EACF;;EAED2B,WAAW,CAACzB,OAAD,EAAgC;IACzC,IAAIA,OAAO,CAAC+B,eAAZ,EAA6B;MAC3B,MAAMjC,KAAK,GAAGkC,OAAO,CAACE,KAAR,EAAd;;MACA,IAAIpC,KAAJ,EAAW;QACT,KAAKA,KAAL,GAAaA,KAAb;MACD;IACF;EACF;;EAEDqC,OAAO;IACL,OAAO,KAAKrC,KAAL,CAAWsC,MAAX,IAAqB,CAA5B;EACD;;EAEDC,KAAK;IACH,KAAKrC,OAAL,GAAe,EAAf;IACA,KAAKF,KAAL,GAAa,EAAb;IACAkC,OAAO,CAACK,KAAR;EACD;;AAjGmB;AAkItB,IAAUL,OAAV;;AAAA,WAAUA,OAAV,EAAiB;EACf,MAAMM,iBAAiB,GAAG,GAAG9C,MAAM,CAAC+C,SAAS,kBAA7C;;EAEA,SAAgBN,IAAhB,CAAqBnC,KAArB,EAAkC;IAChC,IAAI0C,MAAM,CAACC,YAAX,EAAyB;MACvB,MAAMC,IAAI,GAAG5C,KAAK,CAACU,GAAN,CAAWE,IAAD,IAAUA,IAAI,CAACiC,MAAL,EAApB,CAAb;MACAF,YAAY,CAACG,OAAb,CAAqBN,iBAArB,EAAwCO,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAxC;IACD;EACF;;EALeV,eAAIC,IAAJ;;EAOhB,SAAgBC,KAAhB,GAAqB;IACnB,IAAIM,MAAM,CAACC,YAAX,EAAyB;MACvB,MAAMM,GAAG,GAAGN,YAAY,CAACO,OAAb,CAAqBV,iBAArB,CAAZ;MACA,MAAMxC,KAAK,GAAGiD,GAAG,GAAGF,IAAI,CAACI,KAAL,CAAWF,GAAX,CAAH,GAAqB,EAAtC;;MACA,IAAIjD,KAAJ,EAAW;QACT,OAAOJ,KAAK,CAACwD,QAAN,CAAepD,KAAf,CAAP;MACD;IACF;EACF;;EARekC,gBAAKE,KAAL;;EAUhB,SAAgBG,KAAhB,GAAqB;IACnB,IAAIG,MAAM,CAACC,YAAX,EAAyB;MACvBA,YAAY,CAACU,UAAb,CAAwBb,iBAAxB;IACD;EACF;;EAJeN,gBAAKK,KAAL;AAKjB,CAzBD,EAAUL,OAAO,KAAPA,OAAO,MAAjB","names":["ArrayExt","Config","Graph","Model","Clipboard","constructor","copy","cells","graph","options","Object","model","isModel","cloned","cloneSubGraph","sortBy","keys","map","key","cell","isEdge","serialize","cut","isGraph","batchUpdate","forEach","remove","paste","localOptions","offset","edgeProps","nodeProps","dx","dy","deserialize","removeProp","translate","isNode","prop","addCells","useLocalStorage","Storage","save","fetch","isEmpty","length","clean","LOCAL_STORAGE_KEY","prefixCls","window","localStorage","data","toJSON","setItem","JSON","stringify","raw","getItem","parse","fromJSON","removeItem"],"sourceRoot":"","sources":["../../../src/addon/clipboard/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}