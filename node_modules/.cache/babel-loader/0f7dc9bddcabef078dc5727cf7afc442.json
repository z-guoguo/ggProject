{"ast":null,"code":"import { each } from '@antv/util';\nvar DEFAULT_TRIGGER = 'shift';\nvar ALLOW_EVENTS = ['shift', 'ctrl', 'alt', 'control'];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      multiple: true,\n      trigger: DEFAULT_TRIGGER,\n      selectedState: 'selected',\n      selectNode: true,\n      selectEdge: false,\n      selectCombo: true\n    };\n  },\n  getEvents: function getEvents() {\n    var self = this; // 检测输入是否合法\n\n    if (!(ALLOW_EVENTS.indexOf(self.trigger.toLowerCase()) > -1)) {\n      self.trigger = DEFAULT_TRIGGER; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior click-select 的 trigger 参数不合法，请输入 'drag'、'shift'、'ctrl' 或 'alt'\");\n    }\n\n    if (!self.multiple) {\n      return {\n        'node:click': 'onClick',\n        'combo:click': 'onClick',\n        'edge:click': 'onClick',\n        'canvas:click': 'onCanvasClick'\n      };\n    }\n\n    return {\n      'node:click': 'onClick',\n      'combo:click': 'onClick',\n      'edge:click': 'onClick',\n      'canvas:click': 'onCanvasClick',\n      keyup: 'onKeyUp',\n      keydown: 'onKeyDown'\n    };\n  },\n  onClick: function onClick(evt) {\n    var self = this;\n    var item = evt.item;\n\n    if (!item || item.destroyed) {\n      return;\n    }\n\n    var type = item.getType();\n    var graph = self.graph,\n        keydown = self.keydown,\n        multiple = self.multiple,\n        shouldUpdate = self.shouldUpdate,\n        shouldBegin = self.shouldBegin;\n\n    if (!shouldBegin.call(self, evt)) {\n      return;\n    } // allow to select multiple nodes but did not press a key || do not allow the select multiple nodes\n\n\n    if (!keydown || !multiple) {\n      var selected = graph.findAllByState('node', self.selectedState).concat(graph.findAllByState('edge', self.selectedState)).concat(graph.findAllByState('combo', self.selectedState));\n      each(selected, function (selectedItem) {\n        if (selectedItem !== item) {\n          graph.setItemState(selectedItem, self.selectedState, false);\n        }\n      });\n    } // check if the item could be selected, given the current cfg\n\n\n    var itemSelectable = function () {\n      switch (type) {\n        case 'node':\n          return self.selectNode;\n\n        case 'edge':\n          return self.selectEdge;\n\n        case 'combo':\n          return self.selectCombo;\n\n        default:\n          return false;\n      }\n    }();\n\n    if (!itemSelectable) {\n      var selectedNodes = graph.findAllByState('node', self.selectedState);\n      var selectedEdges = graph.findAllByState('edge', self.selectedState);\n      var selectedCombos = graph.findAllByState('combo', self.selectedState);\n      graph.emit('nodeselectchange', {\n        selectedItems: {\n          nodes: selectedNodes,\n          edges: selectedEdges,\n          combos: selectedCombos\n        },\n        select: false\n      });\n      return;\n    }\n\n    if (item.hasState(self.selectedState)) {\n      if (shouldUpdate.call(self, evt)) {\n        graph.setItemState(item, self.selectedState, false);\n      }\n\n      var selectedNodes = graph.findAllByState('node', self.selectedState);\n      var selectedEdges = graph.findAllByState('edge', self.selectedState);\n      var selectedCombos = graph.findAllByState('combo', self.selectedState);\n      graph.emit('nodeselectchange', {\n        target: item,\n        selectedItems: {\n          nodes: selectedNodes,\n          edges: selectedEdges,\n          combos: selectedCombos\n        },\n        select: false\n      });\n    } else {\n      if (shouldUpdate.call(self, evt)) {\n        graph.setItemState(item, self.selectedState, true);\n      }\n\n      var selectedNodes = graph.findAllByState('node', self.selectedState);\n      var selectedEdges = graph.findAllByState('edge', self.selectedState);\n      var selectedCombos = graph.findAllByState('combo', self.selectedState);\n      graph.emit('nodeselectchange', {\n        target: item,\n        selectedItems: {\n          nodes: selectedNodes,\n          edges: selectedEdges,\n          combos: selectedCombos\n        },\n        select: true\n      });\n    }\n  },\n  onCanvasClick: function onCanvasClick(evt) {\n    var _this = this;\n\n    var _a = this,\n        graph = _a.graph,\n        shouldBegin = _a.shouldBegin;\n\n    if (!shouldBegin.call(this, evt)) {\n      return;\n    }\n\n    var selected = graph.findAllByState('node', this.selectedState);\n    each(selected, function (node) {\n      graph.setItemState(node, _this.selectedState, false);\n    });\n    var selectedEdges = graph.findAllByState('edge', this.selectedState);\n    each(selectedEdges, function (edge) {\n      graph.setItemState(edge, _this.selectedState, false);\n    });\n    var selectedCombos = graph.findAllByState('combo', this.selectedState);\n    each(selectedCombos, function (combo) {\n      graph.setItemState(combo, _this.selectedState, false);\n    });\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: [],\n        edges: [],\n        combos: []\n      },\n      select: false\n    });\n  },\n  onKeyDown: function onKeyDown(e) {\n    var self = this;\n    var code = e.key;\n\n    if (!code) {\n      return;\n    }\n\n    if (code.toLowerCase() === this.trigger.toLowerCase() || code.toLowerCase() === 'control') {\n      self.keydown = true;\n    } else {\n      self.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    var self = this;\n    self.keydown = false;\n  }\n};","map":{"version":3,"names":["each","DEFAULT_TRIGGER","ALLOW_EVENTS","getDefaultCfg","multiple","trigger","selectedState","selectNode","selectEdge","selectCombo","getEvents","self","indexOf","toLowerCase","console","warn","keyup","keydown","onClick","evt","item","destroyed","type","getType","graph","shouldUpdate","shouldBegin","call","selected","findAllByState","concat","selectedItem","setItemState","itemSelectable","selectedNodes","selectedEdges","selectedCombos","emit","selectedItems","nodes","edges","combos","select","hasState","target","onCanvasClick","_this","_a","node","edge","combo","onKeyDown","e","code","key","onKeyUp"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-pc/es/behavior/click-select.js"],"sourcesContent":["import { each } from '@antv/util';\nvar DEFAULT_TRIGGER = 'shift';\nvar ALLOW_EVENTS = ['shift', 'ctrl', 'alt', 'control'];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      multiple: true,\n      trigger: DEFAULT_TRIGGER,\n      selectedState: 'selected',\n      selectNode: true,\n      selectEdge: false,\n      selectCombo: true\n    };\n  },\n  getEvents: function getEvents() {\n    var self = this; // 检测输入是否合法\n\n    if (!(ALLOW_EVENTS.indexOf(self.trigger.toLowerCase()) > -1)) {\n      self.trigger = DEFAULT_TRIGGER; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior click-select 的 trigger 参数不合法，请输入 'drag'、'shift'、'ctrl' 或 'alt'\");\n    }\n\n    if (!self.multiple) {\n      return {\n        'node:click': 'onClick',\n        'combo:click': 'onClick',\n        'edge:click': 'onClick',\n        'canvas:click': 'onCanvasClick'\n      };\n    }\n\n    return {\n      'node:click': 'onClick',\n      'combo:click': 'onClick',\n      'edge:click': 'onClick',\n      'canvas:click': 'onCanvasClick',\n      keyup: 'onKeyUp',\n      keydown: 'onKeyDown'\n    };\n  },\n  onClick: function onClick(evt) {\n    var self = this;\n    var item = evt.item;\n\n    if (!item || item.destroyed) {\n      return;\n    }\n\n    var type = item.getType();\n    var graph = self.graph,\n        keydown = self.keydown,\n        multiple = self.multiple,\n        shouldUpdate = self.shouldUpdate,\n        shouldBegin = self.shouldBegin;\n\n    if (!shouldBegin.call(self, evt)) {\n      return;\n    } // allow to select multiple nodes but did not press a key || do not allow the select multiple nodes\n\n\n    if (!keydown || !multiple) {\n      var selected = graph.findAllByState('node', self.selectedState).concat(graph.findAllByState('edge', self.selectedState)).concat(graph.findAllByState('combo', self.selectedState));\n      each(selected, function (selectedItem) {\n        if (selectedItem !== item) {\n          graph.setItemState(selectedItem, self.selectedState, false);\n        }\n      });\n    } // check if the item could be selected, given the current cfg\n\n\n    var itemSelectable = function () {\n      switch (type) {\n        case 'node':\n          return self.selectNode;\n\n        case 'edge':\n          return self.selectEdge;\n\n        case 'combo':\n          return self.selectCombo;\n\n        default:\n          return false;\n      }\n    }();\n\n    if (!itemSelectable) {\n      var selectedNodes = graph.findAllByState('node', self.selectedState);\n      var selectedEdges = graph.findAllByState('edge', self.selectedState);\n      var selectedCombos = graph.findAllByState('combo', self.selectedState);\n      graph.emit('nodeselectchange', {\n        selectedItems: {\n          nodes: selectedNodes,\n          edges: selectedEdges,\n          combos: selectedCombos\n        },\n        select: false\n      });\n      return;\n    }\n\n    if (item.hasState(self.selectedState)) {\n      if (shouldUpdate.call(self, evt)) {\n        graph.setItemState(item, self.selectedState, false);\n      }\n\n      var selectedNodes = graph.findAllByState('node', self.selectedState);\n      var selectedEdges = graph.findAllByState('edge', self.selectedState);\n      var selectedCombos = graph.findAllByState('combo', self.selectedState);\n      graph.emit('nodeselectchange', {\n        target: item,\n        selectedItems: {\n          nodes: selectedNodes,\n          edges: selectedEdges,\n          combos: selectedCombos\n        },\n        select: false\n      });\n    } else {\n      if (shouldUpdate.call(self, evt)) {\n        graph.setItemState(item, self.selectedState, true);\n      }\n\n      var selectedNodes = graph.findAllByState('node', self.selectedState);\n      var selectedEdges = graph.findAllByState('edge', self.selectedState);\n      var selectedCombos = graph.findAllByState('combo', self.selectedState);\n      graph.emit('nodeselectchange', {\n        target: item,\n        selectedItems: {\n          nodes: selectedNodes,\n          edges: selectedEdges,\n          combos: selectedCombos\n        },\n        select: true\n      });\n    }\n  },\n  onCanvasClick: function onCanvasClick(evt) {\n    var _this = this;\n\n    var _a = this,\n        graph = _a.graph,\n        shouldBegin = _a.shouldBegin;\n\n    if (!shouldBegin.call(this, evt)) {\n      return;\n    }\n\n    var selected = graph.findAllByState('node', this.selectedState);\n    each(selected, function (node) {\n      graph.setItemState(node, _this.selectedState, false);\n    });\n    var selectedEdges = graph.findAllByState('edge', this.selectedState);\n    each(selectedEdges, function (edge) {\n      graph.setItemState(edge, _this.selectedState, false);\n    });\n    var selectedCombos = graph.findAllByState('combo', this.selectedState);\n    each(selectedCombos, function (combo) {\n      graph.setItemState(combo, _this.selectedState, false);\n    });\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: [],\n        edges: [],\n        combos: []\n      },\n      select: false\n    });\n  },\n  onKeyDown: function onKeyDown(e) {\n    var self = this;\n    var code = e.key;\n\n    if (!code) {\n      return;\n    }\n\n    if (code.toLowerCase() === this.trigger.toLowerCase() || code.toLowerCase() === 'control') {\n      self.keydown = true;\n    } else {\n      self.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    var self = this;\n    self.keydown = false;\n  }\n};"],"mappings":"AAAA,SAASA,IAAT,QAAqB,YAArB;AACA,IAAIC,eAAe,GAAG,OAAtB;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,EAAyB,SAAzB,CAAnB;AACA,eAAe;EACbC,aAAa,EAAE,SAASA,aAAT,GAAyB;IACtC,OAAO;MACLC,QAAQ,EAAE,IADL;MAELC,OAAO,EAAEJ,eAFJ;MAGLK,aAAa,EAAE,UAHV;MAILC,UAAU,EAAE,IAJP;MAKLC,UAAU,EAAE,KALP;MAMLC,WAAW,EAAE;IANR,CAAP;EAQD,CAVY;EAWbC,SAAS,EAAE,SAASA,SAAT,GAAqB;IAC9B,IAAIC,IAAI,GAAG,IAAX,CAD8B,CACb;;IAEjB,IAAI,EAAET,YAAY,CAACU,OAAb,CAAqBD,IAAI,CAACN,OAAL,CAAaQ,WAAb,EAArB,IAAmD,CAAC,CAAtD,CAAJ,EAA8D;MAC5DF,IAAI,CAACN,OAAL,GAAeJ,eAAf,CAD4D,CAC5B;;MAEhCa,OAAO,CAACC,IAAR,CAAa,yEAAb;IACD;;IAED,IAAI,CAACJ,IAAI,CAACP,QAAV,EAAoB;MAClB,OAAO;QACL,cAAc,SADT;QAEL,eAAe,SAFV;QAGL,cAAc,SAHT;QAIL,gBAAgB;MAJX,CAAP;IAMD;;IAED,OAAO;MACL,cAAc,SADT;MAEL,eAAe,SAFV;MAGL,cAAc,SAHT;MAIL,gBAAgB,eAJX;MAKLY,KAAK,EAAE,SALF;MAMLC,OAAO,EAAE;IANJ,CAAP;EAQD,CArCY;EAsCbC,OAAO,EAAE,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;IAC7B,IAAIR,IAAI,GAAG,IAAX;IACA,IAAIS,IAAI,GAAGD,GAAG,CAACC,IAAf;;IAEA,IAAI,CAACA,IAAD,IAASA,IAAI,CAACC,SAAlB,EAA6B;MAC3B;IACD;;IAED,IAAIC,IAAI,GAAGF,IAAI,CAACG,OAAL,EAAX;IACA,IAAIC,KAAK,GAAGb,IAAI,CAACa,KAAjB;IAAA,IACIP,OAAO,GAAGN,IAAI,CAACM,OADnB;IAAA,IAEIb,QAAQ,GAAGO,IAAI,CAACP,QAFpB;IAAA,IAGIqB,YAAY,GAAGd,IAAI,CAACc,YAHxB;IAAA,IAIIC,WAAW,GAAGf,IAAI,CAACe,WAJvB;;IAMA,IAAI,CAACA,WAAW,CAACC,IAAZ,CAAiBhB,IAAjB,EAAuBQ,GAAvB,CAAL,EAAkC;MAChC;IACD,CAjB4B,CAiB3B;;;IAGF,IAAI,CAACF,OAAD,IAAY,CAACb,QAAjB,EAA2B;MACzB,IAAIwB,QAAQ,GAAGJ,KAAK,CAACK,cAAN,CAAqB,MAArB,EAA6BlB,IAAI,CAACL,aAAlC,EAAiDwB,MAAjD,CAAwDN,KAAK,CAACK,cAAN,CAAqB,MAArB,EAA6BlB,IAAI,CAACL,aAAlC,CAAxD,EAA0GwB,MAA1G,CAAiHN,KAAK,CAACK,cAAN,CAAqB,OAArB,EAA8BlB,IAAI,CAACL,aAAnC,CAAjH,CAAf;MACAN,IAAI,CAAC4B,QAAD,EAAW,UAAUG,YAAV,EAAwB;QACrC,IAAIA,YAAY,KAAKX,IAArB,EAA2B;UACzBI,KAAK,CAACQ,YAAN,CAAmBD,YAAnB,EAAiCpB,IAAI,CAACL,aAAtC,EAAqD,KAArD;QACD;MACF,CAJG,CAAJ;IAKD,CA3B4B,CA2B3B;;;IAGF,IAAI2B,cAAc,GAAG,YAAY;MAC/B,QAAQX,IAAR;QACE,KAAK,MAAL;UACE,OAAOX,IAAI,CAACJ,UAAZ;;QAEF,KAAK,MAAL;UACE,OAAOI,IAAI,CAACH,UAAZ;;QAEF,KAAK,OAAL;UACE,OAAOG,IAAI,CAACF,WAAZ;;QAEF;UACE,OAAO,KAAP;MAXJ;IAaD,CAdoB,EAArB;;IAgBA,IAAI,CAACwB,cAAL,EAAqB;MACnB,IAAIC,aAAa,GAAGV,KAAK,CAACK,cAAN,CAAqB,MAArB,EAA6BlB,IAAI,CAACL,aAAlC,CAApB;MACA,IAAI6B,aAAa,GAAGX,KAAK,CAACK,cAAN,CAAqB,MAArB,EAA6BlB,IAAI,CAACL,aAAlC,CAApB;MACA,IAAI8B,cAAc,GAAGZ,KAAK,CAACK,cAAN,CAAqB,OAArB,EAA8BlB,IAAI,CAACL,aAAnC,CAArB;MACAkB,KAAK,CAACa,IAAN,CAAW,kBAAX,EAA+B;QAC7BC,aAAa,EAAE;UACbC,KAAK,EAAEL,aADM;UAEbM,KAAK,EAAEL,aAFM;UAGbM,MAAM,EAAEL;QAHK,CADc;QAM7BM,MAAM,EAAE;MANqB,CAA/B;MAQA;IACD;;IAED,IAAItB,IAAI,CAACuB,QAAL,CAAchC,IAAI,CAACL,aAAnB,CAAJ,EAAuC;MACrC,IAAImB,YAAY,CAACE,IAAb,CAAkBhB,IAAlB,EAAwBQ,GAAxB,CAAJ,EAAkC;QAChCK,KAAK,CAACQ,YAAN,CAAmBZ,IAAnB,EAAyBT,IAAI,CAACL,aAA9B,EAA6C,KAA7C;MACD;;MAED,IAAI4B,aAAa,GAAGV,KAAK,CAACK,cAAN,CAAqB,MAArB,EAA6BlB,IAAI,CAACL,aAAlC,CAApB;MACA,IAAI6B,aAAa,GAAGX,KAAK,CAACK,cAAN,CAAqB,MAArB,EAA6BlB,IAAI,CAACL,aAAlC,CAApB;MACA,IAAI8B,cAAc,GAAGZ,KAAK,CAACK,cAAN,CAAqB,OAArB,EAA8BlB,IAAI,CAACL,aAAnC,CAArB;MACAkB,KAAK,CAACa,IAAN,CAAW,kBAAX,EAA+B;QAC7BO,MAAM,EAAExB,IADqB;QAE7BkB,aAAa,EAAE;UACbC,KAAK,EAAEL,aADM;UAEbM,KAAK,EAAEL,aAFM;UAGbM,MAAM,EAAEL;QAHK,CAFc;QAO7BM,MAAM,EAAE;MAPqB,CAA/B;IASD,CAjBD,MAiBO;MACL,IAAIjB,YAAY,CAACE,IAAb,CAAkBhB,IAAlB,EAAwBQ,GAAxB,CAAJ,EAAkC;QAChCK,KAAK,CAACQ,YAAN,CAAmBZ,IAAnB,EAAyBT,IAAI,CAACL,aAA9B,EAA6C,IAA7C;MACD;;MAED,IAAI4B,aAAa,GAAGV,KAAK,CAACK,cAAN,CAAqB,MAArB,EAA6BlB,IAAI,CAACL,aAAlC,CAApB;MACA,IAAI6B,aAAa,GAAGX,KAAK,CAACK,cAAN,CAAqB,MAArB,EAA6BlB,IAAI,CAACL,aAAlC,CAApB;MACA,IAAI8B,cAAc,GAAGZ,KAAK,CAACK,cAAN,CAAqB,OAArB,EAA8BlB,IAAI,CAACL,aAAnC,CAArB;MACAkB,KAAK,CAACa,IAAN,CAAW,kBAAX,EAA+B;QAC7BO,MAAM,EAAExB,IADqB;QAE7BkB,aAAa,EAAE;UACbC,KAAK,EAAEL,aADM;UAEbM,KAAK,EAAEL,aAFM;UAGbM,MAAM,EAAEL;QAHK,CAFc;QAO7BM,MAAM,EAAE;MAPqB,CAA/B;IASD;EACF,CAtIY;EAuIbG,aAAa,EAAE,SAASA,aAAT,CAAuB1B,GAAvB,EAA4B;IACzC,IAAI2B,KAAK,GAAG,IAAZ;;IAEA,IAAIC,EAAE,GAAG,IAAT;IAAA,IACIvB,KAAK,GAAGuB,EAAE,CAACvB,KADf;IAAA,IAEIE,WAAW,GAAGqB,EAAE,CAACrB,WAFrB;;IAIA,IAAI,CAACA,WAAW,CAACC,IAAZ,CAAiB,IAAjB,EAAuBR,GAAvB,CAAL,EAAkC;MAChC;IACD;;IAED,IAAIS,QAAQ,GAAGJ,KAAK,CAACK,cAAN,CAAqB,MAArB,EAA6B,KAAKvB,aAAlC,CAAf;IACAN,IAAI,CAAC4B,QAAD,EAAW,UAAUoB,IAAV,EAAgB;MAC7BxB,KAAK,CAACQ,YAAN,CAAmBgB,IAAnB,EAAyBF,KAAK,CAACxC,aAA/B,EAA8C,KAA9C;IACD,CAFG,CAAJ;IAGA,IAAI6B,aAAa,GAAGX,KAAK,CAACK,cAAN,CAAqB,MAArB,EAA6B,KAAKvB,aAAlC,CAApB;IACAN,IAAI,CAACmC,aAAD,EAAgB,UAAUc,IAAV,EAAgB;MAClCzB,KAAK,CAACQ,YAAN,CAAmBiB,IAAnB,EAAyBH,KAAK,CAACxC,aAA/B,EAA8C,KAA9C;IACD,CAFG,CAAJ;IAGA,IAAI8B,cAAc,GAAGZ,KAAK,CAACK,cAAN,CAAqB,OAArB,EAA8B,KAAKvB,aAAnC,CAArB;IACAN,IAAI,CAACoC,cAAD,EAAiB,UAAUc,KAAV,EAAiB;MACpC1B,KAAK,CAACQ,YAAN,CAAmBkB,KAAnB,EAA0BJ,KAAK,CAACxC,aAAhC,EAA+C,KAA/C;IACD,CAFG,CAAJ;IAGAkB,KAAK,CAACa,IAAN,CAAW,kBAAX,EAA+B;MAC7BC,aAAa,EAAE;QACbC,KAAK,EAAE,EADM;QAEbC,KAAK,EAAE,EAFM;QAGbC,MAAM,EAAE;MAHK,CADc;MAM7BC,MAAM,EAAE;IANqB,CAA/B;EAQD,CAtKY;EAuKbS,SAAS,EAAE,SAASA,SAAT,CAAmBC,CAAnB,EAAsB;IAC/B,IAAIzC,IAAI,GAAG,IAAX;IACA,IAAI0C,IAAI,GAAGD,CAAC,CAACE,GAAb;;IAEA,IAAI,CAACD,IAAL,EAAW;MACT;IACD;;IAED,IAAIA,IAAI,CAACxC,WAAL,OAAuB,KAAKR,OAAL,CAAaQ,WAAb,EAAvB,IAAqDwC,IAAI,CAACxC,WAAL,OAAuB,SAAhF,EAA2F;MACzFF,IAAI,CAACM,OAAL,GAAe,IAAf;IACD,CAFD,MAEO;MACLN,IAAI,CAACM,OAAL,GAAe,KAAf;IACD;EACF,CApLY;EAqLbsC,OAAO,EAAE,SAASA,OAAT,GAAmB;IAC1B,IAAI5C,IAAI,GAAG,IAAX;IACAA,IAAI,CAACM,OAAL,GAAe,KAAf;EACD;AAxLY,CAAf"},"metadata":{},"sourceType":"module"}