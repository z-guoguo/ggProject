{"ast":null,"code":"/**\n * 计算几分位 https://github.com/simple-statistics/simple-statistics/blob/master/src/quantile_sorted.js\n * @param x  数组\n * @param p  百分比\n */\nfunction quantileSorted(x, p) {\n  var idx = x.length * p;\n  /*if (x.length === 0) { // 当前场景这些条件不可能命中\n    throw new Error('quantile requires at least one value.');\n  } else if (p < 0 || p > 1) {\n    throw new Error('quantiles must be between 0 and 1');\n  } else */\n\n  if (p === 1) {\n    // If p is 1, directly return the last element\n    return x[x.length - 1];\n  } else if (p === 0) {\n    // If p is 0, directly return the first element\n    return x[0];\n  } else if (idx % 1 !== 0) {\n    // If p is not integer, return the next element in array\n    return x[Math.ceil(idx) - 1];\n  } else if (x.length % 2 === 0) {\n    // If the list has even-length, we'll take the average of this number\n    // and the next value, if there is one\n    return (x[idx - 1] + x[idx]) / 2;\n  } else {\n    // Finally, in the simple case of an integer value\n    // with an odd-length list, return the x value at the index.\n    return x[idx];\n  }\n}\n\nexport default function calculateTicks(cfg) {\n  var tickCount = cfg.tickCount,\n      values = cfg.values;\n\n  if (!values || !values.length) {\n    return [];\n  }\n\n  var sorted = values.slice().sort(function (a, b) {\n    return a - b;\n  });\n  var ticks = [];\n\n  for (var i = 0; i < tickCount; i++) {\n    var p = i / (tickCount - 1);\n    ticks.push(quantileSorted(sorted, p));\n  }\n\n  return ticks;\n}","map":{"version":3,"mappings":"AACA;;;;;AAKA,SAASA,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA4B;EAC1B,IAAMC,GAAG,GAAGF,CAAC,CAACG,MAAF,GAAWF,CAAvB;EACA;;;;;;EAMA,IAAIA,CAAC,KAAK,CAAV,EAAa;IACX;IACA,OAAOD,CAAC,CAACA,CAAC,CAACG,MAAF,GAAW,CAAZ,CAAR;EACD,CAHD,MAGO,IAAIF,CAAC,KAAK,CAAV,EAAa;IAClB;IACA,OAAOD,CAAC,CAAC,CAAD,CAAR;EACD,CAHM,MAGA,IAAIE,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;IACxB;IACA,OAAOF,CAAC,CAACI,IAAI,CAACC,IAAL,CAAUH,GAAV,IAAiB,CAAlB,CAAR;EACD,CAHM,MAGA,IAAIF,CAAC,CAACG,MAAF,GAAW,CAAX,KAAiB,CAArB,EAAwB;IAC7B;IACA;IACA,OAAO,CAACH,CAAC,CAACE,GAAG,GAAG,CAAP,CAAD,GAAaF,CAAC,CAACE,GAAD,CAAf,IAAwB,CAA/B;EACD,CAJM,MAIA;IACL;IACA;IACA,OAAOF,CAAC,CAACE,GAAD,CAAR;EACD;AACF;;AAED,eAAc,SAAUI,cAAV,CAAyBC,GAAzB,EAAyC;EAC7C,aAAS,GAAaA,GAAG,UAAzB;EAAA,IAAWC,MAAM,GAAKD,GAAG,OAAzB;;EACR,IAAI,CAACC,MAAD,IAAW,CAACA,MAAM,CAACL,MAAvB,EAA+B;IAC7B,OAAO,EAAP;EACD;;EACD,IAAMM,MAAM,GAAGD,MAAM,CAACE,KAAP,GAAeC,IAAf,CAAoB,UAACC,CAAD,EAAIC,CAAJ,EAAK;IACtC,OAAOD,CAAC,GAAGC,CAAX;EACD,CAFc,CAAf;EAGA,IAAMC,KAAK,GAAG,EAAd;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAApB,EAA+BD,CAAC,EAAhC,EAAoC;IAClC,IAAMd,CAAC,GAAGc,CAAC,IAAIC,SAAS,GAAG,CAAhB,CAAX;IACAF,KAAK,CAACG,IAAN,CAAWlB,cAAc,CAACU,MAAD,EAASR,CAAT,CAAzB;EACD;;EACD,OAAOa,KAAP;AACD","names":["quantileSorted","x","p","idx","length","Math","ceil","calculateTicks","cfg","values","sorted","slice","sort","a","b","ticks","i","tickCount","push"],"sourceRoot":"","sources":["../../src/tick-method/quantile.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}