{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { toArray } from '@antv/util';\nimport { SHAPE_TO_TAGS } from '../constant';\n/**\n * 创建并返回图形的 svg 元素\n * @param type svg类型\n */\n\nexport function createSVGElement(type) {\n  return document.createElementNS('http://www.w3.org/2000/svg', type);\n}\n/**\n * 创建并返回图形的 dom 元素\n * @param  {IShape} shape 图形\n * @return {SVGElement}\n */\n\nexport function createDom(shape) {\n  var type = SHAPE_TO_TAGS[shape.type];\n  var parent = shape.getParent();\n\n  if (!type) {\n    throw new Error(\"the type \" + shape.type + \" is not supported by svg\");\n  }\n\n  var element = createSVGElement(type);\n\n  if (shape.get('id')) {\n    element.id = shape.get('id');\n  }\n\n  shape.set('el', element);\n  shape.set('attrs', {}); // 对于 defs 下的 dom 节点，parent 为空，通过 context 统一挂载到 defs 节点下\n\n  if (parent) {\n    var parentNode = parent.get('el');\n\n    if (parentNode) {\n      parentNode.appendChild(element);\n    } else {\n      // parentNode maybe null for group\n      parentNode = parent.createDom();\n      parent.set('el', parentNode);\n      parentNode.appendChild(element);\n    }\n  }\n\n  return element;\n}\n/**\n * 对 dom 元素进行排序\n * @param {IElement} element  元素\n * @param {sorter}   function 排序函数\n */\n\nexport function sortDom(element, sorter) {\n  var el = element.get('el');\n  var childList = toArray(el.children).sort(sorter); // create empty fragment\n\n  var fragment = document.createDocumentFragment();\n  childList.forEach(function (child) {\n    fragment.appendChild(child);\n  });\n  el.appendChild(fragment);\n}\n/**\n * 将 dom 元素移动到父元素下的指定位置\n * @param {SVGElement} element     dom 元素\n * @param {number}     targetIndex 目标位置(从 0 开始)\n */\n\nexport function moveTo(element, targetIndex) {\n  var parentNode = element.parentNode;\n  var siblings = Array.from(parentNode.childNodes).filter( // 要求为元素节点，且不能为 defs 节点\n  function (node) {\n    return node.nodeType === 1 && node.nodeName.toLowerCase() !== 'defs';\n  }); // 获取目标节点\n\n  var target = siblings[targetIndex];\n  var currentIndex = siblings.indexOf(element); // 如果目标节点存在\n\n  if (target) {\n    // 当前索引 > 目标索引，直接插入到目标节点之前即可\n    if (currentIndex > targetIndex) {\n      parentNode.insertBefore(element, target);\n    } else if (currentIndex < targetIndex) {\n      // 当前索引 < 目标索引\n      // 获取目标节点的下一个节点\n      var targetNext = siblings[targetIndex + 1]; // 如果目标节点的下一个节点存在，插入到该节点之前\n\n      if (targetNext) {\n        parentNode.insertBefore(element, targetNext);\n      } else {\n        // 如果该节点不存在，则追加到末尾\n        parentNode.appendChild(element);\n      }\n    }\n  } else {\n    parentNode.appendChild(element);\n  }\n}","map":{"version":3,"mappings":"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","names":["toArray","SHAPE_TO_TAGS","createSVGElement","type","document","createElementNS","createDom","shape","parent","getParent","Error","element","get","id","set","parentNode","appendChild","sortDom","sorter","el","childList","children","sort","fragment","createDocumentFragment","forEach","child","moveTo","targetIndex","siblings","Array","from","childNodes","filter","node","nodeType","nodeName","toLowerCase","target","currentIndex","indexOf","insertBefore","targetNext"],"sourceRoot":"","sources":["../../src/util/dom.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}