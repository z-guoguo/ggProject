{"ast":null,"code":"import { vec3 } from 'gl-matrix';\nimport { isNumber } from './is-number';\nexport function getAngle(angle) {\n  if (angle === undefined) {\n    return 0;\n  } else if (angle > 360 || angle < -360) {\n    return angle % 360;\n  }\n\n  return angle;\n}\nexport function createVec3(x, y, z) {\n  if (isNumber(x)) {\n    return vec3.fromValues(x, y, z);\n  }\n\n  if (x.length === 3) {\n    return vec3.clone(x);\n  } // @ts-ignore\n\n\n  return vec3.fromValues(x[0], x[1], x[2]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,QAA2B,WAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAA6C;EAClD,IAAIA,KAAK,KAAKC,SAAd,EAAyB;IACvB,OAAO,CAAP;EADF,OAEO,IAAID,KAAK,GAAG,GAARA,IAAeA,KAAK,GAAG,CAAC,GAA5B,EAAiC;IACtC,OAAOA,KAAK,GAAG,GAAf;EACD;;EACD,OAAOA,KAAP;AACD;AAED,OAAO,SAASE,UAAT,CAAoBC,CAApB,EAA6CC,CAA7C,EAAyDC,CAAzD,EAAqE;EAC1E,IAAIP,QAAQ,CAACK,CAAD,CAAZ,EAAiB;IACf,OAAON,IAAI,CAACS,UAALT,CAAgBM,CAAhBN,EAA6BO,CAA7BP,EAA0CQ,CAA1CR,CAAP;EACD;;EAED,IAAKM,CAAD,CAAYI,MAAXJ,KAAsB,CAA3B,EAA8B;IAC5B,OAAON,IAAI,CAACW,KAALX,CAAWM,CAAXN,CAAP;EANwE,EAS1E;;;EACA,OAAOA,IAAI,CAACS,UAALT,CAAgBM,CAAC,CAAC,CAAD,CAAjBN,EAAsBM,CAAC,CAAC,CAAD,CAAvBN,EAA4BM,CAAC,CAAC,CAAD,CAA7BN,CAAP;AACD","names":["vec3","isNumber","getAngle","angle","undefined","createVec3","x","y","z","fromValues","length","clone"],"sources":["../../src/utils/math.ts"],"sourcesContent":["import { vec3, vec4 } from 'gl-matrix';\nimport { isNumber } from './is-number';\n\nexport function getAngle(angle: number | undefined) {\n  if (angle === undefined) {\n    return 0;\n  } else if (angle > 360 || angle < -360) {\n    return angle % 360;\n  }\n  return angle;\n}\n\nexport function createVec3(x: number | vec3 | vec4, y?: number, z?: number) {\n  if (isNumber(x)) {\n    return vec3.fromValues(x as number, y as number, z as number);\n  }\n\n  if ((x as vec3).length === 3) {\n    return vec3.clone(x as vec3);\n  }\n\n  // @ts-ignore\n  return vec3.fromValues(x[0], x[1], x[2]);\n}\n"]},"metadata":{},"sourceType":"module"}