{"ast":null,"code":"import { pointAtSegments, angleAtSegments, distanceAtSegment, lengthOfSegment } from './segments';\nimport polyline from './polyline';\n\nfunction getAllPoints(points) {\n  var tmp = points.slice(0);\n\n  if (points.length) {\n    tmp.push(points[0]);\n  }\n\n  return tmp;\n}\n\nexport default {\n  /**\n   * 计算多边形的包围盒\n   * @param {array} points 点的集合 [x,y] 的形式\n   * @return {object} 包围盒\n   */\n  box: function (points) {\n    return polyline.box(points);\n  },\n\n  /**\n   * 计算多边形的长度\n   * @param {array} points 点的集合 [x,y] 的形式\n   * @return {object} 多边形边的长度\n   */\n  length: function (points) {\n    return lengthOfSegment(getAllPoints(points));\n  },\n\n  /**\n   * 根据比例获取多边形的点\n   * @param {array} points 点的集合 [x,y] 的形式\n   * @param {number} t 在多边形的长度上的比例\n   * @return {object} 根据比例值计算出来的点\n   */\n  pointAt: function (points, t) {\n    return pointAtSegments(getAllPoints(points), t);\n  },\n\n  /**\n   * 指定点到多边形的距离\n   * @param {array} points 点的集合 [x,y] 的形式\n   * @param {number} x 指定点的 x\n   * @param {number} y 指定点的 y\n   * @return {number} 点到多边形的距离\n   */\n  pointDistance: function (points, x, y) {\n    return distanceAtSegment(getAllPoints(points), x, y);\n  },\n\n  /**\n   * 根据比例获取多边形的切线角度\n   * @param {array} points 点的集合 [x,y] 的形式\n   * @param {number} t 在多边形的长度上的比例\n   * @return {object} 根据比例值计算出来的角度\n   */\n  tangentAngle: function (points, t) {\n    return angleAtSegments(getAllPoints(points), t);\n  }\n};","map":{"version":3,"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,iBAA3C,EAA8DC,eAA9D,QAAqF,YAArF;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,SAASC,YAAT,CAAsBC,MAAtB,EAA0C;EACxC,IAAMC,GAAG,GAAGD,MAAM,CAACE,KAAP,CAAa,CAAb,CAAZ;;EACA,IAAIF,MAAM,CAACG,MAAX,EAAmB;IACjBF,GAAG,CAACG,IAAJ,CAASJ,MAAM,CAAC,CAAD,CAAf;EACD;;EACD,OAAOC,GAAP;AACD;;AAED,eAAe;EACb;;;;;EAKAI,GAAG,EAAH,UAAIL,MAAJ,EAAwB;IACtB,OAAOF,QAAQ,CAACO,GAAT,CAAaL,MAAb,CAAP;EACD,CARY;;EASb;;;;;EAKAG,MAAM,EAAN,UAAOH,MAAP,EAA2B;IACzB,OAAOH,eAAe,CAACE,YAAY,CAACC,MAAD,CAAb,CAAtB;EACD,CAhBY;;EAiBb;;;;;;EAMAM,OAAO,EAAP,UAAQN,MAAR,EAA8BO,CAA9B,EAAuC;IACrC,OAAOb,eAAe,CAACK,YAAY,CAACC,MAAD,CAAb,EAAuBO,CAAvB,CAAtB;EACD,CAzBY;;EA0Bb;;;;;;;EAOAC,aAAa,EAAb,UAAcR,MAAd,EAAoCS,CAApC,EAA+CC,CAA/C,EAAwD;IACtD,OAAOd,iBAAiB,CAACG,YAAY,CAACC,MAAD,CAAb,EAAuBS,CAAvB,EAA0BC,CAA1B,CAAxB;EACD,CAnCY;;EAoCb;;;;;;EAMAC,YAAY,EAAZ,UAAaX,MAAb,EAAmCO,CAAnC,EAA4C;IAC1C,OAAOZ,eAAe,CAACI,YAAY,CAACC,MAAD,CAAb,EAAuBO,CAAvB,CAAtB;EACD;AA5CY,CAAf","names":["pointAtSegments","angleAtSegments","distanceAtSegment","lengthOfSegment","polyline","getAllPoints","points","tmp","slice","length","push","box","pointAt","t","pointDistance","x","y","tangentAngle"],"sourceRoot":"","sources":["../src/polygon.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}