{"ast":null,"code":"import isArray from './is-array';\n/**\n * @param {Array} arr The array to iterate over.\n * @return {*} Returns the maximum value.\n * @example\n *\n * max([1, 2]);\n * // => 2\n *\n * max([]);\n * // => undefined\n *\n * const data = new Array(1250010).fill(1).map((d,idx) => idx);\n *\n * max(data);\n * // => 1250010\n * // Math.max(...data) will encounter \"Maximum call stack size exceeded\" error\n */\n\nexport default (function (arr) {\n  if (!isArray(arr)) {\n    return undefined;\n  }\n\n  return arr.reduce(function (prev, curr) {\n    return Math.max(prev, curr);\n  }, arr[0]);\n});","map":{"version":3,"mappings":"AACA,OAAOA,OAAP,MAAoB,YAApB;AAEA;;;;;;;;;;;;;;;;;;AAiBA,gBAAe,UAACC,GAAD,EAAc;EAC3B,IAAI,CAACD,OAAO,CAACC,GAAD,CAAZ,EAAmB;IACjB,OAAOC,SAAP;EACD;;EACD,OAAOD,GAAG,CAACE,MAAJ,CAAW,UAACC,IAAD,EAAOC,IAAP,EAAW;IAC3B,OAAOC,IAAI,CAACC,GAAL,CAASH,IAAT,EAAeC,IAAf,CAAP;EACD,CAFM,EAEJJ,GAAG,CAAC,CAAD,CAFC,CAAP;AAGD,CAPD","names":["isArray","arr","undefined","reduce","prev","curr","Math","max"],"sourceRoot":"","sources":["../src/max.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}