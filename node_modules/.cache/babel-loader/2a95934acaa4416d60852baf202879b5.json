{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar grid_1 = __importDefault(require(\"./grid\"));\n\nfunction layout(data, options) {\n  if (!data.nodes || data.nodes.length === 0) return data;\n  var width = options.width;\n  var height = options.height;\n  var nodeMinGap = options.nodeMinGap; // 2. 网格布局\n\n  var CELL_W = 10000;\n  var CELL_H = 10000;\n  data.nodes.forEach(function (node) {\n    var nodeWidth = node.size[0] || 50;\n    var nodeHeight = node.size[1] || 50;\n    CELL_W = Math.min(nodeWidth, CELL_W);\n    CELL_H = Math.min(nodeHeight, CELL_H);\n  });\n  var grid = new grid_1.default();\n  grid.init(width, height, {\n    CELL_H: CELL_H,\n    CELL_W: CELL_W\n  });\n  data.nodes.forEach(function (d) {\n    var gridpoint = grid.occupyNearest(d);\n\n    if (gridpoint) {\n      gridpoint.node = {\n        id: d.id,\n        size: d.size\n      };\n      d.x = gridpoint.x;\n      d.y = gridpoint.y;\n      d.dx = gridpoint.dx;\n      d.dy = gridpoint.dy;\n    }\n  }); // 加入节点size\n\n  for (var i = 0; i < data.nodes.length; i++) {\n    //  节点宽度大于网格宽度，则往当前网格的右边插入列\n    var node = data.nodes[i];\n    var result = grid.findGridByNodeId(node.id);\n    if (!result) throw new Error(\"can not find node cell\");\n    var column = result.column,\n        row = result.row;\n\n    if (node.size[0] + nodeMinGap > CELL_W) {\n      var addGridSize = Math.ceil((node.size[0] + nodeMinGap) / CELL_W) - 1;\n      var realAdd = addGridSize; // 优化，假设同一列，不同行存在两个size为2的节点，遍历到第一个节点的时候，会往右插入两列，遍历到第二个节点，又往右插入。就会导致多余的网格\n\n      for (var j = 0; j < addGridSize; j++) {\n        var hasColumn = grid.additionColumn.indexOf(column + j + 1) > -1;\n\n        if (hasColumn && !grid.cells[column + j + 1][row].node) {\n          realAdd--;\n        } else {\n          break;\n        }\n      }\n\n      grid.insertColumn(column, realAdd);\n    } // 节点高度大于网格宽度，则往当前网格的下边插入行\n\n\n    if (node.size[1] + nodeMinGap > CELL_H) {\n      var addGridSize = Math.ceil((node.size[1] + nodeMinGap) / CELL_H) - 1;\n      var realAdd = addGridSize;\n\n      for (var j = 0; j < addGridSize; j++) {\n        var hasColumn = grid.additionRow.indexOf(row + j + 1) > -1;\n\n        if (hasColumn && !grid.cells[column][row + j + 1].node) {\n          realAdd--;\n        } else {\n          break;\n        }\n      }\n\n      grid.insertRow(row, realAdd);\n    }\n  } // 同步节点坐标\n\n\n  for (var i = 0; i < grid.columnNum; i++) {\n    var _loop_1 = function (j) {\n      var cell = grid.cells[i][j];\n\n      if (cell.node) {\n        var node = data.nodes.find(function (node) {\n          var _a;\n\n          return node.id === ((_a = cell === null || cell === void 0 ? void 0 : cell.node) === null || _a === void 0 ? void 0 : _a.id);\n        });\n\n        if (node) {\n          node.x = cell.x + node.size[0] / 2;\n          node.y = cell.y + node.size[1] / 2;\n        }\n      }\n    };\n\n    for (var j = 0; j < grid.rowNum; j++) {\n      _loop_1(j);\n    }\n  }\n}\n\nexports.default = layout;","map":{"version":3,"mappings":"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","names":["layout","data","options","nodes","length","width","height","nodeMinGap","CELL_W","CELL_H","forEach","node","nodeWidth","size","nodeHeight","Math","min","grid","grid_1","init","d","gridpoint","occupyNearest","id","x","y","dx","dy","i","result","findGridByNodeId","Error","row","addGridSize","ceil","realAdd","j","hasColumn","additionColumn","indexOf","column","cells","insertColumn","additionRow","insertRow","columnNum","cell","find","_a","rowNum","exports"],"sourceRoot":"","sources":["../../../src/layout/er/forceGrid.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}