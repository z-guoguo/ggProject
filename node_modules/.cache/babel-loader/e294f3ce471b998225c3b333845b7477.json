{"ast":null,"code":"import { FunctionExt } from '../../util';\nimport { grid } from '../../layout/grid';\nimport { Node } from '../../model/node';\nimport { Model } from '../../model/model';\nimport { View } from '../../view/view';\nimport { Graph } from '../../graph/graph';\nimport { Dnd } from '../dnd';\nexport class Stencil extends View {\n  constructor(options) {\n    super();\n    this.graphs = {};\n    this.$groups = {};\n    this.options = Object.assign(Object.assign({}, Stencil.defaultOptions), options);\n    this.dnd = new Dnd(this.options);\n    this.onSearch = FunctionExt.debounce(this.onSearch, 200);\n    this.container = document.createElement('div');\n    this.$container = this.$(this.container).addClass(this.prefixClassName(ClassNames.base)).attr('data-not-found-text', this.options.notFoundText || 'No matches found');\n    this.options.collapsable = options.collapsable && options.groups && options.groups.some(group => group.collapsable !== false);\n\n    if (this.options.collapsable) {\n      this.$container.addClass('collapsable');\n      const collapsed = options.groups && options.groups.every(group => group.collapsed || group.collapsable === false);\n\n      if (collapsed) {\n        this.$container.addClass('collapsed');\n      }\n    }\n\n    this.$('<div/>').addClass(this.prefixClassName(ClassNames.title)).html(this.options.title).appendTo(this.$container);\n\n    if (options.search) {\n      this.$container.addClass('searchable').append(this.renderSearch());\n    }\n\n    this.$content = this.$('<div/>').addClass(this.prefixClassName(ClassNames.content)).appendTo(this.$container);\n    const globalGraphOptions = options.stencilGraphOptions || {};\n\n    if (options.groups && options.groups.length) {\n      options.groups.forEach(group => {\n        const $group = this.$('<div/>').addClass(this.prefixClassName(ClassNames.group)).attr('data-name', group.name);\n\n        if (group.collapsable == null && options.collapsable || group.collapsable !== false) {\n          $group.addClass('collapsable');\n        }\n\n        $group.toggleClass('collapsed', group.collapsed === true);\n        const $title = this.$('<h3/>').addClass(this.prefixClassName(ClassNames.groupTitle)).html(group.title || group.name);\n        const $content = this.$('<div/>').addClass(this.prefixClassName(ClassNames.groupContent));\n        const graphOptionsInGroup = group.graphOptions;\n        const graph = new Graph(Object.assign(Object.assign(Object.assign({}, globalGraphOptions), graphOptionsInGroup), {\n          container: document.createElement('div'),\n          model: globalGraphOptions.model || new Model(),\n          width: group.graphWidth || options.stencilGraphWidth,\n          height: group.graphHeight || options.stencilGraphHeight,\n          interacting: false,\n          preventDefaultBlankAction: false\n        }));\n        $content.append(graph.container);\n        $group.append($title, $content).appendTo(this.$content);\n        this.$groups[group.name] = $group;\n        this.graphs[group.name] = graph;\n      });\n    } else {\n      const graph = new Graph(Object.assign(Object.assign({}, globalGraphOptions), {\n        container: document.createElement('div'),\n        model: globalGraphOptions.model || new Model(),\n        width: options.stencilGraphWidth,\n        height: options.stencilGraphHeight,\n        interacting: false,\n        preventDefaultBlankAction: false\n      }));\n      this.$content.append(graph.container);\n      this.graphs[Private.defaultGroupName] = graph;\n    }\n\n    this.startListening();\n    return this;\n  }\n\n  get targetScroller() {\n    const target = this.options.target;\n    return Graph.isGraph(target) ? target.scroller.widget : target;\n  }\n\n  get targetGraph() {\n    const target = this.options.target;\n    return Graph.isGraph(target) ? target : target.graph;\n  }\n\n  get targetModel() {\n    return this.targetGraph.model;\n  }\n\n  renderSearch() {\n    return this.$('<div/>').addClass(this.prefixClassName(ClassNames.search)).append(this.$('<input/>').attr({\n      type: 'search',\n      placeholder: this.options.placeholder || 'Search'\n    }).addClass(this.prefixClassName(ClassNames.searchText)));\n  }\n\n  startListening() {\n    const title = this.prefixClassName(ClassNames.title);\n    const searchText = this.prefixClassName(ClassNames.searchText);\n    const groupTitle = this.prefixClassName(ClassNames.groupTitle);\n    this.delegateEvents({\n      [`click .${title}`]: 'onTitleClick',\n      [`touchstart .${title}`]: 'onTitleClick',\n      [`click .${groupTitle}`]: 'onGroupTitleClick',\n      [`touchstart .${groupTitle}`]: 'onGroupTitleClick',\n      [`input .${searchText}`]: 'onSearch',\n      [`focusin .${searchText}`]: 'onSearchFocusIn',\n      [`focusout .${searchText}`]: 'onSearchFocusOut'\n    });\n    Object.keys(this.graphs).forEach(groupName => {\n      const graph = this.graphs[groupName];\n      graph.on('cell:mousedown', this.onDragStart, this);\n    });\n  }\n\n  stopListening() {\n    this.undelegateEvents();\n    Object.keys(this.graphs).forEach(groupName => {\n      const graph = this.graphs[groupName];\n      graph.off('cell:mousedown', this.onDragStart, this);\n    });\n  }\n\n  load(data, groupName) {\n    if (Array.isArray(data)) {\n      this.loadGroup(data, groupName);\n    } else if (this.options.groups) {\n      Object.keys(this.options.groups).forEach(groupName => {\n        if (data[groupName]) {\n          this.loadGroup(data[groupName], groupName);\n        }\n      });\n    }\n\n    return this;\n  }\n\n  loadGroup(cells, groupName) {\n    const model = this.getModel(groupName);\n\n    if (model) {\n      const nodes = cells.map(cell => Node.isNode(cell) ? cell : Node.create(cell));\n      model.resetCells(nodes);\n    }\n\n    const group = this.getGroup(groupName);\n    let height = this.options.stencilGraphHeight;\n\n    if (group && group.graphHeight != null) {\n      height = group.graphHeight;\n    }\n\n    const layout = group && group.layout || this.options.layout;\n\n    if (layout && model) {\n      FunctionExt.call(layout, this, model, group);\n    }\n\n    if (!height) {\n      const graph = this.getGraph(groupName);\n      graph.fitToContent({\n        minWidth: graph.options.width,\n        gridHeight: 1,\n        padding: group && group.graphPadding || this.options.stencilGraphPadding || 10\n      });\n    }\n\n    return this;\n  }\n\n  onDragStart(args) {\n    const {\n      e,\n      node\n    } = args;\n    this.dnd.start(node, e);\n  }\n\n  filter(keyword, filter) {\n    const found = Object.keys(this.graphs).reduce((memo, groupName) => {\n      const graph = this.graphs[groupName];\n      const name = groupName === Private.defaultGroupName ? null : groupName;\n      const items = graph.model.getNodes().filter(cell => {\n        let matched = false;\n\n        if (typeof filter === 'function') {\n          matched = FunctionExt.call(filter, this, cell, keyword, name, this);\n        } else if (typeof filter === 'boolean') {\n          matched = filter;\n        } else {\n          matched = this.isCellMatched(cell, keyword, filter, keyword.toLowerCase() !== keyword);\n        }\n\n        const view = graph.renderer.findViewByCell(cell);\n\n        if (view) {\n          view.$(view.container).toggleClass('unmatched', !matched);\n        }\n\n        return matched;\n      });\n      const found = items.length > 0;\n      const options = this.options;\n      const model = new Model();\n      model.resetCells(items);\n\n      if (options.layout) {\n        FunctionExt.call(options.layout, this, model, this.getGroup(groupName));\n      }\n\n      if (this.$groups[groupName]) {\n        this.$groups[groupName].toggleClass('unmatched', !found);\n      }\n\n      graph.fitToContent({\n        gridWidth: 1,\n        gridHeight: 1,\n        padding: options.stencilGraphPadding || 10\n      });\n      return memo || found;\n    }, false);\n    this.$container.toggleClass('not-found', !found);\n  }\n\n  isCellMatched(cell, keyword, filters, ignoreCase) {\n    if (keyword && filters) {\n      return Object.keys(filters).some(shape => {\n        if (shape === '*' || cell.shape === shape) {\n          const filter = filters[shape];\n\n          if (typeof filter === 'boolean') {\n            return filter;\n          }\n\n          const paths = Array.isArray(filter) ? filter : [filter];\n          return paths.some(path => {\n            let val = cell.getPropByPath(path);\n\n            if (val != null) {\n              val = `${val}`;\n\n              if (!ignoreCase) {\n                val = val.toLowerCase();\n              }\n\n              return val.indexOf(keyword) >= 0;\n            }\n\n            return false;\n          });\n        }\n\n        return false;\n      });\n    }\n\n    return true;\n  }\n\n  onSearch(evt) {\n    this.filter(evt.target.value, this.options.search);\n  }\n\n  onSearchFocusIn() {\n    this.$container.addClass('is-focused');\n  }\n\n  onSearchFocusOut() {\n    this.$container.removeClass('is-focused');\n  }\n\n  onTitleClick() {\n    if (this.options.collapsable) {\n      this.$container.toggleClass('collapsed');\n\n      if (this.$container.hasClass('collapsed')) {\n        this.collapseGroups();\n      } else {\n        this.expandGroups();\n      }\n    }\n  }\n\n  onGroupTitleClick(evt) {\n    const $group = this.$(evt.target).closest(`.${this.prefixClassName(ClassNames.group)}`);\n    this.toggleGroup($group.attr('data-name') || '');\n    const allCollapsed = Object.keys(this.$groups).every(name => {\n      const group = this.getGroup(name);\n      const $group = this.$groups[name];\n      return group && group.collapsable === false || $group.hasClass('collapsed');\n    });\n    this.$container.toggleClass('collapsed', allCollapsed);\n  }\n\n  getModel(groupName) {\n    const graph = this.getGraph(groupName);\n    return graph ? graph.model : null;\n  }\n\n  getGraph(groupName) {\n    return this.graphs[groupName || Private.defaultGroupName];\n  }\n\n  getGroup(groupName) {\n    const groups = this.options.groups;\n\n    if (groupName != null && groups && groups.length) {\n      return groups.find(group => group.name === groupName);\n    }\n\n    return null;\n  }\n\n  toggleGroup(groupName) {\n    if (this.isGroupCollapsed(groupName)) {\n      this.expandGroup(groupName);\n    } else {\n      this.collapseGroup(groupName);\n    }\n\n    return this;\n  }\n\n  collapseGroup(groupName) {\n    if (this.isGroupCollapsable(groupName)) {\n      const $group = this.$groups[groupName];\n\n      if ($group && !this.isGroupCollapsed(groupName)) {\n        this.trigger('group:collapse', {\n          name: groupName\n        });\n        $group.addClass('collapsed');\n      }\n    }\n\n    return this;\n  }\n\n  expandGroup(groupName) {\n    if (this.isGroupCollapsable(groupName)) {\n      const $group = this.$groups[groupName];\n\n      if ($group && this.isGroupCollapsed(groupName)) {\n        this.trigger('group:expand', {\n          name: groupName\n        });\n        $group.removeClass('collapsed');\n      }\n    }\n\n    return this;\n  }\n\n  isGroupCollapsable(groupName) {\n    const $group = this.$groups[groupName];\n    return $group.hasClass('collapsable');\n  }\n\n  isGroupCollapsed(groupName) {\n    const $group = this.$groups[groupName];\n    return $group && $group.hasClass('collapsed');\n  }\n\n  collapseGroups() {\n    Object.keys(this.$groups).forEach(groupName => this.collapseGroup(groupName));\n    return this;\n  }\n\n  expandGroups() {\n    Object.keys(this.$groups).forEach(groupName => this.expandGroup(groupName));\n    return this;\n  }\n\n  resizeGroup(groupName, size) {\n    const graph = this.graphs[groupName];\n\n    if (graph) {\n      graph.resize(size.width, size.height);\n    }\n\n    return this;\n  }\n\n  onRemove() {\n    Object.keys(this.graphs).forEach(groupName => {\n      const graph = this.graphs[groupName];\n      graph.view.remove();\n      delete this.graphs[groupName];\n    });\n    this.dnd.remove();\n    this.stopListening();\n    this.undelegateDocumentEvents();\n  }\n\n}\n\n(function (Stencil) {\n  Stencil.defaultOptions = Object.assign({\n    stencilGraphWidth: 200,\n    stencilGraphHeight: 800,\n    title: 'Stencil',\n    collapsable: false,\n    placeholder: 'Search',\n    notFoundText: 'No matches found',\n\n    layout(model, group) {\n      const options = {\n        columnWidth: this.options.stencilGraphWidth / 2 - 10,\n        columns: 2,\n        rowHeight: 80,\n        resizeToFit: false,\n        dx: 10,\n        dy: 10\n      };\n      grid(model, Object.assign(Object.assign(Object.assign({}, options), this.options.layoutOptions), group ? group.layoutOptions : {}));\n    }\n\n  }, Dnd.defaults);\n})(Stencil || (Stencil = {}));\n\nvar ClassNames;\n\n(function (ClassNames) {\n  ClassNames.base = 'widget-stencil';\n  ClassNames.title = `${ClassNames.base}-title`;\n  ClassNames.search = `${ClassNames.base}-search`;\n  ClassNames.searchText = `${ClassNames.search}-text`;\n  ClassNames.content = `${ClassNames.base}-content`;\n  ClassNames.group = `${ClassNames.base}-group`;\n  ClassNames.groupTitle = `${ClassNames.group}-title`;\n  ClassNames.groupContent = `${ClassNames.group}-content`;\n})(ClassNames || (ClassNames = {}));\n\nvar Private;\n\n(function (Private) {\n  Private.defaultGroupName = '__default__';\n})(Private || (Private = {}));","map":{"version":3,"mappings":"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","names":["FunctionExt","grid","Node","Model","View","Graph","Dnd","Stencil","constructor","options","graphs","$groups","Object","defaultOptions","dnd","onSearch","debounce","container","document","createElement","$container","$","addClass","prefixClassName","ClassNames","base","attr","notFoundText","collapsable","groups","some","group","collapsed","every","title","html","appendTo","search","append","renderSearch","$content","content","globalGraphOptions","stencilGraphOptions","length","forEach","$group","name","toggleClass","$title","groupTitle","groupContent","graphOptionsInGroup","graphOptions","graph","model","width","graphWidth","stencilGraphWidth","height","graphHeight","stencilGraphHeight","interacting","preventDefaultBlankAction","Private","defaultGroupName","startListening","targetScroller","target","isGraph","scroller","widget","targetGraph","targetModel","type","placeholder","searchText","delegateEvents","keys","groupName","on","onDragStart","stopListening","undelegateEvents","off","load","data","Array","isArray","loadGroup","cells","getModel","nodes","map","cell","isNode","create","resetCells","getGroup","layout","call","getGraph","fitToContent","minWidth","gridHeight","padding","graphPadding","stencilGraphPadding","args","e","node","start","filter","keyword","found","reduce","memo","items","getNodes","matched","isCellMatched","toLowerCase","view","renderer","findViewByCell","gridWidth","filters","ignoreCase","shape","paths","path","val","getPropByPath","indexOf","evt","value","onSearchFocusIn","onSearchFocusOut","removeClass","onTitleClick","hasClass","collapseGroups","expandGroups","onGroupTitleClick","closest","toggleGroup","allCollapsed","find","isGroupCollapsed","expandGroup","collapseGroup","isGroupCollapsable","trigger","resizeGroup","size","resize","onRemove","remove","undelegateDocumentEvents","columnWidth","columns","rowHeight","resizeToFit","dx","dy","layoutOptions","defaults"],"sourceRoot":"","sources":["../../../src/addon/stencil/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}