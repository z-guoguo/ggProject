{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { __assign } from \"tslib\";\nimport { clone, deepMix, each, isArray, isObject, isString, upperFirst, throttle } from '@antv/util';\nimport Edge from '../../item/edge';\nimport Node from '../../item/node';\nimport Combo from '../../item/combo';\nimport { traverseTreeUp, traverseTree, getComboBBox } from '../../util/graphic';\nvar NODE = 'node';\nvar EDGE = 'edge';\nvar VEDGE = 'vedge';\nvar COMBO = 'combo';\nvar CFG_PREFIX = 'default';\nvar MAPPER_SUFFIX = 'Mapper';\nvar STATE_SUFFIX = 'stateStyles';\n\nvar ItemController =\n/** @class */\nfunction () {\n  function ItemController(graph) {\n    var _this = this;\n\n    this.edgeToBeUpdateMap = {};\n    /**\n     * 更新边限流，同时可以防止相同的边频繁重复更新\n     * */\n\n    this.throttleRefresh = throttle(function (_) {\n      var _a;\n\n      var graph = _this.graph;\n      if (!graph || graph.get('destroyed')) return;\n      var edgeToBeUpdateMap = _this.edgeToBeUpdateMap;\n      if (!edgeToBeUpdateMap || !((_a = Object.keys(edgeToBeUpdateMap)) === null || _a === void 0 ? void 0 : _a.length)) return;\n      Object.keys(edgeToBeUpdateMap).forEach(function (eid) {\n        var edge = edgeToBeUpdateMap[eid].edge;\n        if (!edge || edge.destroyed) return;\n        var source = edge.getSource();\n        var target = edge.getTarget();\n        if (!source || source.destroyed || !target || target.destroyed) return;\n        edge.refresh(edgeToBeUpdateMap[eid].updateType);\n      });\n      _this.edgeToBeUpdateMap = {};\n    }, 16, {\n      trailing: true,\n      leading: true\n    });\n    this.graph = graph;\n    this.destroyed = false;\n  }\n  /**\n   * 增加 Item 实例\n   *\n   * @param {ITEM_TYPE} type 实例类型，node 或 edge\n   * @param {(NodeConfig & EdgeConfig)} model 数据模型\n   * @returns {(Item)}\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.addItem = function (type, model) {\n    var graph = this.graph;\n    var vType = type === VEDGE ? EDGE : type;\n    var parent = graph.get(\"\".concat(vType, \"Group\")) || graph.get('group');\n    var upperType = upperFirst(vType);\n    var item = null; // 获取 this.get('styles') 中的值\n\n    var styles = graph.get(vType + upperFirst(STATE_SUFFIX)) || {};\n    var defaultModel = graph.get(CFG_PREFIX + upperType);\n\n    if (model[STATE_SUFFIX]) {\n      // 设置 this.get('styles') 中的值\n      styles = model[STATE_SUFFIX];\n    }\n\n    if (defaultModel) {\n      // 很多布局会直接修改原数据模型，所以不能用 merge 的形式，逐个写入原 model 中\n      each(defaultModel, function (val, cfg) {\n        if (isObject(val) && !isArray(val)) {\n          model[cfg] = deepMix({}, val, model[cfg]);\n        } else if (isArray(val)) {\n          model[cfg] = model[cfg] || clone(defaultModel[cfg]);\n        } else {\n          model[cfg] = model[cfg] || defaultModel[cfg];\n        }\n      });\n    }\n\n    var mapper = graph.get(vType + MAPPER_SUFFIX);\n\n    if (mapper) {\n      var mappedModel_1 = mapper(model);\n\n      if (mappedModel_1[STATE_SUFFIX]) {\n        // 设置 this.get('styles') 中的值\n        styles = mappedModel_1[STATE_SUFFIX];\n        delete mappedModel_1[STATE_SUFFIX];\n      } // 如果配置了 defaultEdge 或 defaultNode，则将默认配置的数据也合并进去\n\n\n      each(mappedModel_1, function (val, cfg) {\n        if (isObject(val) && !isArray(val)) {\n          model[cfg] = deepMix({}, model[cfg], val);\n        } else {\n          model[cfg] = mappedModel_1[cfg] || model[cfg];\n        }\n      });\n    }\n\n    graph.emit('beforeadditem', {\n      type: type,\n      model: model\n    });\n\n    if (type === EDGE || type === VEDGE) {\n      var source = void 0;\n      var target = void 0;\n      source = model.source; // eslint-disable-line prefer-destructuring\n\n      target = model.target; // eslint-disable-line prefer-destructuring\n\n      if (source && isString(source)) {\n        source = graph.findById(source);\n      }\n\n      if (target && isString(target)) {\n        target = graph.findById(target);\n      }\n\n      if (!source || !target) {\n        console.warn(\"The source or target node of edge \".concat(model.id, \" does not exist!\"));\n        return;\n      }\n\n      if (source.getType && source.getType() === 'combo') {\n        model.isComboEdge = true; // graph.updateCombo(source as ICombo);\n      }\n\n      if (target.getType && target.getType() === 'combo') {\n        model.isComboEdge = true; // graph.updateCombo(target as ICombo);\n      }\n\n      item = new Edge({\n        model: model,\n        source: source,\n        target: target,\n        styles: styles,\n        linkCenter: graph.get('linkCenter'),\n        group: parent.addGroup()\n      });\n    } else if (type === NODE) {\n      item = new Node({\n        model: model,\n        styles: styles,\n        group: parent.addGroup()\n      });\n    } else if (type === COMBO) {\n      var children = model.children;\n      var comboBBox = getComboBBox(children, graph);\n      var bboxX = void 0,\n          bboxY = void 0;\n      if (!isNaN(comboBBox.x)) bboxX = comboBBox.x;else if (isNaN(model.x)) bboxX = Math.random() * 100;\n      if (!isNaN(comboBBox.y)) bboxY = comboBBox.y;else if (isNaN(model.y)) bboxY = Math.random() * 100;\n\n      if (isNaN(model.x) || isNaN(model.y)) {\n        model.x = bboxX;\n        model.y = bboxY;\n      } else {\n        // if there is x y in model, place the combo according to it and move its succeed items. that means, the priority of the combo's position is higher than succeed items'\n        var dx = model.x - bboxX;\n        var dy = model.y - bboxY; // In the same time, adjust the children's positions\n\n        this.updateComboSucceeds(model.id, dx, dy, children);\n      }\n\n      var comboGroup = parent.addGroup();\n      comboGroup.setZIndex(model.depth);\n      item = new Combo({\n        model: model,\n        styles: styles,\n        animate: false,\n        bbox: model.collapsed ? getComboBBox([], graph) : comboBBox,\n        group: comboGroup\n      });\n      var comboModel_1 = item.getModel();\n      (children || []).forEach(function (child) {\n        var childItem = graph.findById(child.id);\n        item.addChild(childItem);\n        child.depth = comboModel_1.depth + 2;\n      });\n    }\n\n    if (item) {\n      graph.get(\"\".concat(type, \"s\")).push(item);\n      graph.get('itemMap')[item.get('id')] = item;\n      graph.emit('afteradditem', {\n        item: item,\n        model: model\n      }); // eslint-disable-next-line consistent-return\n\n      return item;\n    }\n  };\n  /**\n   * 更新节点或边\n   *\n   * @param {Item} item ID 或 实例\n   * @param {(EdgeConfig | Partial<NodeConfig>)} cfg 数据模型\n   * @returns\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.updateItem = function (item, cfg) {\n    var _this = this;\n\n    var _a, _b;\n\n    var graph = this.graph;\n\n    if (isString(item)) {\n      item = graph.findById(item);\n    }\n\n    if (!item || item.destroyed) {\n      return;\n    } // 更新的 item 的类型\n\n\n    var type = '';\n    if (item.getType) type = item.getType();\n    var mapper = graph.get(type + MAPPER_SUFFIX);\n    var model = item.getModel();\n    var oriX = model.x,\n        oriY = model.y;\n    var updateType = item.getUpdateType(cfg);\n\n    if (mapper) {\n      var result = deepMix({}, model, cfg);\n      var mappedModel = mapper(result); // 将 update 时候用户传入的参数与mapperModel做deepMix，以便复用之前设置的参数值\n\n      var newModel = deepMix({}, model, mappedModel, cfg);\n\n      if (mappedModel[STATE_SUFFIX]) {\n        item.set('styles', newModel[STATE_SUFFIX]);\n        delete newModel[STATE_SUFFIX];\n      }\n\n      each(newModel, function (val, key) {\n        cfg[key] = val;\n      });\n    } else {\n      // merge update传进来的对象参数，model中没有的数据不做处理，对象和字符串值也不做处理，直接替换原来的\n      each(cfg, function (val, key) {\n        if (model[key]) {\n          if (isObject(val) && !isArray(val)) {\n            cfg[key] = __assign(__assign({}, model[key]), cfg[key]);\n          }\n        }\n      });\n    } // emit beforeupdateitem 事件\n\n\n    graph.emit('beforeupdateitem', {\n      item: item,\n      cfg: cfg\n    });\n\n    if (type === EDGE) {\n      // 若是边要更新source || target, 为了不影响示例内部model，并且重新计算startPoint和endPoint，手动设置\n      if (cfg.source) {\n        var source = cfg.source;\n\n        if (isString(source)) {\n          source = graph.findById(source);\n        }\n\n        item.setSource(source);\n      }\n\n      if (cfg.target) {\n        var target = cfg.target;\n\n        if (isString(target)) {\n          target = graph.findById(target);\n        }\n\n        item.setTarget(target);\n      }\n\n      item.update(cfg);\n    } else if (type === NODE) {\n      item.update(cfg, updateType);\n      var edges = item.getEdges();\n      var refreshEdge = (updateType === null || updateType === void 0 ? void 0 : updateType.includes('bbox')) || updateType === 'move';\n\n      if (updateType === 'move') {\n        each(edges, function (edge) {\n          _this.edgeToBeUpdateMap[edge.getID()] = {\n            edge: edge,\n            updateType: updateType\n          };\n\n          _this.throttleRefresh();\n        });\n      } else if (refreshEdge) {\n        each(edges, function (edge) {\n          edge.refresh(updateType);\n        });\n      }\n    } else if (type === COMBO) {\n      item.update(cfg, updateType);\n\n      if (!isNaN(cfg.x) || !isNaN(cfg.y)) {\n        // if there is x y in model, place the combo according to it and move its succeed items. that means, the priority of the combo's position is higher than succeed items'\n        var dx = cfg.x - oriX || 0;\n        var dy = cfg.y - oriY || 0; // In the same time, adjust the children's positions\n\n        this.updateComboSucceeds(model.id, dx, dy);\n      }\n\n      var edges_1 = item.getEdges();\n      var refreshEdge = (updateType === null || updateType === void 0 ? void 0 : updateType.includes('bbox')) || updateType === 'move';\n\n      if (refreshEdge && type === COMBO) {\n        var shapeFactory = item.get('shapeFactory');\n        var shapeType = model.type || 'circle';\n        var comboAnimate = model.animate === undefined || cfg.animate === undefined ? (_b = (_a = shapeFactory[shapeType]) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.animate : model.animate || cfg.animate;\n\n        if (comboAnimate) {\n          setTimeout(function () {\n            if (!item || item.destroyed) return;\n            var keyShape = item.getKeyShape();\n            if (!keyShape || keyShape.destroyed) return;\n            each(edges_1, function (edge) {\n              if (edge && !edge.destroyed) edge.refresh();\n            });\n          }, 201);\n        } else {\n          each(edges_1, function (edge) {\n            edge.refresh();\n          });\n        }\n      }\n    }\n\n    graph.emit('afterupdateitem', {\n      item: item,\n      cfg: cfg\n    });\n  };\n  /**\n   * 根据 combo 的子元素更新 combo 的位置及大小\n   *\n   * @param {ICombo} combo ID 或 实例\n   * @returns\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.updateCombo = function (combo, children, followCombo) {\n    var _this = this;\n\n    var _a, _b;\n\n    var graph = this.graph;\n\n    if (isString(combo)) {\n      combo = graph.findById(combo);\n    }\n\n    if (!combo || combo.destroyed) {\n      return;\n    }\n\n    var model = combo.getModel();\n    var comboBBox = getComboBBox(children, graph, combo);\n    var comboX = comboBBox.x,\n        comboY = comboBBox.y;\n    combo.set('bbox', comboBBox);\n    var x = comboX,\n        y = comboY;\n\n    if (followCombo) {\n      // position of combo model first\n      x = isNaN(model.x) ? comboX : model.x;\n      y = isNaN(model.y) ? comboY : model.y;\n    } else {\n      // position of succeed items first\n      x = isNaN(comboX) ? model.x : comboX;\n      y = isNaN(comboY) ? model.y : comboY;\n    }\n\n    combo.update({\n      x: x,\n      y: y\n    });\n    var shapeFactory = combo.get('shapeFactory');\n    var shapeType = model.type || 'circle';\n    var comboAnimate = model.animate === undefined ? (_b = (_a = shapeFactory[shapeType]) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.animate : model.animate;\n\n    if (comboAnimate) {\n      setTimeout(function () {\n        if (!combo || combo.destroyed) return;\n        var keyShape = combo.getKeyShape();\n        if (!keyShape || keyShape.destroyed) return;\n        combo.getShapeCfg(model); // 更新 combo 缓存的 size\n\n        _this.updateComboEdges(combo);\n      }, 201);\n    } else {\n      this.updateComboEdges(combo);\n    }\n  };\n\n  ItemController.prototype.updateComboEdges = function (combo) {\n    var combEdges = combo.getEdges() || [];\n\n    for (var i = 0; i < combEdges.length; i++) {\n      var edge = combEdges[i];\n\n      if (edge && !edge.destroyed) {\n        edge.refresh();\n      }\n    }\n  };\n  /**\n   * 收起 combo，隐藏相关元素\n   */\n\n\n  ItemController.prototype.collapseCombo = function (combo, stack) {\n    if (stack === void 0) {\n      stack = true;\n    }\n\n    var graph = this.graph;\n\n    if (isString(combo)) {\n      combo = graph.findById(combo);\n    }\n\n    var children = combo.getChildren();\n    children.nodes.forEach(function (node) {\n      graph.hideItem(node, stack);\n    });\n    children.combos.forEach(function (c) {\n      graph.hideItem(c, stack);\n    });\n  };\n  /**\n   * 根据位置差量 dx dy，更新 comboId 后继元素的位置\n   * */\n\n\n  ItemController.prototype.updateComboSucceeds = function (comboId, dx, dy, children) {\n    var _this = this;\n\n    if (children === void 0) {\n      children = [];\n    }\n\n    var graph = this.graph;\n    if (!dx && !dy) return;\n    var kids = children;\n\n    if (!(kids === null || kids === void 0 ? void 0 : kids.length)) {\n      var comboTrees = graph.get('comboTrees');\n      comboTrees === null || comboTrees === void 0 ? void 0 : comboTrees.forEach(function (child) {\n        traverseTree(child, function (subTree) {\n          if (subTree.id === comboId) {\n            kids = subTree.children;\n            return false;\n          }\n\n          return true;\n        });\n      });\n    }\n\n    kids === null || kids === void 0 ? void 0 : kids.forEach(function (child) {\n      var childItem = graph.findById(child.id);\n\n      if (childItem) {\n        var childModel = childItem.getModel();\n\n        _this.updateItem(child.id, {\n          x: (childModel.x || 0) + dx,\n          y: (childModel.y || 0) + dy\n        });\n      }\n    });\n  };\n  /**\n   * 展开 combo，相关元素出现\n   * 若子 combo 原先是收起状态，则保持它的收起状态\n   */\n\n\n  ItemController.prototype.expandCombo = function (combo, stack) {\n    if (stack === void 0) {\n      stack = true;\n    }\n\n    var graph = this.graph;\n\n    if (isString(combo)) {\n      combo = graph.findById(combo);\n    }\n\n    var children = combo.getChildren();\n    children.nodes.forEach(function (node) {\n      graph.showItem(node, stack);\n    });\n    children.combos.forEach(function (c) {\n      if (c.getModel().collapsed) {\n        c.show();\n      } else {\n        graph.showItem(c, stack);\n      }\n    });\n  };\n  /**\n   * 删除指定的节点或边\n   *\n   * @param {Item} item item ID 或实例\n   * @returns {void}\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.removeItem = function (item) {\n    var _this = this;\n\n    var graph = this.graph;\n\n    if (isString(item)) {\n      item = graph.findById(item);\n    }\n\n    if (!item || item.destroyed) {\n      return;\n    }\n\n    var itemModel = clone(item.getModel());\n    graph.emit('beforeremoveitem', {\n      item: itemModel\n    });\n    var type = '';\n    if (item.getType) type = item.getType();\n    var items = graph.get(\"\".concat(type, \"s\"));\n    var index = items.indexOf(item);\n    if (index > -1) items.splice(index, 1);\n\n    if (type === EDGE) {\n      var vitems = graph.get(\"v\".concat(type, \"s\"));\n      var vindex = vitems.indexOf(item);\n      if (vindex > -1) vitems.splice(vindex, 1);\n    }\n\n    var itemId = item.get('id');\n    var itemMap = graph.get('itemMap');\n    delete itemMap[itemId];\n    var comboTrees = graph.get('comboTrees');\n    var id = item.get('id');\n\n    if (type === NODE) {\n      var comboId = item.getModel().comboId;\n\n      if (comboTrees && comboId) {\n        var brothers_1 = comboTrees;\n        var found_1 = false; // the flag to terminate the forEach circulation\n        // remove the node from the children array of its parent fromt he tree\n\n        comboTrees.forEach(function (ctree) {\n          if (found_1) return;\n          traverseTree(ctree, function (combo) {\n            if (combo.id === id && brothers_1) {\n              var bidx = brothers_1.indexOf(combo);\n              brothers_1.splice(bidx, 1);\n              found_1 = true;\n              return false; // terminate the traverse\n            }\n\n            brothers_1 = combo.children;\n            return true;\n          });\n        });\n      } // 若移除的是节点，需要将与之相连的边一同删除\n\n\n      var edges = item.getEdges();\n\n      for (var i = edges.length - 1; i >= 0; i--) {\n        graph.removeItem(edges[i], false);\n      }\n\n      if (comboId) graph.updateCombo(comboId);\n    } else if (type === COMBO) {\n      var parentId = item.getModel().parentId;\n      var comboInTree_1; // find the subtree rooted at the item to be removed\n\n      var found_2 = false; // the flag to terminate the forEach circulation\n\n      (comboTrees || []).forEach(function (ctree) {\n        if (found_2) return;\n        traverseTree(ctree, function (combo) {\n          if (combo.id === id) {\n            comboInTree_1 = combo;\n            found_2 = true;\n            return false; // terminate the traverse\n          }\n\n          return true;\n        });\n      });\n      comboInTree_1.removed = true;\n\n      if (comboInTree_1 && comboInTree_1.children) {\n        comboInTree_1.children.forEach(function (child) {\n          _this.removeItem(child.id);\n        });\n      } // 若移除的是 combo，需要将与之相连的边一同删除\n\n\n      var edges = item.getEdges();\n\n      for (var i = edges.length; i >= 0; i--) {\n        graph.removeItem(edges[i], false);\n      }\n\n      if (parentId) graph.updateCombo(parentId);\n    }\n\n    item.destroy();\n    graph.emit('afterremoveitem', {\n      item: itemModel,\n      type: type\n    });\n  };\n  /**\n   * 更新 item 状态\n   *\n   * @param {Item} item Item 实例\n   * @param {string} state 状态名称\n   * @param {boolean} value 是否启用状态或状态值\n   * @returns {void}\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.setItemState = function (item, state, value) {\n    var graph = this.graph;\n    var stateName = state;\n\n    if (isString(value)) {\n      stateName = \"\".concat(state, \":\").concat(value);\n    } // 已经存在要设置的 state，或不存在 state 的样式为 undefined\n\n\n    if (item.hasState(stateName) === value && value || // 当该状态已经存在且现在需要设置为 true 时，不需要继续。当该状态不存在，且设置为 false 时，需要继续\n    isString(value) && item.hasState(stateName)) {\n      // 当该状态 value 是字符串，且已经存在该状态，不需要继续\n      return;\n    }\n\n    graph.emit('beforeitemstatechange', {\n      item: item,\n      state: stateName,\n      enabled: value\n    });\n    item.setState(state, value);\n    graph.autoPaint();\n    graph.emit('afteritemstatechange', {\n      item: item,\n      state: stateName,\n      enabled: value\n    });\n  };\n  /**\n   * 将指定状态的优先级提升为最高优先级\n   * @param {Item} item 元素id或元素实例\n   * @param state 状态名称\n   */\n\n\n  ItemController.prototype.priorityState = function (item, state) {\n    var graph = this.graph;\n    var currentItem = item;\n\n    if (isString(item)) {\n      currentItem = graph.findById(item);\n    } // 先取消已有的 state\n\n\n    this.setItemState(currentItem, state, false); // 再设置state，则此时该优先级为最高\n\n    this.setItemState(currentItem, state, true);\n  };\n  /**\n   * 清除所有指定的状态\n   *\n   * @param {Item} item Item 实例\n   * @param {string[]} states 状态名称集合\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.clearItemStates = function (item, states) {\n    var graph = this.graph;\n\n    if (isString(item)) {\n      item = graph.findById(item);\n    }\n\n    graph.emit('beforeitemstatesclear', {\n      item: item,\n      states: states\n    });\n    item.clearStates(states);\n    graph.emit('afteritemstatesclear', {\n      item: item,\n      states: states\n    });\n  };\n  /**\n   * 刷新指定的 Item\n   *\n   * @param {Item} item Item ID 或 实例\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.refreshItem = function (item) {\n    var graph = this.graph;\n\n    if (isString(item)) {\n      item = graph.findById(item);\n    }\n\n    graph.emit('beforeitemrefresh', {\n      item: item\n    }); // 调用 Item 的 refresh 方法，实现刷新功能\n\n    item.refresh();\n    graph.emit('afteritemrefresh', {\n      item: item\n    });\n  };\n  /**\n   * 根据 graph 上用 combos 数据生成的 comboTree 来增加所有 combos\n   *\n   * @param {ComboTree[]} comboTrees graph 上用 combos 数据生成的 comboTree\n   * @param {ComboConfig[]} comboModels combos 数据\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.addCombos = function (comboTrees, comboModels) {\n    var _this = this;\n\n    var graph = this.graph;\n    (comboTrees || []).forEach(function (ctree) {\n      traverseTreeUp(ctree, function (child) {\n        var comboModel;\n        comboModels.forEach(function (model) {\n          if (model.id === child.id) {\n            model.children = child.children;\n            model.depth = child.depth;\n            comboModel = model;\n          }\n        });\n\n        if (comboModel) {\n          _this.addItem('combo', comboModel);\n        }\n\n        return true;\n      });\n    });\n    var comboGroup = graph.get('comboGroup');\n    if (comboGroup) comboGroup.sort();\n  };\n  /**\n   * 改变Item的显示状态\n   *\n   * @param {Item} item Item ID 或 实例\n   * @param {boolean} visible 是否显示\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.changeItemVisibility = function (item, visible) {\n    var _this = this;\n\n    var graph = this.graph;\n\n    if (isString(item)) {\n      item = graph.findById(item);\n    }\n\n    if (!item) {\n      console.warn('The item to be shown or hidden does not exist!');\n      return;\n    }\n\n    graph.emit('beforeitemvisibilitychange', {\n      item: item,\n      visible: visible\n    });\n    item.changeVisibility(visible);\n\n    if (item.getType && item.getType() === NODE) {\n      var edges = item.getEdges();\n      each(edges, function (edge) {\n        // 若隐藏节点，则将与之关联的边也隐藏\n        // 若显示节点，则将与之关联的边也显示，但是需要判断边两端的节点都是可见的\n        if (visible && !(edge.get('source').isVisible() && edge.get('target').isVisible())) {\n          return;\n        }\n\n        _this.changeItemVisibility(edge, visible);\n      });\n    } else if (item.getType && item.getType() === COMBO) {\n      var comboTrees = graph.get('comboTrees');\n      var id_1 = item.get('id');\n      var children_1 = [];\n      var found_3 = false; // flag the terminate the forEach\n\n      (comboTrees || []).forEach(function (ctree) {\n        if (found_3) return;\n        if (!ctree.children || ctree.children.length === 0) return;\n        traverseTree(ctree, function (combo) {\n          if (combo.id === id_1) {\n            children_1 = combo.children;\n            found_3 = true;\n            return false; // terminate the traverse\n          }\n\n          return true;\n        });\n      });\n\n      if (children_1 && (!visible || visible && !item.getModel().collapsed)) {\n        children_1.forEach(function (child) {\n          var childItem = graph.findById(child.id);\n\n          _this.changeItemVisibility(childItem, visible);\n        });\n      }\n\n      var edges = item.getEdges();\n      each(edges, function (edge) {\n        // 若隐藏 combo，则将与 combo 本身关联的边也隐藏\n        // 若显示 combo，则将与 combo 本身关联的边也显示，但是需要判断边两端的节点都是可见的\n        if (visible && !(edge.get('source').isVisible() && edge.get('target').isVisible())) {\n          return;\n        }\n\n        _this.changeItemVisibility(edge, visible);\n      });\n    }\n\n    graph.emit('afteritemvisibilitychange', {\n      item: item,\n      visible: visible\n    });\n    return item;\n  };\n\n  ItemController.prototype.destroy = function () {\n    this.graph = null;\n    this.destroyed = true;\n  };\n\n  return ItemController;\n}();\n\nexport default ItemController;","map":{"version":3,"names":["__assign","clone","deepMix","each","isArray","isObject","isString","upperFirst","throttle","Edge","Node","Combo","traverseTreeUp","traverseTree","getComboBBox","NODE","EDGE","VEDGE","COMBO","CFG_PREFIX","MAPPER_SUFFIX","STATE_SUFFIX","ItemController","graph","_this","edgeToBeUpdateMap","throttleRefresh","_","_a","get","Object","keys","length","forEach","eid","edge","destroyed","source","getSource","target","getTarget","refresh","updateType","trailing","leading","prototype","addItem","type","model","vType","parent","concat","upperType","item","styles","defaultModel","val","cfg","mapper","mappedModel_1","emit","findById","console","warn","id","getType","isComboEdge","linkCenter","group","addGroup","children","comboBBox","bboxX","bboxY","isNaN","x","Math","random","y","dx","dy","updateComboSucceeds","comboGroup","setZIndex","depth","animate","bbox","collapsed","comboModel_1","getModel","child","childItem","addChild","push","updateItem","_b","oriX","oriY","getUpdateType","result","mappedModel","newModel","set","key","setSource","setTarget","update","edges","getEdges","refreshEdge","includes","getID","edges_1","shapeFactory","shapeType","comboAnimate","undefined","options","setTimeout","keyShape","getKeyShape","updateCombo","combo","followCombo","comboX","comboY","getShapeCfg","updateComboEdges","combEdges","i","collapseCombo","stack","getChildren","nodes","node","hideItem","combos","c","comboId","kids","comboTrees","subTree","childModel","expandCombo","showItem","show","removeItem","itemModel","items","index","indexOf","splice","vitems","vindex","itemId","itemMap","brothers_1","found_1","ctree","bidx","parentId","comboInTree_1","found_2","removed","destroy","setItemState","state","value","stateName","hasState","enabled","setState","autoPaint","priorityState","currentItem","clearItemStates","states","clearStates","refreshItem","addCombos","comboModels","comboModel","sort","changeItemVisibility","visible","changeVisibility","isVisible","id_1","children_1","found_3"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-core/es/graph/controller/item.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { clone, deepMix, each, isArray, isObject, isString, upperFirst, throttle } from '@antv/util';\nimport Edge from '../../item/edge';\nimport Node from '../../item/node';\nimport Combo from '../../item/combo';\nimport { traverseTreeUp, traverseTree, getComboBBox } from '../../util/graphic';\nvar NODE = 'node';\nvar EDGE = 'edge';\nvar VEDGE = 'vedge';\nvar COMBO = 'combo';\nvar CFG_PREFIX = 'default';\nvar MAPPER_SUFFIX = 'Mapper';\nvar STATE_SUFFIX = 'stateStyles';\n\nvar ItemController =\n/** @class */\nfunction () {\n  function ItemController(graph) {\n    var _this = this;\n\n    this.edgeToBeUpdateMap = {};\n    /**\n     * 更新边限流，同时可以防止相同的边频繁重复更新\n     * */\n\n    this.throttleRefresh = throttle(function (_) {\n      var _a;\n\n      var graph = _this.graph;\n      if (!graph || graph.get('destroyed')) return;\n      var edgeToBeUpdateMap = _this.edgeToBeUpdateMap;\n      if (!edgeToBeUpdateMap || !((_a = Object.keys(edgeToBeUpdateMap)) === null || _a === void 0 ? void 0 : _a.length)) return;\n      Object.keys(edgeToBeUpdateMap).forEach(function (eid) {\n        var edge = edgeToBeUpdateMap[eid].edge;\n        if (!edge || edge.destroyed) return;\n        var source = edge.getSource();\n        var target = edge.getTarget();\n        if (!source || source.destroyed || !target || target.destroyed) return;\n        edge.refresh(edgeToBeUpdateMap[eid].updateType);\n      });\n      _this.edgeToBeUpdateMap = {};\n    }, 16, {\n      trailing: true,\n      leading: true\n    });\n    this.graph = graph;\n    this.destroyed = false;\n  }\n  /**\n   * 增加 Item 实例\n   *\n   * @param {ITEM_TYPE} type 实例类型，node 或 edge\n   * @param {(NodeConfig & EdgeConfig)} model 数据模型\n   * @returns {(Item)}\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.addItem = function (type, model) {\n    var graph = this.graph;\n    var vType = type === VEDGE ? EDGE : type;\n    var parent = graph.get(\"\".concat(vType, \"Group\")) || graph.get('group');\n    var upperType = upperFirst(vType);\n    var item = null; // 获取 this.get('styles') 中的值\n\n    var styles = graph.get(vType + upperFirst(STATE_SUFFIX)) || {};\n    var defaultModel = graph.get(CFG_PREFIX + upperType);\n\n    if (model[STATE_SUFFIX]) {\n      // 设置 this.get('styles') 中的值\n      styles = model[STATE_SUFFIX];\n    }\n\n    if (defaultModel) {\n      // 很多布局会直接修改原数据模型，所以不能用 merge 的形式，逐个写入原 model 中\n      each(defaultModel, function (val, cfg) {\n        if (isObject(val) && !isArray(val)) {\n          model[cfg] = deepMix({}, val, model[cfg]);\n        } else if (isArray(val)) {\n          model[cfg] = model[cfg] || clone(defaultModel[cfg]);\n        } else {\n          model[cfg] = model[cfg] || defaultModel[cfg];\n        }\n      });\n    }\n\n    var mapper = graph.get(vType + MAPPER_SUFFIX);\n\n    if (mapper) {\n      var mappedModel_1 = mapper(model);\n\n      if (mappedModel_1[STATE_SUFFIX]) {\n        // 设置 this.get('styles') 中的值\n        styles = mappedModel_1[STATE_SUFFIX];\n        delete mappedModel_1[STATE_SUFFIX];\n      } // 如果配置了 defaultEdge 或 defaultNode，则将默认配置的数据也合并进去\n\n\n      each(mappedModel_1, function (val, cfg) {\n        if (isObject(val) && !isArray(val)) {\n          model[cfg] = deepMix({}, model[cfg], val);\n        } else {\n          model[cfg] = mappedModel_1[cfg] || model[cfg];\n        }\n      });\n    }\n\n    graph.emit('beforeadditem', {\n      type: type,\n      model: model\n    });\n\n    if (type === EDGE || type === VEDGE) {\n      var source = void 0;\n      var target = void 0;\n      source = model.source; // eslint-disable-line prefer-destructuring\n\n      target = model.target; // eslint-disable-line prefer-destructuring\n\n      if (source && isString(source)) {\n        source = graph.findById(source);\n      }\n\n      if (target && isString(target)) {\n        target = graph.findById(target);\n      }\n\n      if (!source || !target) {\n        console.warn(\"The source or target node of edge \".concat(model.id, \" does not exist!\"));\n        return;\n      }\n\n      if (source.getType && source.getType() === 'combo') {\n        model.isComboEdge = true; // graph.updateCombo(source as ICombo);\n      }\n\n      if (target.getType && target.getType() === 'combo') {\n        model.isComboEdge = true; // graph.updateCombo(target as ICombo);\n      }\n\n      item = new Edge({\n        model: model,\n        source: source,\n        target: target,\n        styles: styles,\n        linkCenter: graph.get('linkCenter'),\n        group: parent.addGroup()\n      });\n    } else if (type === NODE) {\n      item = new Node({\n        model: model,\n        styles: styles,\n        group: parent.addGroup()\n      });\n    } else if (type === COMBO) {\n      var children = model.children;\n      var comboBBox = getComboBBox(children, graph);\n      var bboxX = void 0,\n          bboxY = void 0;\n      if (!isNaN(comboBBox.x)) bboxX = comboBBox.x;else if (isNaN(model.x)) bboxX = Math.random() * 100;\n      if (!isNaN(comboBBox.y)) bboxY = comboBBox.y;else if (isNaN(model.y)) bboxY = Math.random() * 100;\n\n      if (isNaN(model.x) || isNaN(model.y)) {\n        model.x = bboxX;\n        model.y = bboxY;\n      } else {\n        // if there is x y in model, place the combo according to it and move its succeed items. that means, the priority of the combo's position is higher than succeed items'\n        var dx = model.x - bboxX;\n        var dy = model.y - bboxY; // In the same time, adjust the children's positions\n\n        this.updateComboSucceeds(model.id, dx, dy, children);\n      }\n\n      var comboGroup = parent.addGroup();\n      comboGroup.setZIndex(model.depth);\n      item = new Combo({\n        model: model,\n        styles: styles,\n        animate: false,\n        bbox: model.collapsed ? getComboBBox([], graph) : comboBBox,\n        group: comboGroup\n      });\n      var comboModel_1 = item.getModel();\n      (children || []).forEach(function (child) {\n        var childItem = graph.findById(child.id);\n        item.addChild(childItem);\n        child.depth = comboModel_1.depth + 2;\n      });\n    }\n\n    if (item) {\n      graph.get(\"\".concat(type, \"s\")).push(item);\n      graph.get('itemMap')[item.get('id')] = item;\n      graph.emit('afteradditem', {\n        item: item,\n        model: model\n      }); // eslint-disable-next-line consistent-return\n\n      return item;\n    }\n  };\n  /**\n   * 更新节点或边\n   *\n   * @param {Item} item ID 或 实例\n   * @param {(EdgeConfig | Partial<NodeConfig>)} cfg 数据模型\n   * @returns\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.updateItem = function (item, cfg) {\n    var _this = this;\n\n    var _a, _b;\n\n    var graph = this.graph;\n\n    if (isString(item)) {\n      item = graph.findById(item);\n    }\n\n    if (!item || item.destroyed) {\n      return;\n    } // 更新的 item 的类型\n\n\n    var type = '';\n    if (item.getType) type = item.getType();\n    var mapper = graph.get(type + MAPPER_SUFFIX);\n    var model = item.getModel();\n    var oriX = model.x,\n        oriY = model.y;\n    var updateType = item.getUpdateType(cfg);\n\n    if (mapper) {\n      var result = deepMix({}, model, cfg);\n      var mappedModel = mapper(result); // 将 update 时候用户传入的参数与mapperModel做deepMix，以便复用之前设置的参数值\n\n      var newModel = deepMix({}, model, mappedModel, cfg);\n\n      if (mappedModel[STATE_SUFFIX]) {\n        item.set('styles', newModel[STATE_SUFFIX]);\n        delete newModel[STATE_SUFFIX];\n      }\n\n      each(newModel, function (val, key) {\n        cfg[key] = val;\n      });\n    } else {\n      // merge update传进来的对象参数，model中没有的数据不做处理，对象和字符串值也不做处理，直接替换原来的\n      each(cfg, function (val, key) {\n        if (model[key]) {\n          if (isObject(val) && !isArray(val)) {\n            cfg[key] = __assign(__assign({}, model[key]), cfg[key]);\n          }\n        }\n      });\n    } // emit beforeupdateitem 事件\n\n\n    graph.emit('beforeupdateitem', {\n      item: item,\n      cfg: cfg\n    });\n\n    if (type === EDGE) {\n      // 若是边要更新source || target, 为了不影响示例内部model，并且重新计算startPoint和endPoint，手动设置\n      if (cfg.source) {\n        var source = cfg.source;\n\n        if (isString(source)) {\n          source = graph.findById(source);\n        }\n\n        item.setSource(source);\n      }\n\n      if (cfg.target) {\n        var target = cfg.target;\n\n        if (isString(target)) {\n          target = graph.findById(target);\n        }\n\n        item.setTarget(target);\n      }\n\n      item.update(cfg);\n    } else if (type === NODE) {\n      item.update(cfg, updateType);\n      var edges = item.getEdges();\n      var refreshEdge = (updateType === null || updateType === void 0 ? void 0 : updateType.includes('bbox')) || updateType === 'move';\n\n      if (updateType === 'move') {\n        each(edges, function (edge) {\n          _this.edgeToBeUpdateMap[edge.getID()] = {\n            edge: edge,\n            updateType: updateType\n          };\n\n          _this.throttleRefresh();\n        });\n      } else if (refreshEdge) {\n        each(edges, function (edge) {\n          edge.refresh(updateType);\n        });\n      }\n    } else if (type === COMBO) {\n      item.update(cfg, updateType);\n\n      if (!isNaN(cfg.x) || !isNaN(cfg.y)) {\n        // if there is x y in model, place the combo according to it and move its succeed items. that means, the priority of the combo's position is higher than succeed items'\n        var dx = cfg.x - oriX || 0;\n        var dy = cfg.y - oriY || 0; // In the same time, adjust the children's positions\n\n        this.updateComboSucceeds(model.id, dx, dy);\n      }\n\n      var edges_1 = item.getEdges();\n      var refreshEdge = (updateType === null || updateType === void 0 ? void 0 : updateType.includes('bbox')) || updateType === 'move';\n\n      if (refreshEdge && type === COMBO) {\n        var shapeFactory = item.get('shapeFactory');\n        var shapeType = model.type || 'circle';\n        var comboAnimate = model.animate === undefined || cfg.animate === undefined ? (_b = (_a = shapeFactory[shapeType]) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.animate : model.animate || cfg.animate;\n\n        if (comboAnimate) {\n          setTimeout(function () {\n            if (!item || item.destroyed) return;\n            var keyShape = item.getKeyShape();\n            if (!keyShape || keyShape.destroyed) return;\n            each(edges_1, function (edge) {\n              if (edge && !edge.destroyed) edge.refresh();\n            });\n          }, 201);\n        } else {\n          each(edges_1, function (edge) {\n            edge.refresh();\n          });\n        }\n      }\n    }\n\n    graph.emit('afterupdateitem', {\n      item: item,\n      cfg: cfg\n    });\n  };\n  /**\n   * 根据 combo 的子元素更新 combo 的位置及大小\n   *\n   * @param {ICombo} combo ID 或 实例\n   * @returns\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.updateCombo = function (combo, children, followCombo) {\n    var _this = this;\n\n    var _a, _b;\n\n    var graph = this.graph;\n\n    if (isString(combo)) {\n      combo = graph.findById(combo);\n    }\n\n    if (!combo || combo.destroyed) {\n      return;\n    }\n\n    var model = combo.getModel();\n    var comboBBox = getComboBBox(children, graph, combo);\n    var comboX = comboBBox.x,\n        comboY = comboBBox.y;\n    combo.set('bbox', comboBBox);\n    var x = comboX,\n        y = comboY;\n\n    if (followCombo) {\n      // position of combo model first\n      x = isNaN(model.x) ? comboX : model.x;\n      y = isNaN(model.y) ? comboY : model.y;\n    } else {\n      // position of succeed items first\n      x = isNaN(comboX) ? model.x : comboX;\n      y = isNaN(comboY) ? model.y : comboY;\n    }\n\n    combo.update({\n      x: x,\n      y: y\n    });\n    var shapeFactory = combo.get('shapeFactory');\n    var shapeType = model.type || 'circle';\n    var comboAnimate = model.animate === undefined ? (_b = (_a = shapeFactory[shapeType]) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.animate : model.animate;\n\n    if (comboAnimate) {\n      setTimeout(function () {\n        if (!combo || combo.destroyed) return;\n        var keyShape = combo.getKeyShape();\n        if (!keyShape || keyShape.destroyed) return;\n        combo.getShapeCfg(model); // 更新 combo 缓存的 size\n\n        _this.updateComboEdges(combo);\n      }, 201);\n    } else {\n      this.updateComboEdges(combo);\n    }\n  };\n\n  ItemController.prototype.updateComboEdges = function (combo) {\n    var combEdges = combo.getEdges() || [];\n\n    for (var i = 0; i < combEdges.length; i++) {\n      var edge = combEdges[i];\n\n      if (edge && !edge.destroyed) {\n        edge.refresh();\n      }\n    }\n  };\n  /**\n   * 收起 combo，隐藏相关元素\n   */\n\n\n  ItemController.prototype.collapseCombo = function (combo, stack) {\n    if (stack === void 0) {\n      stack = true;\n    }\n\n    var graph = this.graph;\n\n    if (isString(combo)) {\n      combo = graph.findById(combo);\n    }\n\n    var children = combo.getChildren();\n    children.nodes.forEach(function (node) {\n      graph.hideItem(node, stack);\n    });\n    children.combos.forEach(function (c) {\n      graph.hideItem(c, stack);\n    });\n  };\n  /**\n   * 根据位置差量 dx dy，更新 comboId 后继元素的位置\n   * */\n\n\n  ItemController.prototype.updateComboSucceeds = function (comboId, dx, dy, children) {\n    var _this = this;\n\n    if (children === void 0) {\n      children = [];\n    }\n\n    var graph = this.graph;\n    if (!dx && !dy) return;\n    var kids = children;\n\n    if (!(kids === null || kids === void 0 ? void 0 : kids.length)) {\n      var comboTrees = graph.get('comboTrees');\n      comboTrees === null || comboTrees === void 0 ? void 0 : comboTrees.forEach(function (child) {\n        traverseTree(child, function (subTree) {\n          if (subTree.id === comboId) {\n            kids = subTree.children;\n            return false;\n          }\n\n          return true;\n        });\n      });\n    }\n\n    kids === null || kids === void 0 ? void 0 : kids.forEach(function (child) {\n      var childItem = graph.findById(child.id);\n\n      if (childItem) {\n        var childModel = childItem.getModel();\n\n        _this.updateItem(child.id, {\n          x: (childModel.x || 0) + dx,\n          y: (childModel.y || 0) + dy\n        });\n      }\n    });\n  };\n  /**\n   * 展开 combo，相关元素出现\n   * 若子 combo 原先是收起状态，则保持它的收起状态\n   */\n\n\n  ItemController.prototype.expandCombo = function (combo, stack) {\n    if (stack === void 0) {\n      stack = true;\n    }\n\n    var graph = this.graph;\n\n    if (isString(combo)) {\n      combo = graph.findById(combo);\n    }\n\n    var children = combo.getChildren();\n    children.nodes.forEach(function (node) {\n      graph.showItem(node, stack);\n    });\n    children.combos.forEach(function (c) {\n      if (c.getModel().collapsed) {\n        c.show();\n      } else {\n        graph.showItem(c, stack);\n      }\n    });\n  };\n  /**\n   * 删除指定的节点或边\n   *\n   * @param {Item} item item ID 或实例\n   * @returns {void}\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.removeItem = function (item) {\n    var _this = this;\n\n    var graph = this.graph;\n\n    if (isString(item)) {\n      item = graph.findById(item);\n    }\n\n    if (!item || item.destroyed) {\n      return;\n    }\n\n    var itemModel = clone(item.getModel());\n    graph.emit('beforeremoveitem', {\n      item: itemModel\n    });\n    var type = '';\n    if (item.getType) type = item.getType();\n    var items = graph.get(\"\".concat(type, \"s\"));\n    var index = items.indexOf(item);\n    if (index > -1) items.splice(index, 1);\n\n    if (type === EDGE) {\n      var vitems = graph.get(\"v\".concat(type, \"s\"));\n      var vindex = vitems.indexOf(item);\n      if (vindex > -1) vitems.splice(vindex, 1);\n    }\n\n    var itemId = item.get('id');\n    var itemMap = graph.get('itemMap');\n    delete itemMap[itemId];\n    var comboTrees = graph.get('comboTrees');\n    var id = item.get('id');\n\n    if (type === NODE) {\n      var comboId = item.getModel().comboId;\n\n      if (comboTrees && comboId) {\n        var brothers_1 = comboTrees;\n        var found_1 = false; // the flag to terminate the forEach circulation\n        // remove the node from the children array of its parent fromt he tree\n\n        comboTrees.forEach(function (ctree) {\n          if (found_1) return;\n          traverseTree(ctree, function (combo) {\n            if (combo.id === id && brothers_1) {\n              var bidx = brothers_1.indexOf(combo);\n              brothers_1.splice(bidx, 1);\n              found_1 = true;\n              return false; // terminate the traverse\n            }\n\n            brothers_1 = combo.children;\n            return true;\n          });\n        });\n      } // 若移除的是节点，需要将与之相连的边一同删除\n\n\n      var edges = item.getEdges();\n\n      for (var i = edges.length - 1; i >= 0; i--) {\n        graph.removeItem(edges[i], false);\n      }\n\n      if (comboId) graph.updateCombo(comboId);\n    } else if (type === COMBO) {\n      var parentId = item.getModel().parentId;\n      var comboInTree_1; // find the subtree rooted at the item to be removed\n\n      var found_2 = false; // the flag to terminate the forEach circulation\n\n      (comboTrees || []).forEach(function (ctree) {\n        if (found_2) return;\n        traverseTree(ctree, function (combo) {\n          if (combo.id === id) {\n            comboInTree_1 = combo;\n            found_2 = true;\n            return false; // terminate the traverse\n          }\n\n          return true;\n        });\n      });\n      comboInTree_1.removed = true;\n\n      if (comboInTree_1 && comboInTree_1.children) {\n        comboInTree_1.children.forEach(function (child) {\n          _this.removeItem(child.id);\n        });\n      } // 若移除的是 combo，需要将与之相连的边一同删除\n\n\n      var edges = item.getEdges();\n\n      for (var i = edges.length; i >= 0; i--) {\n        graph.removeItem(edges[i], false);\n      }\n\n      if (parentId) graph.updateCombo(parentId);\n    }\n\n    item.destroy();\n    graph.emit('afterremoveitem', {\n      item: itemModel,\n      type: type\n    });\n  };\n  /**\n   * 更新 item 状态\n   *\n   * @param {Item} item Item 实例\n   * @param {string} state 状态名称\n   * @param {boolean} value 是否启用状态或状态值\n   * @returns {void}\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.setItemState = function (item, state, value) {\n    var graph = this.graph;\n    var stateName = state;\n\n    if (isString(value)) {\n      stateName = \"\".concat(state, \":\").concat(value);\n    } // 已经存在要设置的 state，或不存在 state 的样式为 undefined\n\n\n    if (item.hasState(stateName) === value && value || // 当该状态已经存在且现在需要设置为 true 时，不需要继续。当该状态不存在，且设置为 false 时，需要继续\n    isString(value) && item.hasState(stateName)) {\n      // 当该状态 value 是字符串，且已经存在该状态，不需要继续\n      return;\n    }\n\n    graph.emit('beforeitemstatechange', {\n      item: item,\n      state: stateName,\n      enabled: value\n    });\n    item.setState(state, value);\n    graph.autoPaint();\n    graph.emit('afteritemstatechange', {\n      item: item,\n      state: stateName,\n      enabled: value\n    });\n  };\n  /**\n   * 将指定状态的优先级提升为最高优先级\n   * @param {Item} item 元素id或元素实例\n   * @param state 状态名称\n   */\n\n\n  ItemController.prototype.priorityState = function (item, state) {\n    var graph = this.graph;\n    var currentItem = item;\n\n    if (isString(item)) {\n      currentItem = graph.findById(item);\n    } // 先取消已有的 state\n\n\n    this.setItemState(currentItem, state, false); // 再设置state，则此时该优先级为最高\n\n    this.setItemState(currentItem, state, true);\n  };\n  /**\n   * 清除所有指定的状态\n   *\n   * @param {Item} item Item 实例\n   * @param {string[]} states 状态名称集合\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.clearItemStates = function (item, states) {\n    var graph = this.graph;\n\n    if (isString(item)) {\n      item = graph.findById(item);\n    }\n\n    graph.emit('beforeitemstatesclear', {\n      item: item,\n      states: states\n    });\n    item.clearStates(states);\n    graph.emit('afteritemstatesclear', {\n      item: item,\n      states: states\n    });\n  };\n  /**\n   * 刷新指定的 Item\n   *\n   * @param {Item} item Item ID 或 实例\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.refreshItem = function (item) {\n    var graph = this.graph;\n\n    if (isString(item)) {\n      item = graph.findById(item);\n    }\n\n    graph.emit('beforeitemrefresh', {\n      item: item\n    }); // 调用 Item 的 refresh 方法，实现刷新功能\n\n    item.refresh();\n    graph.emit('afteritemrefresh', {\n      item: item\n    });\n  };\n  /**\n   * 根据 graph 上用 combos 数据生成的 comboTree 来增加所有 combos\n   *\n   * @param {ComboTree[]} comboTrees graph 上用 combos 数据生成的 comboTree\n   * @param {ComboConfig[]} comboModels combos 数据\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.addCombos = function (comboTrees, comboModels) {\n    var _this = this;\n\n    var graph = this.graph;\n    (comboTrees || []).forEach(function (ctree) {\n      traverseTreeUp(ctree, function (child) {\n        var comboModel;\n        comboModels.forEach(function (model) {\n          if (model.id === child.id) {\n            model.children = child.children;\n            model.depth = child.depth;\n            comboModel = model;\n          }\n        });\n\n        if (comboModel) {\n          _this.addItem('combo', comboModel);\n        }\n\n        return true;\n      });\n    });\n    var comboGroup = graph.get('comboGroup');\n    if (comboGroup) comboGroup.sort();\n  };\n  /**\n   * 改变Item的显示状态\n   *\n   * @param {Item} item Item ID 或 实例\n   * @param {boolean} visible 是否显示\n   * @memberof ItemController\n   */\n\n\n  ItemController.prototype.changeItemVisibility = function (item, visible) {\n    var _this = this;\n\n    var graph = this.graph;\n\n    if (isString(item)) {\n      item = graph.findById(item);\n    }\n\n    if (!item) {\n      console.warn('The item to be shown or hidden does not exist!');\n      return;\n    }\n\n    graph.emit('beforeitemvisibilitychange', {\n      item: item,\n      visible: visible\n    });\n    item.changeVisibility(visible);\n\n    if (item.getType && item.getType() === NODE) {\n      var edges = item.getEdges();\n      each(edges, function (edge) {\n        // 若隐藏节点，则将与之关联的边也隐藏\n        // 若显示节点，则将与之关联的边也显示，但是需要判断边两端的节点都是可见的\n        if (visible && !(edge.get('source').isVisible() && edge.get('target').isVisible())) {\n          return;\n        }\n\n        _this.changeItemVisibility(edge, visible);\n      });\n    } else if (item.getType && item.getType() === COMBO) {\n      var comboTrees = graph.get('comboTrees');\n      var id_1 = item.get('id');\n      var children_1 = [];\n      var found_3 = false; // flag the terminate the forEach\n\n      (comboTrees || []).forEach(function (ctree) {\n        if (found_3) return;\n        if (!ctree.children || ctree.children.length === 0) return;\n        traverseTree(ctree, function (combo) {\n          if (combo.id === id_1) {\n            children_1 = combo.children;\n            found_3 = true;\n            return false; // terminate the traverse\n          }\n\n          return true;\n        });\n      });\n\n      if (children_1 && (!visible || visible && !item.getModel().collapsed)) {\n        children_1.forEach(function (child) {\n          var childItem = graph.findById(child.id);\n\n          _this.changeItemVisibility(childItem, visible);\n        });\n      }\n\n      var edges = item.getEdges();\n      each(edges, function (edge) {\n        // 若隐藏 combo，则将与 combo 本身关联的边也隐藏\n        // 若显示 combo，则将与 combo 本身关联的边也显示，但是需要判断边两端的节点都是可见的\n        if (visible && !(edge.get('source').isVisible() && edge.get('target').isVisible())) {\n          return;\n        }\n\n        _this.changeItemVisibility(edge, visible);\n      });\n    }\n\n    graph.emit('afteritemvisibilitychange', {\n      item: item,\n      visible: visible\n    });\n    return item;\n  };\n\n  ItemController.prototype.destroy = function () {\n    this.graph = null;\n    this.destroyed = true;\n  };\n\n  return ItemController;\n}();\n\nexport default ItemController;"],"mappings":"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"},"metadata":{},"sourceType":"module"}