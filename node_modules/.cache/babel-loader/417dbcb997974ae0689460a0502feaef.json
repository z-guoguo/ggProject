{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { uniq } from '@antv/util';\nimport { DistanceType } from '../types';\nimport Vector from './vector';\n/**\n * 获取数据中所有的属性及其对应的值\n * @param dataList 数据集\n * @param involvedKeys 参与计算的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\n\nexport var getAllKeyValueMap = function getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys) {\n  var keys = []; // 指定了参与计算的keys时，使用指定的keys\n\n  if (involvedKeys === null || involvedKeys === void 0 ? void 0 : involvedKeys.length) {\n    keys = involvedKeys;\n  } else {\n    // 未指定抽取的keys时，提取数据中所有的key\n    dataList.forEach(function (data) {\n      keys = keys.concat(Object.keys(data));\n    });\n    keys = uniq(keys);\n  } // 获取所有值非空的key的value数组\n\n\n  var allKeyValueMap = {};\n  keys.forEach(function (key) {\n    var value = [];\n    dataList.forEach(function (data) {\n      if (data[key] !== undefined && data[key] !== '') {\n        value.push(data[key]);\n      }\n    });\n\n    if (value.length && !(uninvolvedKeys === null || uninvolvedKeys === void 0 ? void 0 : uninvolvedKeys.includes(key))) {\n      allKeyValueMap[key] = uniq(value);\n    }\n  });\n  return allKeyValueMap;\n};\n/**\n * one-hot编码：数据特征提取\n * @param dataList 数据集\n * @param involvedKeys 参与计算的的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\n\nexport var oneHot = function oneHot(dataList, involvedKeys, uninvolvedKeys) {\n  // 获取数据中所有的属性及其对应的值\n  var allKeyValueMap = getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys);\n  var oneHotCode = [];\n\n  if (!Object.keys(allKeyValueMap).length) {\n    return oneHotCode;\n  } // 对数据进行one-hot编码\n\n\n  dataList.forEach(function (data, index) {\n    var code = [];\n\n    if (Object.keys(allKeyValueMap).length === 1) {\n      // 如果只有一个属性且所有的属性值都能转成数值型，则直接用属性值\n      var key = Object.keys(allKeyValueMap)[0];\n      var keyValue = allKeyValueMap[key];\n\n      if (keyValue.every(function (value) {\n        return !isNaN(Number(value));\n      })) {\n        code = [data[key]];\n      }\n    } else {\n      Object.keys(allKeyValueMap).forEach(function (key) {\n        var keyValue = data[key];\n        var allKeyValue = allKeyValueMap[key];\n        var valueIndex = allKeyValue.findIndex(function (value) {\n          return keyValue === value;\n        });\n        var subCode = [];\n\n        for (var i = 0; i < allKeyValue.length; i++) {\n          if (i === valueIndex) {\n            subCode.push(1);\n          } else {\n            subCode.push(0);\n          }\n        }\n\n        code = code.concat(subCode);\n      });\n    }\n\n    oneHotCode[index] = code;\n  });\n  return oneHotCode;\n};\n/**\n * getDistance：获取两个元素之间的距离\n * @param item\n * @param otherItem\n * @param distanceType 距离类型\n * @param graphData 图数据\n */\n\nexport var getDistance = function getDistance(item, otherItem, distanceType, graphData) {\n  if (distanceType === void 0) {\n    distanceType = DistanceType.EuclideanDistance;\n  }\n\n  var distance = 0;\n\n  switch (distanceType) {\n    case DistanceType.EuclideanDistance:\n      distance = new Vector(item).euclideanDistance(new Vector(otherItem));\n      break;\n\n    default:\n      break;\n  }\n\n  return distance;\n};\nexport default {\n  getAllKeyValueMap: getAllKeyValueMap,\n  oneHot: oneHot,\n  getDistance: getDistance\n};","map":{"version":3,"names":["uniq","DistanceType","Vector","getAllKeyValueMap","dataList","involvedKeys","uninvolvedKeys","keys","length","forEach","data","concat","Object","allKeyValueMap","key","value","undefined","push","includes","oneHot","oneHotCode","index","code","keyValue","every","isNaN","Number","allKeyValue","valueIndex","findIndex","subCode","i","getDistance","item","otherItem","distanceType","graphData","EuclideanDistance","distance","euclideanDistance"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/algorithm/es/utils/data-preprocessing.js"],"sourcesContent":["import { uniq } from '@antv/util';\nimport { DistanceType } from '../types';\nimport Vector from './vector';\n/**\n * 获取数据中所有的属性及其对应的值\n * @param dataList 数据集\n * @param involvedKeys 参与计算的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\n\nexport var getAllKeyValueMap = function getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys) {\n  var keys = []; // 指定了参与计算的keys时，使用指定的keys\n\n  if (involvedKeys === null || involvedKeys === void 0 ? void 0 : involvedKeys.length) {\n    keys = involvedKeys;\n  } else {\n    // 未指定抽取的keys时，提取数据中所有的key\n    dataList.forEach(function (data) {\n      keys = keys.concat(Object.keys(data));\n    });\n    keys = uniq(keys);\n  } // 获取所有值非空的key的value数组\n\n\n  var allKeyValueMap = {};\n  keys.forEach(function (key) {\n    var value = [];\n    dataList.forEach(function (data) {\n      if (data[key] !== undefined && data[key] !== '') {\n        value.push(data[key]);\n      }\n    });\n\n    if (value.length && !(uninvolvedKeys === null || uninvolvedKeys === void 0 ? void 0 : uninvolvedKeys.includes(key))) {\n      allKeyValueMap[key] = uniq(value);\n    }\n  });\n  return allKeyValueMap;\n};\n/**\n * one-hot编码：数据特征提取\n * @param dataList 数据集\n * @param involvedKeys 参与计算的的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\n\nexport var oneHot = function oneHot(dataList, involvedKeys, uninvolvedKeys) {\n  // 获取数据中所有的属性及其对应的值\n  var allKeyValueMap = getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys);\n  var oneHotCode = [];\n\n  if (!Object.keys(allKeyValueMap).length) {\n    return oneHotCode;\n  } // 对数据进行one-hot编码\n\n\n  dataList.forEach(function (data, index) {\n    var code = [];\n\n    if (Object.keys(allKeyValueMap).length === 1) {\n      // 如果只有一个属性且所有的属性值都能转成数值型，则直接用属性值\n      var key = Object.keys(allKeyValueMap)[0];\n      var keyValue = allKeyValueMap[key];\n\n      if (keyValue.every(function (value) {\n        return !isNaN(Number(value));\n      })) {\n        code = [data[key]];\n      }\n    } else {\n      Object.keys(allKeyValueMap).forEach(function (key) {\n        var keyValue = data[key];\n        var allKeyValue = allKeyValueMap[key];\n        var valueIndex = allKeyValue.findIndex(function (value) {\n          return keyValue === value;\n        });\n        var subCode = [];\n\n        for (var i = 0; i < allKeyValue.length; i++) {\n          if (i === valueIndex) {\n            subCode.push(1);\n          } else {\n            subCode.push(0);\n          }\n        }\n\n        code = code.concat(subCode);\n      });\n    }\n\n    oneHotCode[index] = code;\n  });\n  return oneHotCode;\n};\n/**\n * getDistance：获取两个元素之间的距离\n * @param item\n * @param otherItem\n * @param distanceType 距离类型\n * @param graphData 图数据\n */\n\nexport var getDistance = function getDistance(item, otherItem, distanceType, graphData) {\n  if (distanceType === void 0) {\n    distanceType = DistanceType.EuclideanDistance;\n  }\n\n  var distance = 0;\n\n  switch (distanceType) {\n    case DistanceType.EuclideanDistance:\n      distance = new Vector(item).euclideanDistance(new Vector(otherItem));\n      break;\n\n    default:\n      break;\n  }\n\n  return distance;\n};\nexport default {\n  getAllKeyValueMap: getAllKeyValueMap,\n  oneHot: oneHot,\n  getDistance: getDistance\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}