{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _class3, _temp;\n\nimport { IDENTIFIER } from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\nexport var Renderable = (_dec = injectable(), _dec2 = inject(IDENTIFIER.MeshComponentManager), _dec3 = inject(IDENTIFIER.CullableComponentManager), _dec4 = inject(IDENTIFIER.TransformComponentManager), _dec5 = inject(IDENTIFIER.Systems), _dec6 = named(IDENTIFIER.SceneGraphSystem), _dec(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function () {\n  function Renderable() {\n    _classCallCheck(this, Renderable);\n\n    this.attributes = {};\n    this.config = void 0;\n\n    _initializerDefineProperty(this, \"mesh\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"cullable\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"transform\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"sceneGraphSystem\", _descriptor4, this);\n\n    this.meshComponent = void 0;\n    this.transformComponent = void 0;\n    this.entity = void 0;\n  }\n\n  _createClass(Renderable, [{\n    key: \"getEntity\",\n    value: function getEntity() {\n      return this.entity;\n    }\n  }, {\n    key: \"getTransformComponent\",\n    value: function getTransformComponent() {\n      return this.transformComponent;\n    }\n  }, {\n    key: \"getMeshComponent\",\n    value: function getMeshComponent() {\n      return this.meshComponent;\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      this.config = config;\n    }\n  }, {\n    key: \"setEntity\",\n    value: function setEntity(entity) {\n      this.entity = entity;\n      this.cullable.create(entity);\n      this.meshComponent = this.mesh.create(entity);\n      this.transformComponent = this.transform.create(entity);\n      this.onEntityCreated();\n    }\n  }, {\n    key: \"setMaterial\",\n    value: function setMaterial(material) {\n      this.meshComponent.material = material;\n      return this;\n    }\n  }, {\n    key: \"setGeometry\",\n    value: function setGeometry(geometry) {\n      this.meshComponent.geometry = geometry;\n      return this;\n    }\n  }, {\n    key: \"setAttributes\",\n    value: function setAttributes(attributes) {\n      var _this = this;\n\n      Object.keys(attributes).forEach(function (name) {\n        if (attributes[name] !== undefined && attributes[name] !== _this.attributes[name]) {\n          _this.onAttributeChanged({\n            name: name,\n            data: attributes[name]\n          });\n\n          _this.attributes[name] = attributes[name];\n        }\n      });\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible) {\n      var _this2 = this;\n\n      this.meshComponent.visible = visible;\n      this.meshComponent.children.forEach(function (childEntity) {\n        var child = _this2.mesh.getComponentByEntity(childEntity);\n\n        if (child) {\n          child.visible = visible;\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return this.meshComponent.visible;\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(parentRenderable) {\n      this.sceneGraphSystem.attach(this.entity, parentRenderable.entity);\n      return this;\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      this.sceneGraphSystem.detach(this.entity);\n      return this;\n    }\n  }, {\n    key: \"detachChildren\",\n    value: function detachChildren() {\n      this.sceneGraphSystem.detachChildren(this.entity);\n      return this;\n    }\n  }, {\n    key: \"onEntityCreated\",\n    value: function onEntityCreated() {//\n    }\n  }, {\n    key: \"onAttributeChanged\",\n    value: function onAttributeChanged(_ref) {\n      var name = _ref.name,\n          data = _ref.data;\n\n      if (this.meshComponent && this.meshComponent.material) {\n        this.meshComponent.material.setUniform(this.convertAttributeName2UniformName(name), data);\n      }\n    }\n  }, {\n    key: \"convertAttributeName2UniformName\",\n    value: function convertAttributeName2UniformName(attributeName) {\n      return attributeName;\n    }\n  }]);\n\n  return Renderable;\n}(), _class3.POINT = 'point', _class3.LINE = 'line', _class3.GRID = 'grid', _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"mesh\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"cullable\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"transform\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"sceneGraphSystem\", [_dec5, _dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);","map":{"version":3,"mappings":"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","names":["IDENTIFIER","inject","injectable","named","Renderable","MeshComponentManager","CullableComponentManager","TransformComponentManager","Systems","SceneGraphSystem","_classCallCheck","attributes","config","_initializerDefineProperty","meshComponent","transformComponent","entity","_createClass","key","value","cullable","create","mesh","transform","onEntityCreated","material","geometry","Object","keys","forEach","name","undefined","_this","onAttributeChanged","data","visible","children","childEntity","child","_this2","getComponentByEntity","parentRenderable","sceneGraphSystem","attach","detach","detachChildren","setUniform","convertAttributeName2UniformName","attributeName","POINT","LINE","GRID","configurable","enumerable","writable","initializer"],"sources":["../../src/renderable/Renderable.ts"],"sourcesContent":["import {\n  BufferData,\n  ComponentManager,\n  CullableComponent,\n  Entity,\n  GeometryComponent,\n  HierarchyComponent,\n  IDENTIFIER,\n  MaterialComponent,\n  MeshComponent,\n  SceneGraphSystem,\n  TransformComponent,\n} from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\n\nexport interface IRenderable<T> {\n  setConfig(config: T): void;\n  setAttributes(attributes: Record<string, BufferData | undefined>): void;\n  setEntity(entity: Entity): void;\n  setMaterial(material: MaterialComponent): void;\n  setGeometry(geometry: GeometryComponent): void;\n}\n\n@injectable()\nexport class Renderable<T = {}> implements IRenderable<T> {\n  public static POINT = 'point';\n  public static LINE = 'line';\n  public static GRID = 'grid';\n\n  protected attributes: Record<string, BufferData> = {};\n  protected config: T;\n\n  @inject(IDENTIFIER.MeshComponentManager)\n  private readonly mesh: ComponentManager<MeshComponent>;\n\n  @inject(IDENTIFIER.CullableComponentManager)\n  private readonly cullable: ComponentManager<CullableComponent>;\n\n  @inject(IDENTIFIER.TransformComponentManager)\n  private readonly transform: ComponentManager<TransformComponent>;\n\n  @inject(IDENTIFIER.Systems)\n  @named(IDENTIFIER.SceneGraphSystem)\n  private readonly sceneGraphSystem: SceneGraphSystem;\n\n  private meshComponent: MeshComponent;\n  private transformComponent: TransformComponent;\n\n  private entity: Entity;\n\n  public getEntity() {\n    return this.entity;\n  }\n\n  public getTransformComponent() {\n    return this.transformComponent;\n  }\n\n  public getMeshComponent() {\n    return this.meshComponent;\n  }\n\n  public setConfig(config: T) {\n    this.config = config;\n  }\n\n  public setEntity(entity: Entity) {\n    this.entity = entity;\n    this.cullable.create(entity);\n    this.meshComponent = this.mesh.create(entity);\n    this.transformComponent = this.transform.create(entity);\n    this.onEntityCreated();\n  }\n\n  public setMaterial(material: MaterialComponent) {\n    this.meshComponent.material = material;\n    return this;\n  }\n\n  public setGeometry(geometry: GeometryComponent) {\n    this.meshComponent.geometry = geometry;\n    return this;\n  }\n\n  public setAttributes(attributes: Record<string, BufferData | undefined>) {\n    Object.keys(attributes).forEach((name) => {\n      if (\n        attributes[name] !== undefined &&\n        attributes[name] !== this.attributes[name]\n      ) {\n        this.onAttributeChanged({\n          name,\n          data: attributes[name]!,\n        });\n        this.attributes[name] = attributes[name]!;\n      }\n    });\n  }\n\n  public setVisible(visible: boolean) {\n    this.meshComponent.visible = visible;\n    this.meshComponent.children.forEach((childEntity) => {\n      const child = this.mesh.getComponentByEntity(childEntity);\n      if (child) {\n        child.visible = visible;\n      }\n    });\n    return this;\n  }\n\n  public isVisible() {\n    return this.meshComponent.visible;\n  }\n\n  public attach(parentRenderable: Renderable<T>) {\n    this.sceneGraphSystem.attach(this.entity, parentRenderable.entity);\n    return this;\n  }\n\n  public detach() {\n    this.sceneGraphSystem.detach(this.entity);\n    return this;\n  }\n\n  public detachChildren() {\n    this.sceneGraphSystem.detachChildren(this.entity);\n    return this;\n  }\n\n  protected onEntityCreated() {\n    //\n  }\n\n  protected onAttributeChanged({\n    name,\n    data,\n  }: {\n    name: string;\n    data: BufferData;\n  }) {\n    if (this.meshComponent && this.meshComponent.material) {\n      this.meshComponent.material.setUniform(\n        this.convertAttributeName2UniformName(name),\n        data,\n      );\n    }\n  }\n\n  protected convertAttributeName2UniformName(attributeName: string) {\n    return attributeName;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}