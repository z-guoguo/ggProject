{"ast":null,"code":"import { Ellipse } from '../../geometry';\nimport { toResult } from './util';\nexport const ellipse = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  const startAngle = groupPositionArgs.start || 0;\n  const stepAngle = groupPositionArgs.step || 20;\n  return ellipseLayout(portsPositionArgs, elemBBox, startAngle, (index, count) => (index + 0.5 - count / 2) * stepAngle);\n};\nexport const ellipseSpread = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  const startAngle = groupPositionArgs.start || 0;\n  const stepAngle = groupPositionArgs.step || 360 / portsPositionArgs.length;\n  return ellipseLayout(portsPositionArgs, elemBBox, startAngle, index => {\n    return index * stepAngle;\n  });\n};\n\nfunction ellipseLayout(portsPositionArgs, elemBBox, startAngle, stepFn) {\n  const center = elemBBox.getCenter();\n  const start = elemBBox.getTopCenter();\n  const ratio = elemBBox.width / elemBBox.height;\n  const ellipse = Ellipse.fromRect(elemBBox);\n  const count = portsPositionArgs.length;\n  return portsPositionArgs.map((item, index) => {\n    const angle = startAngle + stepFn(index, count);\n    const p = start.clone().rotate(-angle, center).scale(ratio, 1, center);\n    const theta = item.compensateRotate ? -ellipse.tangentTheta(p) : 0;\n\n    if (item.dx || item.dy) {\n      p.translate(item.dx || 0, item.dy || 0);\n    }\n\n    if (item.dr) {\n      p.move(center, item.dr);\n    }\n\n    return toResult(p.round(), theta, item);\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,OAApB,QAAmC,gBAAnC;AAEA,SAASC,QAAT,QAAyB,QAAzB;AAYA,OAAO,MAAMC,OAAO,GAAuC,CACzDC,iBADyD,EAEzDC,QAFyD,EAGzDC,iBAHyD,KAIvD;EACF,MAAMC,UAAU,GAAGD,iBAAiB,CAACE,KAAlB,IAA2B,CAA9C;EACA,MAAMC,SAAS,GAAGH,iBAAiB,CAACI,IAAlB,IAA0B,EAA5C;EAEA,OAAOC,aAAa,CAClBP,iBADkB,EAElBC,QAFkB,EAGlBE,UAHkB,EAIlB,CAACK,KAAD,EAAQC,KAAR,KAAkB,CAACD,KAAK,GAAG,GAAR,GAAcC,KAAK,GAAG,CAAvB,IAA4BJ,SAJ5B,CAApB;AAMD,CAdM;AAgBP,OAAO,MAAMK,aAAa,GAAuC,CAC/DV,iBAD+D,EAE/DC,QAF+D,EAG/DC,iBAH+D,KAI7D;EACF,MAAMC,UAAU,GAAGD,iBAAiB,CAACE,KAAlB,IAA2B,CAA9C;EACA,MAAMC,SAAS,GAAGH,iBAAiB,CAACI,IAAlB,IAA0B,MAAMN,iBAAiB,CAACW,MAApE;EAEA,OAAOJ,aAAa,CAACP,iBAAD,EAAoBC,QAApB,EAA8BE,UAA9B,EAA2CK,KAAD,IAAU;IACtE,OAAOA,KAAK,GAAGH,SAAf;EACD,CAFmB,CAApB;AAGD,CAXM;;AAaP,SAASE,aAAT,CACEP,iBADF,EAEEC,QAFF,EAGEE,UAHF,EAIES,MAJF,EAIkD;EAEhD,MAAMC,MAAM,GAAGZ,QAAQ,CAACa,SAAT,EAAf;EACA,MAAMV,KAAK,GAAGH,QAAQ,CAACc,YAAT,EAAd;EACA,MAAMC,KAAK,GAAGf,QAAQ,CAACgB,KAAT,GAAiBhB,QAAQ,CAACiB,MAAxC;EACA,MAAMnB,OAAO,GAAGF,OAAO,CAACsB,QAAR,CAAiBlB,QAAjB,CAAhB;EACA,MAAMQ,KAAK,GAAGT,iBAAiB,CAACW,MAAhC;EAEA,OAAOX,iBAAiB,CAACoB,GAAlB,CAAsB,CAACC,IAAD,EAAOb,KAAP,KAAgB;IAC3C,MAAMc,KAAK,GAAGnB,UAAU,GAAGS,MAAM,CAACJ,KAAD,EAAQC,KAAR,CAAjC;IACA,MAAMc,CAAC,GAAGnB,KAAK,CAACoB,KAAN,GAAcC,MAAd,CAAqB,CAACH,KAAtB,EAA6BT,MAA7B,EAAqCa,KAArC,CAA2CV,KAA3C,EAAkD,CAAlD,EAAqDH,MAArD,CAAV;IAEA,MAAMc,KAAK,GAAGN,IAAI,CAACO,gBAAL,GAAwB,CAAC7B,OAAO,CAAC8B,YAAR,CAAqBN,CAArB,CAAzB,GAAmD,CAAjE;;IAEA,IAAIF,IAAI,CAACS,EAAL,IAAWT,IAAI,CAACU,EAApB,EAAwB;MACtBR,CAAC,CAACS,SAAF,CAAYX,IAAI,CAACS,EAAL,IAAW,CAAvB,EAA0BT,IAAI,CAACU,EAAL,IAAW,CAArC;IACD;;IAED,IAAIV,IAAI,CAACY,EAAT,EAAa;MACXV,CAAC,CAACW,IAAF,CAAOrB,MAAP,EAAeQ,IAAI,CAACY,EAApB;IACD;;IAED,OAAOnC,QAAQ,CAACyB,CAAC,CAACY,KAAF,EAAD,EAAYR,KAAZ,EAAmBN,IAAnB,CAAf;EACD,CAfM,CAAP;AAgBD","names":["Ellipse","toResult","ellipse","portsPositionArgs","elemBBox","groupPositionArgs","startAngle","start","stepAngle","step","ellipseLayout","index","count","ellipseSpread","length","stepFn","center","getCenter","getTopCenter","ratio","width","height","fromRect","map","item","angle","p","clone","rotate","scale","theta","compensateRotate","tangentTheta","dx","dy","translate","dr","move","round"],"sourceRoot":"","sources":["../../../src/registry/port-layout/ellipse.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}