{"ast":null,"code":"import { Util } from '../../global';\nimport { NumberExt } from '../../util';\nimport { Angle, Point } from '../../geometry';\nimport { Widget } from '../common';\nimport { notify } from './util';\nexport class Transform extends Widget {\n  get node() {\n    return this.cell;\n  }\n\n  get containerClassName() {\n    return this.prefixClassName('widget-transform');\n  }\n\n  get resizeClassName() {\n    return `${this.containerClassName}-resize`;\n  }\n\n  get rotateClassName() {\n    return `${this.containerClassName}-rotate`;\n  }\n\n  init(options) {\n    this.options = Object.assign(Object.assign({}, Private.defaultOptions), options);\n    this.render();\n    this.startListening();\n  }\n\n  startListening() {\n    this.delegateEvents({\n      [`mousedown .${this.resizeClassName}`]: 'startResizing',\n      [`touchstart .${this.resizeClassName}`]: 'startResizing',\n      [`mousedown .${this.rotateClassName}`]: 'startRotating',\n      [`touchstart .${this.rotateClassName}`]: 'startRotating'\n    });\n    this.model.on('*', this.update, this);\n    this.graph.on('scale', this.update, this);\n    this.graph.on('translate', this.update, this);\n    this.node.on('removed', this.remove, this);\n    this.model.on('reseted', this.remove, this);\n    this.view.on('cell:knob:mousedown', this.onKnobMouseDown, this);\n    this.view.on('cell:knob:mouseup', this.onKnobMouseUp, this);\n    super.startListening();\n  }\n\n  stopListening() {\n    this.undelegateEvents();\n    this.model.off('*', this.update, this);\n    this.graph.off('scale', this.update, this);\n    this.graph.off('translate', this.update, this);\n    this.node.off('removed', this.remove, this);\n    this.model.off('reseted', this.remove, this);\n    this.view.off('cell:knob:mousedown', this.onKnobMouseDown, this);\n    this.view.off('cell:knob:mouseup', this.onKnobMouseUp, this);\n    super.stopListening();\n  }\n\n  renderHandles() {\n    this.container = document.createElement('div');\n    this.$container = this.$(this.container);\n    const $knob = this.$('<div/>').prop('draggable', false);\n    const $rotate = $knob.clone().addClass(this.rotateClassName);\n    const $resizes = Private.POSITIONS.map(pos => {\n      return $knob.clone().addClass(this.resizeClassName).attr('data-position', pos);\n    });\n    this.empty();\n    this.$container.append($resizes, $rotate);\n  }\n\n  render() {\n    this.renderHandles();\n    this.view.addClass(Private.NODE_CLS);\n    this.$container.addClass(this.containerClassName).toggleClass('no-orth-resize', this.options.preserveAspectRatio || !this.options.orthogonalResizing).toggleClass('no-resize', !this.options.resizable).toggleClass('no-rotate', !this.options.rotatable);\n\n    if (this.options.className) {\n      this.$container.addClass(this.options.className);\n    }\n\n    this.graph.container.appendChild(this.container);\n    return this.update();\n  }\n\n  update() {\n    const ctm = this.graph.matrix();\n    const bbox = this.node.getBBox();\n    bbox.x *= ctm.a;\n    bbox.x += ctm.e;\n    bbox.y *= ctm.d;\n    bbox.y += ctm.f;\n    bbox.width *= ctm.a;\n    bbox.height *= ctm.d;\n    const angle = Angle.normalize(this.node.getAngle());\n    const transform = angle !== 0 ? `rotate(${angle}deg)` : '';\n    this.$container.css({\n      transform,\n      width: bbox.width,\n      height: bbox.height,\n      left: bbox.x,\n      top: bbox.y\n    });\n    this.updateResizerDirections();\n    return this;\n  }\n\n  remove() {\n    this.view.removeClass(Private.NODE_CLS);\n    return super.remove();\n  }\n\n  onKnobMouseDown() {\n    this.startHandle();\n  }\n\n  onKnobMouseUp() {\n    this.stopHandle();\n  }\n\n  updateResizerDirections() {\n    // Update the directions on the resizer divs while the node being rotated.\n    // The directions are represented by cardinal points (N,S,E,W). For example\n    // the div originally pointed to north needs to be changed to point to south\n    // if the node was rotated by 180 degrees.\n    const angle = Angle.normalize(this.node.getAngle());\n    const shift = Math.floor(angle * (Private.DIRECTIONS.length / 360));\n\n    if (shift !== this.prevShift) {\n      // Create the current directions array based on the calculated shift.\n      const directions = Private.DIRECTIONS.slice(shift).concat(Private.DIRECTIONS.slice(0, shift));\n\n      const className = dir => `${this.containerClassName}-cursor-${dir}`;\n\n      this.$container.find(`.${this.resizeClassName}`).removeClass(Private.DIRECTIONS.map(dir => className(dir)).join(' ')).each((index, elem) => {\n        this.$(elem).addClass(className(directions[index]));\n      });\n      this.prevShift = shift;\n    }\n  }\n\n  getTrueDirection(dir) {\n    const angle = Angle.normalize(this.node.getAngle());\n    let index = Private.POSITIONS.indexOf(dir);\n    index += Math.floor(angle * (Private.POSITIONS.length / 360));\n    index %= Private.POSITIONS.length;\n    return Private.POSITIONS[index];\n  }\n\n  toValidResizeDirection(dir) {\n    return {\n      top: 'top-left',\n      bottom: 'bottom-right',\n      left: 'bottom-left',\n      right: 'top-right'\n    }[dir] || dir;\n  }\n\n  startResizing(evt) {\n    evt.stopPropagation();\n    this.model.startBatch('resize', {\n      cid: this.cid\n    });\n    const dir = this.$(evt.target).attr('data-position');\n    const view = this.graph.findViewByCell(this.node);\n    this.prepareResizing(evt, dir);\n    this.startAction(evt);\n    notify('node:resize:mousedown', evt, view);\n  }\n\n  prepareResizing(evt, relativeDirection) {\n    const trueDirection = this.getTrueDirection(relativeDirection);\n    let rx = 0;\n    let ry = 0;\n    relativeDirection.split('-').forEach(direction => {\n      rx = {\n        left: -1,\n        right: 1\n      }[direction] || rx;\n      ry = {\n        top: -1,\n        bottom: 1\n      }[direction] || ry;\n    });\n    const direction = this.toValidResizeDirection(relativeDirection);\n    const selector = {\n      'top-right': 'bottomLeft',\n      'top-left': 'bottomRight',\n      'bottom-left': 'topRight',\n      'bottom-right': 'topLeft'\n    }[direction];\n    const angle = Angle.normalize(this.node.getAngle());\n    this.setEventData(evt, {\n      selector,\n      direction,\n      trueDirection,\n      relativeDirection,\n      angle,\n      resizeX: rx,\n      resizeY: ry,\n      action: 'resizing'\n    });\n  }\n\n  startRotating(evt) {\n    evt.stopPropagation();\n    this.model.startBatch('rotate', {\n      cid: this.cid\n    });\n    const view = this.graph.findViewByCell(this.node);\n    const center = this.node.getBBox().getCenter();\n    const e = this.normalizeEvent(evt);\n    const client = this.graph.snapToGrid(e.clientX, e.clientY);\n    this.setEventData(evt, {\n      center,\n      action: 'rotating',\n      angle: Angle.normalize(this.node.getAngle()),\n      start: Point.create(client).theta(center)\n    });\n    this.startAction(evt);\n    notify('node:rotate:mousedown', evt, view);\n  }\n\n  onMouseMove(evt) {\n    const view = this.graph.findViewByCell(this.node);\n    let data = this.getEventData(evt);\n\n    if (data.action) {\n      const e = this.normalizeEvent(evt);\n      let clientX = e.clientX;\n      let clientY = e.clientY;\n      const scroller = this.graph.scroller.widget;\n      const restrict = this.options.restrictedResizing;\n\n      if (restrict === true || typeof restrict === 'number') {\n        const factor = restrict === true ? 0 : restrict;\n        const fix = scroller ? Math.max(factor, 8) : factor;\n        const rect = this.graph.container.getBoundingClientRect();\n        clientX = NumberExt.clamp(clientX, rect.left + fix, rect.right - fix);\n        clientY = NumberExt.clamp(clientY, rect.top + fix, rect.bottom - fix);\n      } else if (this.options.autoScrollOnResizing && scroller) {\n        scroller.autoScroll(clientX, clientY);\n      }\n\n      const pos = this.graph.snapToGrid(clientX, clientY);\n      const gridSize = this.graph.getGridSize();\n      const node = this.node;\n      const options = this.options;\n\n      if (data.action === 'resizing') {\n        data = data;\n\n        if (!data.resized) {\n          if (view) {\n            view.addClass('node-resizing');\n            notify('node:resize', evt, view);\n          }\n\n          data.resized = true;\n        }\n\n        const currentBBox = node.getBBox();\n        const requestedSize = Point.create(pos).rotate(data.angle, currentBBox.getCenter()).diff(currentBBox[data.selector]);\n        let width = data.resizeX ? requestedSize.x * data.resizeX : currentBBox.width;\n        let height = data.resizeY ? requestedSize.y * data.resizeY : currentBBox.height;\n        const rawWidth = width;\n        const rawHeight = height;\n        width = Util.snapToGrid(width, gridSize);\n        height = Util.snapToGrid(height, gridSize);\n        width = Math.max(width, options.minWidth || gridSize);\n        height = Math.max(height, options.minHeight || gridSize);\n        width = Math.min(width, options.maxWidth || Infinity);\n        height = Math.min(height, options.maxHeight || Infinity);\n\n        if (options.preserveAspectRatio) {\n          const candidateWidth = currentBBox.width * height / currentBBox.height;\n          const candidateHeight = currentBBox.height * width / currentBBox.width;\n\n          if (width < candidateWidth) {\n            height = candidateHeight;\n          } else {\n            width = candidateWidth;\n          }\n        }\n\n        const relativeDirection = data.relativeDirection;\n\n        if (options.allowReverse && (rawWidth <= -width || rawHeight <= -height)) {\n          let reverted;\n\n          if (relativeDirection === 'left') {\n            if (rawWidth <= -width) {\n              reverted = 'right';\n            }\n          } else if (relativeDirection === 'right') {\n            if (rawWidth <= -width) {\n              reverted = 'left';\n            }\n          } else if (relativeDirection === 'top') {\n            if (rawHeight <= -height) {\n              reverted = 'bottom';\n            }\n          } else if (relativeDirection === 'bottom') {\n            if (rawHeight <= -height) {\n              reverted = 'top';\n            }\n          } else if (relativeDirection === 'top-left') {\n            if (rawWidth <= -width && rawHeight <= -height) {\n              reverted = 'bottom-right';\n            } else if (rawWidth <= -width) {\n              reverted = 'top-right';\n            } else if (rawHeight <= -height) {\n              reverted = 'bottom-left';\n            }\n          } else if (relativeDirection === 'top-right') {\n            if (rawWidth <= -width && rawHeight <= -height) {\n              reverted = 'bottom-left';\n            } else if (rawWidth <= -width) {\n              reverted = 'top-left';\n            } else if (rawHeight <= -height) {\n              reverted = 'bottom-right';\n            }\n          } else if (relativeDirection === 'bottom-left') {\n            if (rawWidth <= -width && rawHeight <= -height) {\n              reverted = 'top-right';\n            } else if (rawWidth <= -width) {\n              reverted = 'bottom-right';\n            } else if (rawHeight <= -height) {\n              reverted = 'top-left';\n            }\n          } else if (relativeDirection === 'bottom-right') {\n            if (rawWidth <= -width && rawHeight <= -height) {\n              reverted = 'top-left';\n            } else if (rawWidth <= -width) {\n              reverted = 'bottom-left';\n            } else if (rawHeight <= -height) {\n              reverted = 'top-right';\n            }\n          }\n\n          const revertedDir = reverted;\n          this.stopHandle();\n          const $handle = this.$container.find(`.${this.resizeClassName}[data-position=\"${revertedDir}\"]`);\n          this.startHandle($handle[0]);\n          this.prepareResizing(evt, revertedDir);\n          this.onMouseMove(evt);\n        }\n\n        if (currentBBox.width !== width || currentBBox.height !== height) {\n          const resizeOptions = {\n            ui: true,\n            direction: data.direction,\n            relativeDirection: data.relativeDirection,\n            trueDirection: data.trueDirection,\n            minWidth: options.minWidth,\n            minHeight: options.minHeight,\n            maxWidth: options.maxWidth,\n            maxHeight: options.maxHeight,\n            preserveAspectRatio: options.preserveAspectRatio === true\n          };\n          node.resize(width, height, resizeOptions);\n          notify('node:resizing', evt, view);\n        }\n\n        notify('node:resize:mousemove', evt, view);\n      } else if (data.action === 'rotating') {\n        data = data;\n\n        if (!data.rotated) {\n          if (view) {\n            view.addClass('node-rotating');\n            notify('node:rotate', evt, view);\n          }\n\n          data.rotated = true;\n        }\n\n        const currentAngle = node.getAngle();\n        const theta = data.start - Point.create(pos).theta(data.center);\n        let target = data.angle + theta;\n\n        if (options.rotateGrid) {\n          target = Util.snapToGrid(target, options.rotateGrid);\n        }\n\n        target = Angle.normalize(target);\n\n        if (currentAngle !== target) {\n          node.rotate(target, {\n            absolute: true\n          });\n          notify('node:rotating', evt, view);\n        }\n\n        notify('node:rotate:mousemove', evt, view);\n      }\n    }\n  }\n\n  onMouseUp(evt) {\n    const view = this.graph.findViewByCell(this.node);\n    const data = this.getEventData(evt);\n\n    if (data.action) {\n      this.stopAction(evt);\n      this.model.stopBatch(data.action === 'resizing' ? 'resize' : 'rotate', {\n        cid: this.cid\n      });\n\n      if (data.action === 'resizing') {\n        notify('node:resize:mouseup', evt, view);\n      } else if (data.action === 'rotating') {\n        notify('node:rotate:mouseup', evt, view);\n      }\n    }\n  }\n\n  startHandle(handle) {\n    this.handle = handle || null;\n    this.$container.addClass(`${this.containerClassName}-active`);\n\n    if (handle) {\n      this.$(handle).addClass(`${this.containerClassName}-active-handle`);\n      const pos = handle.getAttribute('data-position');\n\n      if (pos) {\n        const dir = Private.DIRECTIONS[Private.POSITIONS.indexOf(pos)];\n        this.$container.addClass(`${this.containerClassName}-cursor-${dir}`);\n      }\n    }\n  }\n\n  stopHandle() {\n    this.$container.removeClass(`${this.containerClassName}-active`);\n\n    if (this.handle) {\n      this.$(this.handle).removeClass(`${this.containerClassName}-active-handle`);\n      const pos = this.handle.getAttribute('data-position');\n\n      if (pos) {\n        const dir = Private.DIRECTIONS[Private.POSITIONS.indexOf(pos)];\n        this.$container.removeClass(`${this.containerClassName}-cursor-${dir}`);\n      }\n\n      this.handle = null;\n    }\n  }\n\n  startAction(evt) {\n    this.startHandle(evt.target);\n    this.graph.view.undelegateEvents();\n    this.delegateDocumentEvents(Private.documentEvents, evt.data);\n  }\n\n  stopAction(evt) {\n    this.stopHandle();\n    this.undelegateDocumentEvents();\n    this.graph.view.delegateEvents();\n    const view = this.graph.findViewByCell(this.node);\n    const data = this.getEventData(evt);\n\n    if (view) {\n      view.removeClass(`node-${data.action}`);\n\n      if (data.action === 'resizing' && data.resized) {\n        notify('node:resized', evt, view);\n      } else if (data.action === 'rotating' && data.rotated) {\n        notify('node:rotated', evt, view);\n      }\n    }\n  }\n\n}\nvar Private;\n\n(function (Private) {\n  Private.NODE_CLS = 'has-widget-transform';\n  Private.DIRECTIONS = ['nw', 'n', 'ne', 'e', 'se', 's', 'sw', 'w'];\n  Private.POSITIONS = ['top-left', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left'];\n  Private.documentEvents = {\n    mousemove: 'onMouseMove',\n    touchmove: 'onMouseMove',\n    mouseup: 'onMouseUp',\n    touchend: 'onMouseUp'\n  };\n  Private.defaultOptions = {\n    minWidth: 0,\n    minHeight: 0,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    rotateGrid: 15,\n    rotatable: true,\n    preserveAspectRatio: false,\n    orthogonalResizing: true,\n    restrictedResizing: false,\n    autoScrollOnResizing: true,\n    allowReverse: true\n  };\n})(Private || (Private = {}));","map":{"version":3,"mappings":"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","names":["Util","NumberExt","Angle","Point","Widget","notify","Transform","node","cell","containerClassName","prefixClassName","resizeClassName","rotateClassName","init","options","Object","Private","defaultOptions","render","startListening","delegateEvents","model","on","update","graph","remove","view","onKnobMouseDown","onKnobMouseUp","stopListening","undelegateEvents","off","renderHandles","container","document","createElement","$container","$","$knob","prop","$rotate","clone","addClass","$resizes","POSITIONS","map","pos","attr","empty","append","NODE_CLS","toggleClass","preserveAspectRatio","orthogonalResizing","resizable","rotatable","className","appendChild","ctm","matrix","bbox","getBBox","x","a","e","y","d","f","width","height","angle","normalize","getAngle","transform","css","left","top","updateResizerDirections","removeClass","startHandle","stopHandle","shift","Math","floor","DIRECTIONS","length","prevShift","directions","slice","concat","dir","find","join","each","index","elem","getTrueDirection","indexOf","toValidResizeDirection","bottom","right","startResizing","evt","stopPropagation","startBatch","cid","target","findViewByCell","prepareResizing","startAction","relativeDirection","trueDirection","rx","ry","split","forEach","direction","selector","setEventData","resizeX","resizeY","action","startRotating","center","getCenter","normalizeEvent","client","snapToGrid","clientX","clientY","start","create","theta","onMouseMove","data","getEventData","scroller","widget","restrict","restrictedResizing","factor","fix","max","rect","getBoundingClientRect","clamp","autoScrollOnResizing","autoScroll","gridSize","getGridSize","resized","currentBBox","requestedSize","rotate","diff","rawWidth","rawHeight","minWidth","minHeight","min","maxWidth","Infinity","maxHeight","candidateWidth","candidateHeight","allowReverse","reverted","revertedDir","$handle","resizeOptions","ui","resize","rotated","currentAngle","rotateGrid","absolute","onMouseUp","stopAction","stopBatch","handle","getAttribute","delegateDocumentEvents","documentEvents","undelegateDocumentEvents","mousemove","touchmove","mouseup","touchend"],"sourceRoot":"","sources":["../../../src/addon/transform/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}