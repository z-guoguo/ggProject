{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar list_1 = __importDefault(require(\"./data/list\"));\n\nvar graphlib_1 = require(\"@antv/graphlib\");\n\nvar List =\n/** @class */\nfunction (_super) {\n  __extends(List, _super);\n\n  function List() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return List;\n}(list_1.default);\n\nvar StateGraph =\n/** @class */\nfunction (_super) {\n  __extends(StateGraph, _super);\n\n  function StateGraph() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return StateGraph;\n}(graphlib_1.Graph);\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\n\n\nvar DEFAULT_WEIGHT_FN = function () {\n  return 1;\n};\n\nvar greedyFAS = function (g, weightFn) {\n  var _a;\n\n  if (g.nodeCount() <= 1) return [];\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n  return (_a = results.map(function (e) {\n    return g.outEdges(e.v, e.w);\n  })) === null || _a === void 0 ? void 0 : _a.flat();\n};\n\nvar doGreedyFAS = function (g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n  var entry;\n\n  while (g.nodeCount()) {\n    while (entry = sinks.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n\n    while (entry = sources.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n};\n\nvar removeNode = function (g, buckets, zeroIdx, entry, collectPredecessors) {\n  var _a, _b;\n\n  var results = [];\n  (_a = g.inEdges(entry.v)) === null || _a === void 0 ? void 0 : _a.forEach(function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      // this result not really care about in or out\n      results.push({\n        v: edge.v,\n        w: edge.w,\n        in: 0,\n        out: 0\n      });\n    }\n\n    if (uEntry.out === undefined) uEntry.out = 0;\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n  (_b = g.outEdges(entry.v)) === null || _b === void 0 ? void 0 : _b.forEach(function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    if (wEntry.in === undefined) wEntry.in = 0;\n    wEntry.in -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n  g.removeNode(entry.v);\n  return collectPredecessors ? results : undefined;\n};\n\nvar buildState = function (g, weightFn) {\n  var fasGraph = new StateGraph();\n  var maxIn = 0;\n  var maxOut = 0;\n  g.nodes().forEach(function (v) {\n    fasGraph.setNode(v, {\n      v: v,\n      in: 0,\n      out: 0\n    });\n  }); // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n\n  g.edges().forEach(function (e) {\n    var prevWeight = fasGraph.edge(e) || 0;\n    var weight = (weightFn === null || weightFn === void 0 ? void 0 : weightFn(e)) || 1;\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn = Math.max(maxIn, fasGraph.node(e.w).in += weight);\n  });\n  var buckets = [];\n  var rangeMax = maxOut + maxIn + 3;\n\n  for (var i = 0; i < rangeMax; i++) {\n    buckets.push(new List());\n  }\n\n  var zeroIdx = maxIn + 1;\n  fasGraph.nodes().forEach(function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n  return {\n    buckets: buckets,\n    zeroIdx: zeroIdx,\n    graph: fasGraph\n  };\n};\n\nvar assignBucket = function (buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry[\"in\"]) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\n  }\n};\n\nexports.default = greedyFAS;","map":{"version":3,"mappings":"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","names":["__extends","list_1","graphlib_1","DEFAULT_WEIGHT_FN","greedyFAS","g","weightFn","nodeCount","state","buildState","results","doGreedyFAS","graph","buckets","zeroIdx","map","e","outEdges","v","w","_a","flat","sources","length","sinks","entry","dequeue","removeNode","i","concat","collectPredecessors","inEdges","forEach","edge","weight","uEntry","node","push","in","out","undefined","assignBucket","_b","wEntry","fasGraph","StateGraph","maxIn","maxOut","nodes","setNode","edges","prevWeight","edgeWeight","setEdge","Math","max","rangeMax","List","enqueue","exports"],"sourceRoot":"","sources":["../../../../src/layout/dagre/src/greedy-fas.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}