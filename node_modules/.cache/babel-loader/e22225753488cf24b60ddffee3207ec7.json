{"ast":null,"code":"import isArray from './is-array';\nimport isFunction from './is-function';\nimport groupBy from './group-by';\n/**\n * 将数据分组成 map\n * @param data\n * @param condition\n */\n\nexport default function groupToMap(data, condition) {\n  if (!condition) {\n    return {\n      0: data\n    };\n  }\n\n  if (!isFunction(condition)) {\n    // 如果是字符串，则按照 a*b 风格成数组\n    var paramscondition_1 = isArray(condition) ? condition : condition.replace(/\\s+/g, '').split('*');\n\n    condition = function (row) {\n      var unique = '_'; // 避免出现数字作为Key的情况，会进行按照数字的排序\n      // 根据字段列表的值，拼接成 key\n\n      for (var i = 0, l = paramscondition_1.length; i < l; i++) {\n        unique += row[paramscondition_1[i]] && row[paramscondition_1[i]].toString();\n      }\n\n      return unique;\n    };\n  }\n\n  return groupBy(data, condition);\n}","map":{"version":3,"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA;;;;;;AAKA,eAAc,SAAUC,UAAV,CAAqBC,IAArB,EAAgCC,SAAhC,EAAqF;EACjG,IAAI,CAACA,SAAL,EAAgB;IACd,OAAO;MACL,GAAGD;IADE,CAAP;EAGD;;EACD,IAAI,CAACH,UAAU,CAACI,SAAD,CAAf,EAA4B;IAC1B;IACA,IAAMC,iBAAe,GAAGN,OAAO,CAACK,SAAD,CAAP,GAAqBA,SAArB,GAAiCA,SAAS,CAACE,OAAV,CAAkB,MAAlB,EAA0B,EAA1B,EAA8BC,KAA9B,CAAoC,GAApC,CAAzD;;IACAH,SAAS,GAAG,UAAUI,GAAV,EAAa;MACvB,IAAIC,MAAM,GAAG,GAAb,CADuB,CACL;MAElB;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGN,iBAAe,CAACO,MAApC,EAA4CF,CAAC,GAAGC,CAAhD,EAAmDD,CAAC,EAApD,EAAwD;QACtDD,MAAM,IAAID,GAAG,CAACH,iBAAe,CAACK,CAAD,CAAhB,CAAH,IAA2BF,GAAG,CAACH,iBAAe,CAACK,CAAD,CAAhB,CAAH,CAAwBG,QAAxB,EAArC;MACD;;MACD,OAAOJ,MAAP;IACD,CARD;EASD;;EACD,OAAOR,OAAO,CAACE,IAAD,EAAOC,SAAP,CAAd;AACD","names":["isArray","isFunction","groupBy","groupToMap","data","condition","paramscondition_1","replace","split","row","unique","i","l","length","toString"],"sourceRoot":"","sources":["../src/group-to-map.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}