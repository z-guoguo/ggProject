{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Util } from '../../global';\nimport { Rectangle, Angle } from '../../geometry';\nimport { ObjectExt, StringExt, FunctionExt } from '../../util';\nimport { Cell } from '../../model/cell';\nimport { Collection } from '../../model/collection';\nimport { View } from '../../view/view';\nimport { notify } from '../transform/util';\nimport { Handle } from '../common';\nexport class Selection extends View {\n  constructor(options) {\n    super();\n    this.options = ObjectExt.merge({}, Private.defaultOptions, options);\n\n    if (this.options.model) {\n      this.options.collection = this.options.model.collection;\n    }\n\n    if (this.options.collection) {\n      this.collection = this.options.collection;\n    } else {\n      this.collection = new Collection([], {\n        comparator: Private.depthComparator\n      });\n      this.options.collection = this.collection;\n    }\n\n    this.boxCount = 0;\n    this.createContainer();\n    this.initHandles();\n    this.startListening();\n  }\n\n  get graph() {\n    return this.options.graph;\n  }\n\n  get boxClassName() {\n    return this.prefixClassName(Private.classNames.box);\n  }\n\n  get $boxes() {\n    return this.$container.children(`.${this.boxClassName}`);\n  }\n\n  get handleOptions() {\n    return this.options;\n  }\n\n  startListening() {\n    const graph = this.graph;\n    const collection = this.collection;\n    this.delegateEvents({\n      [`mousedown .${this.boxClassName}`]: 'onSelectionBoxMouseDown',\n      [`touchstart .${this.boxClassName}`]: 'onSelectionBoxMouseDown'\n    }, true);\n    graph.on('scale', this.onGraphTransformed, this);\n    graph.on('translate', this.onGraphTransformed, this);\n    graph.model.on('updated', this.onModelUpdated, this);\n    collection.on('added', this.onCellAdded, this);\n    collection.on('removed', this.onCellRemoved, this);\n    collection.on('reseted', this.onReseted, this);\n    collection.on('updated', this.onCollectionUpdated, this);\n    collection.on('node:change:position', this.onNodePositionChanged, this);\n    collection.on('cell:changed', this.onCellChanged, this);\n  }\n\n  stopListening() {\n    const graph = this.graph;\n    const collection = this.collection;\n    this.undelegateEvents();\n    graph.off('scale', this.onGraphTransformed, this);\n    graph.off('translate', this.onGraphTransformed, this);\n    graph.model.off('updated', this.onModelUpdated, this);\n    collection.off('added', this.onCellAdded, this);\n    collection.off('removed', this.onCellRemoved, this);\n    collection.off('reseted', this.onReseted, this);\n    collection.off('updated', this.onCollectionUpdated, this);\n    collection.off('node:change:position', this.onNodePositionChanged, this);\n    collection.off('cell:changed', this.onCellChanged, this);\n  }\n\n  onRemove() {\n    this.stopListening();\n  }\n\n  onGraphTransformed() {\n    this.updateSelectionBoxes({\n      async: false\n    });\n  }\n\n  onCellChanged() {\n    this.updateSelectionBoxes();\n  }\n\n  onNodePositionChanged({\n    node,\n    options\n  }) {\n    const {\n      showNodeSelectionBox,\n      pointerEvents\n    } = this.options;\n    const {\n      ui,\n      selection,\n      translateBy\n    } = options;\n    let allowTranslating = !this.translating;\n    /* Scenarios where this method is not called:\n     * 1. ShowNodeSelection is true or ponterEvents is none\n     * 2. Avoid circular calls with the selection tag\n     */\n\n    allowTranslating = allowTranslating && (showNodeSelectionBox !== true || pointerEvents === 'none');\n    allowTranslating = allowTranslating && ui && !selection; // Avoid circular calls of child nodes\n\n    allowTranslating = allowTranslating && translateBy && node.id === translateBy;\n\n    if (allowTranslating) {\n      this.translating = true;\n      const current = node.position();\n      const previous = node.previous('position');\n      const dx = current.x - previous.x;\n      const dy = current.y - previous.y;\n\n      if (dx !== 0 || dy !== 0) {\n        this.translateSelectedNodes(dx, dy, node, options);\n      }\n\n      this.translating = false;\n    }\n  }\n\n  onModelUpdated({\n    removed\n  }) {\n    if (removed && removed.length) {\n      this.unselect(removed);\n    }\n  }\n\n  isEmpty() {\n    return this.length <= 0;\n  }\n\n  isSelected(cell) {\n    return this.collection.has(cell);\n  }\n\n  get length() {\n    return this.collection.length;\n  }\n\n  get cells() {\n    return this.collection.toArray();\n  }\n\n  select(cells, options = {}) {\n    options.dryrun = true;\n    const items = this.filter(Array.isArray(cells) ? cells : [cells]);\n    this.collection.add(items, options);\n    return this;\n  }\n\n  unselect(cells, options = {}) {\n    // dryrun to prevent cell be removed from graph\n    options.dryrun = true;\n    this.collection.remove(Array.isArray(cells) ? cells : [cells], options);\n    return this;\n  }\n\n  reset(cells, options = {}) {\n    if (cells) {\n      if (options.batch) {\n        const filterCells = this.filter(Array.isArray(cells) ? cells : [cells]);\n        this.collection.reset(filterCells, Object.assign(Object.assign({}, options), {\n          ui: true\n        }));\n        return this;\n      }\n\n      const prev = this.cells;\n      const next = this.filter(Array.isArray(cells) ? cells : [cells]);\n      const prevMap = {};\n      const nextMap = {};\n      prev.forEach(cell => prevMap[cell.id] = cell);\n      next.forEach(cell => nextMap[cell.id] = cell);\n      const added = [];\n      const removed = [];\n      next.forEach(cell => {\n        if (!prevMap[cell.id]) {\n          added.push(cell);\n        }\n      });\n      prev.forEach(cell => {\n        if (!nextMap[cell.id]) {\n          removed.push(cell);\n        }\n      });\n\n      if (removed.length) {\n        this.unselect(removed, Object.assign(Object.assign({}, options), {\n          ui: true\n        }));\n      }\n\n      if (added.length) {\n        this.select(added, Object.assign(Object.assign({}, options), {\n          ui: true\n        }));\n      }\n\n      if (removed.length === 0 && added.length === 0) {\n        this.updateContainer();\n      }\n\n      return this;\n    }\n\n    return this.clean(options);\n  }\n\n  clean(options = {}) {\n    if (this.length) {\n      if (options.batch === false) {\n        this.unselect(this.cells, options);\n      } else {\n        this.collection.reset([], Object.assign(Object.assign({}, options), {\n          ui: true\n        }));\n      }\n    }\n\n    return this;\n  }\n\n  setFilter(filter) {\n    this.options.filter = filter;\n  }\n\n  setContent(content) {\n    this.options.content = content;\n  }\n\n  startSelecting(evt) {\n    // Flow: startSelecting => adjustSelection => stopSelecting\n    evt = this.normalizeEvent(evt); // eslint-disable-line\n\n    this.clean();\n    let x;\n    let y;\n    const graphContainer = this.graph.container;\n\n    if (evt.offsetX != null && evt.offsetY != null && graphContainer.contains(evt.target)) {\n      x = evt.offsetX;\n      y = evt.offsetY;\n    } else {\n      const offset = this.$(graphContainer).offset();\n      const scrollLeft = graphContainer.scrollLeft;\n      const scrollTop = graphContainer.scrollTop;\n      x = evt.clientX - offset.left + window.pageXOffset + scrollLeft;\n      y = evt.clientY - offset.top + window.pageYOffset + scrollTop;\n    }\n\n    this.$container.css({\n      top: y,\n      left: x,\n      width: 1,\n      height: 1\n    });\n    this.setEventData(evt, {\n      action: 'selecting',\n      clientX: evt.clientX,\n      clientY: evt.clientY,\n      offsetX: x,\n      offsetY: y,\n      scrollerX: 0,\n      scrollerY: 0\n    });\n    this.delegateDocumentEvents(Private.documentEvents, evt.data);\n  }\n\n  filter(cells) {\n    const filter = this.options.filter;\n\n    if (Array.isArray(filter)) {\n      return cells.filter(cell => !filter.includes(cell) && !filter.includes(cell.shape));\n    }\n\n    if (typeof filter === 'function') {\n      return cells.filter(cell => FunctionExt.call(filter, this.graph, cell));\n    }\n\n    return cells;\n  }\n\n  stopSelecting(evt) {\n    const graph = this.graph;\n    const eventData = this.getEventData(evt);\n    const action = eventData.action;\n\n    switch (action) {\n      case 'selecting':\n        {\n          let width = this.$container.width();\n          let height = this.$container.height();\n          const offset = this.$container.offset();\n          const origin = graph.pageToLocal(offset.left, offset.top);\n          const scale = graph.transform.getScale();\n          width /= scale.sx;\n          height /= scale.sy;\n          const rect = new Rectangle(origin.x, origin.y, width, height);\n          const cells = this.getCellViewsInArea(rect).map(view => view.cell);\n          this.reset(cells, {\n            batch: true\n          });\n          this.hideRubberband();\n          break;\n        }\n\n      case 'translating':\n        {\n          const client = graph.snapToGrid(evt.clientX, evt.clientY);\n\n          if (!this.options.following) {\n            const data = eventData;\n            this.updateSelectedNodesPosition({\n              dx: data.clientX - data.originX,\n              dy: data.clientY - data.originY\n            });\n          }\n\n          this.graph.model.stopBatch('move-selection');\n          this.notifyBoxEvent('box:mouseup', evt, client.x, client.y);\n          break;\n        }\n\n      default:\n        {\n          this.clean();\n          break;\n        }\n    }\n  }\n\n  onMouseUp(evt) {\n    const action = this.getEventData(evt).action;\n\n    if (action) {\n      this.stopSelecting(evt);\n      this.undelegateDocumentEvents();\n    }\n  }\n\n  onSelectionBoxMouseDown(evt) {\n    if (!this.options.following) {\n      evt.stopPropagation();\n    }\n\n    const e = this.normalizeEvent(evt);\n\n    if (this.options.movable) {\n      this.startTranslating(e);\n    }\n\n    const activeView = this.getCellViewFromElem(e.target);\n    this.setEventData(e, {\n      activeView\n    });\n    const client = this.graph.snapToGrid(e.clientX, e.clientY);\n    this.notifyBoxEvent('box:mousedown', e, client.x, client.y);\n    this.delegateDocumentEvents(Private.documentEvents, e.data);\n  }\n\n  startTranslating(evt) {\n    this.graph.model.startBatch('move-selection');\n    const client = this.graph.snapToGrid(evt.clientX, evt.clientY);\n    this.setEventData(evt, {\n      action: 'translating',\n      clientX: client.x,\n      clientY: client.y,\n      originX: client.x,\n      originY: client.y\n    });\n  }\n\n  getSelectionOffset(client, data) {\n    let dx = client.x - data.clientX;\n    let dy = client.y - data.clientY;\n    const restrict = this.graph.hook.getRestrictArea();\n\n    if (restrict) {\n      const cells = this.collection.toArray();\n      const totalBBox = Cell.getCellsBBox(cells, {\n        deep: true\n      }) || Rectangle.create();\n      const minDx = restrict.x - totalBBox.x;\n      const minDy = restrict.y - totalBBox.y;\n      const maxDx = restrict.x + restrict.width - (totalBBox.x + totalBBox.width);\n      const maxDy = restrict.y + restrict.height - (totalBBox.y + totalBBox.height);\n\n      if (dx < minDx) {\n        dx = minDx;\n      }\n\n      if (dy < minDy) {\n        dy = minDy;\n      }\n\n      if (maxDx < dx) {\n        dx = maxDx;\n      }\n\n      if (maxDy < dy) {\n        dy = maxDy;\n      }\n\n      if (!this.options.following) {\n        const offsetX = client.x - data.originX;\n        const offsetY = client.y - data.originY;\n        dx = offsetX <= minDx || offsetX >= maxDx ? 0 : dx;\n        dy = offsetY <= minDy || offsetY >= maxDy ? 0 : dy;\n      }\n    }\n\n    return {\n      dx,\n      dy\n    };\n  }\n\n  updateSelectedNodesPosition(offset) {\n    const {\n      dx,\n      dy\n    } = offset;\n\n    if (dx || dy) {\n      if (this.translateSelectedNodes(dx, dy), this.boxesUpdated) {\n        if (this.collection.length > 1) {\n          this.updateSelectionBoxes();\n        }\n      } else {\n        const scale = this.graph.transform.getScale();\n        this.$boxes.add(this.$selectionContainer).css({\n          left: `+=${dx * scale.sx}`,\n          top: `+=${dy * scale.sy}`\n        });\n      }\n    }\n  }\n\n  autoScrollGraph(x, y) {\n    const scroller = this.graph.scroller.widget;\n\n    if (scroller) {\n      return scroller.autoScroll(x, y);\n    }\n\n    return {\n      scrollerX: 0,\n      scrollerY: 0\n    };\n  }\n\n  adjustSelection(evt) {\n    const e = this.normalizeEvent(evt);\n    const eventData = this.getEventData(e);\n    const action = eventData.action;\n\n    switch (action) {\n      case 'selecting':\n        {\n          const data = eventData;\n\n          if (data.moving !== true) {\n            this.$container.appendTo(this.graph.container);\n            this.showRubberband();\n            data.moving = true;\n          }\n\n          const {\n            scrollerX,\n            scrollerY\n          } = this.autoScrollGraph(e.clientX, e.clientY);\n          data.scrollerX += scrollerX;\n          data.scrollerY += scrollerY;\n          const dx = e.clientX - data.clientX + data.scrollerX;\n          const dy = e.clientY - data.clientY + data.scrollerY;\n          const left = parseInt(this.$container.css('left'), 10);\n          const top = parseInt(this.$container.css('top'), 10);\n          this.$container.css({\n            left: dx < 0 ? data.offsetX + dx : left,\n            top: dy < 0 ? data.offsetY + dy : top,\n            width: Math.abs(dx),\n            height: Math.abs(dy)\n          });\n          break;\n        }\n\n      case 'translating':\n        {\n          const client = this.graph.snapToGrid(e.clientX, e.clientY);\n          const data = eventData;\n          const offset = this.getSelectionOffset(client, data);\n\n          if (this.options.following) {\n            this.updateSelectedNodesPosition(offset);\n          } else {\n            this.updateContainerPosition(offset);\n          }\n\n          if (offset.dx) {\n            data.clientX = client.x;\n          }\n\n          if (offset.dy) {\n            data.clientY = client.y;\n          }\n\n          this.notifyBoxEvent('box:mousemove', evt, client.x, client.y);\n          break;\n        }\n\n      default:\n        break;\n    }\n\n    this.boxesUpdated = false;\n  }\n\n  translateSelectedNodes(dx, dy, exclude, otherOptions) {\n    const map = {};\n    const excluded = [];\n\n    if (exclude) {\n      map[exclude.id] = true;\n    }\n\n    this.collection.toArray().forEach(cell => {\n      cell.getDescendants({\n        deep: true\n      }).forEach(child => {\n        map[child.id] = true;\n      });\n    });\n\n    if (otherOptions && otherOptions.translateBy) {\n      const currentCell = this.graph.getCellById(otherOptions.translateBy);\n\n      if (currentCell) {\n        map[currentCell.id] = true;\n        currentCell.getDescendants({\n          deep: true\n        }).forEach(child => {\n          map[child.id] = true;\n        });\n        excluded.push(currentCell);\n      }\n    }\n\n    this.collection.toArray().forEach(cell => {\n      if (!map[cell.id]) {\n        const options = Object.assign(Object.assign({}, otherOptions), {\n          selection: this.cid,\n          exclude: excluded\n        });\n        cell.translate(dx, dy, options);\n        this.graph.model.getConnectedEdges(cell).forEach(edge => {\n          if (!map[edge.id]) {\n            edge.translate(dx, dy, options);\n            map[edge.id] = true;\n          }\n        });\n      }\n    });\n  }\n\n  getCellViewsInArea(rect) {\n    const graph = this.graph;\n    const options = {\n      strict: this.options.strict\n    };\n    let views = [];\n\n    if (this.options.rubberNode) {\n      if (this.options.useCellGeometry) {\n        views = views.concat(graph.model.getNodesInArea(rect, options).map(node => graph.renderer.findViewByCell(node)).filter(view => view != null));\n      } else {\n        views = views.concat(graph.renderer.findViewsInArea(rect, options));\n      }\n    }\n\n    if (this.options.rubberEdge) {\n      if (this.options.useCellGeometry) {\n        views = views.concat(graph.model.getEdgesInArea(rect, options).map(edge => graph.renderer.findViewByCell(edge)).filter(view => view != null));\n      } else {\n        views = views.concat(graph.renderer.findEdgeViewsInArea(rect, options));\n      }\n    }\n\n    return views;\n  }\n\n  notifyBoxEvent(name, e, x, y) {\n    const data = this.getEventData(e);\n    const view = data.activeView;\n    this.trigger(name, {\n      e,\n      view,\n      x,\n      y,\n      cell: view.cell\n    });\n  }\n\n  getSelectedClassName(cell) {\n    return this.prefixClassName(`${cell.isNode() ? 'node' : 'edge'}-selected`);\n  }\n\n  addCellSelectedClassName(cell) {\n    const view = this.graph.renderer.findViewByCell(cell);\n\n    if (view) {\n      view.addClass(this.getSelectedClassName(cell));\n    }\n  }\n\n  removeCellUnSelectedClassName(cell) {\n    const view = this.graph.renderer.findViewByCell(cell);\n\n    if (view) {\n      view.removeClass(this.getSelectedClassName(cell));\n    }\n  }\n\n  destroySelectionBox(cell) {\n    this.removeCellUnSelectedClassName(cell);\n\n    if (this.canShowSelectionBox(cell)) {\n      this.$container.find(`[data-cell-id=\"${cell.id}\"]`).remove();\n\n      if (this.$boxes.length === 0) {\n        this.hide();\n      }\n\n      this.boxCount = Math.max(0, this.boxCount - 1);\n    }\n  }\n\n  destroyAllSelectionBoxes(cells) {\n    cells.forEach(cell => this.removeCellUnSelectedClassName(cell));\n    this.hide();\n    this.$boxes.remove();\n    this.boxCount = 0;\n  }\n\n  hide() {\n    this.$container.removeClass(this.prefixClassName(Private.classNames.rubberband)).removeClass(this.prefixClassName(Private.classNames.selected));\n  }\n\n  showRubberband() {\n    this.$container.addClass(this.prefixClassName(Private.classNames.rubberband));\n  }\n\n  hideRubberband() {\n    this.$container.removeClass(this.prefixClassName(Private.classNames.rubberband));\n  }\n\n  showSelected() {\n    this.$container.removeAttr('style').addClass(this.prefixClassName(Private.classNames.selected));\n  }\n\n  createContainer() {\n    this.container = document.createElement('div');\n    this.$container = this.$(this.container);\n    this.$container.addClass(this.prefixClassName(Private.classNames.root));\n\n    if (this.options.className) {\n      this.$container.addClass(this.options.className);\n    }\n\n    this.$selectionContainer = this.$('<div/>').addClass(this.prefixClassName(Private.classNames.inner));\n    this.$selectionContent = this.$('<div/>').addClass(this.prefixClassName(Private.classNames.content));\n    this.$selectionContainer.append(this.$selectionContent);\n    this.$selectionContainer.attr('data-selection-length', this.collection.length);\n    this.$container.prepend(this.$selectionContainer);\n    this.$handleContainer = this.$selectionContainer;\n  }\n\n  updateContainerPosition(offset) {\n    if (offset.dx || offset.dy) {\n      this.$selectionContainer.css({\n        left: `+=${offset.dx}`,\n        top: `+=${offset.dy}`\n      });\n    }\n  }\n\n  updateContainer() {\n    const origin = {\n      x: Infinity,\n      y: Infinity\n    };\n    const corner = {\n      x: 0,\n      y: 0\n    };\n    const cells = this.collection.toArray().filter(cell => this.canShowSelectionBox(cell));\n    cells.forEach(cell => {\n      const view = this.graph.renderer.findViewByCell(cell);\n\n      if (view) {\n        const bbox = view.getBBox({\n          useCellGeometry: this.options.useCellGeometry\n        });\n        origin.x = Math.min(origin.x, bbox.x);\n        origin.y = Math.min(origin.y, bbox.y);\n        corner.x = Math.max(corner.x, bbox.x + bbox.width);\n        corner.y = Math.max(corner.y, bbox.y + bbox.height);\n      }\n    });\n    this.$selectionContainer.css({\n      position: 'absolute',\n      pointerEvents: 'none',\n      left: origin.x,\n      top: origin.y,\n      width: corner.x - origin.x,\n      height: corner.y - origin.y\n    }).attr('data-selection-length', this.collection.length);\n    const boxContent = this.options.content;\n\n    if (boxContent) {\n      if (typeof boxContent === 'function') {\n        const content = FunctionExt.call(boxContent, this.graph, this, this.$selectionContent[0]);\n\n        if (content) {\n          this.$selectionContent.html(content);\n        }\n      } else {\n        this.$selectionContent.html(boxContent);\n      }\n    }\n\n    if (this.collection.length > 0 && !this.container.parentNode) {\n      this.$container.appendTo(this.graph.container);\n    } else if (this.collection.length <= 0 && this.container.parentNode) {\n      this.container.parentNode.removeChild(this.container);\n    }\n  }\n\n  canShowSelectionBox(cell) {\n    return cell.isNode() && this.options.showNodeSelectionBox === true || cell.isEdge() && this.options.showEdgeSelectionBox === true;\n  }\n\n  createSelectionBox(cell) {\n    this.addCellSelectedClassName(cell);\n\n    if (this.canShowSelectionBox(cell)) {\n      const view = this.graph.renderer.findViewByCell(cell);\n\n      if (view) {\n        const bbox = view.getBBox({\n          useCellGeometry: this.options.useCellGeometry\n        });\n        const className = this.boxClassName;\n        this.$('<div/>').addClass(className).addClass(`${className}-${cell.isNode() ? 'node' : 'edge'}`).attr('data-cell-id', cell.id).css({\n          position: 'absolute',\n          left: bbox.x,\n          top: bbox.y,\n          width: bbox.width,\n          height: bbox.height,\n          pointerEvents: this.options.pointerEvents || 'auto'\n        }).appendTo(this.container);\n        this.showSelected();\n        this.boxCount += 1;\n      }\n    }\n  }\n\n  updateSelectionBoxes(options = {}) {\n    if (this.collection.length > 0) {\n      this.boxesUpdated = true;\n      this.graph.renderer.requestViewUpdate(this, 1, 2, options);\n    }\n  }\n\n  confirmUpdate() {\n    if (this.boxCount) {\n      this.hide();\n      this.$boxes.each((_, elem) => {\n        const cellId = this.$(elem).remove().attr('data-cell-id');\n        const cell = this.collection.get(cellId);\n\n        if (cell) {\n          this.createSelectionBox(cell);\n        }\n      });\n      this.updateContainer();\n    }\n\n    return 0;\n  }\n\n  getCellViewFromElem(elem) {\n    const id = elem.getAttribute('data-cell-id');\n\n    if (id) {\n      const cell = this.collection.get(id);\n\n      if (cell) {\n        return this.graph.renderer.findViewByCell(cell);\n      }\n    }\n\n    return null;\n  }\n\n  onCellRemoved({\n    cell\n  }) {\n    this.destroySelectionBox(cell);\n    this.updateContainer();\n  }\n\n  onReseted({\n    previous,\n    current\n  }) {\n    this.destroyAllSelectionBoxes(previous);\n    current.forEach(cell => {\n      this.listenCellRemoveEvent(cell);\n      this.createSelectionBox(cell);\n    });\n    this.updateContainer();\n  }\n\n  onCellAdded({\n    cell\n  }) {\n    // The collection do not known the cell was removed when cell was\n    // removed by interaction(such as, by \"delete\" shortcut), so we should\n    // manually listen to cell's remove evnet.\n    this.listenCellRemoveEvent(cell);\n    this.createSelectionBox(cell);\n    this.updateContainer();\n  }\n\n  listenCellRemoveEvent(cell) {\n    cell.off('removed', this.onCellRemoved, this);\n    cell.on('removed', this.onCellRemoved, this);\n  }\n\n  onCollectionUpdated({\n    added,\n    removed,\n    options\n  }) {\n    added.forEach(cell => {\n      this.trigger('cell:selected', {\n        cell,\n        options\n      });\n      this.graph.trigger('cell:selected', {\n        cell,\n        options\n      });\n\n      if (cell.isNode()) {\n        this.trigger('node:selected', {\n          cell,\n          options,\n          node: cell\n        });\n        this.graph.trigger('node:selected', {\n          cell,\n          options,\n          node: cell\n        });\n      } else if (cell.isEdge()) {\n        this.trigger('edge:selected', {\n          cell,\n          options,\n          edge: cell\n        });\n        this.graph.trigger('edge:selected', {\n          cell,\n          options,\n          edge: cell\n        });\n      }\n    });\n    removed.forEach(cell => {\n      this.trigger('cell:unselected', {\n        cell,\n        options\n      });\n      this.graph.trigger('cell:unselected', {\n        cell,\n        options\n      });\n\n      if (cell.isNode()) {\n        this.trigger('node:unselected', {\n          cell,\n          options,\n          node: cell\n        });\n        this.graph.trigger('node:unselected', {\n          cell,\n          options,\n          node: cell\n        });\n      } else if (cell.isEdge()) {\n        this.trigger('edge:unselected', {\n          cell,\n          options,\n          edge: cell\n        });\n        this.graph.trigger('edge:unselected', {\n          cell,\n          options,\n          edge: cell\n        });\n      }\n    });\n    const args = {\n      added,\n      removed,\n      options,\n      selected: this.cells.filter(cell => !!this.graph.getCellById(cell.id))\n    };\n    this.trigger('selection:changed', args);\n    this.graph.trigger('selection:changed', args);\n  } // #region handle\n\n\n  deleteSelectedCells() {\n    const cells = this.collection.toArray();\n    this.clean();\n    this.graph.model.removeCells(cells, {\n      selection: this.cid\n    });\n  }\n\n  startRotate({\n    e\n  }) {\n    const cells = this.collection.toArray();\n    const center = Cell.getCellsBBox(cells).getCenter();\n    const client = this.graph.snapToGrid(e.clientX, e.clientY);\n    const angles = cells.reduce((memo, cell) => {\n      memo[cell.id] = Angle.normalize(cell.getAngle());\n      return memo;\n    }, {});\n    this.setEventData(e, {\n      center,\n      angles,\n      start: client.theta(center)\n    });\n  }\n\n  doRotate({\n    e\n  }) {\n    const data = this.getEventData(e);\n    const grid = this.graph.options.rotating.grid;\n    const gridSize = typeof grid === 'function' ? FunctionExt.call(grid, this.graph, null) : grid;\n    const client = this.graph.snapToGrid(e.clientX, e.clientY);\n    const delta = data.start - client.theta(data.center);\n\n    if (!data.rotated) {\n      data.rotated = true;\n    }\n\n    if (Math.abs(delta) > 0.001) {\n      this.collection.toArray().forEach(node => {\n        const angle = Util.snapToGrid(data.angles[node.id] + delta, gridSize || 15);\n        node.rotate(angle, {\n          absolute: true,\n          center: data.center,\n          selection: this.cid\n        });\n      });\n      this.updateSelectionBoxes();\n    }\n  }\n\n  stopRotate({\n    e\n  }) {\n    const data = this.getEventData(e);\n\n    if (data.rotated) {\n      data.rotated = false;\n      this.collection.toArray().forEach(node => {\n        notify('node:rotated', e, this.graph.findViewByCell(node));\n      });\n    }\n  }\n\n  startResize({\n    e\n  }) {\n    const gridSize = this.graph.getGridSize();\n    const cells = this.collection.toArray();\n    const bbox = Cell.getCellsBBox(cells);\n    const bboxes = cells.map(cell => cell.getBBox());\n    const maxWidth = bboxes.reduce((maxWidth, bbox) => {\n      return bbox.width < maxWidth ? bbox.width : maxWidth;\n    }, Infinity);\n    const maxHeight = bboxes.reduce((maxHeight, bbox) => {\n      return bbox.height < maxHeight ? bbox.height : maxHeight;\n    }, Infinity);\n    this.setEventData(e, {\n      bbox,\n      cells: this.graph.model.getSubGraph(cells),\n      minWidth: gridSize * bbox.width / maxWidth,\n      minHeight: gridSize * bbox.height / maxHeight\n    });\n  }\n\n  doResize({\n    e,\n    dx,\n    dy\n  }) {\n    const data = this.eventData(e);\n    const bbox = data.bbox;\n    const width = bbox.width;\n    const height = bbox.height;\n    const newWidth = Math.max(width + dx, data.minWidth);\n    const newHeight = Math.max(height + dy, data.minHeight);\n\n    if (!data.resized) {\n      data.resized = true;\n    }\n\n    if (Math.abs(width - newWidth) > 0.001 || Math.abs(height - newHeight) > 0.001) {\n      this.graph.model.resizeCells(newWidth, newHeight, data.cells, {\n        selection: this.cid\n      });\n      bbox.width = newWidth;\n      bbox.height = newHeight;\n      this.updateSelectionBoxes();\n    }\n  }\n\n  stopResize({\n    e\n  }) {\n    const data = this.eventData(e);\n\n    if (data.resized) {\n      data.resized = false;\n      this.collection.toArray().forEach(node => {\n        notify('node:resized', e, this.graph.findViewByCell(node));\n      });\n    }\n  } // #endregion\n\n\n  dispose() {\n    this.clean();\n    this.remove();\n  }\n\n}\n\n__decorate([View.dispose()], Selection.prototype, \"dispose\", null);\n\nObjectExt.applyMixins(Selection, Handle); // private\n// -------\n\nvar Private;\n\n(function (Private) {\n  const base = 'widget-selection';\n  Private.classNames = {\n    root: base,\n    inner: `${base}-inner`,\n    box: `${base}-box`,\n    content: `${base}-content`,\n    rubberband: `${base}-rubberband`,\n    selected: `${base}-selected`\n  };\n  Private.documentEvents = {\n    mousemove: 'adjustSelection',\n    touchmove: 'adjustSelection',\n    mouseup: 'onMouseUp',\n    touchend: 'onMouseUp',\n    touchcancel: 'onMouseUp'\n  };\n  Private.defaultOptions = {\n    movable: true,\n    following: true,\n    strict: false,\n    useCellGeometry: false,\n\n    content(selection) {\n      return StringExt.template('<%= length %> node<%= length > 1 ? \"s\":\"\" %> selected.')({\n        length: selection.length\n      });\n    },\n\n    handles: [{\n      name: 'remove',\n      position: 'nw',\n      events: {\n        mousedown: 'deleteSelectedCells'\n      }\n    }, {\n      name: 'rotate',\n      position: 'sw',\n      events: {\n        mousedown: 'startRotate',\n        mousemove: 'doRotate',\n        mouseup: 'stopRotate'\n      }\n    }, {\n      name: 'resize',\n      position: 'se',\n      events: {\n        mousedown: 'startResize',\n        mousemove: 'doResize',\n        mouseup: 'stopResize'\n      }\n    }]\n  };\n\n  function depthComparator(cell) {\n    return cell.getAncestors().length;\n  }\n\n  Private.depthComparator = depthComparator;\n})(Private || (Private = {}));","map":{"version":3,"mappings":"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","names":["Util","Rectangle","Angle","ObjectExt","StringExt","FunctionExt","Cell","Collection","View","notify","Handle","Selection","constructor","options","merge","Private","defaultOptions","model","collection","comparator","depthComparator","boxCount","createContainer","initHandles","startListening","graph","boxClassName","prefixClassName","classNames","box","$boxes","$container","children","handleOptions","delegateEvents","on","onGraphTransformed","onModelUpdated","onCellAdded","onCellRemoved","onReseted","onCollectionUpdated","onNodePositionChanged","onCellChanged","stopListening","undelegateEvents","off","onRemove","updateSelectionBoxes","async","node","showNodeSelectionBox","pointerEvents","ui","selection","translateBy","allowTranslating","translating","id","current","position","previous","dx","x","dy","y","translateSelectedNodes","removed","length","unselect","isEmpty","isSelected","cell","has","cells","toArray","select","dryrun","items","filter","Array","isArray","add","remove","reset","batch","filterCells","Object","prev","next","prevMap","nextMap","forEach","added","push","updateContainer","clean","setFilter","setContent","content","startSelecting","evt","normalizeEvent","graphContainer","container","offsetX","offsetY","contains","target","offset","$","scrollLeft","scrollTop","clientX","left","window","pageXOffset","clientY","top","pageYOffset","css","width","height","setEventData","action","scrollerX","scrollerY","delegateDocumentEvents","documentEvents","data","includes","shape","call","stopSelecting","eventData","getEventData","origin","pageToLocal","scale","transform","getScale","sx","sy","rect","getCellViewsInArea","map","view","hideRubberband","client","snapToGrid","following","updateSelectedNodesPosition","originX","originY","stopBatch","notifyBoxEvent","onMouseUp","undelegateDocumentEvents","onSelectionBoxMouseDown","stopPropagation","e","movable","startTranslating","activeView","getCellViewFromElem","startBatch","getSelectionOffset","restrict","hook","getRestrictArea","totalBBox","getCellsBBox","deep","create","minDx","minDy","maxDx","maxDy","boxesUpdated","$selectionContainer","autoScrollGraph","scroller","widget","autoScroll","adjustSelection","moving","appendTo","showRubberband","parseInt","Math","abs","updateContainerPosition","exclude","otherOptions","excluded","getDescendants","child","currentCell","getCellById","cid","translate","getConnectedEdges","edge","strict","views","rubberNode","useCellGeometry","concat","getNodesInArea","renderer","findViewByCell","findViewsInArea","rubberEdge","getEdgesInArea","findEdgeViewsInArea","name","trigger","getSelectedClassName","isNode","addCellSelectedClassName","addClass","removeCellUnSelectedClassName","removeClass","destroySelectionBox","canShowSelectionBox","find","hide","max","destroyAllSelectionBoxes","rubberband","selected","showSelected","removeAttr","document","createElement","root","className","inner","$selectionContent","append","attr","prepend","$handleContainer","Infinity","corner","bbox","getBBox","min","boxContent","html","parentNode","removeChild","isEdge","showEdgeSelectionBox","createSelectionBox","requestViewUpdate","confirmUpdate","each","_","elem","cellId","get","getAttribute","listenCellRemoveEvent","args","deleteSelectedCells","removeCells","startRotate","center","getCenter","angles","reduce","memo","normalize","getAngle","start","theta","doRotate","grid","rotating","gridSize","delta","rotated","angle","rotate","absolute","stopRotate","startResize","getGridSize","bboxes","maxWidth","maxHeight","getSubGraph","minWidth","minHeight","doResize","newWidth","newHeight","resized","resizeCells","stopResize","dispose","__decorate","applyMixins","base","mousemove","touchmove","mouseup","touchend","touchcancel","template","handles","events","mousedown","getAncestors"],"sourceRoot":"","sources":["../../../src/addon/selection/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}