{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { max, min } from '@antv/util';\nimport Element from './element';\nimport { isFunction, isObject, each, removeFromArray, upperFirst, isAllowCapture } from '../util/util';\nvar SHAPE_MAP = {};\nvar INDEX = '_INDEX';\n/**\n * 设置 canvas\n * @param {IElement} element 元素\n * @param {ICanvas}  canvas  画布\n */\n\nfunction setCanvas(element, canvas) {\n  element.set('canvas', canvas);\n\n  if (element.isGroup()) {\n    var children = element.get('children');\n\n    if (children.length) {\n      children.forEach(function (child) {\n        setCanvas(child, canvas);\n      });\n    }\n  }\n}\n/**\n * 设置 timeline\n * @param {IElement} element  元素\n * @param {Timeline} timeline 时间轴\n */\n\n\nfunction setTimeline(element, timeline) {\n  element.set('timeline', timeline);\n\n  if (element.isGroup()) {\n    var children = element.get('children');\n\n    if (children.length) {\n      children.forEach(function (child) {\n        setTimeline(child, timeline);\n      });\n    }\n  }\n}\n\nfunction contains(container, element) {\n  var children = container.getChildren();\n  return children.indexOf(element) >= 0;\n}\n\nfunction removeChild(container, element, destroy) {\n  if (destroy === void 0) {\n    destroy = true;\n  } // 不再调用 element.remove() 方法，会出现循环调用\n\n\n  if (destroy) {\n    element.destroy();\n  } else {\n    element.set('parent', null);\n    element.set('canvas', null);\n  }\n\n  removeFromArray(container.getChildren(), element);\n}\n\nfunction getComparer(compare) {\n  return function (left, right) {\n    var result = compare(left, right);\n    return result === 0 ? left[INDEX] - right[INDEX] : result;\n  };\n}\n\nvar Container =\n/** @class */\nfunction (_super) {\n  __extends(Container, _super);\n\n  function Container() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Container.prototype.isCanvas = function () {\n    return false;\n  }; // 根据子节点确定 BBox\n\n\n  Container.prototype.getBBox = function () {\n    // 所有的值可能在画布的可视区外\n    var minX = Infinity;\n    var maxX = -Infinity;\n    var minY = Infinity;\n    var maxY = -Infinity;\n    var xArr = [];\n    var yArr = []; // 将可见元素、图形以及不为空的图形分组筛选出来，用于包围盒合并\n\n    var children = this.getChildren().filter(function (child) {\n      return child.get('visible') && (!child.isGroup() || child.isGroup() && child.getChildren().length > 0);\n    });\n\n    if (children.length > 0) {\n      each(children, function (child) {\n        var box = child.getBBox();\n        xArr.push(box.minX, box.maxX);\n        yArr.push(box.minY, box.maxY);\n      });\n      minX = min(xArr);\n      maxX = max(xArr);\n      minY = min(yArr);\n      maxY = max(yArr);\n    } else {\n      minX = 0;\n      maxX = 0;\n      minY = 0;\n      maxY = 0;\n    }\n\n    var box = {\n      x: minX,\n      y: minY,\n      minX: minX,\n      minY: minY,\n      maxX: maxX,\n      maxY: maxY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n    return box;\n  }; // 获取画布的包围盒\n\n\n  Container.prototype.getCanvasBBox = function () {\n    var minX = Infinity;\n    var maxX = -Infinity;\n    var minY = Infinity;\n    var maxY = -Infinity;\n    var xArr = [];\n    var yArr = []; // 将可见元素、图形以及不为空的图形分组筛选出来，用于包围盒合并\n\n    var children = this.getChildren().filter(function (child) {\n      return child.get('visible') && (!child.isGroup() || child.isGroup() && child.getChildren().length > 0);\n    });\n\n    if (children.length > 0) {\n      each(children, function (child) {\n        var box = child.getCanvasBBox();\n        xArr.push(box.minX, box.maxX);\n        yArr.push(box.minY, box.maxY);\n      });\n      minX = min(xArr);\n      maxX = max(xArr);\n      minY = min(yArr);\n      maxY = max(yArr);\n    } else {\n      minX = 0;\n      maxX = 0;\n      minY = 0;\n      maxY = 0;\n    }\n\n    var box = {\n      x: minX,\n      y: minY,\n      minX: minX,\n      minY: minY,\n      maxX: maxX,\n      maxY: maxY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n    return box;\n  };\n\n  Container.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    cfg['children'] = [];\n    return cfg;\n  };\n\n  Container.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n\n    if (name === 'matrix') {\n      var totalMatrix = this.getTotalMatrix();\n\n      this._applyChildrenMarix(totalMatrix);\n    }\n  }; // 不但应用到自己身上还要应用于子元素\n\n\n  Container.prototype.applyMatrix = function (matrix) {\n    var preTotalMatrix = this.getTotalMatrix();\n\n    _super.prototype.applyMatrix.call(this, matrix);\n\n    var totalMatrix = this.getTotalMatrix(); // totalMatrix 没有发生变化时，这里仅考虑两者都为 null 时\n    // 不继续向下传递矩阵\n\n    if (totalMatrix === preTotalMatrix) {\n      return;\n    }\n\n    this._applyChildrenMarix(totalMatrix);\n  }; // 在子元素上设置矩阵\n\n\n  Container.prototype._applyChildrenMarix = function (totalMatrix) {\n    var children = this.getChildren();\n    each(children, function (child) {\n      child.applyMatrix(totalMatrix);\n    });\n  }; // 兼容老版本的接口\n\n\n  Container.prototype.addShape = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var type = args[0];\n    var cfg = args[1];\n\n    if (isObject(type)) {\n      cfg = type;\n    } else {\n      cfg['type'] = type;\n    }\n\n    var shapeType = SHAPE_MAP[cfg.type];\n\n    if (!shapeType) {\n      shapeType = upperFirst(cfg.type);\n      SHAPE_MAP[cfg.type] = shapeType;\n    }\n\n    var ShapeBase = this.getShapeBase();\n    var shape = new ShapeBase[shapeType](cfg);\n    this.add(shape);\n    return shape;\n  };\n\n  Container.prototype.addGroup = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var groupClass = args[0],\n        cfg = args[1];\n    var group;\n\n    if (isFunction(groupClass)) {\n      if (cfg) {\n        group = new groupClass(cfg);\n      } else {\n        group = new groupClass({\n          // canvas,\n          parent: this\n        });\n      }\n    } else {\n      var tmpCfg = groupClass || {};\n      var TmpGroupClass = this.getGroupBase();\n      group = new TmpGroupClass(tmpCfg);\n    }\n\n    this.add(group);\n    return group;\n  };\n\n  Container.prototype.getCanvas = function () {\n    var canvas;\n\n    if (this.isCanvas()) {\n      canvas = this;\n    } else {\n      canvas = this.get('canvas');\n    }\n\n    return canvas;\n  };\n\n  Container.prototype.getShape = function (x, y, ev) {\n    // 如果不支持拾取，则直接返回\n    if (!isAllowCapture(this)) {\n      return null;\n    }\n\n    var children = this.getChildren();\n    var shape; // 如果容器是 group\n\n    if (!this.isCanvas()) {\n      var v = [x, y, 1]; // 将 x, y 转换成对应于 group 的局部坐标\n\n      v = this.invertFromMatrix(v);\n\n      if (!this.isClipped(v[0], v[1])) {\n        shape = this._findShape(children, v[0], v[1], ev);\n      }\n    } else {\n      shape = this._findShape(children, x, y, ev);\n    }\n\n    return shape;\n  };\n\n  Container.prototype._findShape = function (children, x, y, ev) {\n    var shape = null;\n\n    for (var i = children.length - 1; i >= 0; i--) {\n      var child = children[i];\n\n      if (isAllowCapture(child)) {\n        if (child.isGroup()) {\n          shape = child.getShape(x, y, ev);\n        } else if (child.isHit(x, y)) {\n          shape = child;\n        }\n      }\n\n      if (shape) {\n        break;\n      }\n    }\n\n    return shape;\n  };\n\n  Container.prototype.add = function (element) {\n    var canvas = this.getCanvas();\n    var children = this.getChildren();\n    var timeline = this.get('timeline');\n    var preParent = element.getParent();\n\n    if (preParent) {\n      removeChild(preParent, element, false);\n    }\n\n    element.set('parent', this);\n\n    if (canvas) {\n      setCanvas(element, canvas);\n    }\n\n    if (timeline) {\n      setTimeline(element, timeline);\n    }\n\n    children.push(element);\n    element.onCanvasChange('add');\n\n    this._applyElementMatrix(element);\n  }; // 将当前容器的矩阵应用到子元素\n\n\n  Container.prototype._applyElementMatrix = function (element) {\n    var totalMatrix = this.getTotalMatrix(); // 添加图形或者分组时，需要把当前图元的矩阵设置进去\n\n    if (totalMatrix) {\n      element.applyMatrix(totalMatrix);\n    }\n  };\n\n  Container.prototype.getChildren = function () {\n    return this.get('children');\n  };\n\n  Container.prototype.sort = function () {\n    var children = this.getChildren(); // 稳定排序\n\n    each(children, function (child, index) {\n      child[INDEX] = index;\n      return child;\n    });\n    children.sort(getComparer(function (obj1, obj2) {\n      return obj1.get('zIndex') - obj2.get('zIndex');\n    }));\n    this.onCanvasChange('sort');\n  };\n\n  Container.prototype.clear = function () {\n    this.set('clearing', true);\n\n    if (this.destroyed) {\n      return;\n    }\n\n    var children = this.getChildren();\n\n    for (var i = children.length - 1; i >= 0; i--) {\n      children[i].destroy(); // 销毁子元素\n    }\n\n    this.set('children', []);\n    this.onCanvasChange('clear');\n    this.set('clearing', false);\n  };\n\n  Container.prototype.destroy = function () {\n    if (this.get('destroyed')) {\n      return;\n    }\n\n    this.clear();\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * 获取第一个子元素\n   * @return {IElement} 第一个元素\n   */\n\n\n  Container.prototype.getFirst = function () {\n    return this.getChildByIndex(0);\n  };\n  /**\n   * 获取最后一个子元素\n   * @return {IElement} 元素\n   */\n\n\n  Container.prototype.getLast = function () {\n    var children = this.getChildren();\n    return this.getChildByIndex(children.length - 1);\n  };\n  /**\n   * 根据索引获取子元素\n   * @return {IElement} 第一个元素\n   */\n\n\n  Container.prototype.getChildByIndex = function (index) {\n    var children = this.getChildren();\n    return children[index];\n  };\n  /**\n   * 子元素的数量\n   * @return {number} 子元素数量\n   */\n\n\n  Container.prototype.getCount = function () {\n    var children = this.getChildren();\n    return children.length;\n  };\n  /**\n   * 是否包含对应元素\n   * @param {IElement} element 元素\n   * @return {boolean}\n   */\n\n\n  Container.prototype.contain = function (element) {\n    var children = this.getChildren();\n    return children.indexOf(element) > -1;\n  };\n  /**\n   * 移除对应子元素\n   * @param {IElement} element 子元素\n   * @param {boolean} destroy 是否销毁子元素，默认为 true\n   */\n\n\n  Container.prototype.removeChild = function (element, destroy) {\n    if (destroy === void 0) {\n      destroy = true;\n    }\n\n    if (this.contain(element)) {\n      element.remove(destroy);\n    }\n  };\n  /**\n   * 查找所有匹配的元素\n   * @param  {ElementFilterFn}   fn  匹配函数\n   * @return {IElement[]} 元素数组\n   */\n\n\n  Container.prototype.findAll = function (fn) {\n    var rst = [];\n    var children = this.getChildren();\n    each(children, function (element) {\n      if (fn(element)) {\n        rst.push(element);\n      }\n\n      if (element.isGroup()) {\n        rst = rst.concat(element.findAll(fn));\n      }\n    });\n    return rst;\n  };\n  /**\n   * 查找元素，找到第一个返回\n   * @param  {ElementFilterFn} fn    匹配函数\n   * @return {IElement|null} 元素，可以为空\n   */\n\n\n  Container.prototype.find = function (fn) {\n    var rst = null;\n    var children = this.getChildren();\n    each(children, function (element) {\n      if (fn(element)) {\n        rst = element;\n      } else if (element.isGroup()) {\n        rst = element.find(fn);\n      }\n\n      if (rst) {\n        return false;\n      }\n    });\n    return rst;\n  };\n  /**\n   * 根据 ID 查找元素\n   * @param {string} id 元素 id\n   * @return {IElement|null} 元素\n   */\n\n\n  Container.prototype.findById = function (id) {\n    return this.find(function (element) {\n      return element.get('id') === id;\n    });\n  };\n  /**\n   * 该方法即将废弃，不建议使用\n   * 根据 className 查找元素\n   * TODO: 该方式定义暂时只给 G6 3.3 以后的版本使用，待 G6 中的 findByClassName 方法移除后，G 也需要同步移除\n   * @param {string} className 元素 className\n   * @return {IElement | null} 元素\n   */\n\n\n  Container.prototype.findByClassName = function (className) {\n    return this.find(function (element) {\n      return element.get('className') === className;\n    });\n  };\n  /**\n   * 根据 name 查找元素列表\n   * @param {string}      name 元素名称\n   * @return {IElement[]} 元素\n   */\n\n\n  Container.prototype.findAllByName = function (name) {\n    return this.findAll(function (element) {\n      return element.get('name') === name;\n    });\n  };\n\n  return Container;\n}(Element);\n\nexport default Container;","map":{"version":3,"mappings":"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","names":["max","min","Element","isFunction","isObject","each","removeFromArray","upperFirst","isAllowCapture","SHAPE_MAP","INDEX","setCanvas","element","canvas","set","isGroup","children","get","length","forEach","child","setTimeline","timeline","contains","container","getChildren","indexOf","removeChild","destroy","getComparer","compare","left","right","result","__extends","Container","minX","Infinity","maxX","minY","maxY","xArr","yArr","filter","box","getBBox","push","x","y","width","height","getCanvasBBox","cfg","_super","getDefaultCfg","call","name","value","originValue","onAttrChange","totalMatrix","getTotalMatrix","_applyChildrenMarix","matrix","preTotalMatrix","applyMatrix","args","type","shapeType","ShapeBase","getShapeBase","shape","add","group","groupClass","parent","tmpCfg","TmpGroupClass","getGroupBase","isCanvas","ev","v","invertFromMatrix","isClipped","_findShape","i","getShape","isHit","getCanvas","preParent","getParent","onCanvasChange","_applyElementMatrix","index","sort","obj1","obj2","destroyed","clear","getChildByIndex","contain","remove","fn","rst","concat","findAll","find","id","className"],"sourceRoot":"","sources":["../../src/abstract/container.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}