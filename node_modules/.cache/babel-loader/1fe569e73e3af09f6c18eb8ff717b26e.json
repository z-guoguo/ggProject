{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { isAnyArray } from 'is-any-array';\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\n\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\n\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\n\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n\n  if (vector.length !== matrix.columns) {\n    throw new RangeError('vector size must be the same as the number of columns');\n  }\n\n  return vector;\n}\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\n\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n\n  return vector;\n}\nexport function checkRowIndices(matrix, rowIndices) {\n  if (!isAnyArray(rowIndices)) {\n    throw new TypeError('row indices must be an array');\n  }\n\n  for (let i = 0; i < rowIndices.length; i++) {\n    if (rowIndices[i] < 0 || rowIndices[i] >= matrix.rows) {\n      throw new RangeError('row indices are out of range');\n    }\n  }\n}\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (!isAnyArray(columnIndices)) {\n    throw new TypeError('column indices must be an array');\n  }\n\n  for (let i = 0; i < columnIndices.length; i++) {\n    if (columnIndices[i] < 0 || columnIndices[i] >= matrix.columns) {\n      throw new RangeError('column indices are out of range');\n    }\n  }\n}\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n\n  if (startRow > endRow || startColumn > endColumn || startRow < 0 || startRow >= matrix.rows || endRow < 0 || endRow >= matrix.rows || startColumn < 0 || startColumn >= matrix.columns || endColumn < 0 || endColumn >= matrix.columns) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\nexport function newArray(length, value = 0) {\n  let array = [];\n\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}","map":{"version":3,"names":["isAnyArray","checkRowIndex","matrix","index","outer","max","rows","RangeError","checkColumnIndex","columns","checkRowVector","vector","to1DArray","length","checkColumnVector","checkRowIndices","rowIndices","TypeError","i","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","arguments","checkNumber","newArray","value","array","push","name","checkNonEmpty","isEmpty","Error"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/ml-matrix/src/util.js"],"sourcesContent":["import { isAnyArray } from 'is-any-array';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (!isAnyArray(rowIndices)) {\n    throw new TypeError('row indices must be an array');\n  }\n\n  for (let i = 0; i < rowIndices.length; i++) {\n    if (rowIndices[i] < 0 || rowIndices[i] >= matrix.rows) {\n      throw new RangeError('row indices are out of range');\n    }\n  }\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (!isAnyArray(columnIndices)) {\n    throw new TypeError('column indices must be an array');\n  }\n\n  for (let i = 0; i < columnIndices.length; i++) {\n    if (columnIndices[i] < 0 || columnIndices[i] >= matrix.columns) {\n      throw new RangeError('column indices are out of range');\n    }\n  }\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}