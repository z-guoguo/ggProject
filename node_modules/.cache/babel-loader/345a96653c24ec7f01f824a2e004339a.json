{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar _dec, _class, _temp;\n\nimport { injectable } from 'inversify';\nexport var ConfigService = (_dec = injectable(), _dec(_class = (_temp = /*#__PURE__*/function () {\n  function ConfigService() {\n    _classCallCheck(this, ConfigService);\n\n    this.config = void 0;\n  }\n\n  _createClass(ConfigService, [{\n    key: \"get\",\n    value: function get() {\n      return this.config;\n    }\n  }, {\n    key: \"set\",\n    value: function set(config) {\n      this.config = config;\n    }\n  }]);\n\n  return ConfigService;\n}(), _temp)) || _class);","map":{"version":3,"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,WAA3B;AAoBA,WAAaC,aAAb,WADCD,UAAU,EACX;EAAA;IAAAE;;IAAA,KACUC,MADV;EAAA;;EAAAC;IAAAC;IAAAC,sBAGe;MACX,OAAO,KAAKH,MAAZ;IACD;EALH;IAAAE;IAAAC,oBAOaH,MAPb,EAOuC;MACnC,KAAKA,MAAL,GAAcA,MAAd;IACD;EATH;;EAAA;AAAA","names":["injectable","ConfigService","_classCallCheck","config","_createClass","key","value"],"sources":["../../../src/services/config/ConfigService.ts"],"sourcesContent":["import { injectable } from 'inversify';\nimport {\n  IRendererConfig,\n  IRendererService,\n} from '../../components/renderer/IRendererService';\n\nexport interface IConfig {\n  canvas: HTMLCanvasElement;\n  useRenderBundle: boolean;\n  engineOptions: IRendererConfig;\n  onInit: (engine: IRendererService) => void;\n  onUpdate: (engine: IRendererService) => void;\n}\n\nexport interface IConfigService {\n  get(): Partial<IConfig>;\n  set(config: Partial<IConfig>): void;\n}\n\n@injectable()\nexport class ConfigService implements IConfigService {\n  private config: Partial<IConfig>;\n\n  public get() {\n    return this.config;\n  }\n\n  public set(config: Partial<IConfig>) {\n    this.config = config;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}