{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Dom } from '../../util';\nimport { Point } from '../../geometry';\nimport { ToolsView } from '../../view/tool';\n\nclass Arrowhead extends ToolsView.ToolItem {\n  get type() {\n    return this.options.type;\n  }\n\n  get ratio() {\n    return this.options.ratio;\n  }\n\n  init() {\n    if (this.options.attrs) {\n      const _a = this.options.attrs,\n            {\n        class: className\n      } = _a,\n            attrs = __rest(_a, [\"class\"]);\n\n      this.setAttrs(attrs, this.container);\n\n      if (className) {\n        Dom.addClass(this.container, className);\n      }\n    }\n  }\n\n  onRender() {\n    Dom.addClass(this.container, this.prefixClassName(`edge-tool-${this.type}-arrowhead`));\n    this.update();\n  }\n\n  update() {\n    const ratio = this.ratio;\n    const edgeView = this.cellView;\n    const tangent = edgeView.getTangentAtRatio(ratio);\n    const position = tangent ? tangent.start : edgeView.getPointAtRatio(ratio);\n    const angle = tangent && tangent.vector().vectorAngle(new Point(1, 0)) || 0;\n\n    if (!position) {\n      return this;\n    }\n\n    const matrix = Dom.createSVGMatrix().translate(position.x, position.y).rotate(angle);\n    Dom.transform(this.container, matrix, {\n      absolute: true\n    });\n    return this;\n  }\n\n  onMouseDown(evt) {\n    if (this.guard(evt)) {\n      return;\n    }\n\n    evt.stopPropagation();\n    evt.preventDefault();\n    const edgeView = this.cellView;\n\n    if (edgeView.can('arrowheadMovable')) {\n      edgeView.cell.startBatch('move-arrowhead', {\n        ui: true,\n        toolId: this.cid\n      });\n      const coords = this.graph.snapToGrid(evt.clientX, evt.clientY);\n      const data = edgeView.prepareArrowheadDragging(this.type, {\n        x: coords.x,\n        y: coords.y,\n        options: {\n          toolId: this.cid\n        }\n      });\n      this.cellView.setEventData(evt, data);\n      this.delegateDocumentEvents(this.options.documentEvents, evt.data);\n      edgeView.graph.view.undelegateEvents();\n      this.container.style.pointerEvents = 'none';\n    }\n\n    this.focus();\n  }\n\n  onMouseMove(evt) {\n    const e = this.normalizeEvent(evt);\n    const coords = this.graph.snapToGrid(e.clientX, e.clientY);\n    this.cellView.onMouseMove(e, coords.x, coords.y);\n    this.update();\n  }\n\n  onMouseUp(evt) {\n    this.undelegateDocumentEvents();\n    const e = this.normalizeEvent(evt);\n    const edgeView = this.cellView;\n    const coords = this.graph.snapToGrid(e.clientX, e.clientY);\n    edgeView.onMouseUp(e, coords.x, coords.y);\n    this.graph.view.delegateEvents();\n    this.blur();\n    this.container.style.pointerEvents = '';\n    edgeView.cell.stopBatch('move-arrowhead', {\n      ui: true,\n      toolId: this.cid\n    });\n  }\n\n}\n\n(function (Arrowhead) {\n  Arrowhead.config({\n    tagName: 'path',\n    isSVGElement: true,\n    events: {\n      mousedown: 'onMouseDown',\n      touchstart: 'onMouseDown'\n    },\n    documentEvents: {\n      mousemove: 'onMouseMove',\n      touchmove: 'onMouseMove',\n      mouseup: 'onMouseUp',\n      touchend: 'onMouseUp',\n      touchcancel: 'onMouseUp'\n    }\n  });\n})(Arrowhead || (Arrowhead = {}));\n\nexport const SourceArrowhead = Arrowhead.define({\n  name: 'source-arrowhead',\n  type: 'source',\n  ratio: 0,\n  attrs: {\n    d: 'M 10 -8 -10 0 10 8 Z',\n    fill: '#333',\n    stroke: '#fff',\n    'stroke-width': 2,\n    cursor: 'move'\n  }\n});\nexport const TargetArrowhead = Arrowhead.define({\n  name: 'target-arrowhead',\n  type: 'target',\n  ratio: 1,\n  attrs: {\n    d: 'M -10 -8 10 0 -10 8 Z',\n    fill: '#333',\n    stroke: '#fff',\n    'stroke-width': 2,\n    cursor: 'move'\n  }\n});","map":{"version":3,"mappings":"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","names":["Dom","Point","ToolsView","Arrowhead","ToolItem","type","options","ratio","init","attrs","_a","class","className","setAttrs","container","addClass","onRender","prefixClassName","update","edgeView","cellView","tangent","getTangentAtRatio","position","start","getPointAtRatio","angle","vector","vectorAngle","matrix","createSVGMatrix","translate","x","y","rotate","transform","absolute","onMouseDown","evt","guard","stopPropagation","preventDefault","can","cell","startBatch","ui","toolId","cid","coords","graph","snapToGrid","clientX","clientY","data","prepareArrowheadDragging","setEventData","delegateDocumentEvents","documentEvents","view","undelegateEvents","style","pointerEvents","focus","onMouseMove","e","normalizeEvent","onMouseUp","undelegateDocumentEvents","delegateEvents","blur","stopBatch","config","tagName","isSVGElement","events","mousedown","touchstart","mousemove","touchmove","mouseup","touchend","touchcancel","SourceArrowhead","define","name","d","fill","stroke","cursor","TargetArrowhead"],"sourceRoot":"","sources":["../../../src/registry/tool/arrowhead.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}