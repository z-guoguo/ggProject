{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.minBy = exports.notime = exports.time = exports.partition = exports.maxRank = exports.addBorderNode = exports.removeEmptyRanks = exports.normalizeRanks = exports.buildLayerMatrix = exports.intersectRect = exports.predecessorWeights = exports.successorWeights = exports.zipObject = exports.asNonCompoundGraph = exports.simplify = exports.addDummyNode = void 0;\n\nvar util_1 = require(\"../../../util\");\n\nvar graph_1 = require(\"../graph\");\n\nvar safeSort = function (valueA, valueB) {\n  return Number(valueA) - Number(valueB);\n};\n/*\n * Adds a dummy node to the graph and return v.\n */\n\n\nvar addDummyNode = function (g, type, attrs, name) {\n  var v;\n\n  do {\n    v = \"\".concat(name).concat(Math.random());\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n};\n\nexports.addDummyNode = addDummyNode;\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\n\nvar simplify = function (g) {\n  var simplified = new graph_1.Graph().setGraph(g.graph());\n  g.nodes().forEach(function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  g.edges().forEach(function (e) {\n    var simpleLabel = simplified.edgeFromArgs(e.v, e.w) || {\n      weight: 0,\n      minlen: 1\n    };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n};\n\nexports.simplify = simplify;\n\nvar asNonCompoundGraph = function (g) {\n  var simplified = new graph_1.Graph({\n    multigraph: g.isMultigraph()\n  }).setGraph(g.graph());\n  g.nodes().forEach(function (node) {\n    var _a;\n\n    if (!((_a = g.children(node)) === null || _a === void 0 ? void 0 : _a.length)) {\n      simplified.setNode(node, g.node(node));\n    }\n  });\n  g.edges().forEach(function (edge) {\n    simplified.setEdgeObj(edge, g.edge(edge));\n  });\n  return simplified;\n};\n\nexports.asNonCompoundGraph = asNonCompoundGraph;\n\nvar zipObject = function (keys, values) {\n  return keys === null || keys === void 0 ? void 0 : keys.reduce(function (obj, key, i) {\n    obj[key] = values[i];\n    return obj;\n  }, {});\n};\n\nexports.zipObject = zipObject;\n\nvar successorWeights = function (g) {\n  var weightsMap = {};\n  g.nodes().forEach(function (node) {\n    var _a;\n\n    var sucs = {};\n    (_a = g.outEdges(node)) === null || _a === void 0 ? void 0 : _a.forEach(function (e) {\n      var _a;\n\n      sucs[e.w] = (sucs[e.w] || 0) + (((_a = g.edge(e)) === null || _a === void 0 ? void 0 : _a.weight) || 0);\n    });\n    weightsMap[node] = sucs;\n  });\n  return weightsMap;\n};\n\nexports.successorWeights = successorWeights;\n\nvar predecessorWeights = function (g) {\n  var nodes = g.nodes();\n  var weightMap = nodes.map(function (v) {\n    var _a;\n\n    var preds = {};\n    (_a = g.inEdges(v)) === null || _a === void 0 ? void 0 : _a.forEach(function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return (0, exports.zipObject)(nodes, weightMap);\n};\n\nexports.predecessorWeights = predecessorWeights;\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\n\nvar intersectRect = function (rect, point) {\n  var x = Number(rect.x);\n  var y = Number(rect.y); // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n\n  var dx = Number(point.x) - x;\n  var dy = Number(point.y) - y;\n  var w = Number(rect.width) / 2;\n  var h = Number(rect.height) / 2;\n\n  if (!dx && !dy) {\n    // completely overlapped directly, then return points its self\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var sx;\n  var sy;\n\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return {\n    x: x + sx,\n    y: y + sy\n  };\n};\n\nexports.intersectRect = intersectRect;\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * const will produce a matrix with the ids of each node.\n */\n\nvar buildLayerMatrix = function (g) {\n  var layeringNodes = [];\n  var rankMax = (0, exports.maxRank)(g) + 1;\n\n  for (var i = 0; i < rankMax; i++) {\n    layeringNodes.push([]);\n  } // const layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n\n\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n\n    if (rank !== undefined && layeringNodes[rank]) {\n      layeringNodes[rank].push(v);\n    }\n  });\n\n  for (var i = 0; i < rankMax; i++) {\n    layeringNodes[i] = layeringNodes[i].sort(function (va, vb) {\n      var _a, _b;\n\n      return safeSort((_a = g.node(va)) === null || _a === void 0 ? void 0 : _a.order, (_b = g.node(vb)) === null || _b === void 0 ? void 0 : _b.order);\n    });\n  }\n\n  return layeringNodes;\n};\n\nexports.buildLayerMatrix = buildLayerMatrix;\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\n\nvar normalizeRanks = function (g) {\n  var nodeRanks = g.nodes().filter(function (v) {\n    var _a;\n\n    return ((_a = g.node(v)) === null || _a === void 0 ? void 0 : _a.rank) !== undefined;\n  }).map(function (v) {\n    return g.node(v).rank;\n  });\n  var min = Math.min.apply(Math, nodeRanks);\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n\n    if (node.hasOwnProperty(\"rank\") && min !== Infinity) {\n      node.rank -= min;\n    }\n  });\n};\n\nexports.normalizeRanks = normalizeRanks;\n\nvar removeEmptyRanks = function (g) {\n  // Ranks may not start at 0, so we need to offset them\n  var nodes = g.nodes();\n  var nodeRanks = nodes.filter(function (v) {\n    var _a;\n\n    return ((_a = g.node(v)) === null || _a === void 0 ? void 0 : _a.rank) !== undefined;\n  }).map(function (v) {\n    return g.node(v).rank;\n  });\n  var offset = Math.min.apply(Math, nodeRanks);\n  var layers = [];\n  nodes.forEach(function (v) {\n    var _a;\n\n    var rank = (((_a = g.node(v)) === null || _a === void 0 ? void 0 : _a.rank) || 0) - offset;\n\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n\n    layers[rank].push(v);\n  });\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor || 0;\n\n  for (var i = 0; i < layers.length; i++) {\n    var vs = layers[i];\n\n    if (vs === undefined) {\n      if (i % nodeRankFactor !== 0) {\n        delta -= 1;\n      }\n    } else if (delta) {\n      vs === null || vs === void 0 ? void 0 : vs.forEach(function (v) {\n        var node = g.node(v);\n\n        if (node) {\n          node.rank = node.rank || 0;\n          node.rank += delta;\n        }\n      });\n    }\n  }\n};\n\nexports.removeEmptyRanks = removeEmptyRanks;\n\nvar addBorderNode = function (g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n\n  if ((0, util_1.isNumber)(rank) && (0, util_1.isNumber)(order)) {\n    node.rank = rank;\n    node.order = order;\n  }\n\n  return (0, exports.addDummyNode)(g, \"border\", node, prefix);\n};\n\nexports.addBorderNode = addBorderNode;\n\nvar maxRank = function (g) {\n  var maxRank;\n  g.nodes().forEach(function (v) {\n    var _a;\n\n    var rank = (_a = g.node(v)) === null || _a === void 0 ? void 0 : _a.rank;\n\n    if (rank !== undefined) {\n      if (maxRank === undefined || rank > maxRank) {\n        maxRank = rank;\n      }\n    }\n  });\n\n  if (!maxRank) {\n    maxRank = 0;\n  }\n\n  return maxRank;\n};\n\nexports.maxRank = maxRank;\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * const returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\n\nvar partition = function (collection, fn) {\n  var result = {\n    lhs: [],\n    rhs: []\n  };\n  collection === null || collection === void 0 ? void 0 : collection.forEach(function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n};\n\nexports.partition = partition;\n/*\n * Returns a new const that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\n\nvar time = function (name, fn) {\n  var start = Date.now();\n\n  try {\n    return fn();\n  } finally {\n    console.log(\"\".concat(name, \" time: \").concat(Date.now() - start, \"ms\"));\n  }\n};\n\nexports.time = time;\n\nvar notime = function (name, fn) {\n  return fn();\n};\n\nexports.notime = notime;\n\nvar minBy = function (array, func) {\n  return array.reduce(function (a, b) {\n    var valA = func(a);\n    var valB = func(b);\n    return valA > valB ? b : a;\n  });\n};\n\nexports.minBy = minBy;","map":{"version":3,"mappings":"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","names":["safeSort","valueA","valueB","Number","addDummyNode","g","type","attrs","name","v","concat","Math","random","hasNode","dummy","setNode","exports","simplify","simplified","graph_1","setGraph","graph","nodes","forEach","node","edges","e","simpleLabel","edgeFromArgs","w","weight","minlen","label","edge","setEdge","max","asNonCompoundGraph","multigraph","isMultigraph","children","_a","length","setEdgeObj","zipObject","keys","values","reduce","obj","key","i","successorWeights","weightsMap","sucs","outEdges","predecessorWeights","weightMap","map","preds","inEdges","intersectRect","rect","point","x","y","dx","dy","width","h","height","sx","sy","abs","buildLayerMatrix","layeringNodes","rankMax","push","rank","undefined","sort","va","vb","order","_b","normalizeRanks","nodeRanks","filter","min","apply","hasOwnProperty","Infinity","removeEmptyRanks","offset","layers","delta","nodeRankFactor","vs","addBorderNode","prefix","maxRank","partition","collection","fn","result","lhs","rhs","value","time","start","Date","now","console","log","notime","minBy","array","func","a","b","valA","valB"],"sourceRoot":"","sources":["../../../../src/layout/dagre/src/util.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}