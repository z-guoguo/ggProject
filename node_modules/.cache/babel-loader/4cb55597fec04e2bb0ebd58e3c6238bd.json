{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Dom, NumberExt } from '../util';\nimport { Point, Rectangle } from '../geometry';\nimport { Base } from './base';\nexport class TransformManager extends Base {\n  constructor() {\n    super(...arguments);\n    this.widgets = new Map();\n  }\n\n  get container() {\n    return this.graph.view.container;\n  }\n\n  get viewport() {\n    return this.graph.view.viewport;\n  }\n\n  get isSelectionEnabled() {\n    return this.options.selecting.enabled === true;\n  }\n\n  init() {\n    this.startListening();\n    this.resize();\n  }\n\n  startListening() {\n    this.graph.on('node:mouseup', this.onNodeMouseUp, this);\n    this.graph.on('node:selected', this.onNodeSelected, this);\n    this.graph.on('node:unselected', this.onNodeUnSelected, this);\n  }\n\n  stopListening() {\n    this.graph.off('node:mouseup', this.onNodeMouseUp, this);\n    this.graph.off('node:selected', this.onNodeSelected, this);\n    this.graph.off('node:unselected', this.onNodeUnSelected, this);\n  }\n\n  onNodeMouseUp({\n    node\n  }) {\n    if (!this.isSelectionEnabled) {\n      const widget = this.graph.hook.createTransform(node, {\n        clearAll: true\n      });\n\n      if (widget) {\n        this.widgets.set(node, widget);\n      }\n    }\n  }\n\n  onNodeSelected({\n    node\n  }) {\n    if (this.isSelectionEnabled) {\n      const widget = this.graph.hook.createTransform(node, {\n        clearAll: false\n      });\n\n      if (widget) {\n        this.widgets.set(node, widget);\n      }\n    }\n  }\n\n  onNodeUnSelected({\n    node\n  }) {\n    if (this.isSelectionEnabled) {\n      const widget = this.widgets.get(node);\n\n      if (widget) {\n        widget.dispose();\n      }\n\n      this.widgets.delete(node);\n    }\n  }\n  /**\n   * Returns the current transformation matrix of the graph.\n   */\n\n\n  getMatrix() {\n    const transform = this.viewport.getAttribute('transform');\n\n    if (transform !== this.viewportTransformString) {\n      // `getCTM`: top-left relative to the SVG element\n      // `getScreenCTM`: top-left relative to the document\n      this.viewportMatrix = this.viewport.getCTM();\n      this.viewportTransformString = transform;\n    } // Clone the cached current transformation matrix.\n    // If no matrix previously stored the identity matrix is returned.\n\n\n    return Dom.createSVGMatrix(this.viewportMatrix);\n  }\n  /**\n   * Sets new transformation with the given `matrix`\n   */\n\n\n  setMatrix(matrix) {\n    const ctm = Dom.createSVGMatrix(matrix);\n    const transform = Dom.matrixToTransformString(ctm);\n    this.viewport.setAttribute('transform', transform);\n    this.viewportMatrix = ctm;\n    this.viewportTransformString = transform;\n  }\n\n  resize(width, height) {\n    let w = width === undefined ? this.options.width : width;\n    let h = height === undefined ? this.options.height : height;\n    this.options.width = w;\n    this.options.height = h;\n\n    if (typeof w === 'number') {\n      w = Math.round(w);\n    }\n\n    if (typeof h === 'number') {\n      h = Math.round(h);\n    }\n\n    this.container.style.width = w == null ? '' : `${w}px`;\n    this.container.style.height = h == null ? '' : `${h}px`;\n    const size = this.getComputedSize();\n    this.graph.trigger('resize', Object.assign({}, size));\n    return this;\n  }\n\n  getComputedSize() {\n    let w = this.options.width;\n    let h = this.options.height;\n\n    if (!NumberExt.isNumber(w)) {\n      w = this.container.clientWidth;\n    }\n\n    if (!NumberExt.isNumber(h)) {\n      h = this.container.clientHeight;\n    }\n\n    return {\n      width: w,\n      height: h\n    };\n  }\n\n  getScale() {\n    return Dom.matrixToScale(this.getMatrix());\n  }\n\n  scale(sx, sy = sx, ox = 0, oy = 0, options = {}) {\n    sx = this.clampScale(sx); // eslint-disable-line\n\n    sy = this.clampScale(sy); // eslint-disable-line\n\n    if (ox || oy) {\n      const ts = this.getTranslation();\n      const tx = ts.tx - ox * (sx - 1);\n      const ty = ts.ty - oy * (sy - 1);\n\n      if (tx !== ts.tx || ty !== ts.ty) {\n        this.translate(tx, ty);\n      }\n    }\n\n    const matrix = this.getMatrix();\n    matrix.a = sx;\n    matrix.d = sy;\n    this.setMatrix(matrix);\n    this.graph.trigger('scale', Object.assign({\n      sx,\n      sy,\n      ox,\n      oy\n    }, options));\n    return this;\n  }\n\n  clampScale(scale) {\n    const range = this.graph.options.scaling;\n    return NumberExt.clamp(scale, range.min || 0.01, range.max || 16);\n  }\n\n  getZoom() {\n    return this.getScale().sx;\n  }\n\n  zoom(factor, options) {\n    options = options || {}; // eslint-disable-line\n\n    let sx = factor;\n    let sy = factor;\n    const scale = this.getScale();\n    const clientSize = this.getComputedSize();\n    let cx = clientSize.width / 2;\n    let cy = clientSize.height / 2;\n\n    if (!options.absolute) {\n      sx += scale.sx;\n      sy += scale.sy;\n    }\n\n    if (options.scaleGrid) {\n      sx = Math.round(sx / options.scaleGrid) * options.scaleGrid;\n      sy = Math.round(sy / options.scaleGrid) * options.scaleGrid;\n    }\n\n    if (options.maxScale) {\n      sx = Math.min(options.maxScale, sx);\n      sy = Math.min(options.maxScale, sy);\n    }\n\n    if (options.minScale) {\n      sx = Math.max(options.minScale, sx);\n      sy = Math.max(options.minScale, sy);\n    }\n\n    if (options.center) {\n      cx = options.center.x;\n      cy = options.center.y;\n    }\n\n    sx = this.clampScale(sx);\n    sy = this.clampScale(sy);\n\n    if (cx || cy) {\n      const ts = this.getTranslation();\n      const tx = cx - (cx - ts.tx) * (sx / scale.sx);\n      const ty = cy - (cy - ts.ty) * (sy / scale.sy);\n\n      if (tx !== ts.tx || ty !== ts.ty) {\n        this.translate(tx, ty, {\n          ui: options.ui\n        });\n      }\n    }\n\n    this.scale(sx, sy, 0, 0, {\n      ui: options.ui\n    });\n    return this;\n  }\n\n  getRotation() {\n    return Dom.matrixToRotation(this.getMatrix());\n  }\n\n  rotate(angle, cx, cy) {\n    if (cx == null || cy == null) {\n      const bbox = Dom.getBBox(this.graph.view.stage);\n      cx = bbox.width / 2; // eslint-disable-line\n\n      cy = bbox.height / 2; // eslint-disable-line\n    }\n\n    const ctm = this.getMatrix().translate(cx, cy).rotate(angle).translate(-cx, -cy);\n    this.setMatrix(ctm);\n    return this;\n  }\n\n  getTranslation() {\n    return Dom.matrixToTranslation(this.getMatrix());\n  }\n\n  translate(tx, ty, options = {}) {\n    const matrix = this.getMatrix();\n    matrix.e = tx || 0;\n    matrix.f = ty || 0;\n    this.setMatrix(matrix);\n    const ts = this.getTranslation();\n    this.options.x = ts.tx;\n    this.options.y = ts.ty;\n    this.graph.trigger('translate', Object.assign(Object.assign({}, ts), options));\n    return this;\n  }\n\n  setOrigin(ox, oy) {\n    return this.translate(ox || 0, oy || 0);\n  }\n\n  fitToContent(gridWidth, gridHeight, padding, options) {\n    if (typeof gridWidth === 'object') {\n      const opts = gridWidth;\n      gridWidth = opts.gridWidth || 1; // eslint-disable-line\n\n      gridHeight = opts.gridHeight || 1; // eslint-disable-line\n\n      padding = opts.padding || 0; // eslint-disable-line\n\n      options = opts; // eslint-disable-line\n    } else {\n      gridWidth = gridWidth || 1; // eslint-disable-line\n\n      gridHeight = gridHeight || 1; // eslint-disable-line\n\n      padding = padding || 0; // eslint-disable-line\n\n      if (options == null) {\n        options = {}; // eslint-disable-line\n      }\n    }\n\n    const paddings = NumberExt.normalizeSides(padding);\n    const border = options.border || 0;\n    const contentArea = options.contentArea ? Rectangle.create(options.contentArea) : this.getContentArea(options);\n\n    if (border > 0) {\n      contentArea.inflate(border);\n    }\n\n    const scale = this.getScale();\n    const translate = this.getTranslation();\n    const sx = scale.sx;\n    const sy = scale.sy;\n    contentArea.x *= sx;\n    contentArea.y *= sy;\n    contentArea.width *= sx;\n    contentArea.height *= sy;\n    let width = Math.max(Math.ceil((contentArea.width + contentArea.x) / gridWidth), 1) * gridWidth;\n    let height = Math.max(Math.ceil((contentArea.height + contentArea.y) / gridHeight), 1) * gridHeight;\n    let tx = 0;\n    let ty = 0;\n\n    if (options.allowNewOrigin === 'negative' && contentArea.x < 0 || options.allowNewOrigin === 'positive' && contentArea.x >= 0 || options.allowNewOrigin === 'any') {\n      tx = Math.ceil(-contentArea.x / gridWidth) * gridWidth;\n      tx += paddings.left;\n      width += tx;\n    }\n\n    if (options.allowNewOrigin === 'negative' && contentArea.y < 0 || options.allowNewOrigin === 'positive' && contentArea.y >= 0 || options.allowNewOrigin === 'any') {\n      ty = Math.ceil(-contentArea.y / gridHeight) * gridHeight;\n      ty += paddings.top;\n      height += ty;\n    }\n\n    width += paddings.right;\n    height += paddings.bottom; // Make sure the resulting width and height are greater than minimum.\n\n    width = Math.max(width, options.minWidth || 0);\n    height = Math.max(height, options.minHeight || 0); // Make sure the resulting width and height are lesser than maximum.\n\n    width = Math.min(width, options.maxWidth || Number.MAX_SAFE_INTEGER);\n    height = Math.min(height, options.maxHeight || Number.MAX_SAFE_INTEGER);\n    const size = this.getComputedSize();\n    const sizeChanged = width !== size.width || height !== size.height;\n    const originChanged = tx !== translate.tx || ty !== translate.ty; // Change the dimensions only if there is a size discrepency or an origin change\n\n    if (originChanged) {\n      this.translate(tx, ty);\n    }\n\n    if (sizeChanged) {\n      this.resize(width, height);\n    }\n\n    return new Rectangle(-tx / sx, -ty / sy, width / sx, height / sy);\n  }\n\n  scaleContentToFit(options = {}) {\n    this.scaleContentToFitImpl(options);\n  }\n\n  scaleContentToFitImpl(options = {}, translate = true) {\n    let contentBBox;\n    let contentLocalOrigin;\n\n    if (options.contentArea) {\n      const contentArea = options.contentArea;\n      contentBBox = this.graph.localToGraph(contentArea);\n      contentLocalOrigin = Point.create(contentArea);\n    } else {\n      contentBBox = this.getContentBBox(options);\n      contentLocalOrigin = this.graph.graphToLocal(contentBBox);\n    }\n\n    if (!contentBBox.width || !contentBBox.height) {\n      return;\n    }\n\n    const padding = NumberExt.normalizeSides(options.padding);\n    const minScale = options.minScale || 0;\n    const maxScale = options.maxScale || Number.MAX_SAFE_INTEGER;\n    const minScaleX = options.minScaleX || minScale;\n    const maxScaleX = options.maxScaleX || maxScale;\n    const minScaleY = options.minScaleY || minScale;\n    const maxScaleY = options.maxScaleY || maxScale;\n    let fittingBox;\n\n    if (options.viewportArea) {\n      fittingBox = options.viewportArea;\n    } else {\n      const computedSize = this.getComputedSize();\n      const currentTranslate = this.getTranslation();\n      fittingBox = {\n        x: currentTranslate.tx,\n        y: currentTranslate.ty,\n        width: computedSize.width,\n        height: computedSize.height\n      };\n    }\n\n    fittingBox = Rectangle.create(fittingBox).moveAndExpand({\n      x: padding.left,\n      y: padding.top,\n      width: -padding.left - padding.right,\n      height: -padding.top - padding.bottom\n    });\n    const currentScale = this.getScale();\n    let newSX = fittingBox.width / contentBBox.width * currentScale.sx;\n    let newSY = fittingBox.height / contentBBox.height * currentScale.sy;\n\n    if (options.preserveAspectRatio !== false) {\n      newSX = newSY = Math.min(newSX, newSY);\n    } // snap scale to a grid\n\n\n    const gridSize = options.scaleGrid;\n\n    if (gridSize) {\n      newSX = gridSize * Math.floor(newSX / gridSize);\n      newSY = gridSize * Math.floor(newSY / gridSize);\n    } // scale min/max boundaries\n\n\n    newSX = NumberExt.clamp(newSX, minScaleX, maxScaleX);\n    newSY = NumberExt.clamp(newSY, minScaleY, maxScaleY);\n    this.scale(newSX, newSY);\n\n    if (translate) {\n      const origin = this.options;\n      const newOX = fittingBox.x - contentLocalOrigin.x * newSX - origin.x;\n      const newOY = fittingBox.y - contentLocalOrigin.y * newSY - origin.y;\n      this.translate(newOX, newOY);\n    }\n  }\n\n  getContentArea(options = {}) {\n    if (options.useCellGeometry) {\n      return this.model.getAllCellsBBox() || new Rectangle();\n    }\n\n    return Dom.getBBox(this.graph.view.stage);\n  }\n\n  getContentBBox(options = {}) {\n    return this.graph.localToGraph(this.getContentArea(options));\n  }\n\n  getGraphArea() {\n    const rect = Rectangle.fromSize(this.getComputedSize());\n    return this.graph.graphToLocal(rect);\n  }\n\n  zoomToRect(rect, options = {}) {\n    const area = Rectangle.create(rect);\n    const graph = this.graph;\n    options.contentArea = area;\n\n    if (options.viewportArea == null) {\n      options.viewportArea = {\n        x: graph.options.x,\n        y: graph.options.y,\n        width: this.options.width,\n        height: this.options.height\n      };\n    }\n\n    this.scaleContentToFitImpl(options, false);\n    const center = area.getCenter();\n    this.centerPoint(center.x, center.y);\n    return this;\n  }\n\n  zoomToFit(options = {}) {\n    return this.zoomToRect(this.getContentArea(options), options);\n  }\n\n  centerPoint(x, y) {\n    const clientSize = this.getComputedSize();\n    const scale = this.getScale();\n    const ts = this.getTranslation();\n    const cx = clientSize.width / 2;\n    const cy = clientSize.height / 2;\n    x = typeof x === 'number' ? x : cx; // eslint-disable-line\n\n    y = typeof y === 'number' ? y : cy; // eslint-disable-line\n\n    x = cx - x * scale.sx; // eslint-disable-line\n\n    y = cy - y * scale.sy; // eslint-disable-line\n\n    if (ts.tx !== x || ts.ty !== y) {\n      this.translate(x, y);\n    }\n  }\n\n  centerContent(options) {\n    const rect = this.graph.getContentArea(options);\n    const center = rect.getCenter();\n    this.centerPoint(center.x, center.y);\n  }\n\n  centerCell(cell) {\n    return this.positionCell(cell, 'center');\n  }\n\n  positionPoint(point, x, y) {\n    const clientSize = this.getComputedSize(); // eslint-disable-next-line\n\n    x = NumberExt.normalizePercentage(x, Math.max(0, clientSize.width));\n\n    if (x < 0) {\n      x = clientSize.width + x; // eslint-disable-line\n    } // eslint-disable-next-line\n\n\n    y = NumberExt.normalizePercentage(y, Math.max(0, clientSize.height));\n\n    if (y < 0) {\n      y = clientSize.height + y; // eslint-disable-line\n    }\n\n    const ts = this.getTranslation();\n    const scale = this.getScale();\n    const dx = x - point.x * scale.sx;\n    const dy = y - point.y * scale.sy;\n\n    if (ts.tx !== dx || ts.ty !== dy) {\n      this.translate(dx, dy);\n    }\n  }\n\n  positionRect(rect, pos) {\n    const bbox = Rectangle.create(rect);\n\n    switch (pos) {\n      case 'center':\n        return this.positionPoint(bbox.getCenter(), '50%', '50%');\n\n      case 'top':\n        return this.positionPoint(bbox.getTopCenter(), '50%', 0);\n\n      case 'top-right':\n        return this.positionPoint(bbox.getTopRight(), '100%', 0);\n\n      case 'right':\n        return this.positionPoint(bbox.getRightMiddle(), '100%', '50%');\n\n      case 'bottom-right':\n        return this.positionPoint(bbox.getBottomRight(), '100%', '100%');\n\n      case 'bottom':\n        return this.positionPoint(bbox.getBottomCenter(), '50%', '100%');\n\n      case 'bottom-left':\n        return this.positionPoint(bbox.getBottomLeft(), 0, '100%');\n\n      case 'left':\n        return this.positionPoint(bbox.getLeftMiddle(), 0, '50%');\n\n      case 'top-left':\n        return this.positionPoint(bbox.getTopLeft(), 0, 0);\n\n      default:\n        return this;\n    }\n  }\n\n  positionCell(cell, pos) {\n    const bbox = cell.getBBox();\n    return this.positionRect(bbox, pos);\n  }\n\n  positionContent(pos, options) {\n    const rect = this.graph.getContentArea(options);\n    return this.positionRect(rect, pos);\n  }\n\n  dispose() {\n    this.widgets.forEach(widget => widget.dispose());\n    this.widgets.clear();\n    this.stopListening();\n  }\n\n}\n\n__decorate([TransformManager.dispose()], TransformManager.prototype, \"dispose\", null);","map":{"version":3,"mappings":"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","names":["Dom","NumberExt","Point","Rectangle","Base","TransformManager","constructor","Map","container","graph","view","viewport","isSelectionEnabled","options","selecting","enabled","init","startListening","resize","on","onNodeMouseUp","onNodeSelected","onNodeUnSelected","stopListening","off","node","widget","hook","createTransform","clearAll","widgets","set","get","dispose","delete","getMatrix","transform","getAttribute","viewportTransformString","viewportMatrix","getCTM","createSVGMatrix","setMatrix","matrix","ctm","matrixToTransformString","setAttribute","width","height","w","undefined","h","Math","round","style","size","getComputedSize","trigger","Object","isNumber","clientWidth","clientHeight","getScale","matrixToScale","scale","sx","sy","ox","oy","clampScale","ts","getTranslation","tx","ty","translate","a","d","range","scaling","clamp","min","max","getZoom","zoom","factor","clientSize","cx","cy","absolute","scaleGrid","maxScale","minScale","center","x","y","ui","getRotation","matrixToRotation","rotate","angle","bbox","getBBox","stage","matrixToTranslation","e","f","setOrigin","fitToContent","gridWidth","gridHeight","padding","opts","paddings","normalizeSides","border","contentArea","create","getContentArea","inflate","ceil","allowNewOrigin","left","top","right","bottom","minWidth","minHeight","maxWidth","Number","MAX_SAFE_INTEGER","maxHeight","sizeChanged","originChanged","scaleContentToFit","scaleContentToFitImpl","contentBBox","contentLocalOrigin","localToGraph","getContentBBox","graphToLocal","minScaleX","maxScaleX","minScaleY","maxScaleY","fittingBox","viewportArea","computedSize","currentTranslate","moveAndExpand","currentScale","newSX","newSY","preserveAspectRatio","gridSize","floor","origin","newOX","newOY","useCellGeometry","model","getAllCellsBBox","getGraphArea","rect","fromSize","zoomToRect","area","getCenter","centerPoint","zoomToFit","centerContent","centerCell","cell","positionCell","positionPoint","point","normalizePercentage","dx","dy","positionRect","pos","getTopCenter","getTopRight","getRightMiddle","getBottomRight","getBottomCenter","getBottomLeft","getLeftMiddle","getTopLeft","positionContent","forEach","clear","__decorate"],"sourceRoot":"","sources":["../../src/graph/transform.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}