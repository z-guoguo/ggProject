{"ast":null,"code":"import { Base } from './base';\nexport class KnobManager extends Base {\n  constructor() {\n    super(...arguments);\n    this.widgets = new Map();\n  }\n\n  get isSelectionEnabled() {\n    return this.options.selecting.enabled === true;\n  }\n\n  init() {\n    this.startListening();\n  }\n\n  startListening() {\n    this.graph.on('node:mouseup', this.onNodeMouseUp, this);\n    this.graph.on('node:selected', this.onNodeSelected, this);\n    this.graph.on('node:unselected', this.onNodeUnSelected, this);\n  }\n\n  stopListening() {\n    this.graph.off('node:mouseup', this.onNodeMouseUp, this);\n    this.graph.off('node:selected', this.onNodeSelected, this);\n    this.graph.off('node:unselected', this.onNodeUnSelected, this);\n  }\n\n  onNodeMouseUp({\n    node\n  }) {\n    if (!this.isSelectionEnabled) {\n      const widgets = this.graph.hook.createKnob(node, {\n        clearAll: true\n      });\n\n      if (widgets) {\n        this.widgets.set(node, widgets);\n      }\n    }\n  }\n\n  onNodeSelected({\n    node\n  }) {\n    if (this.isSelectionEnabled) {\n      const widgets = this.graph.hook.createKnob(node, {\n        clearAll: false\n      });\n\n      if (widgets) {\n        this.widgets.set(node, widgets);\n      }\n    }\n  }\n\n  onNodeUnSelected({\n    node\n  }) {\n    if (this.isSelectionEnabled) {\n      const widgets = this.widgets.get(node);\n\n      if (widgets) {\n        widgets.forEach(widget => widget.dispose());\n      }\n\n      this.widgets.delete(node);\n    }\n  }\n\n}","map":{"version":3,"mappings":"AAEA,SAASA,IAAT,QAAqB,QAArB;AAGA,OAAM,MAAOC,WAAP,SAA2BD,IAA3B,CAA+B;EAArCE;;IACY,eAA6B,IAAIC,GAAJ,EAA7B;EAiDX;;EA/CiC,IAAlBC,kBAAkB;IAC9B,OAAO,KAAKC,OAAL,CAAaC,SAAb,CAAuBC,OAAvB,KAAmC,IAA1C;EACD;;EAESC,IAAI;IACZ,KAAKC,cAAL;EACD;;EAESA,cAAc;IACtB,KAAKC,KAAL,CAAWC,EAAX,CAAc,cAAd,EAA8B,KAAKC,aAAnC,EAAkD,IAAlD;IACA,KAAKF,KAAL,CAAWC,EAAX,CAAc,eAAd,EAA+B,KAAKE,cAApC,EAAoD,IAApD;IACA,KAAKH,KAAL,CAAWC,EAAX,CAAc,iBAAd,EAAiC,KAAKG,gBAAtC,EAAwD,IAAxD;EACD;;EAESC,aAAa;IACrB,KAAKL,KAAL,CAAWM,GAAX,CAAe,cAAf,EAA+B,KAAKJ,aAApC,EAAmD,IAAnD;IACA,KAAKF,KAAL,CAAWM,GAAX,CAAe,eAAf,EAAgC,KAAKH,cAArC,EAAqD,IAArD;IACA,KAAKH,KAAL,CAAWM,GAAX,CAAe,iBAAf,EAAkC,KAAKF,gBAAvC,EAAyD,IAAzD;EACD;;EAESF,aAAa,CAAC;IAAEK;EAAF,CAAD,EAAoC;IACzD,IAAI,CAAC,KAAKb,kBAAV,EAA8B;MAC5B,MAAMc,OAAO,GAAG,KAAKR,KAAL,CAAWS,IAAX,CAAgBC,UAAhB,CAA2BH,IAA3B,EAAiC;QAAEI,QAAQ,EAAE;MAAZ,CAAjC,CAAhB;;MACA,IAAIH,OAAJ,EAAa;QACX,KAAKA,OAAL,CAAaI,GAAb,CAAiBL,IAAjB,EAAuBC,OAAvB;MACD;IACF;EACF;;EAESL,cAAc,CAAC;IAAEI;EAAF,CAAD,EAAqC;IAC3D,IAAI,KAAKb,kBAAT,EAA6B;MAC3B,MAAMc,OAAO,GAAG,KAAKR,KAAL,CAAWS,IAAX,CAAgBC,UAAhB,CAA2BH,IAA3B,EAAiC;QAAEI,QAAQ,EAAE;MAAZ,CAAjC,CAAhB;;MACA,IAAIH,OAAJ,EAAa;QACX,KAAKA,OAAL,CAAaI,GAAb,CAAiBL,IAAjB,EAAuBC,OAAvB;MACD;IACF;EACF;;EAESJ,gBAAgB,CAAC;IAAEG;EAAF,CAAD,EAAuC;IAC/D,IAAI,KAAKb,kBAAT,EAA6B;MAC3B,MAAMc,OAAO,GAAG,KAAKA,OAAL,CAAaK,GAAb,CAAiBN,IAAjB,CAAhB;;MACA,IAAIC,OAAJ,EAAa;QACXA,OAAO,CAACM,OAAR,CAAiBC,MAAD,IAAYA,MAAM,CAACC,OAAP,EAA5B;MACD;;MACD,KAAKR,OAAL,CAAaS,MAAb,CAAoBV,IAApB;IACD;EACF;;AAjDkC","names":["Base","KnobManager","constructor","Map","isSelectionEnabled","options","selecting","enabled","init","startListening","graph","on","onNodeMouseUp","onNodeSelected","onNodeUnSelected","stopListening","off","node","widgets","hook","createKnob","clearAll","set","get","forEach","widget","dispose","delete"],"sourceRoot":"","sources":["../../src/graph/knob.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}