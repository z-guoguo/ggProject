{"ast":null,"code":"import { Point, Path } from '../../geometry';\nexport const rounded = function (sourcePoint, targetPoint, routePoints, options = {}) {\n  const path = new Path();\n  path.appendSegment(Path.createSegment('M', sourcePoint));\n  const f13 = 1 / 3;\n  const f23 = 2 / 3;\n  const radius = options.radius || 10;\n  let prevDistance;\n  let nextDistance;\n\n  for (let i = 0, ii = routePoints.length; i < ii; i += 1) {\n    const curr = Point.create(routePoints[i]);\n    const prev = routePoints[i - 1] || sourcePoint;\n    const next = routePoints[i + 1] || targetPoint;\n    prevDistance = nextDistance || curr.distance(prev) / 2;\n    nextDistance = curr.distance(next) / 2;\n    const startMove = -Math.min(radius, prevDistance);\n    const endMove = -Math.min(radius, nextDistance);\n    const roundedStart = curr.clone().move(prev, startMove).round();\n    const roundedEnd = curr.clone().move(next, endMove).round();\n    const control1 = new Point(f13 * roundedStart.x + f23 * curr.x, f23 * curr.y + f13 * roundedStart.y);\n    const control2 = new Point(f13 * roundedEnd.x + f23 * curr.x, f23 * curr.y + f13 * roundedEnd.y);\n    path.appendSegment(Path.createSegment('L', roundedStart));\n    path.appendSegment(Path.createSegment('C', control1, control2, roundedEnd));\n  }\n\n  path.appendSegment(Path.createSegment('L', targetPoint));\n  return options.raw ? path : path.serialize();\n};","map":{"version":3,"mappings":"AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,gBAA5B;AAOA,OAAO,MAAMC,OAAO,GAAkD,UACpEC,WADoE,EAEpEC,WAFoE,EAGpEC,WAHoE,EAIpEC,OAAO,GAAG,EAJ0D,EAIxD;EAEZ,MAAMC,IAAI,GAAG,IAAIN,IAAJ,EAAb;EAEAM,IAAI,CAACC,aAAL,CAAmBP,IAAI,CAACQ,aAAL,CAAmB,GAAnB,EAAwBN,WAAxB,CAAnB;EAEA,MAAMO,GAAG,GAAG,IAAI,CAAhB;EACA,MAAMC,GAAG,GAAG,IAAI,CAAhB;EACA,MAAMC,MAAM,GAAGN,OAAO,CAACM,MAAR,IAAkB,EAAjC;EAEA,IAAIC,YAAJ;EACA,IAAIC,YAAJ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGX,WAAW,CAACY,MAAjC,EAAyCF,CAAC,GAAGC,EAA7C,EAAiDD,CAAC,IAAI,CAAtD,EAAyD;IACvD,MAAMG,IAAI,GAAGlB,KAAK,CAACmB,MAAN,CAAad,WAAW,CAACU,CAAD,CAAxB,CAAb;IACA,MAAMK,IAAI,GAAGf,WAAW,CAACU,CAAC,GAAG,CAAL,CAAX,IAAsBZ,WAAnC;IACA,MAAMkB,IAAI,GAAGhB,WAAW,CAACU,CAAC,GAAG,CAAL,CAAX,IAAsBX,WAAnC;IAEAS,YAAY,GAAGC,YAAY,IAAII,IAAI,CAACI,QAAL,CAAcF,IAAd,IAAsB,CAArD;IACAN,YAAY,GAAGI,IAAI,CAACI,QAAL,CAAcD,IAAd,IAAsB,CAArC;IAEA,MAAME,SAAS,GAAG,CAACC,IAAI,CAACC,GAAL,CAASb,MAAT,EAAiBC,YAAjB,CAAnB;IACA,MAAMa,OAAO,GAAG,CAACF,IAAI,CAACC,GAAL,CAASb,MAAT,EAAiBE,YAAjB,CAAjB;IAEA,MAAMa,YAAY,GAAGT,IAAI,CAACU,KAAL,GAAaC,IAAb,CAAkBT,IAAlB,EAAwBG,SAAxB,EAAmCO,KAAnC,EAArB;IACA,MAAMC,UAAU,GAAGb,IAAI,CAACU,KAAL,GAAaC,IAAb,CAAkBR,IAAlB,EAAwBK,OAAxB,EAAiCI,KAAjC,EAAnB;IAEA,MAAME,QAAQ,GAAG,IAAIhC,KAAJ,CACfU,GAAG,GAAGiB,YAAY,CAACM,CAAnB,GAAuBtB,GAAG,GAAGO,IAAI,CAACe,CADnB,EAEftB,GAAG,GAAGO,IAAI,CAACgB,CAAX,GAAexB,GAAG,GAAGiB,YAAY,CAACO,CAFnB,CAAjB;IAIA,MAAMC,QAAQ,GAAG,IAAInC,KAAJ,CACfU,GAAG,GAAGqB,UAAU,CAACE,CAAjB,GAAqBtB,GAAG,GAAGO,IAAI,CAACe,CADjB,EAEftB,GAAG,GAAGO,IAAI,CAACgB,CAAX,GAAexB,GAAG,GAAGqB,UAAU,CAACG,CAFjB,CAAjB;IAKA3B,IAAI,CAACC,aAAL,CAAmBP,IAAI,CAACQ,aAAL,CAAmB,GAAnB,EAAwBkB,YAAxB,CAAnB;IACApB,IAAI,CAACC,aAAL,CAAmBP,IAAI,CAACQ,aAAL,CAAmB,GAAnB,EAAwBuB,QAAxB,EAAkCG,QAAlC,EAA4CJ,UAA5C,CAAnB;EACD;;EAEDxB,IAAI,CAACC,aAAL,CAAmBP,IAAI,CAACQ,aAAL,CAAmB,GAAnB,EAAwBL,WAAxB,CAAnB;EAEA,OAAOE,OAAO,CAAC8B,GAAR,GAAc7B,IAAd,GAAqBA,IAAI,CAAC8B,SAAL,EAA5B;AACD,CA9CM","names":["Point","Path","rounded","sourcePoint","targetPoint","routePoints","options","path","appendSegment","createSegment","f13","f23","radius","prevDistance","nextDistance","i","ii","length","curr","create","prev","next","distance","startMove","Math","min","endMove","roundedStart","clone","move","round","roundedEnd","control1","x","y","control2","raw","serialize"],"sourceRoot":"","sources":["../../../src/registry/connector/rounded.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}