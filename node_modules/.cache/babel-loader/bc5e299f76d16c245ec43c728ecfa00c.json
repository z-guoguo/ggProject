{"ast":null,"code":"import { ObjectExt, Dom } from '../util';\nimport { Timing, Interp } from '../common';\nexport class Animation {\n  constructor(cell) {\n    this.cell = cell;\n    this.ids = {};\n    this.cache = {};\n  }\n\n  get() {\n    return Object.keys(this.ids);\n  }\n\n  start(path, targetValue, options = {}, delim = '/') {\n    const startValue = this.cell.getPropByPath(path);\n    const localOptions = ObjectExt.defaults(options, Animation.defaultOptions);\n    const timing = this.getTiming(localOptions.timing);\n    const interpolate = this.getInterp(localOptions.interp, startValue, targetValue);\n    let startTime = 0;\n    const key = Array.isArray(path) ? path.join(delim) : path;\n    const paths = Array.isArray(path) ? path : path.split(delim);\n\n    const iterate = () => {\n      const now = new Date().getTime();\n\n      if (startTime === 0) {\n        startTime = now;\n      }\n\n      const elaspe = now - startTime;\n      let progress = elaspe / localOptions.duration;\n\n      if (progress < 1) {\n        this.ids[key] = Dom.requestAnimationFrame(iterate);\n      } else {\n        progress = 1;\n      }\n\n      const currentValue = interpolate(timing(progress));\n      this.cell.setPropByPath(paths, currentValue);\n\n      if (options.progress) {\n        options.progress(Object.assign({\n          progress,\n          currentValue\n        }, this.getArgs(key)));\n      }\n\n      if (progress === 1) {\n        // TODO: remove in the next major version\n        this.cell.notify('transition:end', this.getArgs(key));\n        this.cell.notify('transition:complete', this.getArgs(key));\n        options.complete && options.complete(this.getArgs(key));\n        this.cell.notify('transition:finish', this.getArgs(key));\n        options.finish && options.finish(this.getArgs(key));\n        this.clean(key);\n      }\n    };\n\n    setTimeout(() => {\n      this.stop(path, undefined, delim);\n      this.cache[key] = {\n        startValue,\n        targetValue,\n        options: localOptions\n      };\n      this.ids[key] = Dom.requestAnimationFrame(iterate); // TODO: remove in the next major version\n\n      this.cell.notify('transition:begin', this.getArgs(key));\n      this.cell.notify('transition:start', this.getArgs(key));\n      options.start && options.start(this.getArgs(key));\n    }, options.delay);\n    return this.stop.bind(this, path, delim, options);\n  }\n\n  stop(path, options = {}, delim = '/') {\n    const paths = Array.isArray(path) ? path : path.split(delim);\n    Object.keys(this.ids).filter(key => ObjectExt.isEqual(paths, key.split(delim).slice(0, paths.length))).forEach(key => {\n      Dom.cancelAnimationFrame(this.ids[key]);\n      const data = this.cache[key];\n      const commonArgs = this.getArgs(key);\n      const localOptions = Object.assign(Object.assign({}, data.options), options);\n      const jumpedToEnd = localOptions.jumpedToEnd;\n\n      if (jumpedToEnd && data.targetValue != null) {\n        this.cell.setPropByPath(key, data.targetValue);\n        this.cell.notify('transition:end', Object.assign({}, commonArgs));\n        this.cell.notify('transition:complete', Object.assign({}, commonArgs));\n        localOptions.complete && localOptions.complete(Object.assign({}, commonArgs));\n      }\n\n      const stopArgs = Object.assign({\n        jumpedToEnd\n      }, commonArgs);\n      this.cell.notify('transition:stop', Object.assign({}, stopArgs));\n      localOptions.stop && localOptions.stop(Object.assign({}, stopArgs));\n      this.cell.notify('transition:finish', Object.assign({}, commonArgs));\n      localOptions.finish && localOptions.finish(Object.assign({}, commonArgs));\n      this.clean(key);\n    });\n    return this;\n  }\n\n  clean(key) {\n    delete this.ids[key];\n    delete this.cache[key];\n  }\n\n  getTiming(timing) {\n    return typeof timing === 'string' ? Timing[timing] : timing;\n  }\n\n  getInterp(interp, startValue, targetValue) {\n    if (interp) {\n      return interp(startValue, targetValue);\n    }\n\n    if (typeof targetValue === 'number') {\n      return Interp.number(startValue, targetValue);\n    }\n\n    if (typeof targetValue === 'string') {\n      if (targetValue[0] === '#') {\n        return Interp.color(startValue, targetValue);\n      }\n\n      return Interp.unit(startValue, targetValue);\n    }\n\n    return Interp.object(startValue, targetValue);\n  }\n\n  getArgs(key) {\n    const data = this.cache[key];\n    return {\n      path: key,\n      startValue: data.startValue,\n      targetValue: data.targetValue,\n      cell: this.cell\n    };\n  }\n\n}\n\n(function (Animation) {\n  Animation.defaultOptions = {\n    delay: 10,\n    duration: 100,\n    timing: 'linear'\n  };\n})(Animation || (Animation = {}));","map":{"version":3,"mappings":"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","names":["ObjectExt","Dom","Timing","Interp","Animation","constructor","cell","get","Object","keys","ids","start","path","targetValue","options","delim","startValue","getPropByPath","localOptions","defaults","defaultOptions","timing","getTiming","interpolate","getInterp","interp","startTime","key","Array","isArray","join","paths","split","iterate","now","Date","getTime","elaspe","progress","duration","requestAnimationFrame","currentValue","setPropByPath","getArgs","notify","complete","finish","clean","setTimeout","stop","undefined","cache","delay","bind","filter","isEqual","slice","length","forEach","cancelAnimationFrame","data","commonArgs","jumpedToEnd","stopArgs","number","color","unit","object"],"sourceRoot":"","sources":["../../src/model/animation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}