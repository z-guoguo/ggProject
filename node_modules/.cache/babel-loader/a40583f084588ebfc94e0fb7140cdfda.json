{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { NumberExt, Dom } from '../../util';\nimport { ToolsView } from '../../view/tool';\nimport * as Util from './util';\nexport class Boundary extends ToolsView.ToolItem {\n  onRender() {\n    Dom.addClass(this.container, this.prefixClassName('cell-tool-boundary'));\n\n    if (this.options.attrs) {\n      const _a = this.options.attrs,\n            {\n        class: className\n      } = _a,\n            attrs = __rest(_a, [\"class\"]);\n\n      Dom.attr(this.container, Dom.kebablizeAttrs(attrs));\n\n      if (className) {\n        Dom.addClass(this.container, className);\n      }\n    }\n\n    this.update();\n  }\n\n  update() {\n    const view = this.cellView;\n    const options = this.options;\n    const {\n      useCellGeometry,\n      rotate\n    } = options;\n    const padding = NumberExt.normalizeSides(options.padding);\n    let bbox = Util.getViewBBox(view, useCellGeometry).moveAndExpand({\n      x: -padding.left,\n      y: -padding.top,\n      width: padding.left + padding.right,\n      height: padding.top + padding.bottom\n    });\n    const cell = view.cell;\n\n    if (cell.isNode()) {\n      const angle = cell.getAngle();\n\n      if (angle) {\n        if (rotate) {\n          const origin = cell.getBBox().getCenter();\n          Dom.rotate(this.container, angle, origin.x, origin.y, {\n            absolute: true\n          });\n        } else {\n          bbox = bbox.bbox(angle);\n        }\n      }\n    }\n\n    Dom.attr(this.container, bbox.toJSON());\n    return this;\n  }\n\n}\n\n(function (Boundary) {\n  Boundary.config({\n    name: 'boundary',\n    tagName: 'rect',\n    padding: 10,\n    attrs: {\n      fill: 'none',\n      stroke: '#333',\n      'stroke-width': 0.5,\n      'stroke-dasharray': '5, 5',\n      'pointer-events': 'none'\n    }\n  });\n})(Boundary || (Boundary = {}));","map":{"version":3,"mappings":";;;;;;;;;;;AACA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,YAA/B;AAGA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAO,KAAKC,IAAZ,MAAsB,QAAtB;AAEA,OAAM,MAAOC,QAAP,SAAwBF,SAAS,CAACG,QAAlC,CAGL;EACWC,QAAQ;IAChBL,GAAG,CAACM,QAAJ,CAAa,KAAKC,SAAlB,EAA6B,KAAKC,eAAL,CAAqB,oBAArB,CAA7B;;IAEA,IAAI,KAAKC,OAAL,CAAaC,KAAjB,EAAwB;MACtB,MAAMC,KAAiC,KAAKF,OAAL,CAAaC,KAApD;MAAA,MAAM;QAAEE,KAAK,EAAEC;MAAT,IAAkBF,EAAxB;MAAA,MAA6BD,KAAK,cAA5B,SAA4B,CAAlC;;MACAV,GAAG,CAACc,IAAJ,CAAS,KAAKP,SAAd,EAAyBP,GAAG,CAACe,cAAJ,CAAmBL,KAAnB,CAAzB;;MACA,IAAIG,SAAJ,EAAe;QACbb,GAAG,CAACM,QAAJ,CAAa,KAAKC,SAAlB,EAA6BM,SAA7B;MACD;IACF;;IACD,KAAKG,MAAL;EACD;;EAEDA,MAAM;IACJ,MAAMC,IAAI,GAAG,KAAKC,QAAlB;IACA,MAAMT,OAAO,GAAG,KAAKA,OAArB;IACA,MAAM;MAAEU,eAAF;MAAmBC;IAAnB,IAA8BX,OAApC;IACA,MAAMY,OAAO,GAAGtB,SAAS,CAACuB,cAAV,CAAyBb,OAAO,CAACY,OAAjC,CAAhB;IACA,IAAIE,IAAI,GAAGrB,IAAI,CAACsB,WAAL,CAAiBP,IAAjB,EAAuBE,eAAvB,EAAwCM,aAAxC,CAAsD;MAC/DC,CAAC,EAAE,CAACL,OAAO,CAACM,IADmD;MAE/DC,CAAC,EAAE,CAACP,OAAO,CAACQ,GAFmD;MAG/DC,KAAK,EAAET,OAAO,CAACM,IAAR,GAAeN,OAAO,CAACU,KAHiC;MAI/DC,MAAM,EAAEX,OAAO,CAACQ,GAAR,GAAcR,OAAO,CAACY;IAJiC,CAAtD,CAAX;IAOA,MAAMC,IAAI,GAAGjB,IAAI,CAACiB,IAAlB;;IACA,IAAIA,IAAI,CAACC,MAAL,EAAJ,EAAmB;MACjB,MAAMC,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAd;;MACA,IAAID,KAAJ,EAAW;QACT,IAAIhB,MAAJ,EAAY;UACV,MAAMkB,MAAM,GAAGJ,IAAI,CAACK,OAAL,GAAeC,SAAf,EAAf;UACAxC,GAAG,CAACoB,MAAJ,CAAW,KAAKb,SAAhB,EAA2B6B,KAA3B,EAAkCE,MAAM,CAACZ,CAAzC,EAA4CY,MAAM,CAACV,CAAnD,EAAsD;YACpDa,QAAQ,EAAE;UAD0C,CAAtD;QAGD,CALD,MAKO;UACLlB,IAAI,GAAGA,IAAI,CAACA,IAAL,CAAUa,KAAV,CAAP;QACD;MACF;IACF;;IAEDpC,GAAG,CAACc,IAAJ,CAAS,KAAKP,SAAd,EAAyBgB,IAAI,CAACmB,MAAL,EAAzB;IAEA,OAAO,IAAP;EACD;;AA5CF;;AAwDD,WAAiBvC,QAAjB,EAAyB;EACvBA,QAAQ,CAACwC,MAAT,CAAkC;IAChCC,IAAI,EAAE,UAD0B;IAEhCC,OAAO,EAAE,MAFuB;IAGhCxB,OAAO,EAAE,EAHuB;IAIhCX,KAAK,EAAE;MACLoC,IAAI,EAAE,MADD;MAELC,MAAM,EAAE,MAFH;MAGL,gBAAgB,GAHX;MAIL,oBAAoB,MAJf;MAKL,kBAAkB;IALb;EAJyB,CAAlC;AAYD,CAbD,EAAiB5C,QAAQ,KAARA,QAAQ,MAAzB","names":["NumberExt","Dom","ToolsView","Util","Boundary","ToolItem","onRender","addClass","container","prefixClassName","options","attrs","_a","class","className","attr","kebablizeAttrs","update","view","cellView","useCellGeometry","rotate","padding","normalizeSides","bbox","getViewBBox","moveAndExpand","x","left","y","top","width","right","height","bottom","cell","isNode","angle","getAngle","origin","getBBox","getCenter","absolute","toJSON","config","name","tagName","fill","stroke"],"sourceRoot":"","sources":["../../../src/registry/tool/boundary.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}