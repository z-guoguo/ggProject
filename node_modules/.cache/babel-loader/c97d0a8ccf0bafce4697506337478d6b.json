{"ast":null,"code":"import { __assign } from \"tslib\";\n/**\n * @fileoverview path 的一些工具\n * @author dxq613@gmail.com\n */\n\nimport { PathUtil } from '@antv/g-base';\nimport { Quad as QuadUtil } from '@antv/g-math';\nimport { Cubic as CubicUtil } from '@antv/g-math';\nimport { ext } from '@antv/matrix-util';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { inBox } from './util';\nimport inLine from './in-stroke/line';\nimport inArc from './in-stroke/arc';\nvar transform = ext.transform;\n\nfunction hasArc(path) {\n  var hasArc = false;\n  var count = path.length;\n\n  for (var i = 0; i < count; i++) {\n    var params = path[i];\n    var cmd = params[0];\n\n    if (cmd === 'C' || cmd === 'A' || cmd === 'Q') {\n      hasArc = true;\n      break;\n    }\n  }\n\n  return hasArc;\n}\n\nfunction isPointInStroke(segments, lineWidth, x, y, length) {\n  var isHit = false;\n  var halfWidth = lineWidth / 2;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var currentPoint = segment.currentPoint,\n        params = segment.params,\n        prePoint = segment.prePoint,\n        box = segment.box; // 如果在前面已经生成过包围盒，直接按照包围盒计算\n\n    if (box && !inBox(box.x - halfWidth, box.y - halfWidth, box.width + lineWidth, box.height + lineWidth, x, y)) {\n      continue;\n    }\n\n    switch (segment.command) {\n      // L 和 Z 都是直线， M 不进行拾取\n      case 'L':\n      case 'Z':\n        isHit = inLine(prePoint[0], prePoint[1], currentPoint[0], currentPoint[1], lineWidth, x, y);\n        break;\n\n      case 'Q':\n        var qDistance = QuadUtil.pointDistance(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4], x, y);\n        isHit = qDistance <= lineWidth / 2;\n        break;\n\n      case 'C':\n        var cDistance = CubicUtil.pointDistance(prePoint[0], // 上一段结束位置, 即 C 的起始点\n        prePoint[1], params[1], // 'C' 的参数，1、2 为第一个控制点，3、4 为第二个控制点，5、6 为结束点\n        params[2], params[3], params[4], params[5], params[6], x, y, length);\n        isHit = cDistance <= lineWidth / 2;\n        break;\n\n      case 'A':\n        // 计算点到椭圆圆弧的距离，暂时使用近似算法，后面可以改成切割法求最近距离\n        var arcParams = segment.arcParams;\n        var cx = arcParams.cx,\n            cy = arcParams.cy,\n            rx = arcParams.rx,\n            ry = arcParams.ry,\n            startAngle = arcParams.startAngle,\n            endAngle = arcParams.endAngle,\n            xRotation = arcParams.xRotation;\n        var p = [x, y, 1];\n        var r = rx > ry ? rx : ry;\n        var scaleX = rx > ry ? 1 : rx / ry;\n        var scaleY = rx > ry ? ry / rx : 1;\n        var m = transform(null, [['t', -cx, -cy], ['r', -xRotation], ['s', 1 / scaleX, 1 / scaleY]]);\n        vec3.transformMat3(p, p, m);\n        isHit = inArc(0, 0, r, startAngle, endAngle, lineWidth, p[0], p[1]);\n        break;\n\n      default:\n        break;\n    }\n\n    if (isHit) {\n      break;\n    }\n  }\n\n  return isHit;\n}\n/**\n * 提取出内部的闭合多边形和非闭合的多边形，假设 path 不存在圆弧\n * @param {Array} path 路径\n * @returns {Array} 点的集合\n */\n\n\nfunction extractPolygons(path) {\n  var count = path.length;\n  var polygons = [];\n  var polylines = [];\n  var points = []; // 防止第一个命令不是 'M'\n\n  for (var i = 0; i < count; i++) {\n    var params = path[i];\n    var cmd = params[0];\n\n    if (cmd === 'M') {\n      // 遇到 'M' 判定是否是新数组，新数组中没有点\n      if (points.length) {\n        // 如果存在点，则说明没有遇到 'Z'，开始了一个新的多边形\n        polylines.push(points);\n        points = []; // 创建新的点\n      }\n\n      points.push([params[1], params[2]]);\n    } else if (cmd === 'Z') {\n      if (points.length) {\n        // 存在点\n        polygons.push(points);\n        points = []; // 开始新的点集合\n      } // 如果不存在点，同时 'Z'，则说明是错误，不处理\n\n    } else {\n      points.push([params[1], params[2]]);\n    }\n  } // 说明 points 未放入 polygons 或者 polyline\n  // 仅当只有一个 M，没有 Z 时会发生这种情况\n\n\n  if (points.length > 0) {\n    polylines.push(points);\n  }\n\n  return {\n    polygons: polygons,\n    polylines: polylines\n  };\n}\n\nexport default __assign({\n  hasArc: hasArc,\n  extractPolygons: extractPolygons,\n  isPointInStroke: isPointInStroke\n}, PathUtil);","map":{"version":3,"mappings":";AAAA;;;;;AAIA,SAASA,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAI,IAAIC,QAAjB,QAAiC,cAAjC;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,cAAnC;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAO,KAAKC,IAAZ,MAAsB,gBAAtB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEQ,aAAS,GAAKJ,GAAG,UAAjB;;AAER,SAASK,MAAT,CAAgBC,IAAhB,EAAoB;EAClB,IAAID,MAAM,GAAG,KAAb;EACA,IAAME,KAAK,GAAGD,IAAI,CAACE,MAAnB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;IAC9B,IAAMC,MAAM,GAAGJ,IAAI,CAACG,CAAD,CAAnB;IACA,IAAME,GAAG,GAAGD,MAAM,CAAC,CAAD,CAAlB;;IACA,IAAIC,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,GAAvB,IAA8BA,GAAG,KAAK,GAA1C,EAA+C;MAC7CN,MAAM,GAAG,IAAT;MACA;IACD;EACF;;EACD,OAAOA,MAAP;AACD;;AAED,SAASO,eAAT,CAAyBC,QAAzB,EAAmCC,SAAnC,EAA8CC,CAA9C,EAAiDC,CAAjD,EAAoDR,MAApD,EAA0D;EACxD,IAAIS,KAAK,GAAG,KAAZ;EACA,IAAMC,SAAS,GAAGJ,SAAS,GAAG,CAA9B;;EACA,KAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,QAAQ,CAACL,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;IACxC,IAAMU,OAAO,GAAGN,QAAQ,CAACJ,CAAD,CAAxB;IACQ,gBAAY,GAA4BU,OAAO,aAA/C;IAAA,IAAcT,MAAM,GAAoBS,OAAO,OAA/C;IAAA,IAAsBC,QAAQ,GAAUD,OAAO,SAA/C;IAAA,IAAgCE,GAAG,GAAKF,OAAO,IAA/C,CAFgC,CAGxC;;IACA,IAAIE,GAAG,IAAI,CAACnB,KAAK,CAACmB,GAAG,CAACN,CAAJ,GAAQG,SAAT,EAAoBG,GAAG,CAACL,CAAJ,GAAQE,SAA5B,EAAuCG,GAAG,CAACC,KAAJ,GAAYR,SAAnD,EAA8DO,GAAG,CAACE,MAAJ,GAAaT,SAA3E,EAAsFC,CAAtF,EAAyFC,CAAzF,CAAjB,EAA8G;MAC5G;IACD;;IACD,QAAQG,OAAO,CAACK,OAAhB;MACE;MACA,KAAK,GAAL;MACA,KAAK,GAAL;QACEP,KAAK,GAAGd,MAAM,CAACiB,QAAQ,CAAC,CAAD,CAAT,EAAcA,QAAQ,CAAC,CAAD,CAAtB,EAA2BK,YAAY,CAAC,CAAD,CAAvC,EAA4CA,YAAY,CAAC,CAAD,CAAxD,EAA6DX,SAA7D,EAAwEC,CAAxE,EAA2EC,CAA3E,CAAd;QACA;;MACF,KAAK,GAAL;QACE,IAAMU,SAAS,GAAG7B,QAAQ,CAAC8B,aAAT,CAChBP,QAAQ,CAAC,CAAD,CADQ,EAEhBA,QAAQ,CAAC,CAAD,CAFQ,EAGhBV,MAAM,CAAC,CAAD,CAHU,EAIhBA,MAAM,CAAC,CAAD,CAJU,EAKhBA,MAAM,CAAC,CAAD,CALU,EAMhBA,MAAM,CAAC,CAAD,CANU,EAOhBK,CAPgB,EAQhBC,CARgB,CAAlB;QAUAC,KAAK,GAAGS,SAAS,IAAIZ,SAAS,GAAG,CAAjC;QACA;;MACF,KAAK,GAAL;QACE,IAAMc,SAAS,GAAG7B,SAAS,CAAC4B,aAAV,CAChBP,QAAQ,CAAC,CAAD,CADQ,EACH;QACbA,QAAQ,CAAC,CAAD,CAFQ,EAGhBV,MAAM,CAAC,CAAD,CAHU,EAGL;QACXA,MAAM,CAAC,CAAD,CAJU,EAKhBA,MAAM,CAAC,CAAD,CALU,EAMhBA,MAAM,CAAC,CAAD,CANU,EAOhBA,MAAM,CAAC,CAAD,CAPU,EAQhBA,MAAM,CAAC,CAAD,CARU,EAShBK,CATgB,EAUhBC,CAVgB,EAWhBR,MAXgB,CAAlB;QAaAS,KAAK,GAAGW,SAAS,IAAId,SAAS,GAAG,CAAjC;QACA;;MACF,KAAK,GAAL;QACE;QACA,IAAMe,SAAS,GAAGV,OAAO,CAACU,SAA1B;QACQ,MAAE,GAAkDA,SAAS,GAA7D;QAAA,IAAIC,EAAE,GAA8CD,SAAS,GAA7D;QAAA,IAAQE,EAAE,GAA0CF,SAAS,GAA7D;QAAA,IAAYG,EAAE,GAAsCH,SAAS,GAA7D;QAAA,IAAgBI,UAAU,GAA0BJ,SAAS,WAA7D;QAAA,IAA4BK,QAAQ,GAAgBL,SAAS,SAA7D;QAAA,IAAsCM,SAAS,GAAKN,SAAS,UAA7D;QACR,IAAMO,CAAC,GAAG,CAACrB,CAAD,EAAIC,CAAJ,EAAO,CAAP,CAAV;QACA,IAAMqB,CAAC,GAAGN,EAAE,GAAGC,EAAL,GAAUD,EAAV,GAAeC,EAAzB;QACA,IAAMM,MAAM,GAAGP,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAcD,EAAE,GAAGC,EAAlC;QACA,IAAMO,MAAM,GAAGR,EAAE,GAAGC,EAAL,GAAUA,EAAE,GAAGD,EAAf,GAAoB,CAAnC;QACA,IAAMS,CAAC,GAAGC,SAAS,CAAC,IAAD,EAAO,CACxB,CAAC,GAAD,EAAM,CAACC,EAAP,EAAW,CAACZ,EAAZ,CADwB,EAExB,CAAC,GAAD,EAAM,CAACK,SAAP,CAFwB,EAGxB,CAAC,GAAD,EAAM,IAAIG,MAAV,EAAkB,IAAIC,MAAtB,CAHwB,CAAP,CAAnB;QAKAtC,IAAI,CAAC0C,aAAL,CAAmBP,CAAnB,EAAsBA,CAAtB,EAAyBI,CAAzB;QACAvB,KAAK,GAAGb,KAAK,CAAC,CAAD,EAAI,CAAJ,EAAOiC,CAAP,EAAUJ,UAAV,EAAsBC,QAAtB,EAAgCpB,SAAhC,EAA2CsB,CAAC,CAAC,CAAD,CAA5C,EAAiDA,CAAC,CAAC,CAAD,CAAlD,CAAb;QACA;;MACF;QACE;IApDJ;;IAsDA,IAAInB,KAAJ,EAAW;MACT;IACD;EACF;;EACD,OAAOA,KAAP;AACD;AAED;;;;;;;AAKA,SAAS2B,eAAT,CAAyBtC,IAAzB,EAA6B;EAC3B,IAAMC,KAAK,GAAGD,IAAI,CAACE,MAAnB;EACA,IAAMqC,QAAQ,GAAG,EAAjB;EACA,IAAMC,SAAS,GAAG,EAAlB;EACA,IAAIC,MAAM,GAAG,EAAb,CAJ2B,CAIV;;EACjB,KAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;IAC9B,IAAMC,MAAM,GAAGJ,IAAI,CAACG,CAAD,CAAnB;IACA,IAAME,GAAG,GAAGD,MAAM,CAAC,CAAD,CAAlB;;IACA,IAAIC,GAAG,KAAK,GAAZ,EAAiB;MACf;MACA,IAAIoC,MAAM,CAACvC,MAAX,EAAmB;QACjB;QACAsC,SAAS,CAACE,IAAV,CAAeD,MAAf;QACAA,MAAM,GAAG,EAAT,CAHiB,CAGJ;MACd;;MACDA,MAAM,CAACC,IAAP,CAAY,CAACtC,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,CAAZ;IACD,CARD,MAQO,IAAIC,GAAG,KAAK,GAAZ,EAAiB;MACtB,IAAIoC,MAAM,CAACvC,MAAX,EAAmB;QACjB;QACAqC,QAAQ,CAACG,IAAT,CAAcD,MAAd;QACAA,MAAM,GAAG,EAAT,CAHiB,CAGJ;MACd,CALqB,CAMtB;;IACD,CAPM,MAOA;MACLA,MAAM,CAACC,IAAP,CAAY,CAACtC,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,CAAZ;IACD;EACF,CA1B0B,CA2B3B;EACA;;;EACA,IAAIqC,MAAM,CAACvC,MAAP,GAAgB,CAApB,EAAuB;IACrBsC,SAAS,CAACE,IAAV,CAAeD,MAAf;EACD;;EACD,OAAO;IACLF,QAAQ,UADH;IAELC,SAAS;EAFJ,CAAP;AAID;;AAED;EACEzC,MAAM,QADR;EAEEuC,eAAe,iBAFjB;EAGEhC,eAAe;AAHjB,GAIKjB,QAJL","names":["PathUtil","Quad","QuadUtil","Cubic","CubicUtil","ext","vec3","inBox","inLine","inArc","hasArc","path","count","length","i","params","cmd","isPointInStroke","segments","lineWidth","x","y","isHit","halfWidth","segment","prePoint","box","width","height","command","currentPoint","qDistance","pointDistance","cDistance","arcParams","cy","rx","ry","startAngle","endAngle","xRotation","p","r","scaleX","scaleY","m","transform","cx","transformMat3","extractPolygons","polygons","polylines","points","push"],"sourceRoot":"","sources":["../../src/util/path.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}