{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = void 0;\n\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\n\nvar metadata_1 = require(\"../planning/metadata\");\n\nvar traverseAncerstors = function (request, constraint) {\n  var parent = request.parentRequest;\n\n  if (parent !== null) {\n    return constraint(parent) ? true : traverseAncerstors(parent, constraint);\n  } else {\n    return false;\n  }\n};\n\nexports.traverseAncerstors = traverseAncerstors;\n\nvar taggedConstraint = function (key) {\n  return function (value) {\n    var constraint = function (request) {\n      return request !== null && request.target !== null && request.target.matchesTag(key)(value);\n    };\n\n    constraint.metaData = new metadata_1.Metadata(key, value);\n    return constraint;\n  };\n};\n\nexports.taggedConstraint = taggedConstraint;\nvar namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);\nexports.namedConstraint = namedConstraint;\n\nvar typeConstraint = function (type) {\n  return function (request) {\n    var binding = null;\n\n    if (request !== null) {\n      binding = request.bindings[0];\n\n      if (typeof type === \"string\") {\n        var serviceIdentifier = binding.serviceIdentifier;\n        return serviceIdentifier === type;\n      } else {\n        var constructor = request.bindings[0].implementationType;\n        return type === constructor;\n      }\n    }\n\n    return false;\n  };\n};\n\nexports.typeConstraint = typeConstraint;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AAEA,IAAMA,kBAAkB,GAAG,UACvBC,OADuB,EAEvBC,UAFuB,EAEkB;EAGzC,IAAMC,MAAM,GAAGF,OAAO,CAACG,aAAvB;;EACA,IAAID,MAAM,KAAK,IAAf,EAAqB;IACjB,OAAOD,UAAU,CAACC,MAAD,CAAV,GAAqB,IAArB,GAA4BH,kBAAkB,CAACG,MAAD,EAASD,UAAT,CAArD;EACH,CAFD,MAEO;IACH,OAAO,KAAP;EACH;AACJ,CAXD;;AA+CSG;;AAhCT,IAAMC,gBAAgB,GAAG,UAACC,GAAD,EAA8B;EAAK,iBAACC,KAAD,EAAW;IAEnE,IAAMN,UAAU,GAAmC,UAACD,OAAD,EAAmC;MAClF,cAAO,KAAK,IAAZ,IAAoBA,OAAO,CAACQ,MAAR,KAAmB,IAAvC,IAA+CR,OAAO,CAACQ,MAAR,CAAeC,UAAf,CAA0BH,GAA1B,EAA+BC,KAA/B,CAA/C;IAAoF,CADxF;;IAGAN,UAAU,CAACS,QAAX,GAAsB,IAAIC,mBAAJ,CAAaL,GAAb,EAAkBC,KAAlB,CAAtB;IAEA,OAAON,UAAP;EACH,CAR2D;AAQ3D,CARD;;AAgC6BG;AAtB7B,IAAMQ,eAAe,GAAGP,gBAAgB,CAACQ,YAAY,CAACC,SAAd,CAAxC;AAsB+CV;;AApB/C,IAAMW,cAAc,GAAG,UAACC,IAAD,EAA0B;EAAK,iBAAChB,OAAD,EAAmC;IAIrF,IAAIiB,OAAO,GAAmC,IAA9C;;IAEA,IAAIjB,OAAO,KAAK,IAAhB,EAAsB;MAClBiB,OAAO,GAAGjB,OAAO,CAACkB,QAAR,CAAiB,CAAjB,CAAV;;MACA,IAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;QAC1B,IAAMG,iBAAiB,GAAGF,OAAO,CAACE,iBAAlC;QACA,OAAOA,iBAAiB,KAAKH,IAA7B;MACH,CAHD,MAGO;QACH,IAAMI,WAAW,GAAGpB,OAAO,CAACkB,QAAR,CAAiB,CAAjB,EAAoBG,kBAAxC;QACA,OAAOL,IAAI,KAAKI,WAAhB;MACH;IACJ;;IAED,OAAO,KAAP;EACH,CAlBqD;AAkBrD,CAlBD;;AAoBgEhB","names":["traverseAncerstors","request","constraint","parent","parentRequest","exports","taggedConstraint","key","value","target","matchesTag","metaData","metadata_1","namedConstraint","METADATA_KEY","NAMED_TAG","typeConstraint","type","binding","bindings","serviceIdentifier","constructor","implementationType"],"sourceRoot":"","sources":["../../src/syntax/constraint_helpers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}