{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Dom } from '../util';\nimport { ModifierKey } from '../types';\nimport { Base } from './base';\nexport class ScrollerManager extends Base {\n  get widgetOptions() {\n    return this.options.scroller;\n  }\n\n  get pannable() {\n    if (this.widgetOptions) {\n      if (typeof this.widgetOptions.pannable === 'object') {\n        return this.widgetOptions.pannable.enabled;\n      }\n\n      return !!this.widgetOptions.pannable;\n    }\n\n    return false;\n  }\n\n  init() {\n    this.widget = this.graph.hook.createScroller();\n    this.startListening();\n    this.updateClassName();\n\n    if (this.widget) {\n      this.widget.center();\n    }\n  }\n\n  startListening() {\n    let eventTypes = [];\n    const pannable = this.widgetOptions.pannable;\n\n    if (typeof pannable === 'object') {\n      eventTypes = pannable.eventTypes || [];\n    } else {\n      eventTypes = ['leftMouseDown'];\n    }\n\n    if (eventTypes.includes('leftMouseDown')) {\n      this.graph.on('blank:mousedown', this.preparePanning, this);\n      this.graph.on('node:unhandled:mousedown', this.preparePanning, this);\n      this.graph.on('edge:unhandled:mousedown', this.preparePanning, this);\n    }\n\n    if (eventTypes.includes('rightMouseDown')) {\n      this.onRightMouseDown = this.onRightMouseDown.bind(this);\n      this.view.$(this.widget.container).on('mousedown', this.onRightMouseDown);\n    }\n  }\n\n  stopListening() {\n    let eventTypes = [];\n    const pannable = this.widgetOptions.pannable;\n\n    if (typeof pannable === 'object') {\n      eventTypes = pannable.eventTypes || [];\n    } else {\n      eventTypes = ['leftMouseDown'];\n    }\n\n    if (eventTypes.includes('leftMouseDown')) {\n      this.graph.off('blank:mousedown', this.preparePanning, this);\n      this.graph.off('node:unhandled:mousedown', this.preparePanning, this);\n      this.graph.off('edge:unhandled:mousedown', this.preparePanning, this);\n    }\n\n    if (eventTypes.includes('rightMouseDown')) {\n      this.view.$(this.widget.container).off('mousedown', this.onRightMouseDown);\n    }\n  }\n\n  onRightMouseDown(e) {\n    if (e.button === 2 && this.allowPanning(e, true) && this.widget) {\n      this.updateClassName(true);\n      this.widget.startPanning(e);\n      this.widget.once('pan:stop', () => this.updateClassName(false));\n    }\n  }\n\n  preparePanning({\n    e\n  }) {\n    if (this.widget) {\n      if (this.allowPanning(e, true) || this.allowPanning(e) && !this.graph.selection.allowRubberband(e, true)) {\n        this.updateClassName(true);\n        this.widget.startPanning(e);\n        this.widget.once('pan:stop', () => this.updateClassName(false));\n      }\n    }\n  }\n\n  allowPanning(e, strict) {\n    return this.widget && this.pannable && ModifierKey.isMatch(e, this.widgetOptions.modifiers, strict) && this.graph.hook.allowPanning(e);\n  }\n\n  updateClassName(isPanning) {\n    if (this.widget == null) {\n      return;\n    }\n\n    const container = this.widget.container;\n    const pannable = this.view.prefixClassName('graph-scroller-pannable');\n\n    if (this.pannable) {\n      Dom.addClass(container, pannable);\n      container.dataset.panning = (!!isPanning).toString(); // Use dataset to control scroller panning style to avoid reflow caused by changing classList\n    } else {\n      Dom.removeClass(container, pannable);\n    }\n  }\n\n  enablePanning() {\n    if (!this.pannable) {\n      this.widgetOptions.pannable = true;\n      this.updateClassName(); // if (\n      //   ModifierKey.equals(\n      //     this.graph.options.scroller.modifiers,\n      //     this.graph.options.selecting.modifiers,\n      //   )\n      // ) {\n      //   this.graph.selection.disableRubberband()\n      // }\n    }\n  }\n\n  disablePanning() {\n    if (this.pannable) {\n      this.widgetOptions.pannable = false;\n      this.updateClassName();\n    }\n  }\n\n  lock() {\n    if (this.widget) {\n      this.widget.lock();\n    }\n  }\n\n  unlock() {\n    if (this.widget) {\n      this.widget.unlock();\n    }\n  }\n\n  update() {\n    if (this.widget) {\n      this.widget.update();\n    }\n  }\n\n  enableAutoResize() {\n    if (this.widget) {\n      this.widget.enableAutoResize();\n    }\n  }\n\n  disableAutoResize() {\n    if (this.widget) {\n      this.widget.disableAutoResize();\n    }\n  }\n\n  resize(width, height) {\n    if (this.widget) {\n      this.widget.resize(width, height);\n    }\n  }\n\n  dispose() {\n    if (this.widget) {\n      this.widget.dispose();\n    }\n\n    this.stopListening();\n  }\n\n}\n\n__decorate([Base.dispose()], ScrollerManager.prototype, \"dispose\", null);","map":{"version":3,"mappings":"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","names":["Dom","ModifierKey","Base","ScrollerManager","widgetOptions","options","scroller","pannable","enabled","init","widget","graph","hook","createScroller","startListening","updateClassName","center","eventTypes","includes","on","preparePanning","onRightMouseDown","bind","view","$","container","stopListening","off","e","button","allowPanning","startPanning","once","selection","allowRubberband","strict","isMatch","modifiers","isPanning","prefixClassName","addClass","dataset","panning","toString","removeClass","enablePanning","disablePanning","lock","unlock","update","enableAutoResize","disableAutoResize","resize","width","height","dispose","__decorate"],"sourceRoot":"","sources":["../../src/graph/scroller.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}