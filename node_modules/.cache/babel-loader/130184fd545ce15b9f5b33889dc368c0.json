{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { AbstractCanvas } from '@antv/g-base';\nimport { SHAPE_TO_TAGS } from './constant';\nimport { drawChildren } from './util/draw';\nimport { setTransform, setClip } from './util/svg';\nimport { sortDom, createSVGElement } from './util/dom';\nimport * as Shape from './shape';\nimport Group from './group';\nimport Defs from './defs';\n\nvar Canvas =\n/** @class */\nfunction (_super) {\n  __extends(Canvas, _super);\n\n  function Canvas(cfg) {\n    return _super.call(this, __assign(__assign({}, cfg), {\n      autoDraw: true,\n      // 设置渲染引擎为 canvas，只读属性\n      renderer: 'svg'\n    })) || this;\n  }\n\n  Canvas.prototype.getShapeBase = function () {\n    return Shape;\n  };\n\n  Canvas.prototype.getGroupBase = function () {\n    return Group;\n  }; // 覆盖 Container 中通过遍历的方式获取 shape 对象的逻辑，直接走 SVG 的 dom 拾取即可\n\n\n  Canvas.prototype.getShape = function (x, y, ev) {\n    var target = ev.target || ev.srcElement;\n\n    if (!SHAPE_TO_TAGS[target.tagName]) {\n      var parent_1 = target.parentNode;\n\n      while (parent_1 && !SHAPE_TO_TAGS[parent_1.tagName]) {\n        parent_1 = parent_1.parentNode;\n      }\n\n      target = parent_1;\n    }\n\n    return this.find(function (child) {\n      return child.get('el') === target;\n    });\n  }; // 复写基类的方法生成标签\n\n\n  Canvas.prototype.createDom = function () {\n    var element = createSVGElement('svg');\n    var context = new Defs(element);\n    element.setAttribute('width', \"\" + this.get('width'));\n    element.setAttribute('height', \"\" + this.get('height')); // 缓存 context 对象\n\n    this.set('context', context);\n    return element;\n  };\n  /**\n   * 一些方法调用会引起画布变化\n   * @param {ChangeType} changeType 改变的类型\n   */\n\n\n  Canvas.prototype.onCanvasChange = function (changeType) {\n    var context = this.get('context');\n    var el = this.get('el');\n\n    if (changeType === 'sort') {\n      var children_1 = this.get('children');\n\n      if (children_1 && children_1.length) {\n        sortDom(this, function (a, b) {\n          return children_1.indexOf(a) - children_1.indexOf(b) ? 1 : 0;\n        });\n      }\n    } else if (changeType === 'clear') {\n      // el maybe null for canvas\n      if (el) {\n        // 清空 SVG 元素\n        el.innerHTML = '';\n        var defsEl = context.el; // 清空 defs 元素\n\n        defsEl.innerHTML = ''; // 将清空后的 defs 元素挂载到 el 下\n\n        el.appendChild(defsEl);\n      }\n    } else if (changeType === 'matrix') {\n      setTransform(this);\n    } else if (changeType === 'clip') {\n      setClip(this, context);\n    } else if (changeType === 'changeSize') {\n      el.setAttribute('width', \"\" + this.get('width'));\n      el.setAttribute('height', \"\" + this.get('height'));\n    }\n  }; // 复写基类的 draw 方法\n\n\n  Canvas.prototype.draw = function () {\n    var context = this.get('context');\n    var children = this.getChildren();\n    setClip(this, context);\n\n    if (children.length) {\n      drawChildren(context, children);\n    }\n  };\n\n  return Canvas;\n}(AbstractCanvas);\n\nexport default Canvas;","map":{"version":3,"mappings":"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","names":["AbstractCanvas","SHAPE_TO_TAGS","drawChildren","setTransform","setClip","sortDom","createSVGElement","Shape","Group","Defs","__extends","cfg","_super","autoDraw","renderer","Canvas","x","y","ev","target","srcElement","tagName","parent_1","parentNode","find","child","get","element","context","setAttribute","set","changeType","el","children_1","length","a","b","indexOf","innerHTML","defsEl","appendChild","children","getChildren"],"sourceRoot":"","sources":["../src/canvas.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}