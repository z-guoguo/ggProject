{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Path } from '../../geometry';\nimport { NumberExt } from '../../util';\nimport { normalize } from './util';\nexport const block = _a => {\n  var {\n    size,\n    width,\n    height,\n    offset,\n    open\n  } = _a,\n      attrs = __rest(_a, [\"size\", \"width\", \"height\", \"offset\", \"open\"]);\n\n  return createClassicMarker({\n    size,\n    width,\n    height,\n    offset\n  }, open === true, true, undefined, attrs);\n};\nexport const classic = _a => {\n  var {\n    size,\n    width,\n    height,\n    offset,\n    factor\n  } = _a,\n      attrs = __rest(_a, [\"size\", \"width\", \"height\", \"offset\", \"factor\"]);\n\n  return createClassicMarker({\n    size,\n    width,\n    height,\n    offset\n  }, false, false, factor, attrs);\n};\n\nfunction createClassicMarker(options, open, full, factor = 3 / 4, attrs = {}) {\n  const size = options.size || 10;\n  const width = options.width || size;\n  const height = options.height || size;\n  const path = new Path();\n  const localAttrs = {};\n\n  if (open) {\n    path.moveTo(width, 0).lineTo(0, height / 2).lineTo(width, height);\n    localAttrs.fill = 'none';\n  } else {\n    path.moveTo(0, height / 2);\n    path.lineTo(width, 0);\n\n    if (!full) {\n      const f = NumberExt.clamp(factor, 0, 1);\n      path.lineTo(width * f, height / 2);\n    }\n\n    path.lineTo(width, height);\n    path.close();\n  }\n\n  return Object.assign(Object.assign(Object.assign({}, localAttrs), attrs), {\n    tagName: 'path',\n    d: normalize(path.serialize(), {\n      x: options.offset != null ? options.offset : -width / 2\n    })\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;AACA,SAASA,IAAT,QAAqB,gBAArB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;AAkBA,OAAO,MAAMC,KAAK,GAAwCC,EAAD,IAOpD;MAPqD;IACxDC,IADwD;IAExDC,KAFwD;IAGxDC,MAHwD;IAIxDC,MAJwD;IAKxDC;EALwD,IAKpDL;MACDM,KAAK,cANgD,6CAMhD;;EAER,OAAOC,mBAAmB,CACxB;IAAEN,IAAF;IAAQC,KAAR;IAAeC,MAAf;IAAuBC;EAAvB,CADwB,EAExBC,IAAI,KAAK,IAFe,EAGxB,IAHwB,EAIxBG,SAJwB,EAKxBF,KALwB,CAA1B;AAOD,CAfM;AAiBP,OAAO,MAAMG,OAAO,GAA0CT,EAAD,IAOxD;MAPyD;IAC5DC,IAD4D;IAE5DC,KAF4D;IAG5DC,MAH4D;IAI5DC,MAJ4D;IAK5DM;EAL4D,IAKtDV;MACHM,KAAK,cANoD,+CAMpD;;EAER,OAAOC,mBAAmB,CACxB;IAAEN,IAAF;IAAQC,KAAR;IAAeC,MAAf;IAAuBC;EAAvB,CADwB,EAExB,KAFwB,EAGxB,KAHwB,EAIxBM,MAJwB,EAKxBJ,KALwB,CAA1B;AAOD,CAfM;;AAiBP,SAASC,mBAAT,CACEI,OADF,EAEEN,IAFF,EAGEO,IAHF,EAIEF,SAAiB,IAAI,CAJvB,EAKEJ,QAAkB,EALpB,EAKsB;EAEpB,MAAML,IAAI,GAAGU,OAAO,CAACV,IAAR,IAAgB,EAA7B;EACA,MAAMC,KAAK,GAAGS,OAAO,CAACT,KAAR,IAAiBD,IAA/B;EACA,MAAME,MAAM,GAAGQ,OAAO,CAACR,MAAR,IAAkBF,IAAjC;EACA,MAAMY,IAAI,GAAG,IAAIjB,IAAJ,EAAb;EACA,MAAMkB,UAAU,GAAsB,EAAtC;;EAEA,IAAIT,IAAJ,EAAU;IACRQ,IAAI,CACDE,MADH,CACUb,KADV,EACiB,CADjB,EAEGc,MAFH,CAEU,CAFV,EAEab,MAAM,GAAG,CAFtB,EAGGa,MAHH,CAGUd,KAHV,EAGiBC,MAHjB;IAIAW,UAAU,CAACG,IAAX,GAAkB,MAAlB;EACD,CAND,MAMO;IACLJ,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeZ,MAAM,GAAG,CAAxB;IACAU,IAAI,CAACG,MAAL,CAAYd,KAAZ,EAAmB,CAAnB;;IAEA,IAAI,CAACU,IAAL,EAAW;MACT,MAAMM,CAAC,GAAGrB,SAAS,CAACsB,KAAV,CAAgBT,MAAhB,EAAwB,CAAxB,EAA2B,CAA3B,CAAV;MACAG,IAAI,CAACG,MAAL,CAAYd,KAAK,GAAGgB,CAApB,EAAuBf,MAAM,GAAG,CAAhC;IACD;;IAEDU,IAAI,CAACG,MAAL,CAAYd,KAAZ,EAAmBC,MAAnB;IACAU,IAAI,CAACO,KAAL;EACD;;EAED,qDACKN,UADL,GAEKR,KAFL,GAEU;IACRe,OAAO,EAAE,MADD;IAERC,CAAC,EAAExB,SAAS,CAACe,IAAI,CAACU,SAAL,EAAD,EAAmB;MAC7BC,CAAC,EAAEb,OAAO,CAACP,MAAR,IAAkB,IAAlB,GAAyBO,OAAO,CAACP,MAAjC,GAA0C,CAACF,KAAD,GAAS;IADzB,CAAnB;EAFJ,CAFV;AAQD","names":["Path","NumberExt","normalize","block","_a","size","width","height","offset","open","attrs","createClassicMarker","undefined","classic","factor","options","full","path","localAttrs","moveTo","lineTo","fill","f","clamp","close","tagName","d","serialize","x"],"sourceRoot":"","sources":["../../../src/registry/marker/classic.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}