{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForceAtlas2Layout = void 0;\n\nvar base_1 = require(\"../base\");\n\nvar util_1 = require(\"../../util\");\n\nvar body_1 = __importDefault(require(\"./body\"));\n\nvar quad_1 = __importDefault(require(\"./quad\"));\n\nvar quadTree_1 = __importDefault(require(\"./quadTree\"));\n\nvar ForceAtlas2Layout =\n/** @class */\nfunction (_super) {\n  __extends(ForceAtlas2Layout, _super);\n\n  function ForceAtlas2Layout(options) {\n    var _this = _super.call(this) || this;\n    /** 布局中心 */\n\n\n    _this.center = [0, 0];\n    /** 宽度 */\n\n    _this.width = 300;\n    /** 高度 */\n\n    _this.height = 300;\n    _this.nodes = [];\n    _this.edges = [];\n    /**\n     * the parameter for repulsive forces,\n     * it will scale the layout but won't change the layout\n     * larger the kr, looser the layout\n     * @type  {number}\n     */\n\n    _this.kr = 5;\n    /**\n     * the parameter for gravity forces\n     * @type  {number}\n     */\n\n    _this.kg = 1;\n    /**\n     * modes:\n     * 'normal' for normal using\n     * 'linlog' for compact clusters.\n     * @type  {string}\n     */\n\n    _this.mode = 'normal';\n    /**\n     * whether preventing the node overlapping\n     * @type  {boolean}\n     */\n\n    _this.preventOverlap = false;\n    /**\n     * whether active the dissuade hub mode\n     * true: grant authorities (nodes with a high indegree)\n     * a more central position than hubs (nodes with a high outdegree)\n     * @type  {boolean}\n     */\n\n    _this.dissuadeHubs = false;\n    /**\n     * whether active the barnes hut optimization on computing repulsive forces\n     * @type  {boolean}\n     */\n\n    _this.barnesHut = undefined;\n    /**\n     * the max iteration number\n     * @type  {number}\n     */\n\n    _this.maxIteration = 0;\n    /**\n     * control the global velocity\n     * defualt: 0.1(gephi)\n     * @type  {number}\n     */\n\n    _this.ks = 0.1;\n    /**\n     * the max global velocity\n     * @type  {number}\n     */\n\n    _this.ksmax = 10;\n    /**\n     * the tolerance for the global swinging\n     * @type  {number}\n     */\n\n    _this.tao = 0.1;\n    /**\n     * the function of layout complete listener, display the legend and minimap after layout\n     * @type  {function}\n     */\n\n    _this.onLayoutEnd = function () {};\n    /**\n     * activate prune or not.\n     * prune the leaves during most iterations, layout the leaves in the last 50 iteraitons.\n     * if prune === '', it will be activated when the nodes number > 100\n     * note that it will reduce the quality of the layout\n     * @type  {boolean}\n     */\n\n\n    _this.prune = undefined;\n\n    _this.updateCfg(options);\n\n    return _this;\n  }\n\n  ForceAtlas2Layout.prototype.getDefaultCfg = function () {\n    return {};\n  }; // execute the layout\n\n\n  ForceAtlas2Layout.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes,\n        onLayoutEnd = self.onLayoutEnd,\n        prune = self.prune;\n    var maxIteration = self.maxIteration;\n\n    if (!self.width && typeof window !== \"undefined\") {\n      self.width = window.innerWidth;\n    }\n\n    if (!self.height && typeof window !== \"undefined\") {\n      self.height = window.innerHeight;\n    } // the whidth of each nodes\n\n\n    var sizes = [];\n    var nodeNum = nodes.length;\n\n    for (var i = 0; i < nodeNum; i += 1) {\n      var node = nodes[i];\n      var nodeWidth = 10;\n      var nodeHeight = 10;\n\n      if ((0, util_1.isNumber)(node.size)) {\n        nodeWidth = node.size;\n        nodeHeight = node.size;\n      }\n\n      if ((0, util_1.isArray)(node.size)) {\n        if (!isNaN(node.size[0])) nodeWidth = node.size[0];\n        if (!isNaN(node.size[1])) nodeHeight = node.size[1];\n      } else if ((0, util_1.isObject)(node.size)) {\n        nodeWidth = node.size.width;\n        nodeHeight = node.size.height;\n      }\n\n      if (self.getWidth && !isNaN(self.getWidth(node))) nodeHeight = self.getWidth(node);\n      if (self.getHeight && !isNaN(self.getHeight(node))) nodeWidth = self.getHeight(node);\n      var maxSize = Math.max(nodeWidth, nodeHeight);\n      sizes.push(maxSize);\n    }\n\n    if (self.barnesHut === undefined && nodeNum > 250) self.barnesHut = true;\n    if (self.prune === undefined && nodeNum > 100) self.prune = true;\n\n    if (this.maxIteration === 0 && !self.prune) {\n      maxIteration = 250;\n      if (nodeNum <= 200 && nodeNum > 100) maxIteration = 1000;else if (nodeNum > 200) maxIteration = 1200;\n      this.maxIteration = maxIteration;\n    } else if (this.maxIteration === 0 && prune) {\n      maxIteration = 100;\n      if (nodeNum <= 200 && nodeNum > 100) maxIteration = 500;else if (nodeNum > 200) maxIteration = 950;\n      this.maxIteration = maxIteration;\n    }\n\n    if (!self.kr) {\n      self.kr = 50;\n      if (nodeNum > 100 && nodeNum <= 500) self.kr = 20;else if (nodeNum > 500) self.kr = 1;\n    }\n\n    if (!self.kg) {\n      self.kg = 20;\n      if (nodeNum > 100 && nodeNum <= 500) self.kg = 10;else if (nodeNum > 500) self.kg = 1;\n    }\n\n    this.nodes = self.updateNodesByForces(sizes);\n    onLayoutEnd();\n  };\n\n  ForceAtlas2Layout.prototype.updateNodesByForces = function (sizes) {\n    var self = this;\n    var edges = self.edges,\n        maxIteration = self.maxIteration;\n    var nodes = self.nodes;\n    var nonLoopEdges = edges.filter(function (edge) {\n      var source = (0, util_1.getEdgeTerminal)(edge, 'source');\n      var target = (0, util_1.getEdgeTerminal)(edge, 'target');\n      return source !== target;\n    });\n    var size = nodes.length;\n    var esize = nonLoopEdges.length;\n    var degrees = [];\n    var idMap = {};\n    var edgeEndsIdMap = {}; // tslint:disable-next-line\n\n    var Es = [];\n\n    for (var i = 0; i < size; i += 1) {\n      idMap[nodes[i].id] = i;\n      degrees[i] = 0;\n\n      if (nodes[i].x === undefined || isNaN(nodes[i].x)) {\n        nodes[i].x = Math.random() * 1000;\n      }\n\n      if (nodes[i].y === undefined || isNaN(nodes[i].y)) {\n        nodes[i].y = Math.random() * 1000;\n      }\n\n      Es.push({\n        x: nodes[i].x,\n        y: nodes[i].y\n      });\n    }\n\n    for (var i = 0; i < esize; i += 1) {\n      var node1 = void 0;\n      var node2 = void 0;\n      var sIdx = 0;\n      var tIdx = 0;\n\n      for (var j = 0; j < size; j += 1) {\n        var source = (0, util_1.getEdgeTerminal)(nonLoopEdges[i], 'source');\n        var target = (0, util_1.getEdgeTerminal)(nonLoopEdges[i], 'target');\n\n        if (nodes[j].id === source) {\n          node1 = nodes[j];\n          sIdx = j;\n        } else if (nodes[j].id === target) {\n          node2 = nodes[j];\n          tIdx = j;\n        }\n\n        edgeEndsIdMap[i] = {\n          sourceIdx: sIdx,\n          targetIdx: tIdx\n        };\n      }\n\n      if (node1) degrees[idMap[node1.id]] += 1;\n      if (node2) degrees[idMap[node2.id]] += 1;\n    }\n\n    var iteration = maxIteration;\n    nodes = this.iterate(iteration, idMap, edgeEndsIdMap, esize, degrees, sizes); // if prune, place the leaves around their parents, and then re-layout for several iterations.\n\n    if (self.prune) {\n      for (var j = 0; j < esize; j += 1) {\n        if (degrees[edgeEndsIdMap[j].sourceIdx] <= 1) {\n          nodes[edgeEndsIdMap[j].sourceIdx].x = nodes[edgeEndsIdMap[j].targetIdx].x;\n          nodes[edgeEndsIdMap[j].sourceIdx].y = nodes[edgeEndsIdMap[j].targetIdx].y;\n        } else if (degrees[edgeEndsIdMap[j].targetIdx] <= 1) {\n          nodes[edgeEndsIdMap[j].targetIdx].x = nodes[edgeEndsIdMap[j].sourceIdx].x;\n          nodes[edgeEndsIdMap[j].targetIdx].y = nodes[edgeEndsIdMap[j].sourceIdx].y;\n        }\n      }\n\n      self.prune = false;\n      self.barnesHut = false;\n      iteration = 100;\n      nodes = this.iterate(iteration, idMap, edgeEndsIdMap, esize, degrees, sizes);\n    }\n\n    return nodes;\n  };\n\n  ForceAtlas2Layout.prototype.iterate = function (iteration, idMap, edgeEndsIdMap, esize, degrees, sizes) {\n    var self = this;\n    var nodes = self.nodes;\n    var kr = self.kr,\n        preventOverlap = self.preventOverlap;\n    var barnesHut = self.barnesHut;\n    var nodeNum = nodes.length;\n    var sg = 0;\n    var krPrime = 100;\n    var iter = iteration;\n    var prevoIter = 50;\n    var forces = [];\n    var preForces = [];\n    var bodies = [];\n\n    for (var i = 0; i < nodeNum; i += 1) {\n      forces[2 * i] = 0;\n      forces[2 * i + 1] = 0;\n\n      if (barnesHut) {\n        var params = {\n          id: i,\n          rx: nodes[i].x,\n          ry: nodes[i].y,\n          mass: 1,\n          g: kr,\n          degree: degrees[i]\n        };\n        bodies[i] = new body_1.default(params);\n      }\n    }\n\n    while (iter > 0) {\n      for (var i = 0; i < nodeNum; i += 1) {\n        preForces[2 * i] = forces[2 * i];\n        preForces[2 * i + 1] = forces[2 * i + 1];\n        forces[2 * i] = 0;\n        forces[2 * i + 1] = 0;\n      } // attractive forces, existing on every actual edge\n\n\n      forces = this.getAttrForces(iter, prevoIter, esize, idMap, edgeEndsIdMap, degrees, sizes, forces); // repulsive forces and Gravity, existing on every node pair\n      // if preventOverlap, using the no-optimized method in the last prevoIter instead.\n\n      if (barnesHut && (preventOverlap && iter > prevoIter || !preventOverlap)) {\n        forces = this.getOptRepGraForces(forces, bodies, degrees);\n      } else {\n        forces = this.getRepGraForces(iter, prevoIter, forces, krPrime, sizes, degrees);\n      } // update the positions\n\n\n      var res = this.updatePos(forces, preForces, sg, degrees);\n      nodes = res.nodes;\n      sg = res.sg;\n      iter--;\n      if (self.tick) self.tick();\n    }\n\n    return nodes;\n  };\n\n  ForceAtlas2Layout.prototype.getAttrForces = function (iter, prevoIter, esize, idMap, edgeEndsIdMap, degrees, sizes, forces) {\n    var self = this;\n    var nodes = self.nodes,\n        preventOverlap = self.preventOverlap,\n        dissuadeHubs = self.dissuadeHubs,\n        mode = self.mode,\n        prune = self.prune;\n\n    for (var i = 0; i < esize; i += 1) {\n      var sourceNode = nodes[edgeEndsIdMap[i].sourceIdx];\n      var sourceIdx = edgeEndsIdMap[i].sourceIdx;\n      var targetNode = nodes[edgeEndsIdMap[i].targetIdx];\n      var targetIdx = edgeEndsIdMap[i].targetIdx;\n      if (prune && (degrees[sourceIdx] <= 1 || degrees[targetIdx] <= 1)) continue;\n      var dir = [targetNode.x - sourceNode.x, targetNode.y - sourceNode.y];\n      var eucliDis = Math.hypot(dir[0], dir[1]);\n      eucliDis = eucliDis < 0.0001 ? 0.0001 : eucliDis;\n      dir[0] = dir[0] / eucliDis;\n      dir[1] = dir[1] / eucliDis;\n      if (preventOverlap && iter < prevoIter) eucliDis = eucliDis - sizes[sourceIdx] - sizes[targetIdx];\n      var Fa1 = eucliDis; // tslint:disable-line\n\n      var Fa2 = Fa1; // tslint:disable-line\n\n      if (mode === 'linlog') {\n        Fa1 = Math.log(1 + eucliDis);\n        Fa2 = Fa1;\n      }\n\n      if (dissuadeHubs) {\n        Fa1 = eucliDis / degrees[sourceIdx];\n        Fa2 = eucliDis / degrees[targetIdx];\n      }\n\n      if (preventOverlap && iter < prevoIter && eucliDis <= 0) {\n        Fa1 = 0;\n        Fa2 = 0;\n      } else if (preventOverlap && iter < prevoIter && eucliDis > 0) {\n        Fa1 = eucliDis;\n        Fa2 = eucliDis;\n      }\n\n      forces[2 * idMap[sourceNode.id]] += Fa1 * dir[0];\n      forces[2 * idMap[targetNode.id]] -= Fa2 * dir[0];\n      forces[2 * idMap[sourceNode.id] + 1] += Fa1 * dir[1];\n      forces[2 * idMap[targetNode.id] + 1] -= Fa2 * dir[1];\n    }\n\n    return forces;\n  };\n\n  ForceAtlas2Layout.prototype.getRepGraForces = function (iter, prevoIter, forces, krPrime, sizes, degrees) {\n    var self = this;\n    var nodes = self.nodes,\n        preventOverlap = self.preventOverlap,\n        kr = self.kr,\n        kg = self.kg,\n        center = self.center,\n        prune = self.prune;\n    var nodeNum = nodes.length;\n\n    for (var i = 0; i < nodeNum; i += 1) {\n      for (var j = i + 1; j < nodeNum; j += 1) {\n        if (prune && (degrees[i] <= 1 || degrees[j] <= 1)) continue;\n        var dir_1 = [nodes[j].x - nodes[i].x, nodes[j].y - nodes[i].y];\n        var eucliDis_1 = Math.hypot(dir_1[0], dir_1[1]);\n        eucliDis_1 = eucliDis_1 < 0.0001 ? 0.0001 : eucliDis_1;\n        dir_1[0] = dir_1[0] / eucliDis_1;\n        dir_1[1] = dir_1[1] / eucliDis_1;\n        if (preventOverlap && iter < prevoIter) eucliDis_1 = eucliDis_1 - sizes[i] - sizes[j];\n        var Fr = kr * (degrees[i] + 1) * (degrees[j] + 1) / eucliDis_1; // tslint:disable-line\n\n        if (preventOverlap && iter < prevoIter && eucliDis_1 < 0) {\n          Fr = krPrime * (degrees[i] + 1) * (degrees[j] + 1);\n        } else if (preventOverlap && iter < prevoIter && eucliDis_1 === 0) {\n          Fr = 0;\n        } else if (preventOverlap && iter < prevoIter && eucliDis_1 > 0) {\n          Fr = kr * (degrees[i] + 1) * (degrees[j] + 1) / eucliDis_1;\n        }\n\n        forces[2 * i] -= Fr * dir_1[0];\n        forces[2 * j] += Fr * dir_1[0];\n        forces[2 * i + 1] -= Fr * dir_1[1];\n        forces[2 * j + 1] += Fr * dir_1[1];\n      } // gravity\n\n\n      var dir = [nodes[i].x - center[0], nodes[i].y - center[1]];\n      var eucliDis = Math.hypot(dir[0], dir[1]);\n      dir[0] = dir[0] / eucliDis;\n      dir[1] = dir[1] / eucliDis;\n      var Fg = kg * (degrees[i] + 1); // tslint:disable-line\n\n      forces[2 * i] -= Fg * dir[0];\n      forces[2 * i + 1] -= Fg * dir[1];\n    }\n\n    return forces;\n  };\n\n  ForceAtlas2Layout.prototype.getOptRepGraForces = function (forces, bodies, degrees) {\n    var self = this;\n    var nodes = self.nodes,\n        kg = self.kg,\n        center = self.center,\n        prune = self.prune;\n    var nodeNum = nodes.length;\n    var minx = 9e10;\n    var maxx = -9e10;\n    var miny = 9e10;\n    var maxy = -9e10;\n\n    for (var i = 0; i < nodeNum; i += 1) {\n      if (prune && degrees[i] <= 1) continue;\n      bodies[i].setPos(nodes[i].x, nodes[i].y);\n      if (nodes[i].x >= maxx) maxx = nodes[i].x;\n      if (nodes[i].x <= minx) minx = nodes[i].x;\n      if (nodes[i].y >= maxy) maxy = nodes[i].y;\n      if (nodes[i].y <= miny) miny = nodes[i].y;\n    }\n\n    var width = Math.max(maxx - minx, maxy - miny);\n    var quadParams = {\n      xmid: (maxx + minx) / 2,\n      ymid: (maxy + miny) / 2,\n      length: width,\n      massCenter: center,\n      mass: nodeNum\n    };\n    var quad = new quad_1.default(quadParams);\n    var quadTree = new quadTree_1.default(quad); // build the tree, insert the nodes(quads) into the tree\n\n    for (var i = 0; i < nodeNum; i += 1) {\n      if (prune && degrees[i] <= 1) continue;\n      if (bodies[i].in(quad)) quadTree.insert(bodies[i]);\n    } // update the repulsive forces and the gravity.\n\n\n    for (var i = 0; i < nodeNum; i += 1) {\n      if (prune && degrees[i] <= 1) continue;\n      bodies[i].resetForce();\n      quadTree.updateForce(bodies[i]);\n      forces[2 * i] -= bodies[i].fx;\n      forces[2 * i + 1] -= bodies[i].fy; // gravity\n\n      var dir = [nodes[i].x - center[0], nodes[i].y - center[1]];\n      var eucliDis = Math.hypot(dir[0], dir[1]);\n      eucliDis = eucliDis < 0.0001 ? 0.0001 : eucliDis;\n      dir[0] = dir[0] / eucliDis;\n      dir[1] = dir[1] / eucliDis;\n      var Fg = kg * (degrees[i] + 1); // tslint:disable-line\n\n      forces[2 * i] -= Fg * dir[0];\n      forces[2 * i + 1] -= Fg * dir[1];\n    }\n\n    return forces;\n  };\n\n  ForceAtlas2Layout.prototype.updatePos = function (forces, preForces, sg, degrees) {\n    var self = this;\n    var nodes = self.nodes,\n        ks = self.ks,\n        tao = self.tao,\n        prune = self.prune,\n        ksmax = self.ksmax;\n    var nodeNum = nodes.length;\n    var swgns = [];\n    var trans = []; // swg(G) and tra(G)\n\n    var swgG = 0;\n    var traG = 0;\n\n    for (var i = 0; i < nodeNum; i += 1) {\n      if (prune && degrees[i] <= 1) continue;\n      var minus = [forces[2 * i] - preForces[2 * i], forces[2 * i + 1] - preForces[2 * i + 1]];\n      var minusNorm = Math.hypot(minus[0], minus[1]);\n      var add = [forces[2 * i] + preForces[2 * i], forces[2 * i + 1] + preForces[2 * i + 1]];\n      var addNorm = Math.hypot(add[0], add[1]);\n      swgns[i] = minusNorm;\n      trans[i] = addNorm / 2;\n      swgG += (degrees[i] + 1) * swgns[i];\n      traG += (degrees[i] + 1) * trans[i];\n    }\n\n    var preSG = sg;\n    sg = tao * traG / swgG; // tslint:disable-line\n\n    if (preSG !== 0) {\n      sg = sg > 1.5 * preSG ? 1.5 * preSG : sg; // tslint:disable-line\n    } // update the node positions\n\n\n    for (var i = 0; i < nodeNum; i += 1) {\n      if (prune && degrees[i] <= 1) continue;\n      var sn = ks * sg / (1 + sg * Math.sqrt(swgns[i]));\n      var absForce = Math.hypot(forces[2 * i], forces[2 * i + 1]);\n      absForce = absForce < 0.0001 ? 0.0001 : absForce;\n      var max = ksmax / absForce;\n      sn = sn > max ? max : sn;\n      var dnx = sn * forces[2 * i];\n      var dny = sn * forces[2 * i + 1];\n      nodes[i].x += dnx;\n      nodes[i].y += dny;\n    }\n\n    return {\n      nodes: nodes,\n      sg: sg\n    };\n  };\n\n  return ForceAtlas2Layout;\n}(base_1.Base);\n\nexports.ForceAtlas2Layout = ForceAtlas2Layout;","map":{"version":3,"mappings":"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","names":["__extends","options","_super","_this","undefined","updateCfg","ForceAtlas2Layout","self","onLayoutEnd","prune","maxIteration","width","window","innerWidth","height","innerHeight","sizes","nodeNum","nodes","length","i","node","nodeWidth","nodeHeight","size","isNaN","getWidth","getHeight","maxSize","Math","max","push","barnesHut","kr","kg","updateNodesByForces","nonLoopEdges","edges","filter","edge","source","target","esize","degrees","idMap","edgeEndsIdMap","Es","id","x","random","y","node1","node2","sIdx","tIdx","j","sourceIdx","targetIdx","iteration","iterate","preventOverlap","sg","krPrime","iter","prevoIter","forces","preForces","bodies","params","rx","ry","mass","g","degree","body_1","getAttrForces","getOptRepGraForces","getRepGraForces","res","updatePos","tick","dissuadeHubs","mode","sourceNode","targetNode","dir","eucliDis","hypot","Fa1","Fa2","log","center","dir_1","eucliDis_1","Fr","Fg","minx","maxx","miny","maxy","setPos","quadParams","xmid","ymid","massCenter","quad","quad_1","quadTree","quadTree_1","in","insert","resetForce","updateForce","fx","fy","ks","tao","ksmax","swgns","trans","swgG","traG","minus","minusNorm","add","addNorm","preSG","sn","sqrt","absForce","dnx","dny","base_1","exports"],"sourceRoot":"","sources":["../../../src/layout/forceAtlas2/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}