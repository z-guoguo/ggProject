{"ast":null,"code":"module.exports = forEach;\n\nvar vec = require('./create')();\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\n\nfunction forEach(a, stride, offset, count, fn, arg) {\n  var i, l;\n\n  if (!stride) {\n    stride = 2;\n  }\n\n  if (!offset) {\n    offset = 0;\n  }\n\n  if (count) {\n    l = Math.min(count * stride + offset, a.length);\n  } else {\n    l = a.length;\n  }\n\n  for (i = offset; i < l; i += stride) {\n    vec[0] = a[i];\n    vec[1] = a[i + 1];\n    fn(vec, vec, arg);\n    a[i] = vec[0];\n    a[i + 1] = vec[1];\n  }\n\n  return a;\n}","map":{"version":3,"names":["module","exports","forEach","vec","require","a","stride","offset","count","fn","arg","i","l","Math","min","length"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/gl-vec2/forEach.js"],"sourcesContent":["module.exports = forEach\n\nvar vec = require('./create')()\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nfunction forEach(a, stride, offset, count, fn, arg) {\n    var i, l\n    if(!stride) {\n        stride = 2\n    }\n\n    if(!offset) {\n        offset = 0\n    }\n    \n    if(count) {\n        l = Math.min((count * stride) + offset, a.length)\n    } else {\n        l = a.length\n    }\n\n    for(i = offset; i < l; i += stride) {\n        vec[0] = a[i]\n        vec[1] = a[i+1]\n        fn(vec, vec, arg)\n        a[i] = vec[0]\n        a[i+1] = vec[1]\n    }\n    \n    return a\n}"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAV;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,OAAT,CAAiBG,CAAjB,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,KAApC,EAA2CC,EAA3C,EAA+CC,GAA/C,EAAoD;EAChD,IAAIC,CAAJ,EAAOC,CAAP;;EACA,IAAG,CAACN,MAAJ,EAAY;IACRA,MAAM,GAAG,CAAT;EACH;;EAED,IAAG,CAACC,MAAJ,EAAY;IACRA,MAAM,GAAG,CAAT;EACH;;EAED,IAAGC,KAAH,EAAU;IACNI,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAUN,KAAK,GAAGF,MAAT,GAAmBC,MAA5B,EAAoCF,CAAC,CAACU,MAAtC,CAAJ;EACH,CAFD,MAEO;IACHH,CAAC,GAAGP,CAAC,CAACU,MAAN;EACH;;EAED,KAAIJ,CAAC,GAAGJ,MAAR,EAAgBI,CAAC,GAAGC,CAApB,EAAuBD,CAAC,IAAIL,MAA5B,EAAoC;IAChCH,GAAG,CAAC,CAAD,CAAH,GAASE,CAAC,CAACM,CAAD,CAAV;IACAR,GAAG,CAAC,CAAD,CAAH,GAASE,CAAC,CAACM,CAAC,GAAC,CAAH,CAAV;IACAF,EAAE,CAACN,GAAD,EAAMA,GAAN,EAAWO,GAAX,CAAF;IACAL,CAAC,CAACM,CAAD,CAAD,GAAOR,GAAG,CAAC,CAAD,CAAV;IACAE,CAAC,CAACM,CAAC,GAAC,CAAH,CAAD,GAASR,GAAG,CAAC,CAAD,CAAZ;EACH;;EAED,OAAOE,CAAP;AACH"},"metadata":{},"sourceType":"script"}