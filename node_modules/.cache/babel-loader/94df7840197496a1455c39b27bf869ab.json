{"ast":null,"code":"import { clone } from '@antv/util';\nimport degree from './degree';\n/**\n *  k-core算法 找出符合指定核心度的紧密关联的子图结构\n * @param graphData 图数据\n * @param k 核心度数\n */\n\nvar kCore = function kCore(graphData, k) {\n  var _a;\n\n  if (k === void 0) {\n    k = 1;\n  }\n\n  var data = clone(graphData);\n  var _b = data.nodes,\n      nodes = _b === void 0 ? [] : _b;\n  var _c = data.edges,\n      edges = _c === void 0 ? [] : _c;\n\n  var _loop_1 = function _loop_1() {\n    // 获取图中节点的度数\n    var degrees = degree({\n      nodes: nodes,\n      edges: edges\n    });\n    var nodeIds = Object.keys(degrees); // 按照度数进行排序\n\n    nodeIds.sort(function (a, b) {\n      var _a, _b;\n\n      return ((_a = degrees[a]) === null || _a === void 0 ? void 0 : _a.degree) - ((_b = degrees[b]) === null || _b === void 0 ? void 0 : _b.degree);\n    });\n    var minIndexId = nodeIds[0];\n\n    if (!nodes.length || ((_a = degrees[minIndexId]) === null || _a === void 0 ? void 0 : _a.degree) >= k) {\n      return \"break\";\n    }\n\n    var originIndex = nodes.findIndex(function (node) {\n      return node.id === minIndexId;\n    }); // 移除度数小于k的节点\n\n    nodes.splice(originIndex, 1); // 移除度数小于k的节点相关的边\n\n    edges = edges.filter(function (edge) {\n      return !(edge.source === minIndexId || edge.target === minIndexId);\n    });\n  };\n\n  while (true) {\n    var state_1 = _loop_1();\n\n    if (state_1 === \"break\") break;\n  }\n\n  return {\n    nodes: nodes,\n    edges: edges\n  };\n};\n\nexport default kCore;","map":{"version":3,"names":["clone","degree","kCore","graphData","k","_a","data","_b","nodes","_c","edges","_loop_1","degrees","nodeIds","Object","keys","sort","a","b","minIndexId","length","originIndex","findIndex","node","id","splice","filter","edge","source","target","state_1"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/algorithm/es/k-core.js"],"sourcesContent":["import { clone } from '@antv/util';\nimport degree from './degree';\n/**\n *  k-core算法 找出符合指定核心度的紧密关联的子图结构\n * @param graphData 图数据\n * @param k 核心度数\n */\n\nvar kCore = function kCore(graphData, k) {\n  var _a;\n\n  if (k === void 0) {\n    k = 1;\n  }\n\n  var data = clone(graphData);\n  var _b = data.nodes,\n      nodes = _b === void 0 ? [] : _b;\n  var _c = data.edges,\n      edges = _c === void 0 ? [] : _c;\n\n  var _loop_1 = function _loop_1() {\n    // 获取图中节点的度数\n    var degrees = degree({\n      nodes: nodes,\n      edges: edges\n    });\n    var nodeIds = Object.keys(degrees); // 按照度数进行排序\n\n    nodeIds.sort(function (a, b) {\n      var _a, _b;\n\n      return ((_a = degrees[a]) === null || _a === void 0 ? void 0 : _a.degree) - ((_b = degrees[b]) === null || _b === void 0 ? void 0 : _b.degree);\n    });\n    var minIndexId = nodeIds[0];\n\n    if (!nodes.length || ((_a = degrees[minIndexId]) === null || _a === void 0 ? void 0 : _a.degree) >= k) {\n      return \"break\";\n    }\n\n    var originIndex = nodes.findIndex(function (node) {\n      return node.id === minIndexId;\n    }); // 移除度数小于k的节点\n\n    nodes.splice(originIndex, 1); // 移除度数小于k的节点相关的边\n\n    edges = edges.filter(function (edge) {\n      return !(edge.source === minIndexId || edge.target === minIndexId);\n    });\n  };\n\n  while (true) {\n    var state_1 = _loop_1();\n\n    if (state_1 === \"break\") break;\n  }\n\n  return {\n    nodes: nodes,\n    edges: edges\n  };\n};\n\nexport default kCore;"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,KAAK,GAAG,SAASA,KAAT,CAAeC,SAAf,EAA0BC,CAA1B,EAA6B;EACvC,IAAIC,EAAJ;;EAEA,IAAID,CAAC,KAAK,KAAK,CAAf,EAAkB;IAChBA,CAAC,GAAG,CAAJ;EACD;;EAED,IAAIE,IAAI,GAAGN,KAAK,CAACG,SAAD,CAAhB;EACA,IAAII,EAAE,GAAGD,IAAI,CAACE,KAAd;EAAA,IACIA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EADjC;EAEA,IAAIE,EAAE,GAAGH,IAAI,CAACI,KAAd;EAAA,IACIA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EADjC;;EAGA,IAAIE,OAAO,GAAG,SAASA,OAAT,GAAmB;IAC/B;IACA,IAAIC,OAAO,GAAGX,MAAM,CAAC;MACnBO,KAAK,EAAEA,KADY;MAEnBE,KAAK,EAAEA;IAFY,CAAD,CAApB;IAIA,IAAIG,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,CAAd,CAN+B,CAMK;;IAEpCC,OAAO,CAACG,IAAR,CAAa,UAAUC,CAAV,EAAaC,CAAb,EAAgB;MAC3B,IAAIb,EAAJ,EAAQE,EAAR;;MAEA,OAAO,CAAC,CAACF,EAAE,GAAGO,OAAO,CAACK,CAAD,CAAb,MAAsB,IAAtB,IAA8BZ,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACJ,MAA3D,KAAsE,CAACM,EAAE,GAAGK,OAAO,CAACM,CAAD,CAAb,MAAsB,IAAtB,IAA8BX,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACN,MAAhI,CAAP;IACD,CAJD;IAKA,IAAIkB,UAAU,GAAGN,OAAO,CAAC,CAAD,CAAxB;;IAEA,IAAI,CAACL,KAAK,CAACY,MAAP,IAAiB,CAAC,CAACf,EAAE,GAAGO,OAAO,CAACO,UAAD,CAAb,MAA+B,IAA/B,IAAuCd,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACJ,MAApE,KAA+EG,CAApG,EAAuG;MACrG,OAAO,OAAP;IACD;;IAED,IAAIiB,WAAW,GAAGb,KAAK,CAACc,SAAN,CAAgB,UAAUC,IAAV,EAAgB;MAChD,OAAOA,IAAI,CAACC,EAAL,KAAYL,UAAnB;IACD,CAFiB,CAAlB,CAnB+B,CAqB3B;;IAEJX,KAAK,CAACiB,MAAN,CAAaJ,WAAb,EAA0B,CAA1B,EAvB+B,CAuBD;;IAE9BX,KAAK,GAAGA,KAAK,CAACgB,MAAN,CAAa,UAAUC,IAAV,EAAgB;MACnC,OAAO,EAAEA,IAAI,CAACC,MAAL,KAAgBT,UAAhB,IAA8BQ,IAAI,CAACE,MAAL,KAAgBV,UAAhD,CAAP;IACD,CAFO,CAAR;EAGD,CA5BD;;EA8BA,OAAO,IAAP,EAAa;IACX,IAAIW,OAAO,GAAGnB,OAAO,EAArB;;IAEA,IAAImB,OAAO,KAAK,OAAhB,EAAyB;EAC1B;;EAED,OAAO;IACLtB,KAAK,EAAEA,KADF;IAELE,KAAK,EAAEA;EAFF,CAAP;AAID,CArDD;;AAuDA,eAAeR,KAAf"},"metadata":{},"sourceType":"module"}