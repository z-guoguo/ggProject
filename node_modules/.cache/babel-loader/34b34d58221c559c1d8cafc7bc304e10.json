{"ast":null,"code":"/**\n * @file Functions that used to find similar element between two graph\n * @file.zh-CN 在两个图中查找相似元素的函数\n */\n\n/**\n * @description Check if two graphs are contains the same nodes.\n * @description.zh-CN 检查两个图是否包含相同的节点。\n */\nexport var containSameNodes = function containSameNodes(aGraph, bGraph) {\n  var aNodes = aGraph.nodes();\n\n  for (var i = 0; i < aNodes.length; i++) {\n    var aNode = aNodes[i];\n\n    if (bGraph.hasNode(aNode)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * @description Check if two graphs are contains the same edges.\n * @description.zh-CN 检查两个图是否包含相同的边。\n */\n\nexport var containSameEdges = function containSameEdges(aGraph, bGraph) {\n  var aEdges = aGraph.edges();\n\n  for (var i = 0; i < aEdges.length; i++) {\n    var aEdge = aEdges[i];\n\n    if (bGraph.hasEdge(aEdge.v, aEdge.w, aEdge.name)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * @description get same nodes in two graphs.\n * @description.zh-CN 获取两个图中相同的节点。\n */\n\nexport var getSameNodes = function getSameNodes(aGraph, bGraph) {\n  var aNodes = aGraph.nodes();\n  var sameNodes = aNodes.filter(function (aNode) {\n    return bGraph.hasNode(aNode);\n  });\n  return sameNodes;\n};\n/**\n * @description get same edges in two graphs.\n * @description.zh-CN 获取两个图中相同的边。\n */\n\nexport var getSameEdges = function getSameEdges(aGraph, bGraph) {\n  var aEdges = aGraph.edges();\n  var sameEdges = aEdges.filter(function (aEdge) {\n    return bGraph.hasEdge(aEdge.v, aEdge.w, aEdge.name);\n  });\n  return sameEdges;\n};\n/**\n * @description Check if two graphs'option are the same.\n * @description.zh-CN 检查两个图的选项是否相同。\n */\n\nexport var isGraphOptionSame = function isGraphOptionSame(aGraph, bGraph) {\n  return aGraph.isCompound() === bGraph.isCompound() && aGraph.isDirected() === bGraph.isDirected() && aGraph.isMultigraph() === bGraph.isMultigraph();\n};\n/**\n * @description Check if a graph contains all nodes in another graph.\n * @description.zh-CN 检查一个图是否包含另一个图的所有节点。\n */\n\nexport var containAllSameNodes = function containAllSameNodes(aGraph, bGraph) {\n  var sameNodes = getSameNodes(aGraph, bGraph);\n  return sameNodes.length === aGraph.nodes().length;\n};\n/**\n * @description Check if a graph contains all edges in another graph.\n * @description.zh-CN 检查一个图是否包含另一个图的所有边。\n */\n\nexport var containAllSameEdges = function containAllSameEdges(aGraph, bGraph) {\n  var sameEdges = getSameEdges(aGraph, bGraph);\n  return sameEdges.length === aGraph.edges().length;\n};\n/**\n * @description Check if two graphs are the same.\n * @description.zh-CN 检查两个图是否相同。\n */\n\nexport var isGraphSame = function isGraphSame(aGraph, bGraph) {\n  return isGraphOptionSame(aGraph, bGraph) && aGraph.nodeCount() === bGraph.nodeCount() && containAllSameNodes(aGraph, bGraph) && aGraph.edgeCount() === bGraph.edgeCount() && containAllSameEdges(aGraph, bGraph);\n};\n/**\n * @description Check if one graph is the subgraph of another graph.\n * @description.zh-CN 检查一个图是否是另一个图的子图。\n */\n\nexport var isGraphContainsAnother = function isGraphContainsAnother(originGraph, targetGraph) {\n  return containAllSameNodes(originGraph, targetGraph) && containAllSameEdges(originGraph, targetGraph);\n};","map":{"version":3,"names":["containSameNodes","aGraph","bGraph","aNodes","nodes","i","length","aNode","hasNode","containSameEdges","aEdges","edges","aEdge","hasEdge","v","w","name","getSameNodes","sameNodes","filter","getSameEdges","sameEdges","isGraphOptionSame","isCompound","isDirected","isMultigraph","containAllSameNodes","containAllSameEdges","isGraphSame","nodeCount","edgeCount","isGraphContainsAnother","originGraph","targetGraph"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/graphlib/es/comparision/contain.js"],"sourcesContent":["/**\n * @file Functions that used to find similar element between two graph\n * @file.zh-CN 在两个图中查找相似元素的函数\n */\n\n/**\n * @description Check if two graphs are contains the same nodes.\n * @description.zh-CN 检查两个图是否包含相同的节点。\n */\nexport var containSameNodes = function containSameNodes(aGraph, bGraph) {\n  var aNodes = aGraph.nodes();\n\n  for (var i = 0; i < aNodes.length; i++) {\n    var aNode = aNodes[i];\n\n    if (bGraph.hasNode(aNode)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * @description Check if two graphs are contains the same edges.\n * @description.zh-CN 检查两个图是否包含相同的边。\n */\n\nexport var containSameEdges = function containSameEdges(aGraph, bGraph) {\n  var aEdges = aGraph.edges();\n\n  for (var i = 0; i < aEdges.length; i++) {\n    var aEdge = aEdges[i];\n\n    if (bGraph.hasEdge(aEdge.v, aEdge.w, aEdge.name)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * @description get same nodes in two graphs.\n * @description.zh-CN 获取两个图中相同的节点。\n */\n\nexport var getSameNodes = function getSameNodes(aGraph, bGraph) {\n  var aNodes = aGraph.nodes();\n  var sameNodes = aNodes.filter(function (aNode) {\n    return bGraph.hasNode(aNode);\n  });\n  return sameNodes;\n};\n/**\n * @description get same edges in two graphs.\n * @description.zh-CN 获取两个图中相同的边。\n */\n\nexport var getSameEdges = function getSameEdges(aGraph, bGraph) {\n  var aEdges = aGraph.edges();\n  var sameEdges = aEdges.filter(function (aEdge) {\n    return bGraph.hasEdge(aEdge.v, aEdge.w, aEdge.name);\n  });\n  return sameEdges;\n};\n/**\n * @description Check if two graphs'option are the same.\n * @description.zh-CN 检查两个图的选项是否相同。\n */\n\nexport var isGraphOptionSame = function isGraphOptionSame(aGraph, bGraph) {\n  return aGraph.isCompound() === bGraph.isCompound() && aGraph.isDirected() === bGraph.isDirected() && aGraph.isMultigraph() === bGraph.isMultigraph();\n};\n/**\n * @description Check if a graph contains all nodes in another graph.\n * @description.zh-CN 检查一个图是否包含另一个图的所有节点。\n */\n\nexport var containAllSameNodes = function containAllSameNodes(aGraph, bGraph) {\n  var sameNodes = getSameNodes(aGraph, bGraph);\n  return sameNodes.length === aGraph.nodes().length;\n};\n/**\n * @description Check if a graph contains all edges in another graph.\n * @description.zh-CN 检查一个图是否包含另一个图的所有边。\n */\n\nexport var containAllSameEdges = function containAllSameEdges(aGraph, bGraph) {\n  var sameEdges = getSameEdges(aGraph, bGraph);\n  return sameEdges.length === aGraph.edges().length;\n};\n/**\n * @description Check if two graphs are the same.\n * @description.zh-CN 检查两个图是否相同。\n */\n\nexport var isGraphSame = function isGraphSame(aGraph, bGraph) {\n  return isGraphOptionSame(aGraph, bGraph) && aGraph.nodeCount() === bGraph.nodeCount() && containAllSameNodes(aGraph, bGraph) && aGraph.edgeCount() === bGraph.edgeCount() && containAllSameEdges(aGraph, bGraph);\n};\n/**\n * @description Check if one graph is the subgraph of another graph.\n * @description.zh-CN 检查一个图是否是另一个图的子图。\n */\n\nexport var isGraphContainsAnother = function isGraphContainsAnother(originGraph, targetGraph) {\n  return containAllSameNodes(originGraph, targetGraph) && containAllSameEdges(originGraph, targetGraph);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}