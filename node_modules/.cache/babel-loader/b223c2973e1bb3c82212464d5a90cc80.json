{"ast":null,"code":"\"use strict\";\n/**\n * @fileOverview grid layout\n * @author shiwu.wyy@antfin.com\n * this algorithm refers to <cytoscape.js> - https://github.com/cytoscape/cytoscape.js/\n */\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GridLayout = void 0;\n\nvar util_1 = require(\"../util\");\n\nvar base_1 = require(\"./base\");\n/**\n * 网格布局\n */\n\n\nvar GridLayout =\n/** @class */\nfunction (_super) {\n  __extends(GridLayout, _super);\n\n  function GridLayout(options) {\n    var _this = _super.call(this) || this;\n    /** 布局起始点 */\n\n\n    _this.begin = [0, 0];\n    /** prevents node overlap, may overflow boundingBox if not enough space */\n\n    _this.preventOverlap = true;\n    /** extra spacing around nodes when preventOverlap: true */\n\n    _this.preventOverlapPadding = 10;\n    /** uses all available space on false, uses minimal space on true */\n\n    _this.condense = false;\n    /** a sorting function to order the nodes; e.g. function(a, b){ return a.datapublic ('weight') - b.data('weight') } */\n\n    _this.sortBy = \"degree\";\n    _this.nodes = [];\n    _this.edges = [];\n    _this.width = 300;\n    _this.height = 300;\n    _this.row = 0;\n    _this.col = 0;\n    _this.cellWidth = 0;\n    _this.cellHeight = 0;\n    _this.cellUsed = {};\n    _this.id2manPos = {};\n    /** 迭代结束的回调函数 */\n\n    _this.onLayoutEnd = function () {};\n\n    _this.updateCfg(options);\n\n    return _this;\n  }\n\n  GridLayout.prototype.getDefaultCfg = function () {\n    return {\n      begin: [0, 0],\n      preventOverlap: true,\n      preventOverlapPadding: 10,\n      condense: false,\n      rows: undefined,\n      cols: undefined,\n      position: undefined,\n      sortBy: \"degree\",\n      nodeSize: 30\n    };\n  };\n  /**\n   * 执行布局\n   */\n\n\n  GridLayout.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes,\n        edges = self.edges,\n        begin = self.begin;\n    var n = nodes.length;\n\n    if (n === 0) {\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return {\n        nodes: nodes,\n        edges: edges\n      };\n    }\n\n    if (n === 1) {\n      nodes[0].x = begin[0];\n      nodes[0].y = begin[1];\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return {\n        nodes: nodes,\n        edges: edges\n      };\n    }\n\n    var sortBy = self.sortBy,\n        width = self.width,\n        height = self.height;\n    var condense = self.condense,\n        preventOverlapPadding = self.preventOverlapPadding,\n        preventOverlap = self.preventOverlap,\n        paramNodeSpacing = self.nodeSpacing,\n        paramNodeSize = self.nodeSize;\n    var layoutNodes = [];\n    nodes.forEach(function (node) {\n      layoutNodes.push(node);\n    });\n    var nodeIdxMap = {};\n    layoutNodes.forEach(function (node, i) {\n      nodeIdxMap[node.id] = i;\n    });\n\n    if (sortBy === \"degree\" || !(0, util_1.isString)(sortBy) || layoutNodes[0][sortBy] === undefined) {\n      sortBy = \"degree\";\n\n      if ((0, util_1.isNaN)(nodes[0].degree)) {\n        var values_1 = (0, util_1.getDegree)(layoutNodes.length, nodeIdxMap, edges);\n        layoutNodes.forEach(function (node, i) {\n          node.degree = values_1[i];\n        });\n      }\n    } // sort nodes by value\n\n\n    layoutNodes.sort(function (n1, n2) {\n      return n2[sortBy] - n1[sortBy];\n    });\n\n    if (!width && typeof window !== \"undefined\") {\n      width = window.innerWidth;\n    }\n\n    if (!height && typeof window !== \"undefined\") {\n      height = window.innerHeight;\n    }\n\n    var oRows = self.rows;\n    var oCols = self.cols != null ? self.cols : self.columns;\n    self.cells = n; // if rows or columns were set in self, use those values\n\n    if (oRows != null && oCols != null) {\n      self.rows = oRows;\n      self.cols = oCols;\n    } else if (oRows != null && oCols == null) {\n      self.rows = oRows;\n      self.cols = Math.ceil(self.cells / self.rows);\n    } else if (oRows == null && oCols != null) {\n      self.cols = oCols;\n      self.rows = Math.ceil(self.cells / self.cols);\n    } else {\n      // otherwise use the automatic values and adjust accordingly\t      // otherwise use the automatic values and adjust accordingly\n      // width/height * splits^2 = cells where splits is number of times to split width\n      self.splits = Math.sqrt(self.cells * self.height / self.width);\n      self.rows = Math.round(self.splits);\n      self.cols = Math.round(self.width / self.height * self.splits);\n    }\n\n    self.rows = Math.max(self.rows, 1);\n    self.cols = Math.max(self.cols, 1);\n\n    if (self.cols * self.rows > self.cells) {\n      // otherwise use the automatic values and adjust accordingly\n      // if rounding was up, see if we can reduce rows or columns\n      var sm = self.small();\n      var lg = self.large(); // reducing the small side takes away the most cells, so try it first\n\n      if ((sm - 1) * lg >= self.cells) {\n        self.small(sm - 1);\n      } else if ((lg - 1) * sm >= self.cells) {\n        self.large(lg - 1);\n      }\n    } else {\n      // if rounding was too low, add rows or columns\n      while (self.cols * self.rows < self.cells) {\n        var sm = self.small();\n        var lg = self.large(); // try to add to larger side first (adds less in multiplication)\n\n        if ((lg + 1) * sm >= self.cells) {\n          self.large(lg + 1);\n        } else {\n          self.small(sm + 1);\n        }\n      }\n    }\n\n    self.cellWidth = width / self.cols;\n    self.cellHeight = height / self.rows;\n\n    if (condense) {\n      self.cellWidth = 0;\n      self.cellHeight = 0;\n    }\n\n    if (preventOverlap || paramNodeSpacing) {\n      var nodeSpacing_1 = (0, util_1.getFuncByUnknownType)(10, paramNodeSpacing);\n      var nodeSize_1 = (0, util_1.getFuncByUnknownType)(30, paramNodeSize, false);\n      layoutNodes.forEach(function (node) {\n        if (!node.x || !node.y) {\n          // for bb\n          node.x = 0;\n          node.y = 0;\n        }\n\n        var _a = nodeSize_1(node),\n            _b = _a[0],\n            nodew = _b === void 0 ? 30 : _b,\n            _c = _a[1],\n            nodeh = _c === void 0 ? 30 : _c;\n\n        var p = nodeSpacing_1 !== undefined ? nodeSpacing_1(node) : preventOverlapPadding;\n        var w = nodew + p;\n        var h = nodeh + p;\n        self.cellWidth = Math.max(self.cellWidth, w);\n        self.cellHeight = Math.max(self.cellHeight, h);\n      });\n    }\n\n    self.cellUsed = {}; // e.g. 'c-0-2' => true\n    // to keep track of current cell position\n\n    self.row = 0;\n    self.col = 0; // get a cache of all the manual positions\n\n    self.id2manPos = {};\n\n    for (var i = 0; i < layoutNodes.length; i++) {\n      var node = layoutNodes[i];\n      var rcPos = void 0;\n\n      if (self.position) {\n        rcPos = self.position(node);\n      }\n\n      if (rcPos && (rcPos.row !== undefined || rcPos.col !== undefined)) {\n        // must have at least row or col def'd\n        var pos = {\n          row: rcPos.row,\n          col: rcPos.col\n        };\n\n        if (pos.col === undefined) {\n          // find unused col\n          pos.col = 0;\n\n          while (self.used(pos.row, pos.col)) {\n            pos.col++;\n          }\n        } else if (pos.row === undefined) {\n          // find unused row\n          pos.row = 0;\n\n          while (self.used(pos.row, pos.col)) {\n            pos.row++;\n          }\n        }\n\n        self.id2manPos[node.id] = pos;\n        self.use(pos.row, pos.col);\n      }\n\n      self.getPos(node);\n    }\n\n    if (self.onLayoutEnd) self.onLayoutEnd();\n    return {\n      edges: edges,\n      nodes: layoutNodes\n    };\n  };\n\n  GridLayout.prototype.small = function (val) {\n    var self = this;\n    var res;\n    var rows = self.rows || 5;\n    var cols = self.cols || 5;\n\n    if (val == null) {\n      res = Math.min(rows, cols);\n    } else {\n      var min = Math.min(rows, cols);\n\n      if (min === self.rows) {\n        self.rows = val;\n      } else {\n        self.cols = val;\n      }\n    }\n\n    return res;\n  };\n\n  GridLayout.prototype.large = function (val) {\n    var self = this;\n    var res;\n    var rows = self.rows || 5;\n    var cols = self.cols || 5;\n\n    if (val == null) {\n      res = Math.max(rows, cols);\n    } else {\n      var max = Math.max(rows, cols);\n\n      if (max === self.rows) {\n        self.rows = val;\n      } else {\n        self.cols = val;\n      }\n    }\n\n    return res;\n  };\n\n  GridLayout.prototype.used = function (row, col) {\n    var self = this;\n    return self.cellUsed[\"c-\".concat(row, \"-\").concat(col)] || false;\n  };\n\n  GridLayout.prototype.use = function (row, col) {\n    var self = this;\n    self.cellUsed[\"c-\".concat(row, \"-\").concat(col)] = true;\n  };\n\n  GridLayout.prototype.moveToNextCell = function () {\n    var self = this;\n    var cols = self.cols || 5;\n    self.col++;\n\n    if (self.col >= cols) {\n      self.col = 0;\n      self.row++;\n    }\n  };\n\n  GridLayout.prototype.getPos = function (node) {\n    var self = this;\n    var begin = self.begin,\n        cellWidth = self.cellWidth,\n        cellHeight = self.cellHeight;\n    var x;\n    var y; // see if we have a manual position set\n\n    var rcPos = self.id2manPos[node.id];\n\n    if (rcPos) {\n      x = rcPos.col * cellWidth + cellWidth / 2 + begin[0];\n      y = rcPos.row * cellHeight + cellHeight / 2 + begin[1];\n    } else {\n      // otherwise set automatically\n      while (self.used(self.row, self.col)) {\n        self.moveToNextCell();\n      }\n\n      x = self.col * cellWidth + cellWidth / 2 + begin[0];\n      y = self.row * cellHeight + cellHeight / 2 + begin[1];\n      self.use(self.row, self.col);\n      self.moveToNextCell();\n    }\n\n    node.x = x;\n    node.y = y;\n  };\n\n  GridLayout.prototype.getType = function () {\n    return \"grid\";\n  };\n\n  return GridLayout;\n}(base_1.Base);\n\nexports.GridLayout = GridLayout;","map":{"version":3,"mappings":"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","names":["__extends","options","_super","_this","updateCfg","GridLayout","begin","preventOverlap","preventOverlapPadding","condense","rows","undefined","cols","position","sortBy","nodeSize","self","edges","n","nodes","length","onLayoutEnd","x","y","width","height","paramNodeSpacing","paramNodeSize","layoutNodes","forEach","node","push","nodeIdxMap","i","id","degree","values_1","sort","n1","n2","window","innerWidth","innerHeight","oRows","oCols","columns","cells","Math","ceil","splits","sqrt","round","max","sm","small","lg","large","cellWidth","cellHeight","nodeSpacing_1","nodeSize_1","_b","nodew","_c","nodeh","p","w","h","cellUsed","row","col","id2manPos","rcPos","pos","used","use","getPos","val","res","min","concat","moveToNextCell","base_1","exports"],"sourceRoot":"","sources":["../../src/layout/grid.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}