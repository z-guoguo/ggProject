{"ast":null,"code":"import inLine from './line';\nexport default function inPolyline(points, lineWidth, x, y, isClose) {\n  var count = points.length;\n\n  if (count < 2) {\n    return false;\n  }\n\n  for (var i = 0; i < count - 1; i++) {\n    var x1 = points[i][0];\n    var y1 = points[i][1];\n    var x2 = points[i + 1][0];\n    var y2 = points[i + 1][1];\n\n    if (inLine(x1, y1, x2, y2, lineWidth, x, y)) {\n      return true;\n    }\n  } // 如果封闭，则计算起始点和结束点的边\n\n\n  if (isClose) {\n    var first = points[0];\n    var last = points[count - 1];\n\n    if (inLine(first[0], first[1], last[0], last[1], lineWidth, x, y)) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,eAAc,SAAUC,UAAV,CAAqBC,MAArB,EAAoCC,SAApC,EAAuDC,CAAvD,EAAkEC,CAAlE,EAA6EC,OAA7E,EAA6F;EACzG,IAAMC,KAAK,GAAGL,MAAM,CAACM,MAArB;;EACA,IAAID,KAAK,GAAG,CAAZ,EAAe;IACb,OAAO,KAAP;EACD;;EACD,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,GAAG,CAA5B,EAA+BE,CAAC,EAAhC,EAAoC;IAClC,IAAMC,EAAE,GAAGR,MAAM,CAACO,CAAD,CAAN,CAAU,CAAV,CAAX;IACA,IAAME,EAAE,GAAGT,MAAM,CAACO,CAAD,CAAN,CAAU,CAAV,CAAX;IACA,IAAMG,EAAE,GAAGV,MAAM,CAACO,CAAC,GAAG,CAAL,CAAN,CAAc,CAAd,CAAX;IACA,IAAMI,EAAE,GAAGX,MAAM,CAACO,CAAC,GAAG,CAAL,CAAN,CAAc,CAAd,CAAX;;IAEA,IAAIT,MAAM,CAACU,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBV,SAAjB,EAA4BC,CAA5B,EAA+BC,CAA/B,CAAV,EAA6C;MAC3C,OAAO,IAAP;IACD;EACF,CAdwG,CAgBzG;;;EACA,IAAIC,OAAJ,EAAa;IACX,IAAMQ,KAAK,GAAGZ,MAAM,CAAC,CAAD,CAApB;IACA,IAAMa,IAAI,GAAGb,MAAM,CAACK,KAAK,GAAG,CAAT,CAAnB;;IACA,IAAIP,MAAM,CAACc,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBC,IAAI,CAAC,CAAD,CAAzB,EAA8BA,IAAI,CAAC,CAAD,CAAlC,EAAuCZ,SAAvC,EAAkDC,CAAlD,EAAqDC,CAArD,CAAV,EAAmE;MACjE,OAAO,IAAP;IACD;EACF;;EAED,OAAO,KAAP;AACD","names":["inLine","inPolyline","points","lineWidth","x","y","isClose","count","length","i","x1","y1","x2","y2","first","last"],"sourceRoot":"","sources":["../../../src/util/in-stroke/polyline.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}