{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.includes.js\";\n\n/* eslint-disable no-underscore-dangle */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { ArrayExt, StringExt, ObjectExt, FunctionExt } from '../util';\nimport { Rectangle, Point } from '../geometry';\nimport { Basecoat } from '../common';\nimport { Attr } from '../registry';\nimport { Animation } from './animation';\nimport { Store } from './store';\nexport class Cell extends Basecoat {\n  constructor(metadata = {}) {\n    super();\n    const ctor = this.constructor;\n    const defaults = ctor.getDefaults(true);\n    const props = ObjectExt.merge({}, this.preprocess(defaults), this.preprocess(metadata));\n    this.id = props.id || StringExt.uuid();\n    this.store = new Store(props);\n    this.animation = new Animation(this);\n    this.setup();\n    this.init();\n    this.postprocess(metadata);\n  }\n\n  static config(presets) {\n    const {\n      markup,\n      propHooks,\n      attrHooks\n    } = presets,\n          others = __rest(presets, [\"markup\", \"propHooks\", \"attrHooks\"]);\n\n    if (markup != null) {\n      this.markup = markup;\n    }\n\n    if (propHooks) {\n      this.propHooks = this.propHooks.slice();\n\n      if (Array.isArray(propHooks)) {\n        this.propHooks.push(...propHooks);\n      } else if (typeof propHooks === 'function') {\n        this.propHooks.push(propHooks);\n      } else {\n        Object.keys(propHooks).forEach(name => {\n          const hook = propHooks[name];\n\n          if (typeof hook === 'function') {\n            this.propHooks.push(hook);\n          }\n        });\n      }\n    }\n\n    if (attrHooks) {\n      this.attrHooks = Object.assign(Object.assign({}, this.attrHooks), attrHooks);\n    }\n\n    this.defaults = ObjectExt.merge({}, this.defaults, others);\n  }\n\n  static getMarkup() {\n    return this.markup;\n  }\n\n  static getDefaults(raw) {\n    return raw ? this.defaults : ObjectExt.cloneDeep(this.defaults);\n  }\n\n  static getAttrHooks() {\n    return this.attrHooks;\n  }\n\n  static applyPropHooks(cell, metadata) {\n    return this.propHooks.reduce((memo, hook) => {\n      return hook ? FunctionExt.call(hook, cell, memo) : memo;\n    }, metadata);\n  } // #endregion\n\n\n  get [Symbol.toStringTag]() {\n    return Cell.toStringTag;\n  }\n\n  init() {} // #region model\n\n\n  get model() {\n    return this._model;\n  }\n\n  set model(model) {\n    if (this._model !== model) {\n      this._model = model;\n    }\n  } // #endregion\n\n\n  preprocess(metadata, ignoreIdCheck) {\n    const id = metadata.id;\n    const ctor = this.constructor;\n    const props = ctor.applyPropHooks(this, metadata);\n\n    if (id == null && ignoreIdCheck !== true) {\n      props.id = StringExt.uuid();\n    }\n\n    return props;\n  }\n\n  postprocess(metadata) {} // eslint-disable-line\n\n\n  setup() {\n    this.store.on('change:*', metadata => {\n      const {\n        key,\n        current,\n        previous,\n        options\n      } = metadata;\n      this.notify('change:*', {\n        key,\n        options,\n        current,\n        previous,\n        cell: this\n      });\n      this.notify(`change:${key}`, {\n        options,\n        current,\n        previous,\n        cell: this\n      });\n      const type = key;\n\n      if (type === 'source' || type === 'target') {\n        this.notify(`change:terminal`, {\n          type,\n          current,\n          previous,\n          options,\n          cell: this\n        });\n      }\n    });\n    this.store.on('changed', ({\n      options\n    }) => this.notify('changed', {\n      options,\n      cell: this\n    }));\n  }\n\n  notify(name, args) {\n    this.trigger(name, args);\n    const model = this.model;\n\n    if (model) {\n      model.notify(`cell:${name}`, args);\n\n      if (this.isNode()) {\n        model.notify(`node:${name}`, Object.assign(Object.assign({}, args), {\n          node: this\n        }));\n      } else if (this.isEdge()) {\n        model.notify(`edge:${name}`, Object.assign(Object.assign({}, args), {\n          edge: this\n        }));\n      }\n    }\n\n    return this;\n  }\n\n  isNode() {\n    return false;\n  }\n\n  isEdge() {\n    return false;\n  }\n\n  isSameStore(cell) {\n    return this.store === cell.store;\n  }\n\n  get view() {\n    return this.store.get('view');\n  }\n\n  get shape() {\n    return this.store.get('shape', '');\n  }\n\n  getProp(key, defaultValue) {\n    if (key == null) {\n      return this.store.get();\n    }\n\n    return this.store.get(key, defaultValue);\n  }\n\n  setProp(key, value, options) {\n    if (typeof key === 'string') {\n      this.store.set(key, value, options);\n    } else {\n      const props = this.preprocess(key, true);\n      this.store.set(ObjectExt.merge({}, this.getProp(), props), value);\n      this.postprocess(key);\n    }\n\n    return this;\n  }\n\n  removeProp(key, options) {\n    if (typeof key === 'string' || Array.isArray(key)) {\n      this.store.removeByPath(key, options);\n    } else {\n      this.store.remove(options);\n    }\n\n    return this;\n  }\n\n  hasChanged(key) {\n    return key == null ? this.store.hasChanged() : this.store.hasChanged(key);\n  }\n\n  getPropByPath(path) {\n    return this.store.getByPath(path);\n  }\n\n  setPropByPath(path, value, options = {}) {\n    if (this.model) {\n      // update inner reference\n      if (path === 'children') {\n        this._children = value ? value.map(id => this.model.getCell(id)).filter(child => child != null) : null;\n      } else if (path === 'parent') {\n        this._parent = value ? this.model.getCell(value) : null;\n      }\n    }\n\n    this.store.setByPath(path, value, options);\n    return this;\n  }\n\n  removePropByPath(path, options = {}) {\n    const paths = Array.isArray(path) ? path : path.split('/'); // Once a property is removed from the `attrs` the CellView will\n    // recognize a `dirty` flag and re-render itself in order to remove\n    // the attribute from SVGElement.\n\n    if (paths[0] === 'attrs') {\n      options.dirty = true;\n    }\n\n    this.store.removeByPath(paths, options);\n    return this;\n  }\n\n  prop(key, value, options) {\n    if (key == null) {\n      return this.getProp();\n    }\n\n    if (typeof key === 'string' || Array.isArray(key)) {\n      if (arguments.length === 1) {\n        return this.getPropByPath(key);\n      }\n\n      if (value == null) {\n        return this.removePropByPath(key, options || {});\n      }\n\n      return this.setPropByPath(key, value, options || {});\n    }\n\n    return this.setProp(key, value || {});\n  }\n\n  previous(name) {\n    return this.store.getPrevious(name);\n  } // #endregion\n  // #region zIndex\n\n\n  get zIndex() {\n    return this.getZIndex();\n  }\n\n  set zIndex(z) {\n    if (z == null) {\n      this.removeZIndex();\n    } else {\n      this.setZIndex(z);\n    }\n  }\n\n  getZIndex() {\n    return this.store.get('zIndex');\n  }\n\n  setZIndex(z, options = {}) {\n    this.store.set('zIndex', z, options);\n    return this;\n  }\n\n  removeZIndex(options = {}) {\n    this.store.remove('zIndex', options);\n    return this;\n  }\n\n  toFront(options = {}) {\n    const model = this.model;\n\n    if (model) {\n      let z = model.getMaxZIndex();\n      let cells;\n\n      if (options.deep) {\n        cells = this.getDescendants({\n          deep: true,\n          breadthFirst: true\n        });\n        cells.unshift(this);\n      } else {\n        cells = [this];\n      }\n\n      z = z - cells.length + 1;\n      const count = model.total();\n      let changed = model.indexOf(this) !== count - cells.length;\n\n      if (!changed) {\n        changed = cells.some((cell, index) => cell.getZIndex() !== z + index);\n      }\n\n      if (changed) {\n        this.batchUpdate('to-front', () => {\n          z += cells.length;\n          cells.forEach((cell, index) => {\n            cell.setZIndex(z + index, options);\n          });\n        });\n      }\n    }\n\n    return this;\n  }\n\n  toBack(options = {}) {\n    const model = this.model;\n\n    if (model) {\n      let z = model.getMinZIndex();\n      let cells;\n\n      if (options.deep) {\n        cells = this.getDescendants({\n          deep: true,\n          breadthFirst: true\n        });\n        cells.unshift(this);\n      } else {\n        cells = [this];\n      }\n\n      let changed = model.indexOf(this) !== 0;\n\n      if (!changed) {\n        changed = cells.some((cell, index) => cell.getZIndex() !== z + index);\n      }\n\n      if (changed) {\n        this.batchUpdate('to-back', () => {\n          z -= cells.length;\n          cells.forEach((cell, index) => {\n            cell.setZIndex(z + index, options);\n          });\n        });\n      }\n    }\n\n    return this;\n  } // #endregion\n  // #region markup\n\n\n  get markup() {\n    return this.getMarkup();\n  }\n\n  set markup(value) {\n    if (value == null) {\n      this.removeMarkup();\n    } else {\n      this.setMarkup(value);\n    }\n  }\n\n  getMarkup() {\n    let markup = this.store.get('markup');\n\n    if (markup == null) {\n      const ctor = this.constructor;\n      markup = ctor.getMarkup();\n    }\n\n    return markup;\n  }\n\n  setMarkup(markup, options = {}) {\n    this.store.set('markup', markup, options);\n    return this;\n  }\n\n  removeMarkup(options = {}) {\n    this.store.remove('markup', options);\n    return this;\n  } // #endregion\n  // #region attrs\n\n\n  get attrs() {\n    return this.getAttrs();\n  }\n\n  set attrs(value) {\n    if (value == null) {\n      this.removeAttrs();\n    } else {\n      this.setAttrs(value);\n    }\n  }\n\n  getAttrs() {\n    const result = this.store.get('attrs');\n    return result ? Object.assign({}, result) : {};\n  }\n\n  setAttrs(attrs, options = {}) {\n    if (attrs == null) {\n      this.removeAttrs(options);\n    } else {\n      const set = attrs => this.store.set('attrs', attrs, options);\n\n      if (options.overwrite === true) {\n        set(attrs);\n      } else {\n        const prev = this.getAttrs();\n\n        if (options.deep === false) {\n          set(Object.assign(Object.assign({}, prev), attrs));\n        } else {\n          set(ObjectExt.merge({}, prev, attrs));\n        }\n      }\n    }\n\n    return this;\n  }\n\n  replaceAttrs(attrs, options = {}) {\n    return this.setAttrs(attrs, Object.assign(Object.assign({}, options), {\n      overwrite: true\n    }));\n  }\n\n  updateAttrs(attrs, options = {}) {\n    return this.setAttrs(attrs, Object.assign(Object.assign({}, options), {\n      deep: false\n    }));\n  }\n\n  removeAttrs(options = {}) {\n    this.store.remove('attrs', options);\n    return this;\n  }\n\n  getAttrDefinition(attrName) {\n    if (!attrName) {\n      return null;\n    }\n\n    const ctor = this.constructor;\n    const hooks = ctor.getAttrHooks() || {};\n    let definition = hooks[attrName] || Attr.registry.get(attrName);\n\n    if (!definition) {\n      const name = StringExt.camelCase(attrName);\n      definition = hooks[name] || Attr.registry.get(name);\n    }\n\n    return definition || null;\n  }\n\n  getAttrByPath(path) {\n    if (path == null || path === '') {\n      return this.getAttrs();\n    }\n\n    return this.getPropByPath(this.prefixAttrPath(path));\n  }\n\n  setAttrByPath(path, value, options = {}) {\n    this.setPropByPath(this.prefixAttrPath(path), value, options);\n    return this;\n  }\n\n  removeAttrByPath(path, options = {}) {\n    this.removePropByPath(this.prefixAttrPath(path), options);\n    return this;\n  }\n\n  prefixAttrPath(path) {\n    return Array.isArray(path) ? ['attrs'].concat(path) : `attrs/${path}`;\n  }\n\n  attr(path, value, options) {\n    if (path == null) {\n      return this.getAttrByPath();\n    }\n\n    if (typeof path === 'string' || Array.isArray(path)) {\n      if (arguments.length === 1) {\n        return this.getAttrByPath(path);\n      }\n\n      if (value == null) {\n        return this.removeAttrByPath(path, options || {});\n      }\n\n      return this.setAttrByPath(path, value, options || {});\n    }\n\n    return this.setAttrs(path, value || {});\n  } // #endregion\n  // #region visible\n\n\n  get visible() {\n    return this.isVisible();\n  }\n\n  set visible(value) {\n    this.setVisible(value);\n  }\n\n  setVisible(visible, options = {}) {\n    this.store.set('visible', visible, options);\n    return this;\n  }\n\n  isVisible() {\n    return this.store.get('visible') !== false;\n  }\n\n  show(options = {}) {\n    if (!this.isVisible()) {\n      this.setVisible(true, options);\n    }\n\n    return this;\n  }\n\n  hide(options = {}) {\n    if (this.isVisible()) {\n      this.setVisible(false, options);\n    }\n\n    return this;\n  }\n\n  toggleVisible(isVisible, options = {}) {\n    const visible = typeof isVisible === 'boolean' ? isVisible : !this.isVisible();\n    const localOptions = typeof isVisible === 'boolean' ? options : isVisible;\n\n    if (visible) {\n      this.show(localOptions);\n    } else {\n      this.hide(localOptions);\n    }\n\n    return this;\n  } // #endregion\n  // #region data\n\n\n  get data() {\n    return this.getData();\n  }\n\n  set data(val) {\n    this.setData(val);\n  }\n\n  getData() {\n    return this.store.get('data');\n  }\n\n  setData(data, options = {}) {\n    if (data == null) {\n      this.removeData(options);\n    } else {\n      const set = data => this.store.set('data', data, options);\n\n      if (options.overwrite === true) {\n        set(data);\n      } else {\n        const prev = this.getData();\n\n        if (options.deep === false) {\n          set(typeof data === 'object' ? Object.assign(Object.assign({}, prev), data) : data);\n        } else {\n          set(ObjectExt.merge({}, prev, data));\n        }\n      }\n    }\n\n    return this;\n  }\n\n  replaceData(data, options = {}) {\n    return this.setData(data, Object.assign(Object.assign({}, options), {\n      overwrite: true\n    }));\n  }\n\n  updateData(data, options = {}) {\n    return this.setData(data, Object.assign(Object.assign({}, options), {\n      deep: false\n    }));\n  }\n\n  removeData(options = {}) {\n    this.store.remove('data', options);\n    return this;\n  } // #endregion\n  // #region parent children\n\n\n  get parent() {\n    return this.getParent();\n  }\n\n  get children() {\n    return this.getChildren();\n  }\n\n  getParentId() {\n    return this.store.get('parent');\n  }\n\n  getParent() {\n    const parentId = this.getParentId();\n\n    if (parentId && this.model) {\n      const parent = this.model.getCell(parentId);\n      this._parent = parent;\n      return parent;\n    }\n\n    return null;\n  }\n\n  getChildren() {\n    const childrenIds = this.store.get('children');\n\n    if (childrenIds && childrenIds.length && this.model) {\n      const children = childrenIds.map(id => {\n        var _a;\n\n        return (_a = this.model) === null || _a === void 0 ? void 0 : _a.getCell(id);\n      }).filter(cell => cell != null);\n      this._children = children;\n      return [...children];\n    }\n\n    return null;\n  }\n\n  hasParent() {\n    return this.parent != null;\n  }\n\n  isParentOf(child) {\n    return child != null && child.getParent() === this;\n  }\n\n  isChildOf(parent) {\n    return parent != null && this.getParent() === parent;\n  }\n\n  eachChild(iterator, context) {\n    if (this.children) {\n      this.children.forEach(iterator, context);\n    }\n\n    return this;\n  }\n\n  filterChild(filter, context) {\n    return this.children ? this.children.filter(filter, context) : [];\n  }\n\n  getChildCount() {\n    return this.children == null ? 0 : this.children.length;\n  }\n\n  getChildIndex(child) {\n    return this.children == null ? -1 : this.children.indexOf(child);\n  }\n\n  getChildAt(index) {\n    return this.children != null && index >= 0 ? this.children[index] : null;\n  }\n\n  getAncestors(options = {}) {\n    const ancestors = [];\n    let parent = this.getParent();\n\n    while (parent) {\n      ancestors.push(parent);\n      parent = options.deep !== false ? parent.getParent() : null;\n    }\n\n    return ancestors;\n  }\n\n  getDescendants(options = {}) {\n    if (options.deep !== false) {\n      // breadth first\n      if (options.breadthFirst) {\n        const cells = [];\n        const queue = this.getChildren() || [];\n\n        while (queue.length > 0) {\n          const parent = queue.shift();\n          const children = parent.getChildren();\n          cells.push(parent);\n\n          if (children) {\n            queue.push(...children);\n          }\n        }\n\n        return cells;\n      } // depth first\n\n\n      {\n        const cells = this.getChildren() || [];\n        cells.forEach(cell => {\n          cells.push(...cell.getDescendants(options));\n        });\n        return cells;\n      }\n    }\n\n    return this.getChildren() || [];\n  }\n\n  isDescendantOf(ancestor, options = {}) {\n    if (ancestor == null) {\n      return false;\n    }\n\n    if (options.deep !== false) {\n      let current = this.getParent();\n\n      while (current) {\n        if (current === ancestor) {\n          return true;\n        }\n\n        current = current.getParent();\n      }\n\n      return false;\n    }\n\n    return this.isChildOf(ancestor);\n  }\n\n  isAncestorOf(descendant, options = {}) {\n    if (descendant == null) {\n      return false;\n    }\n\n    return descendant.isDescendantOf(this, options);\n  }\n\n  contains(cell) {\n    return this.isAncestorOf(cell);\n  }\n\n  getCommonAncestor(...cells) {\n    return Cell.getCommonAncestor(this, ...cells);\n  }\n\n  setParent(parent, options = {}) {\n    this._parent = parent;\n\n    if (parent) {\n      this.store.set('parent', parent.id, options);\n    } else {\n      this.store.remove('parent', options);\n    }\n\n    return this;\n  }\n\n  setChildren(children, options = {}) {\n    this._children = children;\n\n    if (children != null) {\n      this.store.set('children', children.map(child => child.id), options);\n    } else {\n      this.store.remove('children', options);\n    }\n\n    return this;\n  }\n\n  unembed(child, options = {}) {\n    const children = this.children;\n\n    if (children != null && child != null) {\n      const index = this.getChildIndex(child);\n\n      if (index !== -1) {\n        children.splice(index, 1);\n        child.setParent(null, options);\n        this.setChildren(children, options);\n      }\n    }\n\n    return this;\n  }\n\n  embed(child, options = {}) {\n    child.addTo(this, options);\n    return this;\n  }\n\n  addTo(target, options = {}) {\n    if (Cell.isCell(target)) {\n      target.addChild(this, options);\n    } else {\n      target.addCell(this, options);\n    }\n\n    return this;\n  }\n\n  insertTo(parent, index, options = {}) {\n    parent.insertChild(this, index, options);\n    return this;\n  }\n\n  addChild(child, options = {}) {\n    return this.insertChild(child, undefined, options);\n  }\n\n  insertChild(child, index, options = {}) {\n    if (child != null && child !== this) {\n      const oldParent = child.getParent();\n      const changed = this !== oldParent;\n      let pos = index;\n\n      if (pos == null) {\n        pos = this.getChildCount();\n\n        if (!changed) {\n          pos -= 1;\n        }\n      } // remove from old parent\n\n\n      if (oldParent) {\n        const children = oldParent.getChildren();\n\n        if (children) {\n          const index = children.indexOf(child);\n\n          if (index >= 0) {\n            child.setParent(null, options);\n            children.splice(index, 1);\n            oldParent.setChildren(children, options);\n          }\n        }\n      }\n\n      let children = this.children;\n\n      if (children == null) {\n        children = [];\n        children.push(child);\n      } else {\n        children.splice(pos, 0, child);\n      }\n\n      child.setParent(this, options);\n      this.setChildren(children, options);\n\n      if (changed && this.model) {\n        const incomings = this.model.getIncomingEdges(this);\n        const outgoings = this.model.getOutgoingEdges(this);\n\n        if (incomings) {\n          incomings.forEach(edge => edge.updateParent(options));\n        }\n\n        if (outgoings) {\n          outgoings.forEach(edge => edge.updateParent(options));\n        }\n      }\n\n      if (this.model) {\n        this.model.addCell(child, options);\n      }\n    }\n\n    return this;\n  }\n\n  removeFromParent(options = {}) {\n    const parent = this.getParent();\n\n    if (parent != null) {\n      const index = parent.getChildIndex(this);\n      parent.removeChildAt(index, options);\n    }\n\n    return this;\n  }\n\n  removeChild(child, options = {}) {\n    const index = this.getChildIndex(child);\n    return this.removeChildAt(index, options);\n  }\n\n  removeChildAt(index, options = {}) {\n    const child = this.getChildAt(index);\n    const children = this.children;\n\n    if (children != null && child != null) {\n      this.unembed(child, options);\n      child.remove(options);\n    }\n\n    return child;\n  }\n\n  remove(options = {}) {\n    this.batchUpdate('remove', () => {\n      const parent = this.getParent();\n\n      if (parent) {\n        parent.removeChild(this, options);\n      }\n\n      if (options.deep !== false) {\n        this.eachChild(child => child.remove(options));\n      }\n\n      if (this.model) {\n        this.model.removeCell(this, options);\n      }\n    });\n    return this;\n  }\n\n  transition(path, target, options = {}, delim = '/') {\n    return this.animation.start(path, target, options, delim);\n  }\n\n  stopTransition(path, options, delim = '/') {\n    this.animation.stop(path, options, delim);\n    return this;\n  }\n\n  getTransitions() {\n    return this.animation.get();\n  } // #endregion\n  // #region transform\n  // eslint-disable-next-line\n\n\n  translate(tx, ty, options) {\n    return this;\n  }\n\n  scale(sx, // eslint-disable-line\n  sy, // eslint-disable-line\n  origin, // eslint-disable-line\n  options) {\n    return this;\n  }\n\n  addTools(items, obj, options) {\n    const toolItems = Array.isArray(items) ? items : [items];\n    const name = typeof obj === 'string' ? obj : null;\n    const config = typeof obj === 'object' ? obj : typeof options === 'object' ? options : {};\n\n    if (config.reset) {\n      return this.setTools({\n        name,\n        items: toolItems,\n        local: config.local\n      }, config);\n    }\n\n    let tools = ObjectExt.cloneDeep(this.getTools());\n\n    if (tools == null || name == null || tools.name === name) {\n      if (tools == null) {\n        tools = {};\n      }\n\n      if (!tools.items) {\n        tools.items = [];\n      }\n\n      tools.name = name;\n      tools.items = [...tools.items, ...toolItems];\n      return this.setTools(Object.assign({}, tools), config);\n    }\n  }\n\n  setTools(tools, options = {}) {\n    if (tools == null) {\n      this.removeTools();\n    } else {\n      this.store.set('tools', Cell.normalizeTools(tools), options);\n    }\n\n    return this;\n  }\n\n  getTools() {\n    return this.store.get('tools');\n  }\n\n  removeTools(options = {}) {\n    this.store.remove('tools', options);\n    return this;\n  }\n\n  hasTools(name) {\n    const tools = this.getTools();\n\n    if (tools == null) {\n      return false;\n    }\n\n    if (name == null) {\n      return true;\n    }\n\n    return tools.name === name;\n  }\n\n  hasTool(name) {\n    const tools = this.getTools();\n\n    if (tools == null) {\n      return false;\n    }\n\n    return tools.items.some(item => typeof item === 'string' ? item === name : item.name === name);\n  }\n\n  removeTool(nameOrIndex, options = {}) {\n    const tools = ObjectExt.cloneDeep(this.getTools());\n\n    if (tools) {\n      let updated = false;\n      const items = tools.items.slice();\n\n      const remove = index => {\n        items.splice(index, 1);\n        updated = true;\n      };\n\n      if (typeof nameOrIndex === 'number') {\n        remove(nameOrIndex);\n      } else {\n        for (let i = items.length - 1; i >= 0; i -= 1) {\n          const item = items[i];\n          const exist = typeof item === 'string' ? item === nameOrIndex : item.name === nameOrIndex;\n\n          if (exist) {\n            remove(i);\n          }\n        }\n      }\n\n      if (updated) {\n        tools.items = items;\n        this.setTools(tools, options);\n      }\n    }\n\n    return this;\n  } // #endregion\n  // #region common\n  // eslint-disable-next-line\n\n\n  getBBox(options) {\n    return new Rectangle();\n  } // eslint-disable-next-line\n\n\n  getConnectionPoint(edge, type) {\n    return new Point();\n  }\n\n  toJSON(options = {}) {\n    const props = Object.assign({}, this.store.get());\n    const toString = Object.prototype.toString;\n    const cellType = this.isNode() ? 'node' : this.isEdge() ? 'edge' : 'cell';\n\n    if (!props.shape) {\n      const ctor = this.constructor;\n      throw new Error(`Unable to serialize ${cellType} missing \"shape\" prop, check the ${cellType} \"${ctor.name || toString.call(ctor)}\"`);\n    }\n\n    const ctor = this.constructor;\n    const diff = options.diff === true;\n    const attrs = props.attrs || {};\n    const presets = ctor.getDefaults(true); // When `options.diff` is `true`, we should process the custom options,\n    // such as `width`, `height` etc. to ensure the comparing work correctly.\n\n    const defaults = diff ? this.preprocess(presets, true) : presets;\n    const defaultAttrs = defaults.attrs || {};\n    const finalAttrs = {};\n    Object.keys(props).forEach(key => {\n      const val = props[key];\n\n      if (val != null && !Array.isArray(val) && typeof val === 'object' && !ObjectExt.isPlainObject(val)) {\n        throw new Error(`Can only serialize ${cellType} with plain-object props, but got a \"${toString.call(val)}\" type of key \"${key}\" on ${cellType} \"${this.id}\"`);\n      }\n\n      if (key !== 'attrs' && key !== 'shape' && diff) {\n        const preset = defaults[key];\n\n        if (ObjectExt.isEqual(val, preset)) {\n          delete props[key];\n        }\n      }\n    });\n    Object.keys(attrs).forEach(key => {\n      const attr = attrs[key];\n      const defaultAttr = defaultAttrs[key];\n      Object.keys(attr).forEach(name => {\n        const value = attr[name];\n        const defaultValue = defaultAttr ? defaultAttr[name] : null;\n\n        if (value != null && typeof value === 'object' && !Array.isArray(value)) {\n          Object.keys(value).forEach(subName => {\n            const subValue = value[subName];\n\n            if (defaultAttr == null || defaultValue == null || !ObjectExt.isObject(defaultValue) || !ObjectExt.isEqual(defaultValue[subName], subValue)) {\n              if (finalAttrs[key] == null) {\n                finalAttrs[key] = {};\n              }\n\n              if (finalAttrs[key][name] == null) {\n                finalAttrs[key][name] = {};\n              }\n\n              const tmp = finalAttrs[key][name];\n              tmp[subName] = subValue;\n            }\n          });\n        } else if (defaultAttr == null || !ObjectExt.isEqual(defaultValue, value)) {\n          // `value` is not an object, default attribute with `key` does not\n          // exist or it is different than the attribute value set on the cell.\n          if (finalAttrs[key] == null) {\n            finalAttrs[key] = {};\n          }\n\n          finalAttrs[key][name] = value;\n        }\n      });\n    });\n    const finalProps = Object.assign(Object.assign({}, props), {\n      attrs: ObjectExt.isEmpty(finalAttrs) ? undefined : finalAttrs\n    });\n\n    if (finalProps.attrs == null) {\n      delete finalProps.attrs;\n    }\n\n    const ret = finalProps;\n\n    if (ret.angle === 0) {\n      delete ret.angle;\n    }\n\n    return ObjectExt.cloneDeep(ret);\n  }\n\n  clone(options = {}) {\n    if (!options.deep) {\n      const data = Object.assign({}, this.store.get());\n\n      if (!options.keepId) {\n        delete data.id;\n      }\n\n      delete data.parent;\n      delete data.children;\n      const ctor = this.constructor;\n      return new ctor(data); // eslint-disable-line new-cap\n    } // Deep cloning. Clone the cell itself and all its children.\n\n\n    const map = Cell.deepClone(this);\n    return map[this.id];\n  }\n\n  findView(graph) {\n    return graph.renderer.findViewByCell(this);\n  } // #endregion\n  // #region batch\n\n\n  startBatch(name, data = {}, model = this.model) {\n    this.notify('batch:start', {\n      name,\n      data,\n      cell: this\n    });\n\n    if (model) {\n      model.startBatch(name, Object.assign(Object.assign({}, data), {\n        cell: this\n      }));\n    }\n\n    return this;\n  }\n\n  stopBatch(name, data = {}, model = this.model) {\n    if (model) {\n      model.stopBatch(name, Object.assign(Object.assign({}, data), {\n        cell: this\n      }));\n    }\n\n    this.notify('batch:stop', {\n      name,\n      data,\n      cell: this\n    });\n    return this;\n  }\n\n  batchUpdate(name, execute, data) {\n    // The model is null after cell was removed(remove batch).\n    // So we should temp save model to trigger pairing batch event.\n    const model = this.model;\n    this.startBatch(name, data, model);\n    const result = execute();\n    this.stopBatch(name, data, model);\n    return result;\n  } // #endregion\n  // #region IDisposable\n\n\n  dispose() {\n    this.removeFromParent();\n    this.store.dispose();\n  }\n\n}\nCell.defaults = {};\nCell.attrHooks = {};\nCell.propHooks = [];\n\n__decorate([Basecoat.dispose()], Cell.prototype, \"dispose\", null);\n\n(function (Cell) {\n  function normalizeTools(raw) {\n    if (typeof raw === 'string') {\n      return {\n        items: [raw]\n      };\n    }\n\n    if (Array.isArray(raw)) {\n      return {\n        items: raw\n      };\n    }\n\n    if (raw.items) {\n      return raw;\n    }\n\n    return {\n      items: [raw]\n    };\n  }\n\n  Cell.normalizeTools = normalizeTools;\n})(Cell || (Cell = {}));\n\n(function (Cell) {\n  Cell.toStringTag = `X6.${Cell.name}`;\n\n  function isCell(instance) {\n    if (instance == null) {\n      return false;\n    }\n\n    if (instance instanceof Cell) {\n      return true;\n    }\n\n    const tag = instance[Symbol.toStringTag];\n    const cell = instance;\n\n    if ((tag == null || tag === Cell.toStringTag) && typeof cell.isNode === 'function' && typeof cell.isEdge === 'function' && typeof cell.prop === 'function' && typeof cell.attr === 'function') {\n      return true;\n    }\n\n    return false;\n  }\n\n  Cell.isCell = isCell;\n})(Cell || (Cell = {}));\n\n(function (Cell) {\n  function getCommonAncestor(...cells) {\n    const ancestors = cells.filter(cell => cell != null).map(cell => cell.getAncestors()).sort((a, b) => {\n      return a.length - b.length;\n    });\n    const first = ancestors.shift();\n    return first.find(cell => ancestors.every(item => item.includes(cell))) || null;\n  }\n\n  Cell.getCommonAncestor = getCommonAncestor;\n\n  function getCellsBBox(cells, options = {}) {\n    let bbox = null;\n\n    for (let i = 0, ii = cells.length; i < ii; i += 1) {\n      const cell = cells[i];\n      let rect = cell.getBBox(options);\n\n      if (rect) {\n        if (cell.isNode()) {\n          const angle = cell.getAngle();\n\n          if (angle != null && angle !== 0) {\n            rect = rect.bbox(angle);\n          }\n        }\n\n        bbox = bbox == null ? rect : bbox.union(rect);\n      }\n    }\n\n    return bbox;\n  }\n\n  Cell.getCellsBBox = getCellsBBox;\n\n  function deepClone(cell) {\n    const cells = [cell, ...cell.getDescendants({\n      deep: true\n    })];\n    return Cell.cloneCells(cells);\n  }\n\n  Cell.deepClone = deepClone;\n\n  function cloneCells(cells) {\n    const inputs = ArrayExt.uniq(cells);\n    const cloneMap = inputs.reduce((map, cell) => {\n      map[cell.id] = cell.clone();\n      return map;\n    }, {});\n    inputs.forEach(cell => {\n      const clone = cloneMap[cell.id];\n\n      if (clone.isEdge()) {\n        const sourceId = clone.getSourceCellId();\n        const targetId = clone.getTargetCellId();\n\n        if (sourceId && cloneMap[sourceId]) {\n          // Source is a node and the node is among the clones.\n          // Then update the source of the cloned edge.\n          clone.setSource(Object.assign(Object.assign({}, clone.getSource()), {\n            cell: cloneMap[sourceId].id\n          }));\n        }\n\n        if (targetId && cloneMap[targetId]) {\n          // Target is a node and the node is among the clones.\n          // Then update the target of the cloned edge.\n          clone.setTarget(Object.assign(Object.assign({}, clone.getTarget()), {\n            cell: cloneMap[targetId].id\n          }));\n        }\n      } // Find the parent of the original cell\n\n\n      const parent = cell.getParent();\n\n      if (parent && cloneMap[parent.id]) {\n        clone.setParent(cloneMap[parent.id]);\n      } // Find the children of the original cell\n\n\n      const children = cell.getChildren();\n\n      if (children && children.length) {\n        const embeds = children.reduce((memo, child) => {\n          // Embedded cells that are not being cloned can not be carried\n          // over with other embedded cells.\n          if (cloneMap[child.id]) {\n            memo.push(cloneMap[child.id]);\n          }\n\n          return memo;\n        }, []);\n\n        if (embeds.length > 0) {\n          clone.setChildren(embeds);\n        }\n      }\n    });\n    return cloneMap;\n  }\n\n  Cell.cloneCells = cloneCells;\n})(Cell || (Cell = {}));\n\n(function (Cell) {\n  Cell.config({\n    propHooks(_a) {\n      var {\n        tools\n      } = _a,\n          metadata = __rest(_a, [\"tools\"]);\n\n      if (tools) {\n        metadata.tools = Cell.normalizeTools(tools);\n      }\n\n      return metadata;\n    }\n\n  });\n})(Cell || (Cell = {}));","map":{"version":3,"mappings":"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","names":["ArrayExt","StringExt","ObjectExt","FunctionExt","Rectangle","Point","Basecoat","Attr","Animation","Store","Cell","constructor","metadata","ctor","defaults","getDefaults","props","merge","preprocess","id","uuid","store","animation","setup","init","postprocess","config","presets","markup","propHooks","attrHooks","others","slice","Array","isArray","push","Object","keys","forEach","name","hook","getMarkup","raw","cloneDeep","getAttrHooks","applyPropHooks","cell","reduce","memo","call","Symbol","toStringTag","model","_model","ignoreIdCheck","on","key","current","previous","options","notify","type","args","trigger","isNode","node","isEdge","edge","isSameStore","view","get","shape","getProp","defaultValue","setProp","value","set","removeProp","removeByPath","remove","hasChanged","getPropByPath","path","getByPath","setPropByPath","_children","map","getCell","filter","child","_parent","setByPath","removePropByPath","paths","split","dirty","prop","arguments","length","getPrevious","zIndex","getZIndex","z","removeZIndex","setZIndex","toFront","getMaxZIndex","cells","deep","getDescendants","breadthFirst","unshift","count","total","changed","indexOf","some","index","batchUpdate","toBack","getMinZIndex","removeMarkup","setMarkup","attrs","getAttrs","removeAttrs","setAttrs","result","overwrite","prev","replaceAttrs","updateAttrs","getAttrDefinition","attrName","hooks","definition","registry","camelCase","getAttrByPath","prefixAttrPath","setAttrByPath","removeAttrByPath","concat","attr","visible","isVisible","setVisible","show","hide","toggleVisible","localOptions","data","getData","val","setData","removeData","replaceData","updateData","parent","getParent","children","getChildren","getParentId","parentId","childrenIds","_a","hasParent","isParentOf","isChildOf","eachChild","iterator","context","filterChild","getChildCount","getChildIndex","getChildAt","getAncestors","ancestors","queue","shift","isDescendantOf","ancestor","isAncestorOf","descendant","contains","getCommonAncestor","setParent","setChildren","unembed","splice","embed","addTo","target","isCell","addChild","addCell","insertTo","insertChild","undefined","oldParent","pos","incomings","getIncomingEdges","outgoings","getOutgoingEdges","updateParent","removeFromParent","removeChildAt","removeChild","removeCell","transition","delim","start","stopTransition","stop","getTransitions","translate","tx","ty","scale","sx","sy","origin","addTools","items","obj","toolItems","reset","setTools","local","tools","getTools","removeTools","normalizeTools","hasTools","hasTool","item","removeTool","nameOrIndex","updated","i","exist","getBBox","getConnectionPoint","toJSON","toString","prototype","cellType","Error","diff","defaultAttrs","finalAttrs","isPlainObject","preset","isEqual","defaultAttr","subName","subValue","isObject","tmp","finalProps","isEmpty","ret","angle","clone","keepId","deepClone","findView","graph","renderer","findViewByCell","startBatch","stopBatch","execute","dispose","__decorate","instance","tag","sort","a","b","first","find","every","includes","getCellsBBox","bbox","ii","rect","getAngle","union","cloneCells","inputs","uniq","cloneMap","sourceId","getSourceCellId","targetId","getTargetCellId","setSource","getSource","setTarget","getTarget","embeds"],"sourceRoot":"","sources":["../../src/model/cell.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}