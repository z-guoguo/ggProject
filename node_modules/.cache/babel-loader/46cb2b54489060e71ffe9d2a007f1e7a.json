{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * adaptor for regl.Framebuffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#framebuffers\n */\n\nvar ReglFramebuffer = /*#__PURE__*/function () {\n  function ReglFramebuffer(reGl, options) {\n    _classCallCheck(this, ReglFramebuffer);\n\n    this.framebuffer = void 0;\n    var width = options.width,\n        height = options.height,\n        color = options.color,\n        colors = options.colors,\n        depth = options.depth,\n        stencil = options.stencil;\n    var framebufferOptions = {\n      width: width,\n      height: height\n    };\n\n    if (Array.isArray(colors)) {\n      framebufferOptions.colors = colors.map(function (c) {\n        return c.get();\n      });\n    }\n\n    if (color && typeof color !== 'boolean') {\n      framebufferOptions.color = color.get();\n    } // TODO: depth & stencil\n\n\n    this.framebuffer = reGl.framebuffer(framebufferOptions);\n  }\n\n  _createClass(ReglFramebuffer, [{\n    key: \"get\",\n    value: function get() {\n      return this.framebuffer;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.framebuffer.destroy();\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(_ref) {\n      var width = _ref.width,\n          height = _ref.height;\n      this.framebuffer.resize(width, height);\n    }\n  }]);\n\n  return ReglFramebuffer;\n}();\n\nexport { ReglFramebuffer as default };","map":{"version":3,"mappings":";;AAUA;AACA;AACA;AACA;;IACqBA,e;EAGnB,yBAAYC,IAAZ,EAA6BC,OAA7B,EAAyE;IAAAC;;IAAA,KAFjEC,WAEiE;IAAA,IAC/DC,KAD+D,GACdH,OADc,CAC/DG,KAD+D;IAAA,IACxDC,MADwD,GACdJ,OADc,CACxDI,MADwD;IAAA,IAChDC,KADgD,GACdL,OADc,CAChDK,KADgD;IAAA,IACzCC,MADyC,GACdN,OADc,CACzCM,MADyC;IAAA,IACjCC,KADiC,GACdP,OADc,CACjCO,KADiC;IAAA,IAC1BC,OAD0B,GACdR,OADc,CAC1BQ,OAD0B;IAGvE,IAAMC,kBAA2C,GAAG;MAClDN,KAAK,EAALA,KADkD;MAElDC,MAAM,EAANA;IAFkD,CAApD;;IAKA,IAAIM,KAAK,CAACC,OAAND,CAAcJ,MAAdI,CAAJ,EAA2B;MACzBD,kBAAkB,CAACH,MAAnBG,GAA4BH,MAAM,CAACM,GAAPN,CAAW,UAACO,CAAD;QAAA,OACpCA,CAAD,CAAqBC,GAApBD,EADoC;MAAX,EAA5BJ;IAGD;;IAED,IAAIJ,KAAK,IAAI,OAAOA,KAAP,KAAiB,SAA9B,EAAyC;MACvCI,kBAAkB,CAACJ,KAAnBI,GAA4BJ,KAAD,CAAyBS,GAAxBT,EAA5BI;IAfqE,EAkBvE;;;IAEA,KAAKP,WAAL,GAAmBH,IAAI,CAACG,WAALH,CAAiBU,kBAAjBV,CAAnB;EACD;;;;0BAEY;MACX,OAAO,KAAKG,WAAZ;IACD;;;8BAEgB;MACf,KAAKA,WAAL,CAAiBa,OAAjB;IACD;;;iCAEmE;MAAA,IAApDZ,KAAoD,QAApDA,KAAoD;MAAA,IAA7CC,MAA6C,QAA7CA,MAA6C;MAClE,KAAKF,WAAL,CAAiBc,MAAjB,CAAwBb,KAAxB,EAA+BC,MAA/B;IACD;;;;;;SApCkBN,e","names":["ReglFramebuffer","reGl","options","_classCallCheck","framebuffer","width","height","color","colors","depth","stencil","framebufferOptions","Array","isArray","map","c","get","destroy","resize"],"sources":["../../src/webgl/ReglFramebuffer.ts"],"sourcesContent":["import {\n  gl,\n  IFramebuffer,\n  IFramebufferInitializationOptions,\n  IRenderbuffer,\n  ITexture2D,\n} from '@antv/g-webgpu-core';\nimport regl from 'regl';\nimport ReglTexture2D from './ReglTexture2D';\n\n/**\n * adaptor for regl.Framebuffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#framebuffers\n */\nexport default class ReglFramebuffer implements IFramebuffer {\n  private framebuffer: regl.Framebuffer;\n\n  constructor(reGl: regl.Regl, options: IFramebufferInitializationOptions) {\n    const { width, height, color, colors, depth, stencil } = options;\n\n    const framebufferOptions: regl.FramebufferOptions = {\n      width,\n      height,\n    };\n\n    if (Array.isArray(colors)) {\n      framebufferOptions.colors = colors.map((c: ITexture2D | IRenderbuffer) =>\n        (c as ReglTexture2D).get(),\n      );\n    }\n\n    if (color && typeof color !== 'boolean') {\n      framebufferOptions.color = (color as ReglTexture2D).get();\n    }\n\n    // TODO: depth & stencil\n\n    this.framebuffer = reGl.framebuffer(framebufferOptions);\n  }\n\n  public get() {\n    return this.framebuffer;\n  }\n\n  public destroy() {\n    this.framebuffer.destroy();\n  }\n\n  public resize({ width, height }: { width: number; height: number }) {\n    this.framebuffer.resize(width, height);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}