{"ast":null,"code":"/**\n * @fileoverview 文本\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport { isNil, isString, each } from '../util/util';\nimport { getTextHeight, assembleFont } from '@antv/g-base';\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // 默认文本属性\n\n\n  Text.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      text: null,\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontVariant: 'normal',\n      textAlign: 'start',\n      textBaseline: 'bottom'\n    });\n  }; // 仅仅使用包围盒检测来进行拾取\n\n\n  Text.prototype.isOnlyHitBox = function () {\n    return true;\n  }; // 初始化时组合 font，同时判断 text 是否换行\n\n\n  Text.prototype.initAttrs = function (attrs) {\n    this._assembleFont();\n\n    if (attrs.text) {\n      this._setText(attrs.text);\n    }\n  }; // 组装字体\n\n\n  Text.prototype._assembleFont = function () {\n    var attrs = this.attrs;\n    attrs.font = assembleFont(attrs);\n  }; // 如果文本换行，则缓存数组\n\n\n  Text.prototype._setText = function (text) {\n    var textArr = null;\n\n    if (isString(text) && text.indexOf('\\n') !== -1) {\n      textArr = text.split('\\n');\n    }\n\n    this.set('textArr', textArr);\n  }; // 更新属性时，检测是否更改了 font、text\n\n\n  Text.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n\n    if (name.startsWith('font')) {\n      this._assembleFont();\n    }\n\n    if (name === 'text') {\n      this._setText(value);\n    }\n  }; // 这个方法在 text 时没有可以做的事情，如果要支持文字背景时可以考虑\n  // createPath(context) {\n  // }\n  // 如果文本多行，需要获取文本间距\n\n\n  Text.prototype._getSpaceingY = function () {\n    var attrs = this.attrs;\n    var lineHeight = attrs.lineHeight;\n    var fontSize = attrs.fontSize * 1;\n    return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\n  }; // 绘制文本，考虑多行的场景\n\n\n  Text.prototype._drawTextArr = function (context, textArr, isFill) {\n    var attrs = this.attrs;\n    var textBaseline = attrs.textBaseline;\n    var x = attrs.x;\n    var y = attrs.y;\n    var fontSize = attrs.fontSize * 1;\n\n    var spaceingY = this._getSpaceingY();\n\n    var height = getTextHeight(attrs.text, attrs.fontSize, attrs.lineHeight);\n    var subY;\n    each(textArr, function (subText, index) {\n      subY = y + index * (spaceingY + fontSize) - height + fontSize; // bottom;\n\n      if (textBaseline === 'middle') subY += height - fontSize - (height - fontSize) / 2;\n      if (textBaseline === 'top') subY += height - fontSize;\n\n      if (!isNil(subText)) {\n        if (isFill) {\n          context.fillText(subText, x, subY);\n        } else {\n          context.strokeText(subText, x, subY);\n        }\n      }\n    });\n  }; // 绘制文本，同时考虑填充和绘制边框\n\n\n  Text.prototype._drawText = function (context, isFill) {\n    var attrs = this.attr();\n    var x = attrs.x;\n    var y = attrs.y;\n    var textArr = this.get('textArr');\n\n    if (textArr) {\n      this._drawTextArr(context, textArr, isFill);\n    } else {\n      var text = attrs.text;\n\n      if (!isNil(text)) {\n        if (isFill) {\n          context.fillText(text, x, y);\n        } else {\n          context.strokeText(text, x, y);\n        }\n      }\n    }\n  }; // 复写绘制和填充的逻辑：对于文本，应该先绘制边框，再进行填充\n\n\n  Text.prototype.strokeAndFill = function (context) {\n    var _a = this.attrs,\n        lineWidth = _a.lineWidth,\n        opacity = _a.opacity,\n        strokeOpacity = _a.strokeOpacity,\n        fillOpacity = _a.fillOpacity;\n\n    if (this.isStroke()) {\n      if (lineWidth > 0) {\n        if (!isNil(strokeOpacity) && strokeOpacity !== 1) {\n          context.globalAlpha = opacity;\n        }\n\n        this.stroke(context);\n      }\n    }\n\n    if (this.isFill()) {\n      if (!isNil(fillOpacity) && fillOpacity !== 1) {\n        context.globalAlpha = fillOpacity;\n        this.fill(context);\n        context.globalAlpha = opacity;\n      } else {\n        this.fill(context);\n      }\n    }\n\n    this.afterDrawPath(context);\n  }; // 复写填充逻辑\n\n\n  Text.prototype.fill = function (context) {\n    this._drawText(context, true);\n  }; // 复写绘制边框的逻辑\n\n\n  Text.prototype.stroke = function (context) {\n    this._drawText(context, false);\n  };\n\n  return Text;\n}(ShapeBase);\n\nexport default Text;","map":{"version":3,"mappings":"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","names":["ShapeBase","isNil","isString","each","getTextHeight","assembleFont","__extends","Text","attrs","_super","getDefaultAttrs","call","x","y","text","fontSize","fontFamily","fontStyle","fontWeight","fontVariant","textAlign","textBaseline","_assembleFont","_setText","font","textArr","indexOf","split","set","name","value","originValue","onAttrChange","startsWith","lineHeight","context","isFill","spaceingY","_getSpaceingY","height","subY","subText","index","fillText","strokeText","attr","get","_drawTextArr","lineWidth","opacity","strokeOpacity","fillOpacity","isStroke","globalAlpha","stroke","fill","afterDrawPath","_drawText"],"sourceRoot":"","sources":["../../src/shape/text.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}