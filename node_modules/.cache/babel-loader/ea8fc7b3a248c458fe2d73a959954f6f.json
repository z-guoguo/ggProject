{"ast":null,"code":"import { Registry } from '../../registry';\nimport { Markup } from '../../view';\nimport { Node } from '../../model/node';\nimport { NodeView } from '../../view/node';\nimport { Base } from '../base';\nexport class HTML extends Base {\n  get html() {\n    return this.getHTML();\n  }\n\n  set html(val) {\n    this.setHTML(val);\n  }\n\n  getHTML() {\n    return this.store.get('html');\n  }\n\n  setHTML(html, options = {}) {\n    if (html == null) {\n      this.removeHTML(options);\n    } else {\n      this.store.set('html', html, options);\n    }\n\n    return this;\n  }\n\n  removeHTML(options = {}) {\n    return this.store.remove('html', options);\n  }\n\n}\n\n(function (HTML) {\n  class View extends NodeView {\n    init() {\n      super.init();\n      this.cell.on('change:*', () => {\n        const shouldUpdate = this.graph.hook.shouldUpdateHTMLComponent(this.cell);\n\n        if (shouldUpdate) {\n          this.renderHTMLComponent();\n        }\n      });\n    }\n\n    confirmUpdate(flag) {\n      const ret = super.confirmUpdate(flag);\n      return this.handleAction(ret, View.action, () => this.renderHTMLComponent());\n    }\n\n    renderHTMLComponent() {\n      const container = this.selectors.foContent;\n\n      if (container) {\n        const $wrap = this.$(container).empty();\n        const component = this.graph.hook.getHTMLComponent(this.cell);\n\n        if (component) {\n          if (typeof component === 'string') {\n            $wrap.html(component);\n          } else {\n            $wrap.append(component);\n          }\n        }\n      }\n    }\n\n  }\n\n  HTML.View = View;\n\n  (function (View) {\n    View.action = 'html';\n    View.config({\n      bootstrap: [View.action],\n      actions: {\n        html: View.action\n      }\n    });\n    NodeView.registry.register('html-view', View);\n  })(View = HTML.View || (HTML.View = {}));\n})(HTML || (HTML = {}));\n\n(function (HTML) {\n  HTML.config({\n    view: 'html-view',\n    markup: [{\n      tagName: 'rect',\n      selector: 'body'\n    }, Object.assign({}, Markup.getForeignObjectMarkup()), {\n      tagName: 'text',\n      selector: 'label'\n    }],\n    attrs: {\n      body: {\n        fill: 'none',\n        stroke: 'none',\n        refWidth: '100%',\n        refHeight: '100%'\n      },\n      fo: {\n        refWidth: '100%',\n        refHeight: '100%'\n      }\n    }\n  });\n  Node.registry.register('html', HTML);\n})(HTML || (HTML = {}));\n\n(function (HTML) {\n  HTML.componentRegistry = Registry.create({\n    type: 'html componnet'\n  });\n})(HTML || (HTML = {}));","map":{"version":3,"mappings":"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","names":["Registry","Markup","Node","NodeView","Base","HTML","html","getHTML","val","setHTML","store","get","options","removeHTML","set","remove","View","init","cell","on","shouldUpdate","graph","hook","shouldUpdateHTMLComponent","renderHTMLComponent","confirmUpdate","flag","ret","handleAction","action","container","selectors","foContent","$wrap","$","empty","component","getHTMLComponent","append","config","bootstrap","actions","registry","register","view","markup","tagName","selector","getForeignObjectMarkup","attrs","body","fill","stroke","refWidth","refHeight","fo","create","type"],"sourceRoot":"","sources":["../../../src/shape/standard/html.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}