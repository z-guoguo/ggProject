{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar _dec, _class;\n\nimport { injectable } from 'inversify';\nexport var IInteractorEvent;\n\n(function (IInteractorEvent) {\n  IInteractorEvent[\"PANSTART\"] = \"PANSTART\";\n  IInteractorEvent[\"PANEND\"] = \"PANEND\";\n  IInteractorEvent[\"PANMOVE\"] = \"PANMOVE\";\n  IInteractorEvent[\"PINCH\"] = \"PINCH\";\n  IInteractorEvent[\"KEYDOWN\"] = \"KEYDOWN\";\n  IInteractorEvent[\"KEYUP\"] = \"KEYUP\";\n  IInteractorEvent[\"HOVER\"] = \"HOVER\";\n})(IInteractorEvent || (IInteractorEvent = {}));\n\nexport var InteractorService = (_dec = injectable(), _dec(_class = /*#__PURE__*/function () {\n  function InteractorService() {\n    _classCallCheck(this, InteractorService);\n  }\n\n  _createClass(InteractorService, [{\n    key: \"listen\",\n    value: function listen(canvas) {}\n  }, {\n    key: \"on\",\n    value: function on(event, args) {}\n  }, {\n    key: \"connect\",\n    value: function connect() {}\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {}\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n  }]);\n\n  return InteractorService;\n}()) || _class);","map":{"version":3,"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,WAA3B;AAUA,WAAYC,gBAAZ;;WAAYA,kB;EAAAA,gB,YAAAA,G,UAAAA;EAAAA,gB,UAAAA,G,QAAAA;EAAAA,gB,WAAAA,G,SAAAA;EAAAA,gB,SAAAA,G,OAAAA;EAAAA,gB,WAAAA,G,SAAAA;EAAAA,gB,SAAAA,G,OAAAA;EAAAA,gB,SAAAA,G,OAAAA;GAAAA,gB,KAAAA,gB;;AAWZ,WAAaC,iBAAb,WADCF,UAAU,EACX;EAAA;IAAAG;EAAA;;EAAAC;IAAAC;IAAAC,uBACgBC,MADhB,EACiD,CAAE;EADnD;IAAAF;IAAAC,mBAEYE,KAFZ,EAEqCC,IAFrC,EAE2D,CAAE;EAF7D;IAAAJ;IAAAC,0BAGmB,CAAE;EAHrB;IAAAD;IAAAC,6BAIsB,CAAE;EAJxB;IAAAD;IAAAC,0BAKmB,CAAE;EALrB;;EAAA;AAAA","names":["injectable","IInteractorEvent","InteractorService","_classCallCheck","_createClass","key","value","canvas","event","args"],"sources":["../../../src/services/interactor/IteractorService.ts"],"sourcesContent":["import { injectable } from 'inversify';\n\nexport interface IInteractorService {\n  listen(canvas: HTMLCanvasElement): void;\n  disconnect(): void;\n  connect(): void;\n  destroy(): void;\n  on(event: IInteractorEvent, args?: unknown): void;\n}\n\nexport enum IInteractorEvent {\n  PANSTART = 'PANSTART',\n  PANEND = 'PANEND',\n  PANMOVE = 'PANMOVE',\n  PINCH = 'PINCH',\n  KEYDOWN = 'KEYDOWN',\n  KEYUP = 'KEYUP',\n  HOVER = 'HOVER',\n}\n\n@injectable()\nexport class InteractorService implements IInteractorService {\n  public listen(canvas: HTMLCanvasElement): void {}\n  public on(event: IInteractorEvent, args?: unknown): void {}\n  public connect() {}\n  public disconnect() {}\n  public destroy() {}\n}\n"]},"metadata":{},"sourceType":"module"}