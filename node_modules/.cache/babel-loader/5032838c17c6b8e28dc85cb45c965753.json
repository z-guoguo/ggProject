{"ast":null,"code":"import { Quad as QuadUtil, Cubic as CubicUtil, Arc as EllipseArcUtil } from '@antv/g-math';\nimport { path2Segments } from '@antv/path-util';\nimport { isNumberEqual, max, min } from '@antv/util';\nimport { mergeArrowBBox } from './util';\n\nfunction getPathBox(segments, lineWidth) {\n  var xArr = [];\n  var yArr = [];\n  var segmentsWithAngle = [];\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var currentPoint = segment.currentPoint,\n        params = segment.params,\n        prePoint = segment.prePoint;\n    var box = void 0;\n\n    switch (segment.command) {\n      case 'Q':\n        box = QuadUtil.box(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4]);\n        break;\n\n      case 'C':\n        box = CubicUtil.box(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4], params[5], params[6]);\n        break;\n\n      case 'A':\n        var arcParams = segment.arcParams;\n        box = EllipseArcUtil.box(arcParams.cx, arcParams.cy, arcParams.rx, arcParams.ry, arcParams.xRotation, arcParams.startAngle, arcParams.endAngle);\n        break;\n\n      default:\n        xArr.push(currentPoint[0]);\n        yArr.push(currentPoint[1]);\n        break;\n    }\n\n    if (box) {\n      segment.box = box;\n      xArr.push(box.x, box.x + box.width);\n      yArr.push(box.y, box.y + box.height);\n    }\n\n    if (lineWidth && (segment.command === 'L' || segment.command === 'M') && segment.prePoint && segment.nextPoint) {\n      segmentsWithAngle.push(segment);\n    }\n  } // bbox calculation should ignore NaN for path attribute\n  // ref: https://github.com/antvis/g/issues/210\n  // ref: https://github.com/antvis/G2/issues/3109\n\n\n  xArr = xArr.filter(function (item) {\n    return !Number.isNaN(item) && item !== Infinity && item !== -Infinity;\n  });\n  yArr = yArr.filter(function (item) {\n    return !Number.isNaN(item) && item !== Infinity && item !== -Infinity;\n  });\n  var minX = min(xArr);\n  var minY = min(yArr);\n  var maxX = max(xArr);\n  var maxY = max(yArr);\n\n  if (segmentsWithAngle.length === 0) {\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n\n  for (var i = 0; i < segmentsWithAngle.length; i++) {\n    var segment = segmentsWithAngle[i];\n    var currentPoint = segment.currentPoint;\n    var extra = void 0;\n\n    if (currentPoint[0] === minX) {\n      extra = getExtraFromSegmentWithAngle(segment, lineWidth);\n      minX = minX - extra.xExtra;\n    } else if (currentPoint[0] === maxX) {\n      extra = getExtraFromSegmentWithAngle(segment, lineWidth);\n      maxX = maxX + extra.xExtra;\n    }\n\n    if (currentPoint[1] === minY) {\n      extra = getExtraFromSegmentWithAngle(segment, lineWidth);\n      minY = minY - extra.yExtra;\n    } else if (currentPoint[1] === maxY) {\n      extra = getExtraFromSegmentWithAngle(segment, lineWidth);\n      maxY = maxY + extra.yExtra;\n    }\n  }\n\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\n\nfunction getExtraFromSegmentWithAngle(segment, lineWidth) {\n  var prePoint = segment.prePoint,\n      currentPoint = segment.currentPoint,\n      nextPoint = segment.nextPoint;\n  var currentAndPre = Math.pow(currentPoint[0] - prePoint[0], 2) + Math.pow(currentPoint[1] - prePoint[1], 2);\n  var currentAndNext = Math.pow(currentPoint[0] - nextPoint[0], 2) + Math.pow(currentPoint[1] - nextPoint[1], 2);\n  var preAndNext = Math.pow(prePoint[0] - nextPoint[0], 2) + Math.pow(prePoint[1] - nextPoint[1], 2); // 以 currentPoint 为顶点的夹角\n\n  var currentAngle = Math.acos((currentAndPre + currentAndNext - preAndNext) / (2 * Math.sqrt(currentAndPre) * Math.sqrt(currentAndNext))); // 夹角为空、 0 或 PI 时，不需要计算夹角处的额外宽度\n  // 注意: 由于计算精度问题，夹角为 0 的情况计算出来的角度可能是一个很小的值，还需要判断其与 0 是否近似相等\n\n  if (!currentAngle || Math.sin(currentAngle) === 0 || isNumberEqual(currentAngle, 0)) {\n    return {\n      xExtra: 0,\n      yExtra: 0\n    };\n  }\n\n  var xAngle = Math.abs(Math.atan2(nextPoint[1] - currentPoint[1], nextPoint[0] - currentPoint[0]));\n  var yAngle = Math.abs(Math.atan2(nextPoint[0] - currentPoint[0], nextPoint[1] - currentPoint[1])); // 将夹角转为锐角\n\n  xAngle = xAngle > Math.PI / 2 ? Math.PI - xAngle : xAngle;\n  yAngle = yAngle > Math.PI / 2 ? Math.PI - yAngle : yAngle; // 这里不考虑在水平和垂直方向的投影，直接使用最大差值\n  // 由于上层统一加减了二分之一线宽，这里需要进行弥补\n\n  var extra = {\n    // 水平方向投影\n    xExtra: Math.cos(currentAngle / 2 - xAngle) * (lineWidth / 2 * (1 / Math.sin(currentAngle / 2))) - lineWidth / 2 || 0,\n    // 垂直方向投影\n    yExtra: Math.cos(yAngle - currentAngle / 2) * (lineWidth / 2 * (1 / Math.sin(currentAngle / 2))) - lineWidth / 2 || 0\n  };\n  return extra;\n}\n\nexport default function (shape) {\n  var attrs = shape.attr();\n  var path = attrs.path,\n      stroke = attrs.stroke;\n  var lineWidth = stroke ? attrs.lineWidth : 0; // 只有有 stroke 时，lineWidth 才生效\n\n  var segments = shape.get('segments') || path2Segments(path);\n\n  var _a = getPathBox(segments, lineWidth),\n      x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height;\n\n  var bbox = {\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height\n  };\n  bbox = mergeArrowBBox(shape, bbox);\n  return {\n    x: bbox.minX,\n    y: bbox.minY,\n    width: bbox.maxX - bbox.minX,\n    height: bbox.maxY - bbox.minY\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAI,IAAIC,QAAjB,EAA2BC,KAAK,IAAIC,SAApC,EAA+CC,GAAG,IAAIC,cAAtD,QAA4E,cAA5E;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,EAAwBC,GAAxB,EAA6BC,GAA7B,QAAwC,YAAxC;AAGA,SAASC,cAAT,QAA+B,QAA/B;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,SAA9B,EAAuC;EACrC,IAAIC,IAAI,GAAG,EAAX;EACA,IAAIC,IAAI,GAAG,EAAX;EACA,IAAMC,iBAAiB,GAAG,EAA1B;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAAQ,CAACM,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;IACxC,IAAME,OAAO,GAAGP,QAAQ,CAACK,CAAD,CAAxB;IACQ,gBAAY,GAAuBE,OAAO,aAA1C;IAAA,IAAcC,MAAM,GAAeD,OAAO,OAA1C;IAAA,IAAsBE,QAAQ,GAAKF,OAAO,SAA1C;IACR,IAAIG,GAAG,SAAP;;IACA,QAAQH,OAAO,CAACI,OAAhB;MACE,KAAK,GAAL;QACED,GAAG,GAAGrB,QAAQ,CAACqB,GAAT,CAAaD,QAAQ,CAAC,CAAD,CAArB,EAA0BA,QAAQ,CAAC,CAAD,CAAlC,EAAuCD,MAAM,CAAC,CAAD,CAA7C,EAAkDA,MAAM,CAAC,CAAD,CAAxD,EAA6DA,MAAM,CAAC,CAAD,CAAnE,EAAwEA,MAAM,CAAC,CAAD,CAA9E,CAAN;QACA;;MACF,KAAK,GAAL;QACEE,GAAG,GAAGnB,SAAS,CAACmB,GAAV,CAAcD,QAAQ,CAAC,CAAD,CAAtB,EAA2BA,QAAQ,CAAC,CAAD,CAAnC,EAAwCD,MAAM,CAAC,CAAD,CAA9C,EAAmDA,MAAM,CAAC,CAAD,CAAzD,EAA8DA,MAAM,CAAC,CAAD,CAApE,EAAyEA,MAAM,CAAC,CAAD,CAA/E,EAAoFA,MAAM,CAAC,CAAD,CAA1F,EAA+FA,MAAM,CAAC,CAAD,CAArG,CAAN;QACA;;MACF,KAAK,GAAL;QACE,IAAMI,SAAS,GAAGL,OAAO,CAACK,SAA1B;QACAF,GAAG,GAAGjB,cAAc,CAACiB,GAAf,CACJE,SAAS,CAACC,EADN,EAEJD,SAAS,CAACE,EAFN,EAGJF,SAAS,CAACG,EAHN,EAIJH,SAAS,CAACI,EAJN,EAKJJ,SAAS,CAACK,SALN,EAMJL,SAAS,CAACM,UANN,EAOJN,SAAS,CAACO,QAPN,CAAN;QASA;;MACF;QACEjB,IAAI,CAACkB,IAAL,CAAUC,YAAY,CAAC,CAAD,CAAtB;QACAlB,IAAI,CAACiB,IAAL,CAAUC,YAAY,CAAC,CAAD,CAAtB;QACA;IAtBJ;;IAwBA,IAAIX,GAAJ,EAAS;MACPH,OAAO,CAACG,GAAR,GAAcA,GAAd;MACAR,IAAI,CAACkB,IAAL,CAAUV,GAAG,CAACY,CAAd,EAAiBZ,GAAG,CAACY,CAAJ,GAAQZ,GAAG,CAACa,KAA7B;MACApB,IAAI,CAACiB,IAAL,CAAUV,GAAG,CAACc,CAAd,EAAiBd,GAAG,CAACc,CAAJ,GAAQd,GAAG,CAACe,MAA7B;IACD;;IACD,IAAIxB,SAAS,KAAKM,OAAO,CAACI,OAAR,KAAoB,GAApB,IAA2BJ,OAAO,CAACI,OAAR,KAAoB,GAApD,CAAT,IAAqEJ,OAAO,CAACE,QAA7E,IAAyFF,OAAO,CAACmB,SAArG,EAAgH;MAC9GtB,iBAAiB,CAACgB,IAAlB,CAAuBb,OAAvB;IACD;EACF,CAxCoC,CAyCrC;EACA;EACA;;;EACAL,IAAI,GAAGA,IAAI,CAACyB,MAAL,CAAY,UAACC,IAAD,EAAK;IAAK,QAACC,MAAM,CAACC,KAAP,CAAaF,IAAb,CAAD,IAAuBA,IAAI,KAAKG,QAAhC,IAA4CH,IAAI,KAAK,CAACG,QAAtD;EAA8D,CAApF,CAAP;EACA5B,IAAI,GAAGA,IAAI,CAACwB,MAAL,CAAY,UAACC,IAAD,EAAK;IAAK,QAACC,MAAM,CAACC,KAAP,CAAaF,IAAb,CAAD,IAAuBA,IAAI,KAAKG,QAAhC,IAA4CH,IAAI,KAAK,CAACG,QAAtD;EAA8D,CAApF,CAAP;EACA,IAAIC,IAAI,GAAGnC,GAAG,CAACK,IAAD,CAAd;EACA,IAAI+B,IAAI,GAAGpC,GAAG,CAACM,IAAD,CAAd;EACA,IAAI+B,IAAI,GAAGtC,GAAG,CAACM,IAAD,CAAd;EACA,IAAIiC,IAAI,GAAGvC,GAAG,CAACO,IAAD,CAAd;;EACA,IAAIC,iBAAiB,CAACE,MAAlB,KAA6B,CAAjC,EAAoC;IAClC,OAAO;MACLgB,CAAC,EAAEU,IADE;MAELR,CAAC,EAAES,IAFE;MAGLV,KAAK,EAAEW,IAAI,GAAGF,IAHT;MAILP,MAAM,EAAEU,IAAI,GAAGF;IAJV,CAAP;EAMD;;EACD,KAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,iBAAiB,CAACE,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;IACjD,IAAME,OAAO,GAAGH,iBAAiB,CAACC,CAAD,CAAjC;IACQ,gBAAY,GAAKE,OAAO,aAAxB;IACR,IAAI6B,KAAK,SAAT;;IACA,IAAIf,YAAY,CAAC,CAAD,CAAZ,KAAoBW,IAAxB,EAA8B;MAC5BI,KAAK,GAAGC,4BAA4B,CAAC9B,OAAD,EAAUN,SAAV,CAApC;MACA+B,IAAI,GAAGA,IAAI,GAAGI,KAAK,CAACE,MAApB;IACD,CAHD,MAGO,IAAIjB,YAAY,CAAC,CAAD,CAAZ,KAAoBa,IAAxB,EAA8B;MACnCE,KAAK,GAAGC,4BAA4B,CAAC9B,OAAD,EAAUN,SAAV,CAApC;MACAiC,IAAI,GAAGA,IAAI,GAAGE,KAAK,CAACE,MAApB;IACD;;IACD,IAAIjB,YAAY,CAAC,CAAD,CAAZ,KAAoBY,IAAxB,EAA8B;MAC5BG,KAAK,GAAGC,4BAA4B,CAAC9B,OAAD,EAAUN,SAAV,CAApC;MACAgC,IAAI,GAAGA,IAAI,GAAGG,KAAK,CAACG,MAApB;IACD,CAHD,MAGO,IAAIlB,YAAY,CAAC,CAAD,CAAZ,KAAoBc,IAAxB,EAA8B;MACnCC,KAAK,GAAGC,4BAA4B,CAAC9B,OAAD,EAAUN,SAAV,CAApC;MACAkC,IAAI,GAAGA,IAAI,GAAGC,KAAK,CAACG,MAApB;IACD;EACF;;EACD,OAAO;IACLjB,CAAC,EAAEU,IADE;IAELR,CAAC,EAAES,IAFE;IAGLV,KAAK,EAAEW,IAAI,GAAGF,IAHT;IAILP,MAAM,EAAEU,IAAI,GAAGF;EAJV,CAAP;AAMD;;AAED,SAASI,4BAAT,CAAsC9B,OAAtC,EAA+CN,SAA/C,EAAwD;EAC9C,YAAQ,GAA8BM,OAAO,SAA7C;EAAA,IAAUc,YAAY,GAAgBd,OAAO,aAA7C;EAAA,IAAwBmB,SAAS,GAAKnB,OAAO,UAA7C;EACR,IAAMiC,aAAa,GAAGC,IAAI,CAACC,GAAL,CAASrB,YAAY,CAAC,CAAD,CAAZ,GAAkBZ,QAAQ,CAAC,CAAD,CAAnC,EAAwC,CAAxC,IAA6CgC,IAAI,CAACC,GAAL,CAASrB,YAAY,CAAC,CAAD,CAAZ,GAAkBZ,QAAQ,CAAC,CAAD,CAAnC,EAAwC,CAAxC,CAAnE;EACA,IAAMkC,cAAc,GAAGF,IAAI,CAACC,GAAL,CAASrB,YAAY,CAAC,CAAD,CAAZ,GAAkBK,SAAS,CAAC,CAAD,CAApC,EAAyC,CAAzC,IAA8Ce,IAAI,CAACC,GAAL,CAASrB,YAAY,CAAC,CAAD,CAAZ,GAAkBK,SAAS,CAAC,CAAD,CAApC,EAAyC,CAAzC,CAArE;EACA,IAAMkB,UAAU,GAAGH,IAAI,CAACC,GAAL,CAASjC,QAAQ,CAAC,CAAD,CAAR,GAAciB,SAAS,CAAC,CAAD,CAAhC,EAAqC,CAArC,IAA0Ce,IAAI,CAACC,GAAL,CAASjC,QAAQ,CAAC,CAAD,CAAR,GAAciB,SAAS,CAAC,CAAD,CAAhC,EAAqC,CAArC,CAA7D,CAJsD,CAKtD;;EACA,IAAMmB,YAAY,GAAGJ,IAAI,CAACK,IAAL,CACnB,CAACN,aAAa,GAAGG,cAAhB,GAAiCC,UAAlC,KAAiD,IAAIH,IAAI,CAACM,IAAL,CAAUP,aAAV,CAAJ,GAA+BC,IAAI,CAACM,IAAL,CAAUJ,cAAV,CAAhF,CADmB,CAArB,CANsD,CAStD;EACA;;EACA,IAAI,CAACE,YAAD,IAAiBJ,IAAI,CAACO,GAAL,CAASH,YAAT,MAA2B,CAA5C,IAAiDlD,aAAa,CAACkD,YAAD,EAAe,CAAf,CAAlE,EAAqF;IACnF,OAAO;MACLP,MAAM,EAAE,CADH;MAELC,MAAM,EAAE;IAFH,CAAP;EAID;;EACD,IAAIU,MAAM,GAAGR,IAAI,CAACS,GAAL,CAAST,IAAI,CAACU,KAAL,CAAWzB,SAAS,CAAC,CAAD,CAAT,GAAeL,YAAY,CAAC,CAAD,CAAtC,EAA2CK,SAAS,CAAC,CAAD,CAAT,GAAeL,YAAY,CAAC,CAAD,CAAtE,CAAT,CAAb;EACA,IAAI+B,MAAM,GAAGX,IAAI,CAACS,GAAL,CAAST,IAAI,CAACU,KAAL,CAAWzB,SAAS,CAAC,CAAD,CAAT,GAAeL,YAAY,CAAC,CAAD,CAAtC,EAA2CK,SAAS,CAAC,CAAD,CAAT,GAAeL,YAAY,CAAC,CAAD,CAAtE,CAAT,CAAb,CAlBsD,CAmBtD;;EACA4B,MAAM,GAAGA,MAAM,GAAGR,IAAI,CAACY,EAAL,GAAU,CAAnB,GAAuBZ,IAAI,CAACY,EAAL,GAAUJ,MAAjC,GAA0CA,MAAnD;EACAG,MAAM,GAAGA,MAAM,GAAGX,IAAI,CAACY,EAAL,GAAU,CAAnB,GAAuBZ,IAAI,CAACY,EAAL,GAAUD,MAAjC,GAA0CA,MAAnD,CArBsD,CAsBtD;EACA;;EACA,IAAMhB,KAAK,GAAG;IACZ;IACAE,MAAM,EACJG,IAAI,CAACa,GAAL,CAAST,YAAY,GAAG,CAAf,GAAmBI,MAA5B,KAAwChD,SAAS,GAAG,CAAb,IAAmB,IAAIwC,IAAI,CAACO,GAAL,CAASH,YAAY,GAAG,CAAxB,CAAvB,CAAvC,IAA6F5C,SAAS,GAAG,CAAzG,IAA8G,CAHpG;IAIZ;IACAsC,MAAM,EACJE,IAAI,CAACa,GAAL,CAASF,MAAM,GAAGP,YAAY,GAAG,CAAjC,KAAwC5C,SAAS,GAAG,CAAb,IAAmB,IAAIwC,IAAI,CAACO,GAAL,CAASH,YAAY,GAAG,CAAxB,CAAvB,CAAvC,IAA6F5C,SAAS,GAAG,CAAzG,IAA8G;EANpG,CAAd;EAQA,OAAOmC,KAAP;AACD;;AAED,eAAc,UAAWmB,KAAX,EAAwB;EACpC,IAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,EAAd;EACQ,QAAI,GAAaD,KAAK,KAAtB;EAAA,IAAME,MAAM,GAAKF,KAAK,OAAtB;EACR,IAAMvD,SAAS,GAAGyD,MAAM,GAAGF,KAAK,CAACvD,SAAT,GAAqB,CAA7C,CAHoC,CAGY;;EAChD,IAAMD,QAAQ,GAAGuD,KAAK,CAACI,GAAN,CAAU,UAAV,KAAyBjE,aAAa,CAACkE,IAAD,CAAvD;;EACM,SAA0B7D,UAAU,CAACC,QAAD,EAAWC,SAAX,CAApC;EAAA,IAAEqB,CAAC,OAAH;EAAA,IAAKE,CAAC,OAAN;EAAA,IAAQD,KAAK,WAAb;EAAA,IAAeE,MAAM,YAArB;;EACN,IAAIoC,IAAI,GAAG;IACT7B,IAAI,EAAEV,CADG;IAETW,IAAI,EAAET,CAFG;IAGTU,IAAI,EAAEZ,CAAC,GAAGC,KAHD;IAITY,IAAI,EAAEX,CAAC,GAAGC;EAJD,CAAX;EAMAoC,IAAI,GAAG/D,cAAc,CAACyD,KAAD,EAAQM,IAAR,CAArB;EACA,OAAO;IACLvC,CAAC,EAAEuC,IAAI,CAAC7B,IADH;IAELR,CAAC,EAAEqC,IAAI,CAAC5B,IAFH;IAGLV,KAAK,EAAEsC,IAAI,CAAC3B,IAAL,GAAY2B,IAAI,CAAC7B,IAHnB;IAILP,MAAM,EAAEoC,IAAI,CAAC1B,IAAL,GAAY0B,IAAI,CAAC5B;EAJpB,CAAP;AAMD","names":["Quad","QuadUtil","Cubic","CubicUtil","Arc","EllipseArcUtil","path2Segments","isNumberEqual","max","min","mergeArrowBBox","getPathBox","segments","lineWidth","xArr","yArr","segmentsWithAngle","i","length","segment","params","prePoint","box","command","arcParams","cx","cy","rx","ry","xRotation","startAngle","endAngle","push","currentPoint","x","width","y","height","nextPoint","filter","item","Number","isNaN","Infinity","minX","minY","maxX","maxY","extra","getExtraFromSegmentWithAngle","xExtra","yExtra","currentAndPre","Math","pow","currentAndNext","preAndNext","currentAngle","acos","sqrt","sin","xAngle","abs","atan2","yAngle","PI","cos","shape","attrs","attr","stroke","get","path","bbox"],"sourceRoot":"","sources":["../../src/bbox/path.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}