{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar util_1 = require(\"./util\");\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\n\n\nvar run = function (g) {\n  g.graph().dummyChains = [];\n  g.edges().forEach(function (edge) {\n    return normalizeEdge(g, edge);\n  });\n};\n\nvar normalizeEdge = function (g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n  if (wRank === vRank + 1) return;\n  g.removeEdgeObj(e);\n  var graph = g.graph();\n  var dummy;\n  var attrs;\n  var i;\n\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      edgeLabel: edgeLabel,\n      width: 0,\n      height: 0,\n      edgeObj: e,\n      rank: vRank\n    };\n    dummy = (0, util_1.addDummyNode)(g, \"edge\", attrs, \"_d\");\n\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = \"edge-label\";\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n\n    g.setEdge(v, dummy, {\n      weight: edgeLabel.weight\n    }, name);\n\n    if (i === 0) {\n      if (!graph.dummyChains) graph.dummyChains = [];\n      graph.dummyChains.push(dummy);\n    }\n\n    v = dummy;\n  }\n\n  g.setEdge(v, w, {\n    weight: edgeLabel.weight\n  }, name);\n};\n\nvar undo = function (g) {\n  var _a;\n\n  (_a = g.graph().dummyChains) === null || _a === void 0 ? void 0 : _a.forEach(function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n\n    if (node.edgeObj) {\n      g.setEdgeObj(node.edgeObj, origLabel);\n    }\n\n    var currentV = v;\n\n    while (node.dummy) {\n      w = g.successors(currentV)[0];\n      g.removeNode(currentV);\n      origLabel.points.push({\n        x: node.x,\n        y: node.y\n      });\n\n      if (node.dummy === \"edge-label\") {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n\n      currentV = w;\n      node = g.node(currentV);\n    }\n  });\n};\n\nexports.default = {\n  run: run,\n  undo: undo\n};","map":{"version":3,"mappings":"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","names":["run","g","graph","dummyChains","edges","forEach","edge","normalizeEdge","e","v","vRank","node","rank","w","wRank","name","edgeLabel","labelRank","removeEdgeObj","dummy","attrs","i","points","width","height","edgeObj","labelpos","setEdge","weight","push","undo","_a","origLabel","setEdgeObj","currentV","successors","removeNode","x","y","exports"],"sourceRoot":"","sources":["../../../../src/layout/dagre/src/normalize.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}