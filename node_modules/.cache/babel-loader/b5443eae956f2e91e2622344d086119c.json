{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport isFunction from './is-function';\n/**\n * _.memoize(calColor);\n * _.memoize(calColor, (...args) => args[0]);\n * @param f\n * @param resolver\n */\n\nexport default (function (f, resolver) {\n  if (!isFunction(f)) {\n    throw new TypeError('Expected a function');\n  }\n\n  var memoized = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    } // 使用方法构造 key，如果不存在 resolver，则直接取第一个参数作为 key\n\n\n    var key = resolver ? resolver.apply(this, args) : args[0];\n    var cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = f.apply(this, args); // 缓存起来\n\n    cache.set(key, result);\n    return result;\n  };\n\n  memoized.cache = new Map();\n  return memoized;\n});","map":{"version":3,"mappings":";AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAEA;;;;;;;AAMA,gBAAe,UAACC,CAAD,EAAcC,QAAd,EAAmD;EAChE,IAAI,CAACF,UAAU,CAACC,CAAD,CAAf,EAAoB;IAClB,MAAM,IAAIE,SAAJ,CAAc,qBAAd,CAAN;EACD;;EAED,IAAMC,QAAQ,GAAG;IAAS;;SAAA,yCAAO;MAAPC;KAAT,CACf;;;IACA,IAAMC,GAAG,GAAGJ,QAAQ,GAAGA,QAAQ,CAACK,KAAT,CAAe,IAAf,EAAqBF,IAArB,CAAH,GAAgCA,IAAI,CAAC,CAAD,CAAxD;IACA,IAAMG,KAAK,GAAGJ,QAAQ,CAACI,KAAvB;;IAEA,IAAIA,KAAK,CAACC,GAAN,CAAUH,GAAV,CAAJ,EAAoB;MAClB,OAAOE,KAAK,CAACE,GAAN,CAAUJ,GAAV,CAAP;IACD;;IACD,IAAMK,MAAM,GAAGV,CAAC,CAACM,KAAF,CAAQ,IAAR,EAAcF,IAAd,CAAf,CARe,CASf;;IACAG,KAAK,CAACI,GAAN,CAAUN,GAAV,EAAeK,MAAf;IACA,OAAOA,MAAP;EACD,CAZD;;EAcAP,QAAQ,CAACI,KAAT,GAAiB,IAAIK,GAAJ,EAAjB;EAEA,OAAOT,QAAP;AACD,CAtBD","names":["isFunction","f","resolver","TypeError","memoized","args","key","apply","cache","has","get","result","set","Map"],"sourceRoot":"","sources":["../src/memoize.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}