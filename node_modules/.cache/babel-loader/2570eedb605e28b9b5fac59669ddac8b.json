{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { AbstractCanvas } from '@antv/g-base';\nimport { getShape } from './util/hit';\nimport * as Shape from './shape';\nimport Group from './group';\nimport { each, getPixelRatio, requestAnimationFrame, clearAnimationFrame } from './util/util';\nimport { applyAttrsToContext, drawChildren, getMergedRegion, mergeView, checkRefresh, clearChanged } from './util/draw';\n\nvar Canvas =\n/** @class */\nfunction (_super) {\n  __extends(Canvas, _super);\n\n  function Canvas() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Canvas.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this); // 设置渲染引擎为 canvas，只读属性\n\n\n    cfg['renderer'] = 'canvas'; // 是否自动绘制，不需要用户调用 draw 方法\n\n    cfg['autoDraw'] = true; // 是否允许局部刷新图表\n\n    cfg['localRefresh'] = true;\n    cfg['refreshElements'] = []; // 是否在视图内自动裁剪\n\n    cfg['clipView'] = true; // 是否使用快速拾取的方案，默认为 false，上层可以打开\n\n    cfg['quickHit'] = false;\n    return cfg;\n  };\n  /**\n   * 一些方法调用会引起画布变化\n   * @param {ChangeType} changeType 改变的类型\n   */\n\n\n  Canvas.prototype.onCanvasChange = function (changeType) {\n    /**\n     * 触发画布更新的三种 changeType\n     * 1. attr: 修改画布的绘图属性\n     * 2. sort: 画布排序，图形的层次会发生变化\n     * 3. changeSize: 改变画布大小\n     */\n    if (changeType === 'attr' || changeType === 'sort' || changeType === 'changeSize') {\n      this.set('refreshElements', [this]);\n      this.draw();\n    }\n  };\n\n  Canvas.prototype.getShapeBase = function () {\n    return Shape;\n  };\n\n  Canvas.prototype.getGroupBase = function () {\n    return Group;\n  };\n  /**\n   * 获取屏幕像素比\n   */\n\n\n  Canvas.prototype.getPixelRatio = function () {\n    var pixelRatio = this.get('pixelRatio') || getPixelRatio(); // 不足 1 的取 1，超出 1 的取整\n\n    return pixelRatio >= 1 ? Math.ceil(pixelRatio) : 1;\n  };\n\n  Canvas.prototype.getViewRange = function () {\n    return {\n      minX: 0,\n      minY: 0,\n      maxX: this.cfg.width,\n      maxY: this.cfg.height\n    };\n  }; // 复写基类的方法生成标签\n\n\n  Canvas.prototype.createDom = function () {\n    var element = document.createElement('canvas');\n    var context = element.getContext('2d'); // 缓存 context 对象\n\n    this.set('context', context);\n    return element;\n  };\n\n  Canvas.prototype.setDOMSize = function (width, height) {\n    _super.prototype.setDOMSize.call(this, width, height);\n\n    var context = this.get('context');\n    var el = this.get('el');\n    var pixelRatio = this.getPixelRatio();\n    el.width = pixelRatio * width;\n    el.height = pixelRatio * height; // 设置 canvas 元素的宽度和高度，会重置缩放，因此 context.scale 需要在每次设置宽、高后调用\n\n    if (pixelRatio > 1) {\n      context.scale(pixelRatio, pixelRatio);\n    }\n  }; // 复写基类方法\n\n\n  Canvas.prototype.clear = function () {\n    _super.prototype.clear.call(this);\n\n    this._clearFrame(); // 需要清理掉延迟绘制的帧\n\n\n    var context = this.get('context');\n    var element = this.get('el');\n    context.clearRect(0, 0, element.width, element.height);\n  };\n\n  Canvas.prototype.getShape = function (x, y) {\n    var shape;\n\n    if (this.get('quickHit')) {\n      shape = getShape(this, x, y);\n    } else {\n      shape = _super.prototype.getShape.call(this, x, y, null);\n    }\n\n    return shape;\n  }; // 对绘制区域边缘取整，避免浮点数问题\n\n\n  Canvas.prototype._getRefreshRegion = function () {\n    var elements = this.get('refreshElements');\n    var viewRegion = this.getViewRange();\n    var region; // 如果是当前画布整体发生了变化，则直接重绘整个画布\n\n    if (elements.length && elements[0] === this) {\n      region = viewRegion;\n    } else {\n      region = getMergedRegion(elements);\n\n      if (region) {\n        region.minX = Math.floor(region.minX);\n        region.minY = Math.floor(region.minY);\n        region.maxX = Math.ceil(region.maxX);\n        region.maxY = Math.ceil(region.maxY);\n        region.maxY += 1; // 在很多环境下字体的高低会不一致，附加一像素，避免残影\n\n        var clipView = this.get('clipView'); // 自动裁剪不在 view 内的区域\n\n        if (clipView) {\n          region = mergeView(region, viewRegion);\n        }\n      }\n    }\n\n    return region;\n  };\n  /**\n   * 刷新图形元素，这里仅仅是放入队列，下次绘制时进行绘制\n   * @param {IElement} element 图形元素\n   */\n\n\n  Canvas.prototype.refreshElement = function (element) {\n    var refreshElements = this.get('refreshElements');\n    refreshElements.push(element); // if (this.get('autoDraw')) {\n    //   this._startDraw();\n    // }\n  }; // 清理还在进行的绘制\n\n\n  Canvas.prototype._clearFrame = function () {\n    var drawFrame = this.get('drawFrame');\n\n    if (drawFrame) {\n      // 如果全部渲染时，存在局部渲染，则抛弃掉局部渲染\n      clearAnimationFrame(drawFrame);\n      this.set('drawFrame', null);\n      this.set('refreshElements', []);\n    }\n  }; // 手工调用绘制接口\n\n\n  Canvas.prototype.draw = function () {\n    var drawFrame = this.get('drawFrame');\n\n    if (this.get('autoDraw') && drawFrame) {\n      return;\n    }\n\n    this._startDraw();\n  }; // 绘制所有图形\n\n\n  Canvas.prototype._drawAll = function () {\n    var context = this.get('context');\n    var element = this.get('el');\n    var children = this.getChildren();\n    context.clearRect(0, 0, element.width, element.height);\n    applyAttrsToContext(context, this);\n    drawChildren(context, children); // 对于 https://github.com/antvis/g/issues/422 的场景，全局渲染的模式下也会记录更新的元素队列，因此全局渲染完后也需要置空\n\n    this.set('refreshElements', []);\n  }; // 绘制局部\n\n\n  Canvas.prototype._drawRegion = function () {\n    var context = this.get('context');\n    var refreshElements = this.get('refreshElements');\n    var children = this.getChildren();\n\n    var region = this._getRefreshRegion(); // 需要注意可能没有 region 的场景\n    // 一般发生在设置了 localRefresh ,在没有图形发生变化的情况下，用户调用了 draw\n\n\n    if (region) {\n      // 清理指定区域\n      context.clearRect(region.minX, region.minY, region.maxX - region.minX, region.maxY - region.minY); // 保存上下文，设置 clip\n\n      context.save();\n      context.beginPath();\n      context.rect(region.minX, region.minY, region.maxX - region.minX, region.maxY - region.minY);\n      context.clip();\n      applyAttrsToContext(context, this); // 确认更新的元素，这个优化可以提升 10 倍左右的性能，10W 个带有 group 的节点，局部渲染会从 90ms 下降到 5-6 ms\n\n      checkRefresh(this, children, region); // 绘制子元素\n\n      drawChildren(context, children, region);\n      context.restore();\n    } else if (refreshElements.length) {\n      // 防止发生改变的 elements 没有 region 的场景，这会发生在多个情况下\n      // 1. 空的 group\n      // 2. 所有 elements 没有在绘图区域\n      // 3. group 下面的 elements 隐藏掉\n      // 如果不进行清理 hasChanged 的状态会不正确\n      clearChanged(refreshElements);\n    }\n\n    each(refreshElements, function (element) {\n      if (element.get('hasChanged')) {\n        // 在视窗外的 Group 元素会加入到更新队列里，但实际却没有执行 draw() 逻辑，也就没有清除 hasChanged 标记\n        // 即已经重绘完、但 hasChanged 标记没有清除的元素，需要统一清除掉。主要是 Group 存在问题，具体原因待排查\n        element.set('hasChanged', false);\n      }\n    });\n    this.set('refreshElements', []);\n  }; // 触发绘制\n\n\n  Canvas.prototype._startDraw = function () {\n    var _this = this;\n\n    var drawFrame = this.get('drawFrame');\n\n    if (!drawFrame) {\n      drawFrame = requestAnimationFrame(function () {\n        if (_this.get('localRefresh')) {\n          _this._drawRegion();\n        } else {\n          _this._drawAll();\n        }\n\n        _this.set('drawFrame', null);\n      });\n      this.set('drawFrame', drawFrame);\n    }\n  };\n\n  Canvas.prototype.skipDraw = function () {};\n\n  Canvas.prototype.removeDom = function () {\n    var el = this.get('el'); // 需要清理 canvas 画布内容，否则ios下 创建的canvas垃圾未回收，导致Total canvas memory use exceeds问题\n    // 相关问题列表\n    // https://stackoverflow.com/questions/52532614/total-canvas-memory-use-exceeds-the-maximum-limit-safari-12\n    // https://github.com/openlayers/openlayers/issues/9291\n\n    el.width = 0;\n    el.height = 0;\n    el.parentNode.removeChild(el);\n  };\n\n  return Canvas;\n}(AbstractCanvas);\n\nexport default Canvas;","map":{"version":3,"mappings":"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","names":["AbstractCanvas","getShape","Shape","Group","each","getPixelRatio","requestAnimationFrame","clearAnimationFrame","applyAttrsToContext","drawChildren","getMergedRegion","mergeView","checkRefresh","clearChanged","__extends","Canvas","cfg","_super","getDefaultCfg","call","changeType","set","draw","pixelRatio","get","Math","ceil","minX","minY","maxX","width","maxY","height","element","document","createElement","context","getContext","setDOMSize","el","scale","clear","_clearFrame","clearRect","x","y","shape","elements","viewRegion","getViewRange","region","length","floor","clipView","refreshElements","push","drawFrame","_startDraw","children","getChildren","_getRefreshRegion","save","beginPath","rect","clip","restore","_this","_drawRegion","_drawAll","parentNode","removeChild"],"sourceRoot":"","sources":["../src/canvas.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}