{"ast":null,"code":"export default function d3Linear(cfg) {\n  var min = cfg.min,\n      max = cfg.max,\n      nice = cfg.nice,\n      tickCount = cfg.tickCount;\n  var linear = new D3Linear();\n  linear.domain([min, max]);\n\n  if (nice) {\n    linear.nice(tickCount);\n  }\n\n  return linear.ticks(tickCount);\n}\nvar DEFAULT_COUNT = 5;\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2); // https://github.com/d3/d3-scale\n\nvar D3Linear =\n/** @class */\nfunction () {\n  function D3Linear() {\n    this._domain = [0, 1];\n  }\n\n  D3Linear.prototype.domain = function (domain) {\n    if (domain) {\n      this._domain = Array.from(domain, Number);\n      return this;\n    }\n\n    return this._domain.slice();\n  };\n\n  D3Linear.prototype.nice = function (count) {\n    var _a, _b;\n\n    if (count === void 0) {\n      count = DEFAULT_COUNT;\n    }\n\n    var d = this._domain.slice();\n\n    var i0 = 0;\n    var i1 = this._domain.length - 1;\n    var start = this._domain[i0];\n    var stop = this._domain[i1];\n    var step;\n\n    if (stop < start) {\n      _a = [stop, start], start = _a[0], stop = _a[1];\n      _b = [i1, i0], i0 = _b[0], i1 = _b[1];\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      this.domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      this.domain(d);\n    }\n\n    return this;\n  };\n\n  D3Linear.prototype.ticks = function (count) {\n    if (count === void 0) {\n      count = DEFAULT_COUNT;\n    }\n\n    return d3ArrayTicks(this._domain[0], this._domain[this._domain.length - 1], count || DEFAULT_COUNT);\n  };\n\n  return D3Linear;\n}();\n\nexport { D3Linear };\n\nfunction d3ArrayTicks(start, stop, count) {\n  var reverse;\n  var i = -1;\n  var n;\n  var ticks;\n  var step;\n  stop = +stop, start = +start, count = +count;\n\n  if (start === stop && count > 0) {\n    return [start];\n  } // tslint:disable-next-line\n\n\n  if (reverse = stop < start) {\n    n = start, start = stop, stop = n;\n  } // tslint:disable-next-line\n\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) {\n    return [];\n  }\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) {\n    ticks.reverse();\n  }\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count);\n  var power = Math.floor(Math.log(step) / Math.LN10);\n  var error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}","map":{"version":3,"mappings":"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","names":["d3Linear","cfg","max","nice","tickCount","linear","D3Linear","domain","min","ticks","DEFAULT_COUNT","e10","Math","sqrt","e5","e2","_domain","Array","from","Number","slice","count","d","i0","i1","length","start","stop","step","_a","_b","tickIncrement","floor","ceil","d3ArrayTicks","reverse","i","n","isFinite","power","log","LN10","error","pow"],"sourceRoot":"","sources":["../../src/util/d3-linear.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}