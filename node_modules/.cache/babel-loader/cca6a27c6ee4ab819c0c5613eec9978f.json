{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Dom } from '../util';\nimport { Highlighter } from '../registry';\nimport { Base } from './base';\nexport class HighlightManager extends Base {\n  constructor() {\n    super(...arguments);\n    this.highlights = {};\n  }\n\n  init() {\n    this.startListening();\n  }\n\n  startListening() {\n    this.graph.on('cell:highlight', this.onCellHighlight, this);\n    this.graph.on('cell:unhighlight', this.onCellUnhighlight, this);\n  }\n\n  stopListening() {\n    this.graph.off('cell:highlight', this.onCellHighlight, this);\n    this.graph.off('cell:unhighlight', this.onCellUnhighlight, this);\n  }\n\n  onCellHighlight({\n    view: cellView,\n    magnet,\n    options = {}\n  }) {\n    const resolved = this.resolveHighlighter(options);\n\n    if (!resolved) {\n      return;\n    }\n\n    const key = this.getHighlighterId(magnet, resolved);\n\n    if (!this.highlights[key]) {\n      const highlighter = resolved.highlighter;\n      highlighter.highlight(cellView, magnet, Object.assign({}, resolved.args));\n      this.highlights[key] = {\n        cellView,\n        magnet,\n        highlighter,\n        args: resolved.args\n      };\n    }\n  }\n\n  onCellUnhighlight({\n    magnet,\n    options = {}\n  }) {\n    const resolved = this.resolveHighlighter(options);\n\n    if (!resolved) {\n      return;\n    }\n\n    const id = this.getHighlighterId(magnet, resolved);\n    this.unhighlight(id);\n  }\n\n  resolveHighlighter(options) {\n    const graphOptions = this.options;\n    let highlighterDef = options.highlighter;\n\n    if (highlighterDef == null) {\n      // check for built-in types\n      const type = options.type;\n      highlighterDef = type && graphOptions.highlighting[type] || graphOptions.highlighting.default;\n    }\n\n    if (highlighterDef == null) {\n      return null;\n    }\n\n    const def = typeof highlighterDef === 'string' ? {\n      name: highlighterDef\n    } : highlighterDef;\n    const name = def.name;\n    const highlighter = Highlighter.registry.get(name);\n\n    if (highlighter == null) {\n      return Highlighter.registry.onNotFound(name);\n    }\n\n    Highlighter.check(name, highlighter);\n    return {\n      name,\n      highlighter,\n      args: def.args || {}\n    };\n  }\n\n  getHighlighterId(magnet, options) {\n    Dom.ensureId(magnet);\n    return options.name + magnet.id + JSON.stringify(options.args);\n  }\n\n  unhighlight(id) {\n    const highlight = this.highlights[id];\n\n    if (highlight) {\n      highlight.highlighter.unhighlight(highlight.cellView, highlight.magnet, highlight.args);\n      delete this.highlights[id];\n    }\n  }\n\n  dispose() {\n    Object.keys(this.highlights).forEach(id => this.unhighlight(id));\n    this.stopListening();\n  }\n\n}\n\n__decorate([HighlightManager.dispose()], HighlightManager.prototype, \"dispose\", null);","map":{"version":3,"mappings":"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","names":["Dom","Highlighter","Base","HighlightManager","constructor","init","startListening","graph","on","onCellHighlight","onCellUnhighlight","stopListening","off","view","cellView","magnet","options","resolved","resolveHighlighter","key","getHighlighterId","highlights","highlighter","highlight","Object","args","id","unhighlight","graphOptions","highlighterDef","type","highlighting","default","def","name","registry","get","onNotFound","check","ensureId","JSON","stringify","dispose","keys","forEach","__decorate"],"sourceRoot":"","sources":["../../src/graph/highlight.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}