{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { vec3 } from 'gl-matrix';\nvar tmpVecA = vec3.create();\nexport var BoundingSphere = /*#__PURE__*/function () {\n  function BoundingSphere(center, radius) {\n    _classCallCheck(this, BoundingSphere);\n\n    this.center = void 0;\n    this.radius = void 0;\n    this.center = center || vec3.create();\n    this.radius = radius || 0.5;\n  }\n\n  _createClass(BoundingSphere, [{\n    key: \"containsPoint\",\n    value: function containsPoint(point) {\n      vec3.sub(tmpVecA, point, this.center);\n      return vec3.length(tmpVecA) < this.radius * this.radius;\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(sphere) {\n      vec3.sub(tmpVecA, sphere.center, this.center);\n      var totalRadius = sphere.radius + this.radius;\n\n      if (vec3.length(tmpVecA) <= totalRadius * totalRadius) {\n        return true;\n      }\n\n      return false;\n    }\n  }]);\n\n  return BoundingSphere;\n}();","map":{"version":3,"mappings":";;AAAA,SAASA,IAAT,QAAqB,WAArB;AAEA,IAAMC,OAAO,GAAGD,IAAI,CAACE,MAALF,EAAhB;AAEA,WAAaG,cAAb;EAIE,wBAAYC,MAAZ,EAA2BC,MAA3B,EAA4C;IAAAC;;IAAA,KAHrCF,MAGqC;IAAA,KAFrCC,MAEqC;IAC1C,KAAKD,MAAL,GAAcA,MAAM,IAAIJ,IAAI,CAACE,MAALF,EAAxB;IACA,KAAKK,MAAL,GAAcA,MAAM,IAAI,GAAxB;EACD;;EAPHE;IAAAC;IAAAC,8BASuBC,KATvB,EASoC;MAChCV,IAAI,CAACW,GAALX,CAASC,OAATD,EAAkBU,KAAlBV,EAAyB,KAAKI,MAA9BJ;MACA,OAAOA,IAAI,CAACY,MAALZ,CAAYC,OAAZD,IAAuB,KAAKK,MAAL,GAAc,KAAKA,MAAjD;IACD;EAZH;IAAAG;IAAAC,2BAcoBI,MAdpB,EAc4C;MACxCb,IAAI,CAACW,GAALX,CAASC,OAATD,EAAkBa,MAAM,CAACT,MAAzBJ,EAAiC,KAAKI,MAAtCJ;MACA,IAAMc,WAAW,GAAGD,MAAM,CAACR,MAAPQ,GAAgB,KAAKR,MAAzC;;MAEA,IAAIL,IAAI,CAACY,MAALZ,CAAYC,OAAZD,KAAwBc,WAAW,GAAGA,WAA1C,EAAuD;QACrD,OAAO,IAAP;MACD;;MAED,OAAO,KAAP;IACD;EAvBH;;EAAA;AAAA","names":["vec3","tmpVecA","create","BoundingSphere","center","radius","_classCallCheck","_createClass","key","value","point","sub","length","sphere","totalRadius"],"sources":["../../src/shape/BoundingSphere.ts"],"sourcesContent":["import { vec3 } from 'gl-matrix';\n\nconst tmpVecA = vec3.create();\n\nexport class BoundingSphere {\n  public center: vec3;\n  public radius: number;\n\n  constructor(center?: vec3, radius?: number) {\n    this.center = center || vec3.create();\n    this.radius = radius || 0.5;\n  }\n\n  public containsPoint(point: vec3) {\n    vec3.sub(tmpVecA, point, this.center);\n    return vec3.length(tmpVecA) < this.radius * this.radius;\n  }\n\n  public intersects(sphere: BoundingSphere) {\n    vec3.sub(tmpVecA, sphere.center, this.center);\n    const totalRadius = sphere.radius + this.radius;\n\n    if (vec3.length(tmpVecA) <= totalRadius * totalRadius) {\n      return true;\n    }\n\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}