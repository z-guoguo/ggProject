{"ast":null,"code":"\"use strict\";\n/**\n * @fileOverview dagre layout\n * @author shiwu.wyy@antfin.com\n */\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DagreLayout = void 0;\n\nvar index_1 = __importDefault(require(\"./dagre/index\"));\n\nvar util_1 = require(\"../util\");\n\nvar base_1 = require(\"./base\");\n\nvar graph_1 = require(\"./dagre/graph\");\n/**\n * 层次布局\n */\n\n\nvar DagreLayout =\n/** @class */\nfunction (_super) {\n  __extends(DagreLayout, _super);\n\n  function DagreLayout(options) {\n    var _this = _super.call(this) || this;\n    /** layout 方向, 可选 TB, BT, LR, RL */\n\n\n    _this.rankdir = \"TB\";\n    /** 节点水平间距(px) */\n\n    _this.nodesep = 50;\n    /** 每一层节点之间间距 */\n\n    _this.ranksep = 50;\n    /** 是否保留布局连线的控制点 */\n\n    _this.controlPoints = false;\n    /** 每层节点是否根据节点数据中的 comboId 进行排序，以防止同层 combo 重叠 */\n\n    _this.sortByCombo = false;\n    /** 是否保留每条边上的dummy node */\n\n    _this.edgeLabelSpace = true;\n    /** 是否基于 dagre 进行辐射布局，若是，第一层节点将被放置在最内环上，其余层依次向外辐射 */\n\n    _this.radial = false;\n    _this.nodes = [];\n    _this.edges = [];\n    /** 迭代结束的回调函数 */\n\n    _this.onLayoutEnd = function () {};\n\n    _this.layoutNode = function (nodeId) {\n      var self = _this;\n      var nodes = self.nodes;\n      var node = nodes.find(function (node) {\n        return node.id === nodeId;\n      });\n\n      if (node) {\n        var layout = node.layout !== false;\n        return layout;\n      }\n\n      return true;\n    };\n\n    _this.updateCfg(options);\n\n    return _this;\n  }\n\n  DagreLayout.prototype.getDefaultCfg = function () {\n    return {\n      rankdir: \"TB\",\n      align: undefined,\n      nodeSize: undefined,\n      nodesepFunc: undefined,\n      ranksepFunc: undefined,\n      nodesep: 50,\n      ranksep: 50,\n      controlPoints: false,\n      radial: false,\n      focusNode: null // radial 为 true 时生效，关注的节点\n\n    };\n  };\n  /**\n   * 执行布局\n   */\n\n\n  DagreLayout.prototype.execute = function () {\n    var _this = this;\n\n    var _a;\n\n    var self = this;\n    var nodes = self.nodes,\n        nodeSize = self.nodeSize,\n        rankdir = self.rankdir,\n        combos = self.combos,\n        begin = self.begin,\n        radial = self.radial;\n    if (!nodes) return;\n    var edges = self.edges || [];\n    var g = new graph_1.Graph({\n      multigraph: true,\n      compound: true\n    });\n    var nodeSizeFunc;\n\n    if (!nodeSize) {\n      nodeSizeFunc = function (d) {\n        if (d.size) {\n          if ((0, util_1.isArray)(d.size)) {\n            return d.size;\n          }\n\n          if ((0, util_1.isObject)(d.size)) {\n            return [d.size.width || 40, d.size.height || 40];\n          }\n\n          return [d.size, d.size];\n        }\n\n        return [40, 40];\n      };\n    } else if ((0, util_1.isArray)(nodeSize)) {\n      nodeSizeFunc = function () {\n        return nodeSize;\n      };\n    } else {\n      nodeSizeFunc = function () {\n        return [nodeSize, nodeSize];\n      };\n    }\n\n    var ranksepfunc = (0, util_1.getFunc)(self.ranksep, 50, self.ranksepFunc);\n    var nodesepfunc = (0, util_1.getFunc)(self.nodesep, 50, self.nodesepFunc);\n    var horisep = nodesepfunc;\n    var vertisep = ranksepfunc;\n\n    if (rankdir === \"LR\" || rankdir === \"RL\") {\n      horisep = ranksepfunc;\n      vertisep = nodesepfunc;\n    }\n\n    g.setDefaultEdgeLabel(function () {\n      return {};\n    });\n    g.setGraph(self);\n    var comboMap = {};\n\n    if (this.sortByCombo && combos) {\n      combos.forEach(function (combo) {\n        if (!combo.parentId) return;\n\n        if (!comboMap[combo.parentId]) {\n          comboMap[combo.parentId] = true;\n          g.setNode(combo.parentId, {});\n        }\n\n        g.setParent(combo.id, combo.parentId);\n      });\n    }\n\n    nodes.filter(function (node) {\n      return node.layout !== false;\n    }).forEach(function (node) {\n      var size = nodeSizeFunc(node);\n      var verti = vertisep(node);\n      var hori = horisep(node);\n      var width = size[0] + 2 * hori;\n      var height = size[1] + 2 * verti;\n      var layer = node.layer;\n\n      if ((0, util_1.isNumber)(layer)) {\n        // 如果有layer属性，加入到node的label中\n        g.setNode(node.id, {\n          width: width,\n          height: height,\n          layer: layer\n        });\n      } else {\n        g.setNode(node.id, {\n          width: width,\n          height: height\n        });\n      }\n\n      if (_this.sortByCombo && node.comboId) {\n        if (!comboMap[node.comboId]) {\n          comboMap[node.comboId] = true;\n          g.setNode(node.comboId, {});\n        }\n\n        g.setParent(node.id, node.comboId);\n      }\n    });\n    edges.forEach(function (edge) {\n      // dagrejs Wiki https://github.com/dagrejs/dagre/wiki#configuring-the-layout\n      var source = (0, util_1.getEdgeTerminal)(edge, 'source');\n      var target = (0, util_1.getEdgeTerminal)(edge, 'target');\n\n      if (_this.layoutNode(source) && _this.layoutNode(target)) {\n        g.setEdge(source, target, {\n          weight: edge.weight || 1\n        });\n      }\n    }); // 考虑增量图中的原始图\n\n    var prevGraph = undefined;\n\n    if (self.preset) {\n      prevGraph = new graph_1.Graph({\n        multigraph: true,\n        compound: true\n      });\n      self.preset.nodes.forEach(function (node) {\n        prevGraph === null || prevGraph === void 0 ? void 0 : prevGraph.setNode(node.id, node);\n      });\n    }\n\n    index_1.default.layout(g, {\n      prevGraph: prevGraph,\n      edgeLabelSpace: self.edgeLabelSpace,\n      keepNodeOrder: Boolean(!!self.nodeOrder),\n      nodeOrder: self.nodeOrder\n    });\n    var dBegin = [0, 0];\n\n    if (begin) {\n      var minX_1 = Infinity;\n      var minY_1 = Infinity;\n      g.nodes().forEach(function (node) {\n        var coord = g.node(node);\n        if (minX_1 > coord.x) minX_1 = coord.x;\n        if (minY_1 > coord.y) minY_1 = coord.y;\n      });\n      g.edges().forEach(function (edge) {\n        var _a;\n\n        var coord = g.edge(edge);\n        (_a = coord.points) === null || _a === void 0 ? void 0 : _a.forEach(function (point) {\n          if (minX_1 > point.x) minX_1 = point.x;\n          if (minY_1 > point.y) minY_1 = point.y;\n        });\n      });\n      dBegin[0] = begin[0] - minX_1;\n      dBegin[1] = begin[1] - minY_1;\n    } // 变形为辐射\n\n\n    if (radial) {\n      var _b = this,\n          focusNode = _b.focusNode,\n          ranksep = _b.ranksep,\n          getRadialPos_1 = _b.getRadialPos;\n\n      var focusId = (0, util_1.isString)(focusNode) ? focusNode : focusNode === null || focusNode === void 0 ? void 0 : focusNode.id;\n      var focusLayer_1 = focusId ? (_a = g.node(focusId)) === null || _a === void 0 ? void 0 : _a._rank : 0;\n      var layers_1 = [];\n      var isHorizontal = rankdir === 'LR' || rankdir === 'RL';\n      var dim_1 = isHorizontal ? 'y' : 'x';\n      var sizeDim_1 = isHorizontal ? 'height' : 'width'; // 找到整个图作为环的坐标维度（dim）的最大、最小值，考虑节点宽度\n\n      var min_1 = Infinity;\n      var max_1 = -Infinity;\n      g.nodes().forEach(function (node) {\n        var coord = g.node(node);\n        var i = nodes.findIndex(function (it) {\n          return it.id === node;\n        });\n        if (!nodes[i]) return;\n        var currentNodesep = nodesepfunc(nodes[i]);\n\n        if (focusLayer_1 === 0) {\n          if (!layers_1[coord._rank]) layers_1[coord._rank] = {\n            nodes: [],\n            totalWidth: 0,\n            maxSize: -Infinity\n          };\n\n          layers_1[coord._rank].nodes.push(node);\n\n          layers_1[coord._rank].totalWidth += currentNodesep * 2 + coord[sizeDim_1];\n          if (layers_1[coord._rank].maxSize < Math.max(coord.width, coord.height)) layers_1[coord._rank].maxSize = Math.max(coord.width, coord.height);\n        } else {\n          var diffLayer = coord._rank - focusLayer_1;\n\n          if (diffLayer === 0) {\n            if (!layers_1[diffLayer]) layers_1[diffLayer] = {\n              nodes: [],\n              totalWidth: 0,\n              maxSize: -Infinity\n            };\n            layers_1[diffLayer].nodes.push(node);\n            layers_1[diffLayer].totalWidth += currentNodesep * 2 + coord[sizeDim_1];\n            if (layers_1[diffLayer].maxSize < Math.max(coord.width, coord.height)) layers_1[diffLayer].maxSize = Math.max(coord.width, coord.height);\n          } else {\n            var diffLayerAbs = Math.abs(diffLayer);\n            if (!layers_1[diffLayerAbs]) layers_1[diffLayerAbs] = {\n              left: [],\n              right: [],\n              totalWidth: 0,\n              maxSize: -Infinity\n            };\n            layers_1[diffLayerAbs].totalWidth += currentNodesep * 2 + coord[sizeDim_1];\n            if (layers_1[diffLayerAbs].maxSize < Math.max(coord.width, coord.height)) layers_1[diffLayerAbs].maxSize = Math.max(coord.width, coord.height);\n\n            if (diffLayer < 0) {\n              layers_1[diffLayerAbs].left.push(node);\n            } else {\n              layers_1[diffLayerAbs].right.push(node);\n            }\n          }\n        }\n\n        var leftPos = coord[dim_1] - coord[sizeDim_1] / 2 - currentNodesep;\n        var rightPos = coord[dim_1] + coord[sizeDim_1] / 2 + currentNodesep;\n        if (leftPos < min_1) min_1 = leftPos;\n        if (rightPos > max_1) max_1 = rightPos;\n      }); // const padding = (max - min) * 0.1; // TODO\n      // \b初始化为第一圈的半径，后面根据每层 ranksep 叠加\n\n      var radius_1 = ranksep || 50; // TODO;\n\n      var radiusMap_1 = {}; // 扩大最大最小值范围，以便为环上留出接缝处的空隙\n\n      var rangeLength_1 = (max_1 - min_1) / 0.9;\n      var range_1 = [(min_1 + max_1 - rangeLength_1) * 0.5, (min_1 + max_1 + rangeLength_1) * 0.5]; // 根据半径、分布比例，计算节点在环上的位置，并返回该组节点中最大的 ranksep 值\n\n      var processNodes_1 = function (layerNodes, radius, propsMaxRanksep, arcRange) {\n        if (propsMaxRanksep === void 0) {\n          propsMaxRanksep = -Infinity;\n        }\n\n        if (arcRange === void 0) {\n          arcRange = [0, 1];\n        }\n\n        var maxRanksep = propsMaxRanksep;\n        layerNodes.forEach(function (node) {\n          var coord = g.node(node);\n          radiusMap_1[node] = radius; // 获取变形为 radial 后的直角坐标系坐标\n\n          var _a = getRadialPos_1(coord[dim_1], range_1, rangeLength_1, radius, arcRange),\n              newX = _a.x,\n              newY = _a.y; // 将新坐标写入源数据\n\n\n          var i = nodes.findIndex(function (it) {\n            return it.id === node;\n          });\n          if (!nodes[i]) return;\n          nodes[i].x = newX + dBegin[0];\n          nodes[i].y = newY + dBegin[1]; // @ts-ignore: pass layer order to data for increment layout use\n\n          nodes[i]._order = coord._order; // 找到本层最大的一个 ranksep，作为下一层与本层的间隙，叠加到下一层的半径上\n\n          var currentNodeRanksep = ranksepfunc(nodes[i]);\n          if (maxRanksep < currentNodeRanksep) maxRanksep = currentNodeRanksep;\n        });\n        return maxRanksep;\n      };\n\n      var isFirstLevel_1 = true;\n      var lastLayerMaxNodeSize_1 = 0;\n      layers_1.forEach(function (layerNodes) {\n        var _a, _b, _c, _d, _e, _f, _g;\n\n        if (!((_a = layerNodes === null || layerNodes === void 0 ? void 0 : layerNodes.nodes) === null || _a === void 0 ? void 0 : _a.length) && !((_b = layerNodes === null || layerNodes === void 0 ? void 0 : layerNodes.left) === null || _b === void 0 ? void 0 : _b.length) && !((_c = layerNodes === null || layerNodes === void 0 ? void 0 : layerNodes.right) === null || _c === void 0 ? void 0 : _c.length)) return; // 第一层只有一个节点，直接放在圆心，初始半径设定为 0\n\n        if (isFirstLevel_1 && layerNodes.nodes.length === 1) {\n          // 将新坐标写入源数据\n          var i = nodes.findIndex(function (it) {\n            return it.id === layerNodes.nodes[0];\n          });\n          nodes[i].x = dBegin[0];\n          nodes[i].y = dBegin[1];\n          radiusMap_1[layerNodes.nodes[0]] = 0;\n          radius_1 = ranksepfunc(nodes[i]);\n          isFirstLevel_1 = false;\n          return;\n        } // 为接缝留出空隙，半径也需要扩大\n\n\n        radius_1 = Math.max(radius_1, layerNodes.totalWidth / (2 * Math.PI)); // / 0.9;\n\n        var maxRanksep = -Infinity;\n\n        if (focusLayer_1 === 0 || ((_d = layerNodes.nodes) === null || _d === void 0 ? void 0 : _d.length)) {\n          maxRanksep = processNodes_1(layerNodes.nodes, radius_1, maxRanksep, [0, 1]); // 0.8\n        } else {\n          var leftRatio = ((_e = layerNodes.left) === null || _e === void 0 ? void 0 : _e.length) / (((_f = layerNodes.left) === null || _f === void 0 ? void 0 : _f.length) + ((_g = layerNodes.right) === null || _g === void 0 ? void 0 : _g.length));\n          maxRanksep = processNodes_1(layerNodes.left, radius_1, maxRanksep, [0, leftRatio]); // 接缝留出 0.05 的缝隙\n\n          maxRanksep = processNodes_1(layerNodes.right, radius_1, maxRanksep, [leftRatio + 0.05, 1]); // 接缝留出 0.05 的缝隙\n        }\n\n        radius_1 += maxRanksep;\n        isFirstLevel_1 = false;\n        lastLayerMaxNodeSize_1 - layerNodes.maxSize;\n      });\n      g.edges().forEach(function (edge) {\n        var _a, _b, _c;\n\n        var coord = g.edge(edge);\n        var i = edges.findIndex(function (it) {\n          var source = (0, util_1.getEdgeTerminal)(it, 'source');\n          var target = (0, util_1.getEdgeTerminal)(it, 'target');\n          return source === edge.v && target === edge.w;\n        });\n\n        if (self.edgeLabelSpace && self.controlPoints && edges[i].type !== \"loop\") {\n          var otherDim_1 = dim_1 === 'x' ? 'y' : 'x';\n          var controlPoints = (_a = coord === null || coord === void 0 ? void 0 : coord.points) === null || _a === void 0 ? void 0 : _a.slice(1, coord.points.length - 1);\n          var newControlPoints_1 = [];\n          var sourceOtherDimValue_1 = (_b = g.node(edge.v)) === null || _b === void 0 ? void 0 : _b[otherDim_1];\n          var otherDimDist_1 = sourceOtherDimValue_1 - ((_c = g.node(edge.w)) === null || _c === void 0 ? void 0 : _c[otherDim_1]);\n          var sourceRadius_1 = radiusMap_1[edge.v];\n          var radiusDist_1 = sourceRadius_1 - radiusMap_1[edge.w];\n          controlPoints === null || controlPoints === void 0 ? void 0 : controlPoints.forEach(function (point) {\n            // 根据该边的起点、终点半径，及起点、终点、控制点位置关系，确定该控制点的半径\n            var cRadius = (point[otherDim_1] - sourceOtherDimValue_1) / otherDimDist_1 * radiusDist_1 + sourceRadius_1; // 获取变形为 radial 后的直角坐标系坐标\n\n            var newPos = getRadialPos_1(point[dim_1], range_1, rangeLength_1, cRadius);\n            newControlPoints_1.push({\n              x: newPos.x + dBegin[0],\n              y: newPos.y + dBegin[1]\n            });\n          });\n          edges[i].controlPoints = newControlPoints_1;\n        }\n      });\n    } else {\n      g.nodes().forEach(function (node) {\n        var coord = g.node(node);\n        var i = nodes.findIndex(function (it) {\n          return it.id === node;\n        });\n        if (!nodes[i]) return;\n        nodes[i].x = coord.x + dBegin[0];\n        nodes[i].y = coord.y + dBegin[1]; // @ts-ignore: pass layer order to data for increment layout use\n\n        nodes[i]._order = coord._order;\n      });\n      g.edges().forEach(function (edge) {\n        var _a;\n\n        var coord = g.edge(edge);\n        var i = edges.findIndex(function (it) {\n          var source = (0, util_1.getEdgeTerminal)(it, 'source');\n          var target = (0, util_1.getEdgeTerminal)(it, 'target');\n          return source === edge.v && target === edge.w;\n        });\n\n        if (self.edgeLabelSpace && self.controlPoints && edges[i].type !== \"loop\") {\n          edges[i].controlPoints = (_a = coord === null || coord === void 0 ? void 0 : coord.points) === null || _a === void 0 ? void 0 : _a.slice(1, coord.points.length - 1); // 去掉头尾\n\n          edges[i].controlPoints.forEach(function (point) {\n            point.x += dBegin[0];\n            point.y += dBegin[1];\n          });\n        }\n      });\n    }\n\n    if (self.onLayoutEnd) self.onLayoutEnd();\n    return {\n      nodes: nodes,\n      edges: edges\n    };\n  };\n\n  DagreLayout.prototype.getRadialPos = function (dimValue, range, rangeLength, radius, arcRange) {\n    if (arcRange === void 0) {\n      arcRange = [0, 1];\n    } // dimRatio 占圆弧的比例\n\n\n    var dimRatio = (dimValue - range[0]) / rangeLength; // 再进一步归一化到指定的范围上\n\n    dimRatio = dimRatio * (arcRange[1] - arcRange[0]) + arcRange[0]; // 使用最终归一化后的范围计算角度\n\n    var angle = dimRatio * 2 * Math.PI; // 弧度\n    // 将极坐标系转换为直角坐标系\n\n    return {\n      x: Math.cos(angle) * radius,\n      y: Math.sin(angle) * radius\n    };\n  };\n\n  DagreLayout.prototype.getType = function () {\n    return \"dagre\";\n  };\n\n  return DagreLayout;\n}(base_1.Base);\n\nexports.DagreLayout = DagreLayout;","map":{"version":3,"mappings":"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","names":["__extends","options","_super","_this","nodeId","self","node","nodes","find","id","layout","updateCfg","DagreLayout","rankdir","align","undefined","nodeSize","nodesepFunc","ranksepFunc","nodesep","ranksep","controlPoints","radial","focusNode","combos","begin","edges","g","graph_1","multigraph","compound","nodeSizeFunc","d","size","width","height","ranksepfunc","nodesepfunc","horisep","vertisep","setDefaultEdgeLabel","setGraph","comboMap","sortByCombo","forEach","combo","parentId","setNode","setParent","filter","verti","hori","layer","comboId","edge","source","target","layoutNode","setEdge","weight","prevGraph","preset","index_1","edgeLabelSpace","keepNodeOrder","Boolean","nodeOrder","dBegin","minX_1","Infinity","minY_1","coord","x","y","points","_a","point","getRadialPos_1","focusId","focusLayer_1","_rank","layers_1","isHorizontal","dim_1","sizeDim_1","min_1","max_1","i","findIndex","it","currentNodesep","totalWidth","maxSize","push","Math","max","diffLayer","diffLayerAbs","abs","left","right","leftPos","rightPos","radius_1","radiusMap_1","rangeLength_1","range_1","processNodes_1","layerNodes","radius","propsMaxRanksep","arcRange","maxRanksep","newX","newY","_order","currentNodeRanksep","isFirstLevel_1","lastLayerMaxNodeSize_1","length","_b","_c","PI","_d","leftRatio","_e","_f","_g","v","w","type","otherDim_1","slice","newControlPoints_1","sourceOtherDimValue_1","otherDimDist_1","sourceRadius_1","radiusDist_1","cRadius","newPos","onLayoutEnd","dimValue","range","rangeLength","dimRatio","angle","cos","sin","base_1","exports"],"sourceRoot":"","sources":["../../src/layout/dagre.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}