{"ast":null,"code":"/**\n * 并查集 Disjoint set to support quick union\n */\nvar UnionFind =\n/** @class */\nfunction () {\n  function UnionFind(items) {\n    this.count = items.length;\n    this.parent = {};\n\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var i = items_1[_i];\n      this.parent[i] = i;\n    }\n  } // find the root of the item\n\n\n  UnionFind.prototype.find = function (item) {\n    while (this.parent[item] !== item) {\n      item = this.parent[item];\n    }\n\n    return item;\n  };\n\n  UnionFind.prototype.union = function (a, b) {\n    var rootA = this.find(a);\n    var rootB = this.find(b);\n    if (rootA === rootB) return; // make the element with smaller root the parent\n\n    if (rootA < rootB) {\n      if (this.parent[b] !== b) this.union(this.parent[b], a);\n      this.parent[b] = this.parent[a];\n    } else {\n      if (this.parent[a] !== a) this.union(this.parent[a], b);\n      this.parent[a] = this.parent[b];\n    }\n  }; // whether a and b are connected, i.e. a and b have the same root\n\n\n  UnionFind.prototype.connected = function (a, b) {\n    return this.find(a) === this.find(b);\n  };\n\n  return UnionFind;\n}();\n\nexport default UnionFind;","map":{"version":3,"names":["UnionFind","items","count","length","parent","_i","items_1","i","prototype","find","item","union","a","b","rootA","rootB","connected"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/algorithm/es/structs/union-find.js"],"sourcesContent":["/**\n * 并查集 Disjoint set to support quick union\n */\nvar UnionFind =\n/** @class */\nfunction () {\n  function UnionFind(items) {\n    this.count = items.length;\n    this.parent = {};\n\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var i = items_1[_i];\n      this.parent[i] = i;\n    }\n  } // find the root of the item\n\n\n  UnionFind.prototype.find = function (item) {\n    while (this.parent[item] !== item) {\n      item = this.parent[item];\n    }\n\n    return item;\n  };\n\n  UnionFind.prototype.union = function (a, b) {\n    var rootA = this.find(a);\n    var rootB = this.find(b);\n    if (rootA === rootB) return; // make the element with smaller root the parent\n\n    if (rootA < rootB) {\n      if (this.parent[b] !== b) this.union(this.parent[b], a);\n      this.parent[b] = this.parent[a];\n    } else {\n      if (this.parent[a] !== a) this.union(this.parent[a], b);\n      this.parent[a] = this.parent[b];\n    }\n  }; // whether a and b are connected, i.e. a and b have the same root\n\n\n  UnionFind.prototype.connected = function (a, b) {\n    return this.find(a) === this.find(b);\n  };\n\n  return UnionFind;\n}();\n\nexport default UnionFind;"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,SAAS;AACb;AACA,YAAY;EACV,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;IACxB,KAAKC,KAAL,GAAaD,KAAK,CAACE,MAAnB;IACA,KAAKC,MAAL,GAAc,EAAd;;IAEA,KAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,OAAO,GAAGL,KAA3B,EAAkCI,EAAE,GAAGC,OAAO,CAACH,MAA/C,EAAuDE,EAAE,EAAzD,EAA6D;MAC3D,IAAIE,CAAC,GAAGD,OAAO,CAACD,EAAD,CAAf;MACA,KAAKD,MAAL,CAAYG,CAAZ,IAAiBA,CAAjB;IACD;EACF,CATS,CASR;;;EAGFP,SAAS,CAACQ,SAAV,CAAoBC,IAApB,GAA2B,UAAUC,IAAV,EAAgB;IACzC,OAAO,KAAKN,MAAL,CAAYM,IAAZ,MAAsBA,IAA7B,EAAmC;MACjCA,IAAI,GAAG,KAAKN,MAAL,CAAYM,IAAZ,CAAP;IACD;;IAED,OAAOA,IAAP;EACD,CAND;;EAQAV,SAAS,CAACQ,SAAV,CAAoBG,KAApB,GAA4B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAC1C,IAAIC,KAAK,GAAG,KAAKL,IAAL,CAAUG,CAAV,CAAZ;IACA,IAAIG,KAAK,GAAG,KAAKN,IAAL,CAAUI,CAAV,CAAZ;IACA,IAAIC,KAAK,KAAKC,KAAd,EAAqB,OAHqB,CAGb;;IAE7B,IAAID,KAAK,GAAGC,KAAZ,EAAmB;MACjB,IAAI,KAAKX,MAAL,CAAYS,CAAZ,MAAmBA,CAAvB,EAA0B,KAAKF,KAAL,CAAW,KAAKP,MAAL,CAAYS,CAAZ,CAAX,EAA2BD,CAA3B;MAC1B,KAAKR,MAAL,CAAYS,CAAZ,IAAiB,KAAKT,MAAL,CAAYQ,CAAZ,CAAjB;IACD,CAHD,MAGO;MACL,IAAI,KAAKR,MAAL,CAAYQ,CAAZ,MAAmBA,CAAvB,EAA0B,KAAKD,KAAL,CAAW,KAAKP,MAAL,CAAYQ,CAAZ,CAAX,EAA2BC,CAA3B;MAC1B,KAAKT,MAAL,CAAYQ,CAAZ,IAAiB,KAAKR,MAAL,CAAYS,CAAZ,CAAjB;IACD;EACF,CAZD,CApBU,CAgCP;;;EAGHb,SAAS,CAACQ,SAAV,CAAoBQ,SAApB,GAAgC,UAAUJ,CAAV,EAAaC,CAAb,EAAgB;IAC9C,OAAO,KAAKJ,IAAL,CAAUG,CAAV,MAAiB,KAAKH,IAAL,CAAUI,CAAV,CAAxB;EACD,CAFD;;EAIA,OAAOb,SAAP;AACD,CAxCD,EAFA;;AA4CA,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}