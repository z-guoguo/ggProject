{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @fileOverview quadTree\n * @author shiwu.wyy@antfin.com\n */\n\nvar QuadTree =\n/** @class */\nfunction () {\n  // each quadtree represents a quadrant and an aggregate body\n  // that represents all bodies inside the quadrant\n  function QuadTree(param) {\n    /**\n     * (aggregated) body in this quad\n     * @type  {object}\n     */\n    this.body = null;\n    /**\n     * tree representing the northwest quadrant\n     * @type  {object}\n     */\n\n    this.quad = null;\n    this.NW = null;\n    this.NE = null;\n    this.SW = null;\n    this.SE = null;\n    /**\n     * threshold\n     * @type  {number}\n     */\n\n    this.theta = 0.5;\n    if (param != null) this.quad = param;\n  } // insert a body(node) into the tree\n\n\n  QuadTree.prototype.insert = function (bo) {\n    // if this node does not contain a body, put the new body bo here\n    if (this.body == null) {\n      this.body = bo;\n      return;\n    } // internal node\n\n\n    if (!this._isExternal()) {\n      // update mass info\n      this.body = this.body.add(bo); // insert body into quadrant\n\n      this._putBody(bo);\n    } else {\n      // external node\n      // divide this region into four children\n      if (this.quad) {\n        this.NW = new QuadTree(this.quad.NW());\n        this.NE = new QuadTree(this.quad.NE());\n        this.SW = new QuadTree(this.quad.SW());\n        this.SE = new QuadTree(this.quad.SE());\n      } // insert this body and bo\n\n\n      this._putBody(this.body);\n\n      this._putBody(bo); // update the mass info\n\n\n      this.body = this.body.add(bo);\n    }\n  }; // inserts bo into a quad\n  // tslint:disable-next-line\n\n\n  QuadTree.prototype._putBody = function (bo) {\n    if (!this.quad) return;\n    if (bo.in(this.quad.NW()) && this.NW) this.NW.insert(bo);else if (bo.in(this.quad.NE()) && this.NE) this.NE.insert(bo);else if (bo.in(this.quad.SW()) && this.SW) this.SW.insert(bo);else if (bo.in(this.quad.SE()) && this.SE) this.SE.insert(bo);\n  }; // tslint:disable-next-line\n\n\n  QuadTree.prototype._isExternal = function () {\n    // four children are null\n    return this.NW == null && this.NE == null && this.SW == null && this.SE == null;\n  }; // update the forces\n\n\n  QuadTree.prototype.updateForce = function (bo) {\n    if (this.body == null || bo === this.body) {\n      return;\n    } // if the current node is external\n\n\n    if (this._isExternal()) bo.addForce(this.body); // internal nodes\n    else {\n      var s = this.quad ? this.quad.getLength() : 0;\n      var d = this.body.distanceTo(bo); // b is far enough\n\n      if (s / d < this.theta) bo.addForce(this.body);else {\n        this.NW && this.NW.updateForce(bo);\n        this.NE && this.NE.updateForce(bo);\n        this.SW && this.SW.updateForce(bo);\n        this.SE && this.SE.updateForce(bo);\n      }\n    }\n  };\n\n  return QuadTree;\n}();\n\nexports.default = QuadTree;","map":{"version":3,"mappings":"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","names":["param","body","quad","NW","NE","SW","SE","theta","QuadTree","bo","_isExternal","add","_putBody","in","insert","addForce","s","getLength","d","distanceTo","updateForce"],"sourceRoot":"","sources":["../../../src/layout/forceAtlas2/quadTree.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}