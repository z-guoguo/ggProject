{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar _dec, _class, _temp;\n/**\n * render w/ regl\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md\n */\n\n\nimport { gl } from '@antv/g-webgpu-core';\nimport { injectable } from 'inversify';\nimport regl from 'regl';\nimport ReglAttribute from './ReglAttribute';\nimport ReglBuffer from './ReglBuffer';\nimport ReglComputeModel from './ReglComputeModel';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglModel from './ReglModel';\nimport ReglTexture2D from './ReglTexture2D';\n/**\n * regl renderer\n */\n\nexport var WebGLEngine = (_dec = injectable(), _dec(_class = (_temp = /*#__PURE__*/function () {\n  function WebGLEngine() {\n    var _this = this;\n\n    _classCallCheck(this, WebGLEngine);\n\n    this.supportWebGPU = false;\n    this.useWGSL = false;\n    this.$canvas = void 0;\n    this.gl = void 0;\n    this.inited = void 0;\n\n    this.createModel = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!options.uniforms) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                _context2.next = 3;\n                return Promise.all(Object.keys(options.uniforms).map( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n                    var texture;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(options.uniforms[name] && options.uniforms[name].load !== undefined)) {\n                              _context.next = 5;\n                              break;\n                            }\n\n                            _context.next = 3;\n                            return options.uniforms[name].load();\n\n                          case 3:\n                            texture = _context.sent; // @ts-ignore\n\n                            options.uniforms[name] = texture;\n\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }()));\n\n              case 3:\n                return _context2.abrupt(\"return\", new ReglModel(_this.gl, options));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.createAttribute = function (options) {\n      return new ReglAttribute(_this.gl, options);\n    };\n\n    this.createBuffer = function (options) {\n      return new ReglBuffer(_this.gl, options);\n    };\n\n    this.createElements = function (options) {\n      return new ReglElements(_this.gl, options);\n    };\n\n    this.createTexture2D = function (options) {\n      return new ReglTexture2D(_this.gl, options);\n    };\n\n    this.createFramebuffer = function (options) {\n      return new ReglFramebuffer(_this.gl, options);\n    };\n\n    this.useFramebuffer = function (framebuffer, drawCommands) {\n      _this.gl({\n        framebuffer: framebuffer ? framebuffer.get() : null\n      })(drawCommands);\n    };\n\n    this.createComputeModel = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(context) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", new ReglComputeModel(_this.gl, context));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.clear = function (options) {\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clear-the-draw-buffer\n      var color = options.color,\n          depth = options.depth,\n          stencil = options.stencil,\n          _options$framebuffer = options.framebuffer,\n          framebuffer = _options$framebuffer === void 0 ? null : _options$framebuffer;\n      var reglClearOptions = {\n        color: color,\n        depth: depth,\n        stencil: stencil\n      };\n      reglClearOptions.framebuffer = framebuffer === null ? framebuffer : framebuffer.get();\n\n      _this.gl.clear(reglClearOptions);\n    };\n\n    this.setScissor = function (scissor) {\n      if (_this.gl && _this.gl._gl) {\n        // https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/scissor\n        if (scissor.enable && scissor.box) {\n          // console.log(scissor.box);\n          _this.gl._gl.enable(gl.SCISSOR_TEST);\n\n          _this.gl._gl.scissor(scissor.box.x, scissor.box.y, scissor.box.width, scissor.box.height);\n        } else {\n          _this.gl._gl.disable(gl.SCISSOR_TEST);\n        }\n\n        _this.gl._refresh();\n      }\n    };\n\n    this.viewport = function (_ref4) {\n      var x = _ref4.x,\n          y = _ref4.y,\n          width = _ref4.width,\n          height = _ref4.height;\n\n      if (_this.gl && _this.gl._gl) {\n        // use WebGL context directly\n        // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#unsafe-escape-hatch\n        _this.gl._gl.viewport(x, y, width, height);\n\n        _this.gl._refresh();\n      }\n    };\n\n    this.readPixels = function (options) {\n      var framebuffer = options.framebuffer,\n          x = options.x,\n          y = options.y,\n          width = options.width,\n          height = options.height;\n      var readPixelsOptions = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n\n      if (framebuffer) {\n        readPixelsOptions.framebuffer = framebuffer.get();\n      }\n\n      return _this.gl.read(readPixelsOptions);\n    };\n\n    this.getCanvas = function () {\n      return _this.$canvas;\n    };\n\n    this.getGLContext = function () {\n      return _this.gl._gl;\n    };\n\n    this.destroy = function () {\n      if (_this.gl) {\n        // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clean-up\n        _this.gl.destroy();\n\n        _this.inited = false;\n      }\n    };\n  }\n\n  _createClass(WebGLEngine, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(cfg) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.inited) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                this.$canvas = cfg.canvas; // tslint:disable-next-line:typedef\n\n                _context4.next = 5;\n                return new Promise(function (resolve, reject) {\n                  regl({\n                    canvas: cfg.canvas,\n                    attributes: {\n                      alpha: true,\n                      // use TAA instead of MSAA\n                      // @see https://www.khronos.org/registry/webgl/specs/1.0/#5.2.1\n                      antialias: cfg.antialias,\n                      premultipliedAlpha: true // preserveDrawingBuffer: false,\n\n                    },\n                    pixelRatio: 1,\n                    // TODO: use extensions\n                    extensions: ['OES_element_index_uint', 'OES_texture_float', 'OES_standard_derivatives', // wireframe\n                    'angle_instanced_arrays' // VSM shadow map\n                    ],\n                    optionalExtensions: ['EXT_texture_filter_anisotropic', 'EXT_blend_minmax', 'WEBGL_depth_texture'],\n                    profile: true,\n                    onDone: function onDone(err, r) {\n                      if (err || !r) {\n                        reject(err);\n                      } // @ts-ignore\n\n\n                      resolve(r);\n                    }\n                  });\n                });\n\n              case 5:\n                this.gl = _context4.sent;\n                this.inited = true;\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function init(_x4) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"isFloatSupported\",\n    value: function isFloatSupported() {\n      // @see https://github.com/antvis/GWebGPUEngine/issues/26\n      // @ts-ignore\n      return this.gl.limits.readFloat;\n    }\n  }, {\n    key: \"beginFrame\",\n    value: function beginFrame() {//\n    }\n  }, {\n    key: \"endFrame\",\n    value: function endFrame() {//\n    }\n  }]);\n\n  return WebGLEngine;\n}(), _temp)) || _class);","map":{"version":3,"mappings":"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","names":["gl","injectable","regl","ReglAttribute","ReglBuffer","ReglComputeModel","ReglElements","ReglFramebuffer","ReglModel","ReglTexture2D","WebGLEngine","_classCallCheck","supportWebGPU","useWGSL","$canvas","inited","createModel","options","uniforms","_context2","Promise","all","Object","keys","map","name","load","undefined","_context","texture","_this","createAttribute","createBuffer","createElements","createTexture2D","createFramebuffer","useFramebuffer","framebuffer","drawCommands","get","createComputeModel","context","clear","color","depth","stencil","reglClearOptions","setScissor","scissor","_gl","enable","box","SCISSOR_TEST","x","y","width","height","disable","_refresh","viewport","readPixels","readPixelsOptions","read","getCanvas","getGLContext","destroy","_createClass","key","value","cfg","_context4","canvas","resolve","reject","attributes","alpha","antialias","premultipliedAlpha","pixelRatio","extensions","optionalExtensions","profile","onDone","err","r","limits","readFloat"],"sources":["../../src/webgl/index.ts"],"sourcesContent":["/**\n * render w/ regl\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md\n */\nimport {\n  gl,\n  GLSLContext,\n  IAttribute,\n  IAttributeInitializationOptions,\n  IBuffer,\n  IBufferInitializationOptions,\n  IClearOptions,\n  IComputeModel,\n  IElements,\n  IElementsInitializationOptions,\n  IFramebuffer,\n  IFramebufferInitializationOptions,\n  IModel,\n  IModelInitializationOptions,\n  IReadPixelsOptions,\n  IRendererConfig,\n  IRendererService,\n  ITexture2D,\n  ITexture2DInitializationOptions,\n} from '@antv/g-webgpu-core';\nimport { injectable } from 'inversify';\nimport regl from 'regl';\nimport ReglAttribute from './ReglAttribute';\nimport ReglBuffer from './ReglBuffer';\nimport ReglComputeModel from './ReglComputeModel';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglModel from './ReglModel';\nimport ReglTexture2D from './ReglTexture2D';\n\n/**\n * regl renderer\n */\n@injectable()\nexport class WebGLEngine implements IRendererService {\n  public supportWebGPU = false;\n  public useWGSL = false;\n  private $canvas: HTMLCanvasElement;\n  private gl: regl.Regl;\n  private inited: boolean;\n\n  public async init(cfg: IRendererConfig): Promise<void> {\n    if (this.inited) {\n      return;\n    }\n    this.$canvas = cfg.canvas!;\n    // tslint:disable-next-line:typedef\n    this.gl = await new Promise((resolve, reject) => {\n      regl({\n        canvas: cfg.canvas,\n        attributes: {\n          alpha: true,\n          // use TAA instead of MSAA\n          // @see https://www.khronos.org/registry/webgl/specs/1.0/#5.2.1\n          antialias: cfg.antialias,\n          premultipliedAlpha: true,\n          // preserveDrawingBuffer: false,\n        },\n        pixelRatio: 1,\n        // TODO: use extensions\n        extensions: [\n          'OES_element_index_uint',\n          'OES_texture_float',\n          'OES_standard_derivatives', // wireframe\n          'angle_instanced_arrays', // VSM shadow map\n        ],\n        optionalExtensions: [\n          'EXT_texture_filter_anisotropic',\n          'EXT_blend_minmax',\n          'WEBGL_depth_texture',\n        ],\n        profile: true,\n        onDone: (err: Error | null, r?: regl.Regl | undefined): void => {\n          if (err || !r) {\n            reject(err);\n          }\n          // @ts-ignore\n          resolve(r);\n        },\n      });\n    });\n    this.inited = true;\n  }\n\n  public isFloatSupported() {\n    // @see https://github.com/antvis/GWebGPUEngine/issues/26\n    // @ts-ignore\n    return this.gl.limits.readFloat;\n  }\n\n  public createModel = async (\n    options: IModelInitializationOptions,\n  ): Promise<IModel> => {\n    if (options.uniforms) {\n      await Promise.all(\n        Object.keys(options.uniforms).map(async (name) => {\n          // @ts-ignore\n          if (options.uniforms![name] && options.uniforms![name].load !== undefined) {\n            // @ts-ignore\n            const texture = await options.uniforms![name].load();\n            // @ts-ignore\n            options.uniforms[name] = texture;\n          }\n        }),\n      );\n    }\n    return new ReglModel(this.gl, options);\n  };\n\n  public createAttribute = (\n    options: IAttributeInitializationOptions,\n  ): IAttribute => new ReglAttribute(this.gl, options);\n\n  public createBuffer = (options: IBufferInitializationOptions): IBuffer =>\n    new ReglBuffer(this.gl, options);\n\n  public createElements = (\n    options: IElementsInitializationOptions,\n  ): IElements => new ReglElements(this.gl, options);\n\n  public createTexture2D = (\n    options: ITexture2DInitializationOptions,\n  ): ITexture2D => new ReglTexture2D(this.gl, options);\n\n  public createFramebuffer = (options: IFramebufferInitializationOptions) =>\n    new ReglFramebuffer(this.gl, options);\n\n  public useFramebuffer = (\n    framebuffer: IFramebuffer | null,\n    drawCommands: () => void,\n  ) => {\n    this.gl({\n      framebuffer: framebuffer ? (framebuffer as ReglFramebuffer).get() : null,\n    })(drawCommands);\n  };\n\n  public createComputeModel = async (\n    context: GLSLContext,\n  ): Promise<IComputeModel> => {\n    return new ReglComputeModel(this.gl, context);\n  };\n\n  public clear = (options: IClearOptions) => {\n    // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clear-the-draw-buffer\n    const { color, depth, stencil, framebuffer = null } = options;\n    const reglClearOptions: regl.ClearOptions = {\n      color,\n      depth,\n      stencil,\n    };\n\n    reglClearOptions.framebuffer =\n      framebuffer === null\n        ? framebuffer\n        : (framebuffer as ReglFramebuffer).get();\n\n    this.gl.clear(reglClearOptions);\n  };\n\n  public setScissor = (\n    scissor: Partial<{\n      enable: boolean;\n      box: { x: number; y: number; width: number; height: number };\n    }>,\n  ) => {\n    if (this.gl && this.gl._gl) {\n      // https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/scissor\n      if (scissor.enable && scissor.box) {\n        // console.log(scissor.box);\n        this.gl._gl.enable(gl.SCISSOR_TEST);\n        this.gl._gl.scissor(\n          scissor.box.x,\n          scissor.box.y,\n          scissor.box.width,\n          scissor.box.height,\n        );\n      } else {\n        this.gl._gl.disable(gl.SCISSOR_TEST);\n      }\n      this.gl._refresh();\n    }\n  };\n\n  public viewport = ({\n    x,\n    y,\n    width,\n    height,\n  }: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  }) => {\n    if (this.gl && this.gl._gl) {\n      // use WebGL context directly\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#unsafe-escape-hatch\n      this.gl._gl.viewport(x, y, width, height);\n      this.gl._refresh();\n    }\n  };\n\n  public readPixels = (options: IReadPixelsOptions) => {\n    const { framebuffer, x, y, width, height } = options;\n    const readPixelsOptions: regl.ReadOptions = {\n      x,\n      y,\n      width,\n      height,\n    };\n    if (framebuffer) {\n      readPixelsOptions.framebuffer = (framebuffer as ReglFramebuffer).get();\n    }\n    return this.gl.read(readPixelsOptions);\n  };\n\n  public getCanvas = () => {\n    return this.$canvas;\n  };\n\n  public getGLContext = () => {\n    return this.gl._gl;\n  };\n\n  public destroy = () => {\n    if (this.gl) {\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clean-up\n      this.gl.destroy();\n      this.inited = false;\n    }\n  };\n\n  public beginFrame() {\n    //\n  }\n\n  public endFrame() {\n    //\n  }\n}\n"]},"metadata":{},"sourceType":"module"}