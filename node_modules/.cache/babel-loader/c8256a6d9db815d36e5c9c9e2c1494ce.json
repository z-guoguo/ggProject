{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.includes.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { ObjectExt, FunctionExt } from '../util';\nimport { Basecoat } from '../common';\nimport { Model } from '../model/model';\nexport class HistoryManager extends Basecoat {\n  constructor(options) {\n    super();\n    this.batchCommands = null;\n    this.batchLevel = 0;\n    this.lastBatchIndex = -1;\n    this.freezed = false;\n    this.handlers = [];\n    this.graph = options.graph;\n    this.model = options.graph.model;\n    this.options = Util.getOptions(options);\n    this.validator = new HistoryManager.Validator({\n      history: this,\n      cancelInvalid: this.options.cancelInvalid\n    });\n    this.clean();\n    this.startListening();\n  }\n\n  get disabled() {\n    return this.options.enabled !== true;\n  }\n\n  enable() {\n    if (this.disabled) {\n      this.options.enabled = true;\n    }\n  }\n\n  disable() {\n    if (!this.disabled) {\n      this.options.enabled = false;\n    }\n  }\n\n  undo(options = {}) {\n    if (!this.disabled) {\n      const cmd = this.undoStack.pop();\n\n      if (cmd) {\n        this.revertCommand(cmd, options);\n        this.redoStack.push(cmd);\n        this.notify('undo', cmd, options);\n      }\n    }\n\n    return this;\n  }\n\n  redo(options = {}) {\n    if (!this.disabled) {\n      const cmd = this.redoStack.pop();\n\n      if (cmd) {\n        this.applyCommand(cmd, options);\n        this.undoStack.push(cmd);\n        this.notify('redo', cmd, options);\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Same as `undo()` but does not store the undo-ed command to the\n   * `redoStack`. Canceled command therefore cannot be redo-ed.\n   */\n\n\n  cancel(options = {}) {\n    if (!this.disabled) {\n      const cmd = this.undoStack.pop();\n\n      if (cmd) {\n        this.revertCommand(cmd, options);\n        this.redoStack = [];\n        this.notify('cancel', cmd, options);\n      }\n    }\n\n    return this;\n  }\n\n  clean(options = {}) {\n    this.undoStack = [];\n    this.redoStack = [];\n    this.notify('clean', null, options);\n    return this;\n  }\n\n  canUndo() {\n    return !this.disabled && this.undoStack.length > 0;\n  }\n\n  canRedo() {\n    return !this.disabled && this.redoStack.length > 0;\n  }\n\n  validate(events, ...callbacks) {\n    this.validator.validate(events, ...callbacks);\n    return this;\n  }\n\n  dispose() {\n    this.validator.dispose();\n    this.clean();\n    this.stopListening();\n  }\n\n  startListening() {\n    this.model.on('batch:start', this.initBatchCommand, this);\n    this.model.on('batch:stop', this.storeBatchCommand, this);\n\n    if (this.options.eventNames) {\n      this.options.eventNames.forEach((name, index) => {\n        this.handlers[index] = this.addCommand.bind(this, name);\n        this.model.on(name, this.handlers[index]);\n      });\n    }\n\n    this.validator.on('invalid', args => this.trigger('invalid', args));\n  }\n\n  stopListening() {\n    this.model.off('batch:start', this.initBatchCommand, this);\n    this.model.off('batch:stop', this.storeBatchCommand, this);\n\n    if (this.options.eventNames) {\n      this.options.eventNames.forEach((name, index) => {\n        this.model.off(name, this.handlers[index]);\n      });\n      this.handlers.length = 0;\n    }\n\n    this.validator.off('invalid');\n  }\n\n  createCommand(options) {\n    return {\n      batch: options ? options.batch : false,\n      data: {}\n    };\n  }\n\n  revertCommand(cmd, options) {\n    this.freezed = true;\n    const cmds = Array.isArray(cmd) ? Util.sortBatchCommands(cmd) : [cmd];\n\n    for (let i = cmds.length - 1; i >= 0; i -= 1) {\n      const cmd = cmds[i];\n      const localOptions = Object.assign(Object.assign({}, options), ObjectExt.pick(cmd.options, this.options.revertOptionsList || []));\n      this.executeCommand(cmd, true, localOptions);\n    }\n\n    this.freezed = false;\n  }\n\n  applyCommand(cmd, options) {\n    this.freezed = true;\n    const cmds = Array.isArray(cmd) ? Util.sortBatchCommands(cmd) : [cmd];\n\n    for (let i = 0; i < cmds.length; i += 1) {\n      const cmd = cmds[i];\n      const localOptions = Object.assign(Object.assign({}, options), ObjectExt.pick(cmd.options, this.options.applyOptionsList || []));\n      this.executeCommand(cmd, false, localOptions);\n    }\n\n    this.freezed = false;\n  }\n\n  executeCommand(cmd, revert, options) {\n    const model = this.model; // const cell = cmd.modelChange ? model : model.getCell(cmd.data.id!)\n\n    const cell = model.getCell(cmd.data.id);\n    const event = cmd.event;\n\n    if (Util.isAddEvent(event) && revert || Util.isRemoveEvent(event) && !revert) {\n      cell.remove(options);\n    } else if (Util.isAddEvent(event) && !revert || Util.isRemoveEvent(event) && revert) {\n      const data = cmd.data;\n\n      if (data.node) {\n        model.addNode(data.props, options);\n      } else if (data.edge) {\n        model.addEdge(data.props, options);\n      }\n    } else if (Util.isChangeEvent(event)) {\n      const data = cmd.data;\n      const key = data.key;\n\n      if (key) {\n        const value = revert ? data.prev[key] : data.next[key];\n        cell.prop(key, value, options);\n      }\n    } else {\n      const executeCommand = this.options.executeCommand;\n\n      if (executeCommand) {\n        FunctionExt.call(executeCommand, this, cmd, revert, options);\n      }\n    }\n  }\n\n  addCommand(event, args) {\n    if (this.freezed || this.disabled) {\n      return;\n    }\n\n    const eventArgs = args;\n    const options = eventArgs.options || {};\n\n    if (options.dryrun) {\n      return;\n    }\n\n    if (Util.isAddEvent(event) && this.options.ignoreAdd || Util.isRemoveEvent(event) && this.options.ignoreRemove || Util.isChangeEvent(event) && this.options.ignoreChange) {\n      return;\n    } // before\n    // ------\n\n\n    const before = this.options.beforeAddCommand;\n\n    if (before != null && FunctionExt.call(before, this, event, args) === false) {\n      return;\n    }\n\n    if (event === 'cell:change:*') {\n      // eslint-disable-next-line\n      event = `cell:change:${eventArgs.key}`;\n    }\n\n    const cell = eventArgs.cell;\n    const isModelChange = Model.isModel(cell);\n    let cmd;\n\n    if (this.batchCommands) {\n      // In most cases we are working with same object, doing\n      // same action etc. translate an object piece by piece.\n      cmd = this.batchCommands[Math.max(this.lastBatchIndex, 0)]; // Check if we are start working with new object or performing different\n      // action with it. Note, that command is uninitialized when lastCmdIndex\n      // equals -1. In that case we are done, command we were looking for is\n      // already set\n\n      const diffId = isModelChange && !cmd.modelChange || cmd.data.id !== cell.id;\n      const diffName = cmd.event !== event;\n\n      if (this.lastBatchIndex >= 0 && (diffId || diffName)) {\n        // Trying to find command first, which was performing same\n        // action with the object as we are doing now with cell.\n        const index = this.batchCommands.findIndex(cmd => (isModelChange && cmd.modelChange || cmd.data.id === cell.id) && cmd.event === event);\n\n        if (index < 0 || Util.isAddEvent(event) || Util.isRemoveEvent(event)) {\n          cmd = this.createCommand({\n            batch: true\n          });\n        } else {\n          cmd = this.batchCommands[index];\n          this.batchCommands.splice(index, 1);\n        }\n\n        this.batchCommands.push(cmd);\n        this.lastBatchIndex = this.batchCommands.length - 1;\n      }\n    } else {\n      cmd = this.createCommand({\n        batch: false\n      });\n    } // add & remove\n    // ------------\n\n\n    if (Util.isAddEvent(event) || Util.isRemoveEvent(event)) {\n      const data = cmd.data;\n      cmd.event = event;\n      cmd.options = options;\n      data.id = cell.id;\n      data.props = ObjectExt.cloneDeep(cell.toJSON());\n\n      if (cell.isEdge()) {\n        data.edge = true;\n      } else if (cell.isNode()) {\n        data.node = true;\n      }\n\n      return this.push(cmd, options);\n    } // change:*\n    // --------\n\n\n    if (Util.isChangeEvent(event)) {\n      const key = args.key;\n      const data = cmd.data;\n\n      if (!cmd.batch || !cmd.event) {\n        // Do this only once. Set previous data and action (also\n        // serves as a flag so that we don't repeat this branche).\n        cmd.event = event;\n        cmd.options = options;\n        data.key = key;\n\n        if (data.prev == null) {\n          data.prev = {};\n        }\n\n        data.prev[key] = ObjectExt.clone(cell.previous(key));\n\n        if (isModelChange) {\n          cmd.modelChange = true;\n        } else {\n          data.id = cell.id;\n        }\n      }\n\n      if (data.next == null) {\n        data.next = {};\n      }\n\n      data.next[key] = ObjectExt.clone(cell.prop(key));\n      return this.push(cmd, options);\n    } // others\n    // ------\n\n\n    const afterAddCommand = this.options.afterAddCommand;\n\n    if (afterAddCommand) {\n      FunctionExt.call(afterAddCommand, this, event, args, cmd);\n    }\n\n    this.push(cmd, options);\n  }\n  /**\n   * Gather multiple changes into a single command. These commands could\n   * be reverted with single `undo()` call. From the moment the function\n   * is called every change made on model is not stored into the undoStack.\n   * Changes are temporarily kept until `storeBatchCommand()` is called.\n   */\n  // eslint-disable-next-line\n\n\n  initBatchCommand(options) {\n    if (this.freezed) {\n      return;\n    }\n\n    if (this.batchCommands) {\n      this.batchLevel += 1;\n    } else {\n      this.batchCommands = [this.createCommand({\n        batch: true\n      })];\n      this.batchLevel = 0;\n      this.lastBatchIndex = -1;\n    }\n  }\n  /**\n   * Store changes temporarily kept in the undoStack. You have to call this\n   * function as many times as `initBatchCommand()` been called.\n   */\n\n\n  storeBatchCommand(options) {\n    if (this.freezed) {\n      return;\n    }\n\n    if (this.batchCommands && this.batchLevel <= 0) {\n      const cmds = this.filterBatchCommand(this.batchCommands);\n\n      if (cmds.length > 0) {\n        this.redoStack = [];\n        this.undoStack.push(cmds);\n        this.notify('add', cmds, options);\n      }\n\n      this.batchCommands = null;\n      this.lastBatchIndex = -1;\n      this.batchLevel = 0;\n    } else if (this.batchCommands && this.batchLevel > 0) {\n      this.batchLevel -= 1;\n    }\n  }\n\n  filterBatchCommand(batchCommands) {\n    let cmds = batchCommands.slice();\n    const result = [];\n\n    while (cmds.length > 0) {\n      const cmd = cmds.shift();\n      const evt = cmd.event;\n      const id = cmd.data.id;\n\n      if (evt != null && (id != null || cmd.modelChange)) {\n        if (Util.isAddEvent(evt)) {\n          const index = cmds.findIndex(c => Util.isRemoveEvent(c.event) && c.data.id === id);\n\n          if (index >= 0) {\n            cmds = cmds.filter((c, i) => index < i || c.data.id !== id);\n            continue;\n          }\n        } else if (Util.isRemoveEvent(evt)) {\n          const index = cmds.findIndex(c => Util.isAddEvent(c.event) && c.data.id === id);\n\n          if (index >= 0) {\n            cmds.splice(index, 1);\n            continue;\n          }\n        } else if (Util.isChangeEvent(evt)) {\n          const data = cmd.data;\n\n          if (ObjectExt.isEqual(data.prev, data.next)) {\n            continue;\n          }\n        } else {// pass\n        }\n\n        result.push(cmd);\n      }\n    }\n\n    return result;\n  }\n\n  notify(event, cmd, options) {\n    const cmds = cmd == null ? null : Array.isArray(cmd) ? cmd : [cmd];\n    this.emit(event, {\n      cmds,\n      options\n    });\n    this.emit('change', {\n      cmds,\n      options\n    });\n  }\n\n  push(cmd, options) {\n    this.redoStack = [];\n\n    if (cmd.batch) {\n      this.lastBatchIndex = Math.max(this.lastBatchIndex, 0);\n      this.emit('batch', {\n        cmd,\n        options\n      });\n    } else {\n      this.undoStack.push(cmd);\n      this.notify('add', cmd, options);\n    }\n  }\n\n}\n\n__decorate([Basecoat.dispose()], HistoryManager.prototype, \"dispose\", null);\n\n(function (HistoryManager) {\n  /**\n   * Runs a set of callbacks to determine if a command is valid. This is\n   * useful for checking if a certain action in your application does\n   * lead to an invalid state of the graph.\n   */\n  class Validator extends Basecoat {\n    constructor(options) {\n      super();\n      this.map = {};\n      this.command = options.history;\n      this.cancelInvalid = options.cancelInvalid !== false;\n      this.command.on('add', this.onCommandAdded, this);\n    }\n\n    onCommandAdded({\n      cmds\n    }) {\n      return Array.isArray(cmds) ? cmds.every(cmd => this.isValidCommand(cmd)) : this.isValidCommand(cmds);\n    }\n\n    isValidCommand(cmd) {\n      if (cmd.options && cmd.options.validation === false) {\n        return true;\n      }\n\n      const callbacks = cmd.event && this.map[cmd.event] || [];\n      let handoverErr = null;\n      callbacks.forEach(routes => {\n        let i = 0;\n\n        const rollup = err => {\n          const fn = routes[i];\n          i += 1;\n\n          try {\n            if (fn) {\n              fn(err, cmd, rollup);\n            } else {\n              handoverErr = err;\n              return;\n            }\n          } catch (err) {\n            rollup(err);\n          }\n        };\n\n        rollup(handoverErr);\n      });\n\n      if (handoverErr) {\n        if (this.cancelInvalid) {\n          this.command.cancel();\n        }\n\n        this.emit('invalid', {\n          err: handoverErr\n        });\n        return false;\n      }\n\n      return true;\n    }\n\n    validate(events, ...callbacks) {\n      const evts = Array.isArray(events) ? events : events.split(/\\s+/);\n      callbacks.forEach(callback => {\n        if (typeof callback !== 'function') {\n          throw new Error(`${evts.join(' ')} requires callback functions.`);\n        }\n      });\n      evts.forEach(event => {\n        if (this.map[event] == null) {\n          this.map[event] = [];\n        }\n\n        this.map[event].push(callbacks);\n      });\n      return this;\n    }\n\n    dispose() {\n      this.command.off('add', this.onCommandAdded, this);\n    }\n\n  }\n\n  __decorate([Basecoat.dispose()], Validator.prototype, \"dispose\", null);\n\n  HistoryManager.Validator = Validator;\n})(HistoryManager || (HistoryManager = {}));\n\nvar Util;\n\n(function (Util) {\n  function isAddEvent(event) {\n    return event === 'cell:added';\n  }\n\n  Util.isAddEvent = isAddEvent;\n\n  function isRemoveEvent(event) {\n    return event === 'cell:removed';\n  }\n\n  Util.isRemoveEvent = isRemoveEvent;\n\n  function isChangeEvent(event) {\n    return event != null && event.startsWith('cell:change:');\n  }\n\n  Util.isChangeEvent = isChangeEvent;\n\n  function getOptions(options) {\n    const {\n      graph\n    } = options,\n          others = __rest(options, [\"graph\"]);\n\n    const reservedNames = ['cell:added', 'cell:removed', 'cell:change:*'];\n    const batchEvents = ['batch:start', 'batch:stop'];\n    const eventNames = options.eventNames ? options.eventNames.filter(event => !(Util.isChangeEvent(event) || reservedNames.includes(event) || batchEvents.includes(event))) : reservedNames;\n    return Object.assign(Object.assign({}, others), {\n      eventNames,\n      applyOptionsList: options.applyOptionsList || ['propertyPath'],\n      revertOptionsList: options.revertOptionsList || ['propertyPath']\n    });\n  }\n\n  Util.getOptions = getOptions;\n\n  function sortBatchCommands(cmds) {\n    const results = [];\n\n    for (let i = 0, ii = cmds.length; i < ii; i += 1) {\n      const cmd = cmds[i];\n      let index = null;\n\n      if (Util.isAddEvent(cmd.event)) {\n        const id = cmd.data.id;\n\n        for (let j = 0; j < i; j += 1) {\n          if (cmds[j].data.id === id) {\n            index = j;\n            break;\n          }\n        }\n      }\n\n      if (index !== null) {\n        results.splice(index, 0, cmd);\n      } else {\n        results.push(cmd);\n      }\n    }\n\n    return results;\n  }\n\n  Util.sortBatchCommands = sortBatchCommands;\n})(Util || (Util = {}));","map":{"version":3,"mappings":"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","names":["ObjectExt","FunctionExt","Basecoat","Model","HistoryManager","constructor","options","graph","model","Util","getOptions","validator","Validator","history","cancelInvalid","clean","startListening","disabled","enabled","enable","disable","undo","cmd","undoStack","pop","revertCommand","redoStack","push","notify","redo","applyCommand","cancel","canUndo","length","canRedo","validate","events","callbacks","dispose","stopListening","on","initBatchCommand","storeBatchCommand","eventNames","forEach","name","index","handlers","addCommand","bind","args","trigger","off","createCommand","batch","data","freezed","cmds","Array","isArray","sortBatchCommands","i","localOptions","pick","revertOptionsList","executeCommand","applyOptionsList","revert","cell","getCell","id","event","isAddEvent","isRemoveEvent","remove","node","addNode","props","edge","addEdge","isChangeEvent","key","value","prev","next","prop","call","eventArgs","dryrun","ignoreAdd","ignoreRemove","ignoreChange","before","beforeAddCommand","isModelChange","isModel","batchCommands","Math","max","lastBatchIndex","diffId","modelChange","diffName","findIndex","splice","cloneDeep","toJSON","isEdge","isNode","clone","previous","afterAddCommand","batchLevel","filterBatchCommand","slice","result","shift","evt","c","filter","isEqual","emit","__decorate","map","command","onCommandAdded","every","isValidCommand","validation","handoverErr","routes","rollup","err","fn","evts","split","callback","Error","join","startsWith","others","reservedNames","batchEvents","includes","results","ii","j"],"sourceRoot":"","sources":["../../src/graph/history.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}