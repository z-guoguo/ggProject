{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { mat4, quat, vec3 } from 'gl-matrix';\nimport { Component } from '../../ComponentManager';\nexport var TransformComponent = /*#__PURE__*/function (_Component) {\n  _inherits(TransformComponent, _Component);\n\n  var _super = _createSuper(TransformComponent);\n  /**\n   * local space RTS\n   */\n\n  /**\n   * XMFLOAT4X4._41\n   * @see https://docs.microsoft.com/en-us/windows/win32/api/directxmath/nf-directxmath-xmfloat4x4-xmfloat4x4(constfloat)#remarks\n   */\n\n  /**\n   * world space RTS\n   */\n  // 高阶函数，利用闭包重复利用临时变量\n  // @see playcanvas graph node\n\n  /**\n   * @see https://docs.microsoft.com/en-us/windows/win32/api/directxmath/nf-directxmath-xmquaternionrotationrollpitchyaw\n   */\n\n  /**\n   * @see https://xiaoiver.github.io/coding/2018/12/28/Camera-%E8%AE%BE%E8%AE%A1-%E4%B8%80.html\n   */\n\n  /**\n   * TODO: 支持以下两种：\n   * * translate(x, y, z)\n   * * translate(vec3(x, y, z))\n   */\n\n  /**\n   * @see https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline\n   */\n  // public catmullRom = (() => {\n  //   const aS = vec3.create();\n  //   const aR = quat.create();\n  //   const aT = vec3.create();\n  //   const bS = vec3.create();\n  //   const bR = quat.create();\n  //   const bT = vec3.create();\n  //   const cS = vec3.create();\n  //   const cR = quat.create();\n  //   const cT = vec3.create();\n  //   const dS = vec3.create();\n  //   const dR = quat.create();\n  //   const dT = vec3.create();\n  //   const R = quat.create();\n  //   return (\n  //     a: TransformComponent,\n  //     b: TransformComponent,\n  //     c: TransformComponent,\n  //     d: TransformComponent,\n  //     t: number,\n  //   ) => {\n  //     this.setDirty();\n  //     mat4.getScaling(aS, a.worldTransform);\n  //     mat4.getTranslation(aT, a.worldTransform);\n  //     mat4.getRotation(aR, a.worldTransform);\n  //     mat4.getScaling(bS, b.worldTransform);\n  //     mat4.getTranslation(bT, b.worldTransform);\n  //     mat4.getRotation(bR, b.worldTransform);\n  //     mat4.getScaling(cS, c.worldTransform);\n  //     mat4.getTranslation(cT, c.worldTransform);\n  //     mat4.getRotation(cR, c.worldTransform);\n  //     mat4.getScaling(dS, d.worldTransform);\n  //     mat4.getTranslation(dT, d.worldTransform);\n  //     mat4.getRotation(dR, d.worldTransform);\n  //     vec3.catmullRom(this.localPosition, aT, bT, cT, dT, t);\n  //     vec3.catmullRom(R, aR, bR, cR, dR, t);\n  //     quat.normalize(this.localRotation, R);\n  //     vec3.catmullRom(this.localScale, aS, bS, cS, dS, t);\n  //   };\n  // })();\n\n\n  function TransformComponent(data) {\n    var _this;\n\n    _classCallCheck(this, TransformComponent);\n\n    _this = _super.call(this, data);\n    _this.dirtyFlag = void 0;\n    _this.localDirtyFlag = void 0;\n    _this.parent = null;\n    _this.localPosition = vec3.fromValues(0, 0, 0);\n    _this.localRotation = quat.fromValues(0, 0, 0, 1);\n    _this.localScale = vec3.fromValues(1, 1, 1);\n    _this.localTransform = mat4.create();\n    _this.position = vec3.fromValues(0, 0, 0);\n    _this.rotation = quat.fromValues(0, 0, 0, 1);\n    _this.scaling = vec3.fromValues(1, 1, 1);\n    _this.worldTransform = mat4.create();\n\n    _this.matrixTransform = function () {\n      var transformed = mat4.create();\n      return function (mat) {\n        mat4.multiply(transformed, _this.getLocalTransform(), mat);\n        mat4.getScaling(_this.localScale, transformed);\n        mat4.getTranslation(_this.localPosition, transformed);\n        mat4.getRotation(_this.localRotation, transformed);\n      };\n    }();\n\n    _this.rotateRollPitchYaw = function () {\n      var quatX = quat.create();\n      var quatY = quat.create();\n      var quatZ = quat.create();\n      return function (x, y, z) {\n        _this.setDirty();\n\n        quat.fromEuler(quatX, x, 0, 0);\n        quat.fromEuler(quatY, 0, y, 0);\n        quat.fromEuler(quatZ, 0, 0, z);\n        quat.multiply(_this.localRotation, quatX, _this.localRotation);\n        quat.multiply(_this.localRotation, _this.localRotation, quatY);\n        quat.multiply(_this.localRotation, quatZ, _this.localRotation);\n        quat.normalize(_this.localRotation, _this.localRotation);\n      };\n    }();\n\n    _this.lerp = function () {\n      var aS = vec3.create();\n      var aR = quat.create();\n      var aT = vec3.create();\n      var bS = vec3.create();\n      var bR = quat.create();\n      var bT = vec3.create();\n      return function (a, b, t) {\n        _this.setDirty();\n\n        mat4.getScaling(aS, a.worldTransform);\n        mat4.getTranslation(aT, a.worldTransform);\n        mat4.getRotation(aR, a.worldTransform);\n        mat4.getScaling(bS, b.worldTransform);\n        mat4.getTranslation(bT, b.worldTransform);\n        mat4.getRotation(bR, b.worldTransform);\n        vec3.lerp(_this.localScale, aS, bS, t);\n        quat.slerp(_this.localRotation, aR, bR, t);\n        vec3.lerp(_this.localPosition, aT, bT, t);\n      };\n    }();\n\n    _this.translate = function () {\n      var tr = vec3.create();\n      return function (translation) {\n        vec3.add(tr, _this.getPosition(), translation);\n\n        _this.setPosition(tr);\n\n        _this.setDirty(true);\n\n        return _assertThisInitialized(_this);\n      };\n    }();\n\n    _this.translateLocal = function () {\n      return function (translation) {\n        vec3.transformQuat(translation, translation, _this.localRotation);\n        vec3.add(_this.localPosition, _this.localPosition, translation);\n\n        _this.setLocalDirty(true);\n\n        return _assertThisInitialized(_this);\n      };\n    }();\n\n    _this.setPosition = function () {\n      var parentInvertMatrix = mat4.create();\n      return function (position) {\n        _this.position = position;\n\n        _this.setLocalDirty(true);\n\n        if (_this.parent === null) {\n          vec3.copy(_this.localPosition, position);\n        } else {\n          mat4.copy(parentInvertMatrix, _this.parent.worldTransform);\n          mat4.invert(parentInvertMatrix, parentInvertMatrix);\n          vec3.transformMat4(_this.localPosition, position, parentInvertMatrix);\n        }\n\n        return _assertThisInitialized(_this);\n      };\n    }();\n\n    _this.rotate = function () {\n      var parentInvertRotation = quat.create();\n      return function (quaternion) {\n        if (_this.parent === null) {\n          quat.multiply(_this.localRotation, _this.localRotation, quaternion);\n          quat.normalize(_this.localRotation, _this.localRotation);\n        } else {\n          var rot = _this.getRotation();\n\n          var parentRot = _this.parent.getRotation();\n\n          quat.copy(parentInvertRotation, parentRot);\n          quat.invert(parentInvertRotation, parentInvertRotation);\n          quat.multiply(parentInvertRotation, parentInvertRotation, quaternion);\n          quat.multiply(_this.localRotation, quaternion, rot);\n          quat.normalize(_this.localRotation, _this.localRotation);\n        }\n\n        _this.setLocalDirty();\n\n        return _assertThisInitialized(_this);\n      };\n    }();\n\n    _this.rotateLocal = function () {\n      return function (quaternion) {\n        quat.multiply(_this.localRotation, _this.localRotation, quaternion);\n        quat.normalize(_this.localRotation, _this.localRotation);\n\n        _this.setLocalDirty(true);\n\n        return _assertThisInitialized(_this);\n      };\n    }();\n\n    _this.setRotation = function () {\n      var invParentRot = quat.create();\n      return function (rotation) {\n        if (_this.parent === null) {\n          quat.copy(_this.localRotation, rotation);\n        } else {\n          quat.copy(invParentRot, _this.parent.getRotation());\n          quat.invert(invParentRot, invParentRot);\n          quat.copy(_this.localRotation, invParentRot);\n          quat.mul(_this.localRotation, _this.localRotation, rotation);\n        }\n\n        _this.setLocalDirty(true);\n\n        return _assertThisInitialized(_this);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(TransformComponent, [{\n    key: \"setLocalPosition\",\n    value: function setLocalPosition(position) {\n      vec3.copy(this.localPosition, position);\n      this.setLocalDirty(true);\n    }\n  }, {\n    key: \"setLocalScale\",\n    value: function setLocalScale(scale) {\n      vec3.copy(this.localScale, scale);\n      this.setLocalDirty(true);\n    }\n  }, {\n    key: \"setLocalRotation\",\n    value: function setLocalRotation(rotation) {\n      quat.copy(this.localRotation, rotation);\n      this.setLocalDirty(true);\n      return this;\n    }\n  }, {\n    key: \"isDirty\",\n    value: function isDirty() {\n      return this.dirtyFlag;\n    }\n  }, {\n    key: \"setDirty\",\n    value: function setDirty() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (value) {\n        this.dirtyFlag |= TransformComponent.DIRTY;\n      } else {\n        this.dirtyFlag &= ~TransformComponent.DIRTY;\n      }\n    }\n  }, {\n    key: \"isLocalDirty\",\n    value: function isLocalDirty() {\n      return this.localDirtyFlag;\n    }\n  }, {\n    key: \"setLocalDirty\",\n    value: function setLocalDirty() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (value) {\n        this.localDirtyFlag |= TransformComponent.DIRTY;\n        this.setDirty(true);\n      } else {\n        this.localDirtyFlag &= ~TransformComponent.DIRTY;\n      }\n    }\n  }, {\n    key: \"updateTransform\",\n    value: function updateTransform() {\n      if (this.isLocalDirty()) {\n        this.getLocalTransform();\n      }\n\n      if (this.isDirty()) {\n        if (this.parent === null) {\n          mat4.copy(this.worldTransform, this.getLocalTransform());\n          this.setDirty(false);\n        }\n      }\n    }\n  }, {\n    key: \"updateTransformWithParent\",\n    value: function updateTransformWithParent(parent) {\n      mat4.multiply(this.worldTransform, parent.worldTransform, this.getLocalTransform());\n    }\n  }, {\n    key: \"applyTransform\",\n    value: function applyTransform() {\n      this.setDirty();\n      mat4.getScaling(this.localScale, this.worldTransform);\n      mat4.getTranslation(this.localPosition, this.worldTransform);\n      mat4.getRotation(this.localRotation, this.worldTransform);\n    }\n  }, {\n    key: \"clearTransform\",\n    value: function clearTransform() {\n      this.setDirty();\n      this.localPosition = vec3.fromValues(0, 0, 0);\n      this.localRotation = quat.fromValues(0, 0, 0, 1);\n      this.localScale = vec3.fromValues(1, 1, 1);\n    }\n  }, {\n    key: \"scaleLocal\",\n    value: function scaleLocal(scaling) {\n      this.setLocalDirty();\n      vec3.multiply(this.localScale, this.localScale, scaling);\n      return this;\n    }\n  }, {\n    key: \"getLocalPosition\",\n    value: function getLocalPosition() {\n      return this.localPosition;\n    }\n  }, {\n    key: \"getLocalRotation\",\n    value: function getLocalRotation() {\n      return this.localRotation;\n    }\n  }, {\n    key: \"getLocalScale\",\n    value: function getLocalScale() {\n      return this.localScale;\n    }\n  }, {\n    key: \"getLocalTransform\",\n    value: function getLocalTransform() {\n      if (this.localDirtyFlag) {\n        mat4.fromRotationTranslationScale(this.localTransform, this.localRotation, this.localPosition, this.localScale);\n        this.setLocalDirty(false);\n      }\n\n      return this.localTransform;\n    }\n  }, {\n    key: \"getWorldTransform\",\n    value: function getWorldTransform() {\n      if (!this.isLocalDirty() && !this.isDirty()) {\n        return this.worldTransform;\n      }\n\n      if (this.parent) {\n        this.parent.getWorldTransform();\n      }\n\n      this.updateTransform();\n      return this.worldTransform;\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      mat4.getTranslation(this.position, this.worldTransform);\n      return this.position;\n    }\n  }, {\n    key: \"getRotation\",\n    value: function getRotation() {\n      mat4.getRotation(this.rotation, this.worldTransform);\n      return this.rotation;\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale() {\n      mat4.getScaling(this.scaling, this.worldTransform);\n      return this.scaling;\n    }\n  }]);\n\n  return TransformComponent;\n}(Component);\nTransformComponent.DIRTY = 1 << 0;","map":{"version":3,"mappings":"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","names":["mat4","quat","vec3","Component","TransformComponent","_inherits","data","_classCallCheck","_this","dirtyFlag","localDirtyFlag","parent","localPosition","fromValues","localRotation","localScale","localTransform","create","position","rotation","scaling","worldTransform","matrixTransform","transformed","mat","multiply","getLocalTransform","getScaling","getTranslation","getRotation","rotateRollPitchYaw","quatX","quatY","quatZ","x","y","z","setDirty","fromEuler","normalize","lerp","aS","aR","aT","bS","bR","bT","a","b","t","slerp","translate","tr","translation","add","getPosition","setPosition","translateLocal","transformQuat","setLocalDirty","parentInvertMatrix","copy","invert","transformMat4","rotate","parentInvertRotation","quaternion","rot","parentRot","rotateLocal","setRotation","invParentRot","mul","_createClass","key","value","scale","DIRTY","isLocalDirty","isDirty","fromRotationTranslationScale","getWorldTransform","updateTransform"],"sources":["../../../src/components/scenegraph/TransformComponent.ts"],"sourcesContent":["import { mat4, quat, vec3, vec4 } from 'gl-matrix';\nimport { Component, NonFunctionProperties } from '../../ComponentManager';\n\nexport class TransformComponent extends Component<TransformComponent> {\n  public static DIRTY = 1 << 0;\n\n  public dirtyFlag: number;\n\n  public localDirtyFlag: number;\n\n  public parent: TransformComponent | null = null;\n\n  /**\n   * local space RTS\n   */\n\n  /**\n   * XMFLOAT4X4._41\n   * @see https://docs.microsoft.com/en-us/windows/win32/api/directxmath/nf-directxmath-xmfloat4x4-xmfloat4x4(constfloat)#remarks\n   */\n  public localPosition = vec3.fromValues(0, 0, 0);\n  public localRotation = quat.fromValues(0, 0, 0, 1);\n  public localScale = vec3.fromValues(1, 1, 1);\n  public localTransform = mat4.create();\n\n  /**\n   * world space RTS\n   */\n\n  public position = vec3.fromValues(0, 0, 0);\n  public rotation = quat.fromValues(0, 0, 0, 1);\n  public scaling = vec3.fromValues(1, 1, 1);\n  public worldTransform = mat4.create();\n\n  // 高阶函数，利用闭包重复利用临时变量\n  // @see playcanvas graph node\n  public matrixTransform = (() => {\n    const transformed = mat4.create();\n    return (mat: mat4) => {\n      mat4.multiply(transformed, this.getLocalTransform(), mat);\n      mat4.getScaling(this.localScale, transformed);\n      mat4.getTranslation(this.localPosition, transformed);\n      mat4.getRotation(this.localRotation, transformed);\n    };\n  })();\n\n  /**\n   * @see https://docs.microsoft.com/en-us/windows/win32/api/directxmath/nf-directxmath-xmquaternionrotationrollpitchyaw\n   */\n  public rotateRollPitchYaw = (() => {\n    const quatX = quat.create();\n    const quatY = quat.create();\n    const quatZ = quat.create();\n    return (x: number, y: number, z: number) => {\n      this.setDirty();\n\n      quat.fromEuler(quatX, x, 0, 0);\n      quat.fromEuler(quatY, 0, y, 0);\n      quat.fromEuler(quatZ, 0, 0, z);\n\n      quat.multiply(this.localRotation, quatX, this.localRotation);\n      quat.multiply(this.localRotation, this.localRotation, quatY);\n      quat.multiply(this.localRotation, quatZ, this.localRotation);\n      quat.normalize(this.localRotation, this.localRotation);\n    };\n  })();\n\n  /**\n   * @see https://xiaoiver.github.io/coding/2018/12/28/Camera-%E8%AE%BE%E8%AE%A1-%E4%B8%80.html\n   */\n  public lerp = (() => {\n    const aS = vec3.create();\n    const aR = quat.create();\n    const aT = vec3.create();\n    const bS = vec3.create();\n    const bR = quat.create();\n    const bT = vec3.create();\n    return (a: TransformComponent, b: TransformComponent, t: number) => {\n      this.setDirty();\n\n      mat4.getScaling(aS, a.worldTransform);\n      mat4.getTranslation(aT, a.worldTransform);\n      mat4.getRotation(aR, a.worldTransform);\n      mat4.getScaling(bS, b.worldTransform);\n      mat4.getTranslation(bT, b.worldTransform);\n      mat4.getRotation(bR, b.worldTransform);\n\n      vec3.lerp(this.localScale, aS, bS, t);\n      quat.slerp(this.localRotation, aR, bR, t);\n      vec3.lerp(this.localPosition, aT, bT, t);\n    };\n  })();\n\n  /**\n   * TODO: 支持以下两种：\n   * * translate(x, y, z)\n   * * translate(vec3(x, y, z))\n   */\n  public translate = (() => {\n    const tr = vec3.create();\n\n    return (translation: vec3) => {\n      vec3.add(tr, this.getPosition(), translation);\n      this.setPosition(tr);\n\n      this.setDirty(true);\n\n      return this;\n    };\n  })();\n\n  public translateLocal = (() => {\n    return (translation: vec3) => {\n      vec3.transformQuat(translation, translation, this.localRotation);\n      vec3.add(this.localPosition, this.localPosition, translation);\n\n      this.setLocalDirty(true);\n\n      return this;\n    };\n  })();\n\n  public setPosition = (() => {\n    const parentInvertMatrix = mat4.create();\n\n    return (position: vec3) => {\n      this.position = position;\n\n      this.setLocalDirty(true);\n\n      if (this.parent === null) {\n        vec3.copy(this.localPosition, position);\n      } else {\n        mat4.copy(parentInvertMatrix, this.parent.worldTransform);\n        mat4.invert(parentInvertMatrix, parentInvertMatrix);\n        vec3.transformMat4(this.localPosition, position, parentInvertMatrix);\n      }\n      return this;\n    };\n  })();\n\n  public rotate = (() => {\n    const parentInvertRotation = quat.create();\n    return (quaternion: quat) => {\n      if (this.parent === null) {\n        quat.multiply(this.localRotation, this.localRotation, quaternion);\n        quat.normalize(this.localRotation, this.localRotation);\n      } else {\n        const rot = this.getRotation();\n        const parentRot = this.parent.getRotation();\n\n        quat.copy(parentInvertRotation, parentRot);\n        quat.invert(parentInvertRotation, parentInvertRotation);\n        quat.multiply(parentInvertRotation, parentInvertRotation, quaternion);\n        quat.multiply(this.localRotation, quaternion, rot);\n        quat.normalize(this.localRotation, this.localRotation);\n      }\n      this.setLocalDirty();\n      return this;\n    };\n  })();\n\n  public rotateLocal = (() => {\n    return (quaternion: quat) => {\n      quat.multiply(this.localRotation, this.localRotation, quaternion);\n      quat.normalize(this.localRotation, this.localRotation);\n      this.setLocalDirty(true);\n      return this;\n    };\n  })();\n\n  public setRotation = (() => {\n    const invParentRot = quat.create();\n\n    return (rotation: quat) => {\n      if (this.parent === null) {\n        quat.copy(this.localRotation, rotation);\n      } else {\n        quat.copy(invParentRot, this.parent.getRotation());\n        quat.invert(invParentRot, invParentRot);\n        quat.copy(this.localRotation, invParentRot);\n        quat.mul(this.localRotation, this.localRotation, rotation);\n      }\n\n      this.setLocalDirty(true);\n      return this;\n    };\n  })();\n\n  /**\n   * @see https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline\n   */\n  // public catmullRom = (() => {\n  //   const aS = vec3.create();\n  //   const aR = quat.create();\n  //   const aT = vec3.create();\n  //   const bS = vec3.create();\n  //   const bR = quat.create();\n  //   const bT = vec3.create();\n  //   const cS = vec3.create();\n  //   const cR = quat.create();\n  //   const cT = vec3.create();\n  //   const dS = vec3.create();\n  //   const dR = quat.create();\n  //   const dT = vec3.create();\n  //   const R = quat.create();\n  //   return (\n  //     a: TransformComponent,\n  //     b: TransformComponent,\n  //     c: TransformComponent,\n  //     d: TransformComponent,\n  //     t: number,\n  //   ) => {\n  //     this.setDirty();\n  //     mat4.getScaling(aS, a.worldTransform);\n  //     mat4.getTranslation(aT, a.worldTransform);\n  //     mat4.getRotation(aR, a.worldTransform);\n  //     mat4.getScaling(bS, b.worldTransform);\n  //     mat4.getTranslation(bT, b.worldTransform);\n  //     mat4.getRotation(bR, b.worldTransform);\n  //     mat4.getScaling(cS, c.worldTransform);\n  //     mat4.getTranslation(cT, c.worldTransform);\n  //     mat4.getRotation(cR, c.worldTransform);\n  //     mat4.getScaling(dS, d.worldTransform);\n  //     mat4.getTranslation(dT, d.worldTransform);\n  //     mat4.getRotation(dR, d.worldTransform);\n\n  //     vec3.catmullRom(this.localPosition, aT, bT, cT, dT, t);\n  //     vec3.catmullRom(R, aR, bR, cR, dR, t);\n  //     quat.normalize(this.localRotation, R);\n  //     vec3.catmullRom(this.localScale, aS, bS, cS, dS, t);\n  //   };\n  // })();\n\n  constructor(data?: Partial<NonFunctionProperties<TransformComponent>>) {\n    super(data);\n  }\n\n  public setLocalPosition(position: vec3) {\n    vec3.copy(this.localPosition, position);\n    this.setLocalDirty(true);\n  }\n\n  public setLocalScale(scale: vec3) {\n    vec3.copy(this.localScale, scale);\n    this.setLocalDirty(true);\n  }\n\n  public setLocalRotation(rotation: quat) {\n    quat.copy(this.localRotation, rotation);\n\n    this.setLocalDirty(true);\n    return this;\n  }\n\n  public isDirty() {\n    return this.dirtyFlag;\n  }\n\n  public setDirty(value = true) {\n    if (value) {\n      this.dirtyFlag |= TransformComponent.DIRTY;\n    } else {\n      this.dirtyFlag &= ~TransformComponent.DIRTY;\n    }\n  }\n\n  public isLocalDirty() {\n    return this.localDirtyFlag;\n  }\n\n  public setLocalDirty(value = true) {\n    if (value) {\n      this.localDirtyFlag |= TransformComponent.DIRTY;\n      this.setDirty(true);\n    } else {\n      this.localDirtyFlag &= ~TransformComponent.DIRTY;\n    }\n  }\n\n  public updateTransform() {\n    if (this.isLocalDirty()) {\n      this.getLocalTransform();\n    }\n    if (this.isDirty()) {\n      if (this.parent === null) {\n        mat4.copy(this.worldTransform, this.getLocalTransform());\n        this.setDirty(false);\n      }\n    }\n  }\n\n  public updateTransformWithParent(parent: TransformComponent) {\n    mat4.multiply(\n      this.worldTransform,\n      parent.worldTransform,\n      this.getLocalTransform(),\n    );\n  }\n\n  public applyTransform() {\n    this.setDirty();\n\n    mat4.getScaling(this.localScale, this.worldTransform);\n    mat4.getTranslation(this.localPosition, this.worldTransform);\n    mat4.getRotation(this.localRotation, this.worldTransform);\n  }\n\n  public clearTransform() {\n    this.setDirty();\n    this.localPosition = vec3.fromValues(0, 0, 0);\n    this.localRotation = quat.fromValues(0, 0, 0, 1);\n    this.localScale = vec3.fromValues(1, 1, 1);\n  }\n\n  public scaleLocal(scaling: vec3) {\n    this.setLocalDirty();\n    vec3.multiply(this.localScale, this.localScale, scaling);\n    return this;\n  }\n\n  public getLocalPosition() {\n    return this.localPosition;\n  }\n\n  public getLocalRotation() {\n    return this.localRotation;\n  }\n\n  public getLocalScale() {\n    return this.localScale;\n  }\n\n  public getLocalTransform() {\n    if (this.localDirtyFlag) {\n      mat4.fromRotationTranslationScale(\n        this.localTransform,\n        this.localRotation,\n        this.localPosition,\n        this.localScale,\n      );\n      this.setLocalDirty(false);\n    }\n    return this.localTransform;\n  }\n\n  public getWorldTransform() {\n    if (!this.isLocalDirty() && !this.isDirty()) {\n      return this.worldTransform;\n    }\n\n    if (this.parent) {\n      this.parent.getWorldTransform();\n    }\n\n    this.updateTransform();\n\n    return this.worldTransform;\n  }\n\n  public getPosition() {\n    mat4.getTranslation(this.position, this.worldTransform);\n    return this.position;\n  }\n\n  public getRotation() {\n    mat4.getRotation(this.rotation, this.worldTransform);\n    return this.rotation;\n  }\n\n  public getScale() {\n    mat4.getScaling(this.scaling, this.worldTransform);\n    return this.scaling;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}