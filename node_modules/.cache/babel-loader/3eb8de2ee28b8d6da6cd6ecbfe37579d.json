{"ast":null,"code":"import { Line } from '../line';\nimport { Point } from '../point';\nimport { Segment } from './segment';\nexport class LineTo extends Segment {\n  constructor(x, y) {\n    super();\n\n    if (Line.isLine(x)) {\n      this.endPoint = x.end.clone().round(2);\n    } else {\n      this.endPoint = Point.create(x, y).round(2);\n    }\n  }\n\n  get type() {\n    return 'L';\n  }\n\n  get line() {\n    return new Line(this.start, this.end);\n  }\n\n  bbox() {\n    return this.line.bbox();\n  }\n\n  closestPoint(p) {\n    return this.line.closestPoint(p);\n  }\n\n  closestPointLength(p) {\n    return this.line.closestPointLength(p);\n  }\n\n  closestPointNormalizedLength(p) {\n    return this.line.closestPointNormalizedLength(p);\n  }\n\n  closestPointTangent(p) {\n    return this.line.closestPointTangent(p);\n  }\n\n  length() {\n    return this.line.length();\n  }\n\n  divideAt(ratio) {\n    const divided = this.line.divideAt(ratio);\n    return [new LineTo(divided[0]), new LineTo(divided[1])];\n  }\n\n  divideAtLength(length) {\n    const divided = this.line.divideAtLength(length);\n    return [new LineTo(divided[0]), new LineTo(divided[1])];\n  }\n\n  getSubdivisions() {\n    return [];\n  }\n\n  pointAt(ratio) {\n    return this.line.pointAt(ratio);\n  }\n\n  pointAtLength(length) {\n    return this.line.pointAtLength(length);\n  }\n\n  tangentAt(ratio) {\n    return this.line.tangentAt(ratio);\n  }\n\n  tangentAtLength(length) {\n    return this.line.tangentAtLength(length);\n  }\n\n  isDifferentiable() {\n    if (this.previousSegment == null) {\n      return false;\n    }\n\n    return !this.start.equals(this.end);\n  }\n\n  clone() {\n    return new LineTo(this.end);\n  }\n\n  scale(sx, sy, origin) {\n    this.end.scale(sx, sy, origin);\n    return this;\n  }\n\n  rotate(angle, origin) {\n    this.end.rotate(angle, origin);\n    return this;\n  }\n\n  translate(tx, ty) {\n    if (typeof tx === 'number') {\n      this.end.translate(tx, ty);\n    } else {\n      this.end.translate(tx);\n    }\n\n    return this;\n  }\n\n  equals(s) {\n    return this.type === s.type && this.start.equals(s.start) && this.end.equals(s.end);\n  }\n\n  toJSON() {\n    return {\n      type: this.type,\n      start: this.start.toJSON(),\n      end: this.end.toJSON()\n    };\n  }\n\n  serialize() {\n    const end = this.end;\n    return `${this.type} ${end.x} ${end.y}`;\n  }\n\n}\n\n(function (LineTo) {\n  function create(...args) {\n    const len = args.length;\n    const arg0 = args[0]; // line provided\n\n    if (Line.isLine(arg0)) {\n      return new LineTo(arg0);\n    } // points provided\n\n\n    if (Point.isPointLike(arg0)) {\n      if (len === 1) {\n        return new LineTo(arg0);\n      } // poly-line segment\n\n\n      return args.map(arg => new LineTo(arg));\n    } // coordinates provided\n\n\n    if (len === 2) {\n      return new LineTo(+args[0], +args[1]);\n    } // poly-line segment\n\n\n    const segments = [];\n\n    for (let i = 0; i < len; i += 2) {\n      const x = +args[i];\n      const y = +args[i + 1];\n      segments.push(new LineTo(x, y));\n    }\n\n    return segments;\n  }\n\n  LineTo.create = create;\n})(LineTo || (LineTo = {}));","map":{"version":3,"mappings":"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","names":["Line","Point","Segment","LineTo","constructor","x","y","isLine","endPoint","end","clone","round","create","type","line","start","bbox","closestPoint","p","closestPointLength","closestPointNormalizedLength","closestPointTangent","length","divideAt","ratio","divided","divideAtLength","getSubdivisions","pointAt","pointAtLength","tangentAt","tangentAtLength","isDifferentiable","previousSegment","equals","scale","sx","sy","origin","rotate","angle","translate","tx","ty","s","toJSON","serialize","args","len","arg0","isPointLike","map","arg","segments","i","push"],"sourceRoot":"","sources":["../../../src/geometry/path/lineto.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}