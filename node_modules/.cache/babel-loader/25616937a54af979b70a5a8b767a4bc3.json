{"ast":null,"code":"import { isEqual, isNumber, isFunction } from '@antv/util';\nimport * as d3Timer from 'd3-timer';\nimport { interpolate, interpolateArray } from 'd3-interpolate'; // 目前整体动画只需要数值和数组的差值计算\n\nimport { getEasing } from './register';\nimport * as PathUtil from '../util/path';\nimport { isColorProp, isGradientColor } from '../util/color';\nvar IDENTITY_MATRIX = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n/**\n * 使用 ratio 进行插值计算来更新属性\n * @param {IElement}  shape    元素\n * @param {Animation} animation 动画\n * @param {number}    ratio    比例\n * @return {boolean}  动画是否执行完成\n */\n\nfunction _update(shape, animation, ratio) {\n  var cProps = {}; // 此刻属性\n\n  var fromAttrs = animation.fromAttrs,\n      toAttrs = animation.toAttrs;\n\n  if (shape.destroyed) {\n    return;\n  }\n\n  var interf; //  差值函数\n\n  for (var k in toAttrs) {\n    if (!isEqual(fromAttrs[k], toAttrs[k])) {\n      if (k === 'path') {\n        var toPath = toAttrs[k];\n        var fromPath = fromAttrs[k];\n\n        if (toPath.length > fromPath.length) {\n          toPath = PathUtil.parsePathString(toAttrs[k]); // 终点状态\n\n          fromPath = PathUtil.parsePathString(fromAttrs[k]); // 起始状态\n\n          fromPath = PathUtil.fillPathByDiff(fromPath, toPath);\n          fromPath = PathUtil.formatPath(fromPath, toPath);\n          animation.fromAttrs.path = fromPath;\n          animation.toAttrs.path = toPath;\n        } else if (!animation.pathFormatted) {\n          toPath = PathUtil.parsePathString(toAttrs[k]);\n          fromPath = PathUtil.parsePathString(fromAttrs[k]);\n          fromPath = PathUtil.formatPath(fromPath, toPath);\n          animation.fromAttrs.path = fromPath;\n          animation.toAttrs.path = toPath;\n          animation.pathFormatted = true;\n        }\n\n        cProps[k] = [];\n\n        for (var i = 0; i < toPath.length; i++) {\n          var toPathPoint = toPath[i];\n          var fromPathPoint = fromPath[i];\n          var cPathPoint = [];\n\n          for (var j = 0; j < toPathPoint.length; j++) {\n            if (isNumber(toPathPoint[j]) && fromPathPoint && isNumber(fromPathPoint[j])) {\n              interf = interpolate(fromPathPoint[j], toPathPoint[j]);\n              cPathPoint.push(interf(ratio));\n            } else {\n              cPathPoint.push(toPathPoint[j]);\n            }\n          }\n\n          cProps[k].push(cPathPoint);\n        }\n      } else if (k === 'matrix') {\n        /*\n         对矩阵进行插值时，需要保证矩阵不为空，为空则使用单位矩阵\n         TODO: 二维和三维场景下单位矩阵不同，之后 WebGL 版需要做进一步处理\n         */\n        var matrixFn = interpolateArray(fromAttrs[k] || IDENTITY_MATRIX, toAttrs[k] || IDENTITY_MATRIX);\n        var currentMatrix = matrixFn(ratio);\n        cProps[k] = currentMatrix;\n      } else if (isColorProp(k) && isGradientColor(toAttrs[k])) {\n        cProps[k] = toAttrs[k];\n      } else if (!isFunction(toAttrs[k])) {\n        // 非函数类型的值才能做插值\n        interf = interpolate(fromAttrs[k], toAttrs[k]);\n        cProps[k] = interf(ratio);\n      }\n    }\n  }\n\n  shape.attr(cProps);\n}\n/**\n * 根据自定义帧动画函数 onFrame 来更新属性\n * @param {IElement}  shape    元素\n * @param {Animation} animation 动画\n * @param {number}    elapsed  动画执行时间(毫秒)\n * @return {boolean}  动画是否执行完成\n */\n\n\nfunction update(shape, animation, elapsed) {\n  var startTime = animation.startTime,\n      delay = animation.delay; // 如果还没有开始执行或暂停，先不更新\n\n  if (elapsed < startTime + delay || animation._paused) {\n    return false;\n  }\n\n  var ratio;\n  var duration = animation.duration;\n  var easing = animation.easing;\n  var easeFn = getEasing(easing); // 已执行时间\n\n  elapsed = elapsed - startTime - animation.delay;\n\n  if (animation.repeat) {\n    // 如果动画重复执行，则 elapsed > duration，计算 ratio 时需取模\n    ratio = elapsed % duration / duration;\n    ratio = easeFn(ratio);\n  } else {\n    ratio = elapsed / duration;\n\n    if (ratio < 1) {\n      // 动画未执行完\n      ratio = easeFn(ratio);\n    } else {\n      // 动画已执行完\n      if (animation.onFrame) {\n        shape.attr(animation.onFrame(1));\n      } else {\n        shape.attr(animation.toAttrs);\n      }\n\n      return true;\n    }\n  }\n\n  if (animation.onFrame) {\n    var attrs = animation.onFrame(ratio);\n    shape.attr(attrs);\n  } else {\n    _update(shape, animation, ratio);\n  }\n\n  return false;\n}\n\nvar Timeline =\n/** @class */\nfunction () {\n  /**\n   * 时间轴构造函数，依赖于画布\n   * @param {}\n   */\n  function Timeline(canvas) {\n    /**\n     * 执行动画的元素列表\n     * @type {IElement[]}\n     */\n    this.animators = [];\n    /**\n     * 当前时间\n     * @type {number}\n     */\n\n    this.current = 0;\n    /**\n     * 定时器\n     * @type {d3Timer.Timer}\n     */\n\n    this.timer = null;\n    this.canvas = canvas;\n  }\n  /**\n   * 初始化定时器\n   */\n\n\n  Timeline.prototype.initTimer = function () {\n    var _this = this;\n\n    var isFinished = false;\n    var shape;\n    var animations;\n    var animation;\n    this.timer = d3Timer.timer(function (elapsed) {\n      _this.current = elapsed;\n\n      if (_this.animators.length > 0) {\n        for (var i = _this.animators.length - 1; i >= 0; i--) {\n          shape = _this.animators[i];\n\n          if (shape.destroyed) {\n            // 如果已经被销毁，直接移出队列\n            _this.removeAnimator(i);\n\n            continue;\n          }\n\n          if (!shape.isAnimatePaused()) {\n            animations = shape.get('animations');\n\n            for (var j = animations.length - 1; j >= 0; j--) {\n              animation = animations[j];\n              isFinished = update(shape, animation, elapsed);\n\n              if (isFinished) {\n                animations.splice(j, 1);\n                isFinished = false;\n\n                if (animation.callback) {\n                  animation.callback();\n                }\n              }\n            }\n          }\n\n          if (animations.length === 0) {\n            _this.removeAnimator(i);\n          }\n        }\n\n        var autoDraw = _this.canvas.get('autoDraw'); // 非自动渲染模式下，手动调用 canvas.draw() 重新渲染\n\n\n        if (!autoDraw) {\n          _this.canvas.draw();\n        }\n      }\n    });\n  };\n  /**\n   * 增加动画元素\n   */\n\n\n  Timeline.prototype.addAnimator = function (shape) {\n    this.animators.push(shape);\n  };\n  /**\n   * 移除动画元素\n   */\n\n\n  Timeline.prototype.removeAnimator = function (index) {\n    this.animators.splice(index, 1);\n  };\n  /**\n   * 是否有动画在执行\n   */\n\n\n  Timeline.prototype.isAnimating = function () {\n    return !!this.animators.length;\n  };\n  /**\n   * 停止定时器\n   */\n\n\n  Timeline.prototype.stop = function () {\n    if (this.timer) {\n      this.timer.stop();\n    }\n  };\n  /**\n   * 停止时间轴上所有元素的动画，并置空动画元素列表\n   * @param {boolean} toEnd 是否到动画的最终状态，用来透传给动画元素的 stopAnimate 方法\n   */\n\n\n  Timeline.prototype.stopAllAnimations = function (toEnd) {\n    if (toEnd === void 0) {\n      toEnd = true;\n    }\n\n    this.animators.forEach(function (animator) {\n      animator.stopAnimate(toEnd);\n    });\n    this.animators = [];\n    this.canvas.draw();\n  };\n  /**\n   * 获取当前时间\n   */\n\n\n  Timeline.prototype.getTime = function () {\n    return this.current;\n  };\n\n  return Timeline;\n}();\n\nexport default Timeline;","map":{"version":3,"mappings":"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","names":["isEqual","isNumber","isFunction","d3Timer","interpolate","interpolateArray","getEasing","PathUtil","isColorProp","isGradientColor","IDENTITY_MATRIX","_update","shape","animation","ratio","cProps","toAttrs","destroyed","interf","k","fromAttrs","toPath","fromPath","length","parsePathString","fillPathByDiff","formatPath","path","pathFormatted","i","toPathPoint","fromPathPoint","cPathPoint","j","push","matrixFn","currentMatrix","attr","update","elapsed","delay","startTime","_paused","duration","easing","easeFn","repeat","onFrame","attrs","canvas","Timeline","isFinished","animations","timer","_this","current","animators","removeAnimator","isAnimatePaused","get","splice","callback","autoDraw","draw","index","stop","toEnd","forEach","animator","stopAnimate"],"sourceRoot":"","sources":["../../src/animate/timeline.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}