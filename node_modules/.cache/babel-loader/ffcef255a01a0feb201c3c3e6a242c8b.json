{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { Path } from '../../geometry';\nimport * as Dom from '../dom/core';\nexport class Vector {\n  constructor(elem, attrs, children) {\n    if (!elem) {\n      throw new TypeError('Invalid element to create vector');\n    }\n\n    let node;\n\n    if (Vector.isVector(elem)) {\n      node = elem.node;\n    } else if (typeof elem === 'string') {\n      if (elem.toLowerCase() === 'svg') {\n        node = Dom.createSvgDocument();\n      } else if (elem[0] === '<') {\n        const doc = Dom.createSvgDocument(elem); // only import the first child\n\n        node = document.importNode(doc.firstChild, true);\n      } else {\n        node = document.createElementNS(Dom.ns.svg, elem);\n      }\n    } else {\n      node = elem;\n    }\n\n    this.node = node;\n\n    if (attrs) {\n      this.setAttributes(attrs);\n    }\n\n    if (children) {\n      this.append(children);\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return Vector.toStringTag;\n  }\n\n  get type() {\n    return this.node.nodeName;\n  }\n\n  get id() {\n    return this.node.id;\n  }\n\n  set id(id) {\n    this.node.id = id;\n  }\n\n  transform(matrix, options) {\n    if (matrix == null) {\n      return Dom.transform(this.node);\n    }\n\n    Dom.transform(this.node, matrix, options);\n    return this;\n  }\n\n  translate(tx, ty = 0, options = {}) {\n    if (tx == null) {\n      return Dom.translate(this.node);\n    }\n\n    Dom.translate(this.node, tx, ty, options);\n    return this;\n  }\n\n  rotate(angle, cx, cy, options = {}) {\n    if (angle == null) {\n      return Dom.rotate(this.node);\n    }\n\n    Dom.rotate(this.node, angle, cx, cy, options);\n    return this;\n  }\n\n  scale(sx, sy) {\n    if (sx == null) {\n      return Dom.scale(this.node);\n    }\n\n    Dom.scale(this.node, sx, sy);\n    return this;\n  }\n  /**\n   * Returns an SVGMatrix that specifies the transformation necessary\n   * to convert this coordinate system into `target` coordinate system.\n   */\n\n\n  getTransformToElement(target) {\n    const ref = Vector.toNode(target);\n    return Dom.getTransformToElement(this.node, ref);\n  }\n\n  removeAttribute(name) {\n    Dom.removeAttribute(this.node, name);\n    return this;\n  }\n\n  getAttribute(name) {\n    return Dom.getAttribute(this.node, name);\n  }\n\n  setAttribute(name, value) {\n    Dom.setAttribute(this.node, name, value);\n    return this;\n  }\n\n  setAttributes(attrs) {\n    Dom.setAttributes(this.node, attrs);\n    return this;\n  }\n\n  attr(name, value) {\n    if (name == null) {\n      return Dom.attr(this.node);\n    }\n\n    if (typeof name === 'string' && value === undefined) {\n      return Dom.attr(this.node, name);\n    }\n\n    if (typeof name === 'object') {\n      Dom.attr(this.node, name);\n    } else {\n      Dom.attr(this.node, name, value);\n    }\n\n    return this;\n  }\n\n  svg() {\n    return this.node instanceof SVGSVGElement ? this : Vector.create(this.node.ownerSVGElement);\n  }\n\n  defs() {\n    const context = this.svg() || this;\n    const defsNode = context.node.getElementsByTagName('defs')[0];\n\n    if (defsNode) {\n      return Vector.create(defsNode);\n    }\n\n    return Vector.create('defs').appendTo(context);\n  }\n\n  text(content, options = {}) {\n    Dom.text(this.node, content, options);\n    return this;\n  }\n\n  tagName() {\n    return Dom.tagName(this.node);\n  }\n\n  clone() {\n    return Vector.create(this.node.cloneNode(true));\n  }\n\n  remove() {\n    Dom.remove(this.node);\n    return this;\n  }\n\n  empty() {\n    Dom.empty(this.node);\n    return this;\n  }\n\n  append(elems) {\n    Dom.append(this.node, Vector.toNodes(elems));\n    return this;\n  }\n\n  appendTo(target) {\n    Dom.appendTo(this.node, Vector.isVector(target) ? target.node : target);\n    return this;\n  }\n\n  prepend(elems) {\n    Dom.prepend(this.node, Vector.toNodes(elems));\n    return this;\n  }\n\n  before(elems) {\n    Dom.before(this.node, Vector.toNodes(elems));\n    return this;\n  }\n\n  replace(elem) {\n    if (this.node.parentNode) {\n      this.node.parentNode.replaceChild(Vector.toNode(elem), this.node);\n    }\n\n    return Vector.create(elem);\n  }\n\n  first() {\n    return this.node.firstChild ? Vector.create(this.node.firstChild) : null;\n  }\n\n  last() {\n    return this.node.lastChild ? Vector.create(this.node.lastChild) : null;\n  }\n\n  get(index) {\n    const child = this.node.childNodes[index];\n    return child ? Vector.create(child) : null;\n  }\n\n  indexOf(elem) {\n    const children = Array.prototype.slice.call(this.node.childNodes);\n    return children.indexOf(Vector.toNode(elem));\n  }\n\n  find(selector) {\n    const vels = [];\n    const nodes = Dom.find(this.node, selector);\n\n    if (nodes) {\n      for (let i = 0, ii = nodes.length; i < ii; i += 1) {\n        vels.push(Vector.create(nodes[i]));\n      }\n    }\n\n    return vels;\n  }\n\n  findOne(selector) {\n    const found = Dom.findOne(this.node, selector);\n    return found ? Vector.create(found) : null;\n  }\n\n  findParentByClass(className, terminator) {\n    const node = Dom.findParentByClass(this.node, className, terminator);\n    return node ? Vector.create(node) : null;\n  }\n\n  matches(selector) {\n    const node = this.node;\n    const matches = this.node.matches;\n    const matcher = node.matches || node.matchesSelector || node.msMatchesSelector || node.mozMatchesSelector || node.webkitMatchesSelector || node.oMatchesSelector || null;\n    return matcher && matcher.call(node, selector);\n  }\n\n  contains(child) {\n    return Dom.contains(this.node, Vector.isVector(child) ? child.node : child);\n  }\n\n  wrap(node) {\n    const vel = Vector.create(node);\n    const parentNode = this.node.parentNode;\n\n    if (parentNode != null) {\n      parentNode.insertBefore(vel.node, this.node);\n    }\n\n    return vel.append(this);\n  }\n\n  parent(type) {\n    let parent = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    // check for parent\n\n    if (parent.node.parentNode == null) {\n      return null;\n    } // get parent element\n\n\n    parent = Vector.create(parent.node.parentNode);\n\n    if (type == null) {\n      return parent;\n    } // loop trough ancestors if type is given\n\n\n    do {\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) {\n        return parent;\n      }\n    } while (parent = Vector.create(parent.node.parentNode));\n\n    return parent;\n  }\n\n  children() {\n    const children = this.node.childNodes;\n    const vels = [];\n\n    for (let i = 0; i < children.length; i += 1) {\n      const currentChild = children[i];\n\n      if (currentChild.nodeType === 1) {\n        vels.push(Vector.create(children[i]));\n      }\n    }\n\n    return vels;\n  }\n\n  eachChild(fn, deep) {\n    const children = this.children();\n\n    for (let i = 0, l = children.length; i < l; i += 1) {\n      fn.call(children[i], children[i], i, children);\n\n      if (deep) {\n        children[i].eachChild(fn, deep);\n      }\n    }\n\n    return this;\n  }\n\n  index() {\n    return Dom.index(this.node);\n  }\n\n  hasClass(className) {\n    return Dom.hasClass(this.node, className);\n  }\n\n  addClass(className) {\n    Dom.addClass(this.node, className);\n    return this;\n  }\n\n  removeClass(className) {\n    Dom.removeClass(this.node, className);\n    return this;\n  }\n\n  toggleClass(className, stateVal) {\n    Dom.toggleClass(this.node, className, stateVal);\n    return this;\n  }\n\n  toLocalPoint(x, y) {\n    return Dom.toLocalPoint(this.node, x, y);\n  }\n\n  toGeometryShape() {\n    return Dom.toGeometryShape(this.node);\n  }\n\n  translateCenterToPoint(p) {\n    const bbox = this.getBBox({\n      target: this.svg()\n    });\n    const center = bbox.getCenter();\n    this.translate(p.x - center.x, p.y - center.y);\n    return this;\n  }\n\n  translateAndAutoOrient(position, reference, target) {\n    Dom.translateAndAutoOrient(this.node, position, reference, target);\n    return this;\n  }\n\n  animate(options) {\n    return Dom.animate(this.node, options);\n  }\n\n  animateTransform(options) {\n    return Dom.animateTransform(this.node, options);\n  }\n\n  animateAlongPath(options, path) {\n    return Dom.animateAlongPath(this.node, options, path);\n  }\n  /**\n   * Normalize this element's d attribute. SVGPathElements without\n   * a path data attribute obtain a value of 'M 0 0'.\n   */\n\n\n  normalizePath() {\n    const tagName = this.tagName();\n\n    if (tagName === 'path') {\n      this.attr('d', Path.normalize(this.attr('d')));\n    }\n\n    return this;\n  }\n  /**\n   * Returns the bounding box of the element after transformations are applied.\n   * If `withoutTransformations` is `true`, transformations of the element\n   * will not be considered when computing the bounding box. If `target` is\n   * specified, bounding box will be computed relatively to the target element.\n   */\n\n\n  bbox(withoutTransformations, target) {\n    return Dom.bbox(this.node, withoutTransformations, target);\n  }\n\n  getBBox(options = {}) {\n    return Dom.getBBox(this.node, {\n      recursive: options.recursive,\n      target: options.target ? Vector.toNode(options.target) : null\n    });\n  }\n  /**\n   * Samples the underlying SVG element (it currently works only on\n   * paths - where it is most useful anyway). Returns an array of objects\n   * of the form `{ x: Number, y: Number, distance: Number }`. Each of these\n   * objects represent a point on the path. This basically creates a discrete\n   * representation of the path (which is possible a curve). The sampling\n   * interval defines the accuracy of the sampling. In other words, we travel\n   * from the beginning of the path to the end by interval distance (on the\n   * path, not between the resulting points) and collect the discrete points\n   * on the path. This is very useful in many situations. For example, SVG\n   * does not provide a built-in mechanism to find intersections between two\n   * paths. Using sampling, we can just generate bunch of points for each of\n   * the path and find the closest ones from each set.\n   */\n\n\n  sample(interval = 1) {\n    if (this.node instanceof SVGPathElement) {\n      return Dom.sample(this.node, interval);\n    }\n\n    return [];\n  }\n\n  toPath() {\n    return Vector.create(Dom.toPath(this.node));\n  }\n\n  toPathData() {\n    return Dom.toPathData(this.node);\n  }\n\n}\n\n(function (Vector) {\n  Vector.toStringTag = `X6.${Vector.name}`;\n\n  function isVector(instance) {\n    if (instance == null) {\n      return false;\n    }\n\n    if (instance instanceof Vector) {\n      return true;\n    }\n\n    const tag = instance[Symbol.toStringTag];\n    const vector = instance;\n\n    if ((tag == null || tag === Vector.toStringTag) && vector.node instanceof SVGElement && typeof vector.animate === 'function' && typeof vector.sample === 'function' && typeof vector.normalizePath === 'function' && typeof vector.toPath === 'function') {\n      return true;\n    }\n\n    return false;\n  }\n\n  Vector.isVector = isVector;\n\n  function create(elem, attrs, children) {\n    return new Vector(elem, attrs, children);\n  }\n\n  Vector.create = create;\n\n  function createVectors(markup) {\n    if (markup[0] === '<') {\n      const svgDoc = Dom.createSvgDocument(markup);\n      const vels = [];\n\n      for (let i = 0, ii = svgDoc.childNodes.length; i < ii; i += 1) {\n        const childNode = svgDoc.childNodes[i];\n        vels.push(create(document.importNode(childNode, true)));\n      }\n\n      return vels;\n    }\n\n    return [create(markup)];\n  }\n\n  Vector.createVectors = createVectors;\n\n  function toNode(elem) {\n    if (isVector(elem)) {\n      return elem.node;\n    }\n\n    return elem;\n  }\n\n  Vector.toNode = toNode;\n\n  function toNodes(elems) {\n    if (Array.isArray(elems)) {\n      return elems.map(elem => toNode(elem));\n    }\n\n    return [toNode(elems)];\n  }\n\n  Vector.toNodes = toNodes;\n})(Vector || (Vector = {}));","map":{"version":3,"mappings":"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","names":["Path","Dom","Vector","constructor","elem","attrs","children","TypeError","node","isVector","toLowerCase","createSvgDocument","doc","document","importNode","firstChild","createElementNS","ns","svg","setAttributes","append","Symbol","toStringTag","type","nodeName","id","transform","matrix","options","translate","tx","ty","rotate","angle","cx","cy","scale","sx","sy","getTransformToElement","target","ref","toNode","removeAttribute","name","getAttribute","setAttribute","value","attr","undefined","SVGSVGElement","create","ownerSVGElement","defs","context","defsNode","getElementsByTagName","appendTo","text","content","tagName","clone","cloneNode","remove","empty","elems","toNodes","prepend","before","replace","parentNode","replaceChild","first","last","lastChild","get","index","child","childNodes","indexOf","Array","prototype","slice","call","find","selector","vels","nodes","i","ii","length","push","findOne","found","findParentByClass","className","terminator","matches","matcher","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","contains","wrap","vel","insertBefore","parent","currentChild","nodeType","eachChild","fn","deep","l","hasClass","addClass","removeClass","toggleClass","stateVal","toLocalPoint","x","y","toGeometryShape","translateCenterToPoint","p","bbox","getBBox","center","getCenter","translateAndAutoOrient","position","reference","animate","animateTransform","animateAlongPath","path","normalizePath","normalize","withoutTransformations","recursive","sample","interval","SVGPathElement","toPath","toPathData","instance","tag","vector","SVGElement","createVectors","markup","svgDoc","childNode","isArray","map"],"sourceRoot":"","sources":["../../../src/util/vector/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}