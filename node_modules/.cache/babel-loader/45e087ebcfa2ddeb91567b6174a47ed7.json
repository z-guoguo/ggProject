{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { __extends } from \"tslib\";\nimport { getLogPositiveMin, log } from '../util/math';\nimport Continuous from './base';\n/**\n * Log 度量，处理非均匀分布\n */\n\nvar Log =\n/** @class */\nfunction (_super) {\n  __extends(Log, _super);\n\n  function Log() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'log';\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  Log.prototype.invert = function (value) {\n    var base = this.base;\n    var max = log(base, this.max);\n    var rangeMin = this.rangeMin();\n    var range = this.rangeMax() - rangeMin;\n    var min;\n    var positiveMin = this.positiveMin;\n\n    if (positiveMin) {\n      if (value === 0) {\n        return 0;\n      }\n\n      min = log(base, positiveMin / base);\n      var appendPercent = 1 / (max - min) * range; // 0 到 positiveMin的占比\n\n      if (value < appendPercent) {\n        // 落到 0 - positiveMin 之间\n        return value / appendPercent * positiveMin;\n      }\n    } else {\n      min = log(base, this.min);\n    }\n\n    var percent = (value - rangeMin) / range;\n    var tmp = percent * (max - min) + min;\n    return Math.pow(base, tmp);\n  };\n\n  Log.prototype.initCfg = function () {\n    this.tickMethod = 'log';\n    this.base = 10;\n    this.tickCount = 6;\n    this.nice = true;\n  }; // 设置\n\n\n  Log.prototype.setDomain = function () {\n    _super.prototype.setDomain.call(this);\n\n    var min = this.min;\n\n    if (min < 0) {\n      throw new Error('When you use log scale, the minimum value must be greater than zero!');\n    }\n\n    if (min === 0) {\n      this.positiveMin = getLogPositiveMin(this.values, this.base, this.max);\n    }\n  }; // 根据当前值获取占比\n\n\n  Log.prototype.getScalePercent = function (value) {\n    var max = this.max;\n    var min = this.min;\n\n    if (max === min) {\n      return 0;\n    } // 如果值小于等于0，则按照0处理\n\n\n    if (value <= 0) {\n      return 0;\n    }\n\n    var base = this.base;\n    var positiveMin = this.positiveMin; // 如果min == 0, 则根据比0大的最小值，计算比例关系。这个最小值作为坐标轴上的第二个tick，第一个是0但是不显示\n\n    if (positiveMin) {\n      min = positiveMin * 1 / base;\n    }\n\n    var percent; // 如果数值小于次小值，那么就计算 value / 次小值 占整体的比例\n\n    if (value < positiveMin) {\n      percent = value / positiveMin / (log(base, max) - log(base, min));\n    } else {\n      percent = (log(base, value) - log(base, min)) / (log(base, max) - log(base, min));\n    }\n\n    return percent;\n  };\n\n  return Log;\n}(Continuous);\n\nexport default Log;","map":{"version":3,"mappings":"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","names":["getLogPositiveMin","log","Continuous","__extends","_this","Log","value","base","max","rangeMin","range","rangeMax","min","positiveMin","appendPercent","percent","tmp","Math","pow","tickMethod","tickCount","nice","_super","setDomain","call","Error","values"],"sourceRoot":"","sources":["../../src/continuous/log.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}