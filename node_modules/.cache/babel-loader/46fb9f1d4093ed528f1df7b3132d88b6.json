{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Polyline as PolylineUtil } from '@antv/g-math';\nimport { Line as LineUtil } from '@antv/g-math';\nimport { each, isArray, isNil } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nvar Polyline =\n/** @class */\nfunction (_super) {\n  __extends(Polyline, _super);\n\n  function Polyline() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'polyline';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n\n  Polyline.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      startArrow: false,\n      endArrow: false\n    });\n  }; // 更新属性时，检测是否更改了 points\n\n\n  Polyline.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n\n    if (['points'].indexOf(name) !== -1) {\n      this._resetCache();\n    }\n  };\n\n  Polyline.prototype._resetCache = function () {\n    this.set('totalLength', null);\n    this.set('tCache', null);\n  };\n\n  Polyline.prototype.createPath = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'points' && isArray(value) && value.length >= 2) {\n        el.setAttribute('points', value.map(function (point) {\n          return point[0] + \",\" + point[1];\n        }).join(' '));\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n  /**\n   * Get length of polyline\n   * @return {number} length\n   */\n\n\n  Polyline.prototype.getTotalLength = function () {\n    var points = this.attr().points; // get totalLength from cache\n\n    var totalLength = this.get('totalLength');\n\n    if (!isNil(totalLength)) {\n      return totalLength;\n    }\n\n    this.set('totalLength', PolylineUtil.length(points));\n    return this.get('totalLength');\n  };\n  /**\n   * Get point according to ratio\n   * @param {number} ratio\n   * @return {Point} point\n   */\n\n\n  Polyline.prototype.getPoint = function (ratio) {\n    var points = this.attr().points; // get tCache from cache\n\n    var tCache = this.get('tCache');\n\n    if (!tCache) {\n      this._setTcache();\n\n      tCache = this.get('tCache');\n    }\n\n    var subt;\n    var index;\n    each(tCache, function (v, i) {\n      if (ratio >= v[0] && ratio <= v[1]) {\n        subt = (ratio - v[0]) / (v[1] - v[0]);\n        index = i;\n      }\n    });\n    return LineUtil.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt);\n  };\n\n  Polyline.prototype._setTcache = function () {\n    var points = this.attr().points;\n\n    if (!points || points.length === 0) {\n      return;\n    }\n\n    var totalLength = this.getTotalLength();\n\n    if (totalLength <= 0) {\n      return;\n    }\n\n    var tempLength = 0;\n    var tCache = [];\n    var segmentT;\n    var segmentL;\n    each(points, function (p, i) {\n      if (points[i + 1]) {\n        segmentT = [];\n        segmentT[0] = tempLength / totalLength;\n        segmentL = LineUtil.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);\n        tempLength += segmentL;\n        segmentT[1] = tempLength / totalLength;\n        tCache.push(segmentT);\n      }\n    });\n    this.set('tCache', tCache);\n  };\n  /**\n   * Get start tangent vector\n   * @return {Array}\n   */\n\n\n  Polyline.prototype.getStartTangent = function () {\n    var points = this.attr().points;\n    var result = [];\n    result.push([points[1][0], points[1][1]]);\n    result.push([points[0][0], points[0][1]]);\n    return result;\n  };\n  /**\n   * Get end tangent vector\n   * @return {Array}\n   */\n\n\n  Polyline.prototype.getEndTangent = function () {\n    var points = this.attr().points;\n    var l = points.length - 1;\n    var result = [];\n    result.push([points[l - 1][0], points[l - 1][1]]);\n    result.push([points[l][0], points[l][1]]);\n    return result;\n  };\n\n  return Polyline;\n}(ShapeBase);\n\nexport default Polyline;","map":{"version":3,"mappings":"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","names":["Polyline","PolylineUtil","Line","LineUtil","each","isArray","isNil","SVG_ATTR_MAP","ShapeBase","__extends","_this","attrs","_super","getDefaultAttrs","call","startArrow","endArrow","name","value","originValue","onAttrChange","indexOf","_resetCache","set","context","targetAttrs","attr","el","get","length","setAttribute","map","point","join","points","totalLength","ratio","tCache","_setTcache","subt","index","v","i","pointAt","getTotalLength","tempLength","segmentT","segmentL","p","push","result","l"],"sourceRoot":"","sources":["../../src/shape/polyline.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}