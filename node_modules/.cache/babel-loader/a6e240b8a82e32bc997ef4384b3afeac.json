{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { ObjectExt, StringExt } from '../util';\nimport { Point, Polyline } from '../geometry';\nimport { Registry } from '../registry';\nimport { Markup } from '../view/markup';\nimport { ShareRegistry } from './registry';\nimport { Cell } from './cell';\nexport class Edge extends Cell {\n  constructor(metadata = {}) {\n    super(metadata);\n  }\n\n  get [Symbol.toStringTag]() {\n    return Edge.toStringTag;\n  }\n\n  preprocess(metadata, ignoreIdCheck) {\n    const {\n      source,\n      sourceCell,\n      sourcePort,\n      sourcePoint,\n      target,\n      targetCell,\n      targetPort,\n      targetPoint\n    } = metadata,\n          others = __rest(metadata, [\"source\", \"sourceCell\", \"sourcePort\", \"sourcePoint\", \"target\", \"targetCell\", \"targetPort\", \"targetPoint\"]);\n\n    const data = others;\n\n    const isValidId = val => typeof val === 'string' || typeof val === 'number';\n\n    if (source != null) {\n      if (Cell.isCell(source)) {\n        data.source = {\n          cell: source.id\n        };\n      } else if (isValidId(source)) {\n        data.source = {\n          cell: source\n        };\n      } else if (Point.isPoint(source)) {\n        data.source = source.toJSON();\n      } else if (Array.isArray(source)) {\n        data.source = {\n          x: source[0],\n          y: source[1]\n        };\n      } else {\n        const cell = source.cell;\n\n        if (Cell.isCell(cell)) {\n          data.source = Object.assign(Object.assign({}, source), {\n            cell: cell.id\n          });\n        } else {\n          data.source = source;\n        }\n      }\n    }\n\n    if (sourceCell != null || sourcePort != null) {\n      let terminal = data.source;\n\n      if (sourceCell != null) {\n        const id = isValidId(sourceCell) ? sourceCell : sourceCell.id;\n\n        if (terminal) {\n          terminal.cell = id;\n        } else {\n          terminal = data.source = {\n            cell: id\n          };\n        }\n      }\n\n      if (sourcePort != null && terminal) {\n        terminal.port = sourcePort;\n      }\n    } else if (sourcePoint != null) {\n      data.source = Point.create(sourcePoint).toJSON();\n    }\n\n    if (target != null) {\n      if (Cell.isCell(target)) {\n        data.target = {\n          cell: target.id\n        };\n      } else if (isValidId(target)) {\n        data.target = {\n          cell: target\n        };\n      } else if (Point.isPoint(target)) {\n        data.target = target.toJSON();\n      } else if (Array.isArray(target)) {\n        data.target = {\n          x: target[0],\n          y: target[1]\n        };\n      } else {\n        const cell = target.cell;\n\n        if (Cell.isCell(cell)) {\n          data.target = Object.assign(Object.assign({}, target), {\n            cell: cell.id\n          });\n        } else {\n          data.target = target;\n        }\n      }\n    }\n\n    if (targetCell != null || targetPort != null) {\n      let terminal = data.target;\n\n      if (targetCell != null) {\n        const id = isValidId(targetCell) ? targetCell : targetCell.id;\n\n        if (terminal) {\n          terminal.cell = id;\n        } else {\n          terminal = data.target = {\n            cell: id\n          };\n        }\n      }\n\n      if (targetPort != null && terminal) {\n        terminal.port = targetPort;\n      }\n    } else if (targetPoint != null) {\n      data.target = Point.create(targetPoint).toJSON();\n    }\n\n    return super.preprocess(data, ignoreIdCheck);\n  }\n\n  setup() {\n    super.setup();\n    this.on('change:labels', args => this.onLabelsChanged(args));\n    this.on('change:vertices', args => this.onVertexsChanged(args));\n  }\n\n  isEdge() {\n    return true;\n  } // #region terminal\n\n\n  disconnect(options = {}) {\n    this.store.set({\n      source: {\n        x: 0,\n        y: 0\n      },\n      target: {\n        x: 0,\n        y: 0\n      }\n    }, options);\n    return this;\n  }\n\n  get source() {\n    return this.getSource();\n  }\n\n  set source(data) {\n    this.setSource(data);\n  }\n\n  getSource() {\n    return this.getTerminal('source');\n  }\n\n  getSourceCellId() {\n    return this.source.cell;\n  }\n\n  getSourcePortId() {\n    return this.source.port;\n  }\n\n  setSource(source, args, options = {}) {\n    return this.setTerminal('source', source, args, options);\n  }\n\n  get target() {\n    return this.getTarget();\n  }\n\n  set target(data) {\n    this.setTarget(data);\n  }\n\n  getTarget() {\n    return this.getTerminal('target');\n  }\n\n  getTargetCellId() {\n    return this.target.cell;\n  }\n\n  getTargetPortId() {\n    return this.target.port;\n  }\n\n  setTarget(target, args, options = {}) {\n    return this.setTerminal('target', target, args, options);\n  }\n\n  getTerminal(type) {\n    return Object.assign({}, this.store.get(type));\n  }\n\n  setTerminal(type, terminal, args, options = {}) {\n    // `terminal` is a cell\n    if (Cell.isCell(terminal)) {\n      this.store.set(type, ObjectExt.merge({}, args, {\n        cell: terminal.id\n      }), options);\n      return this;\n    } // `terminal` is a point-like object\n\n\n    const p = terminal;\n\n    if (Point.isPoint(terminal) || p.x != null && p.y != null) {\n      this.store.set(type, ObjectExt.merge({}, args, {\n        x: p.x,\n        y: p.y\n      }), options);\n      return this;\n    } // `terminal` is an object\n\n\n    this.store.set(type, ObjectExt.cloneDeep(terminal), options);\n    return this;\n  }\n\n  getSourcePoint() {\n    return this.getTerminalPoint('source');\n  }\n\n  getTargetPoint() {\n    return this.getTerminalPoint('target');\n  }\n\n  getTerminalPoint(type) {\n    const terminal = this[type];\n\n    if (Point.isPointLike(terminal)) {\n      return Point.create(terminal);\n    }\n\n    const cell = this.getTerminalCell(type);\n\n    if (cell) {\n      return cell.getConnectionPoint(this, type);\n    }\n\n    return new Point();\n  }\n\n  getSourceCell() {\n    return this.getTerminalCell('source');\n  }\n\n  getTargetCell() {\n    return this.getTerminalCell('target');\n  }\n\n  getTerminalCell(type) {\n    if (this.model) {\n      const cellId = type === 'source' ? this.getSourceCellId() : this.getTargetCellId();\n\n      if (cellId) {\n        return this.model.getCell(cellId);\n      }\n    }\n\n    return null;\n  }\n\n  getSourceNode() {\n    return this.getTerminalNode('source');\n  }\n\n  getTargetNode() {\n    return this.getTerminalNode('target');\n  }\n\n  getTerminalNode(type) {\n    let cell = this; // eslint-disable-line\n\n    const visited = {};\n\n    while (cell && cell.isEdge()) {\n      if (visited[cell.id]) {\n        return null;\n      }\n\n      visited[cell.id] = true;\n      cell = cell.getTerminalCell(type);\n    }\n\n    return cell && cell.isNode() ? cell : null;\n  } // #endregion\n  // #region router\n\n\n  get router() {\n    return this.getRouter();\n  }\n\n  set router(data) {\n    if (data == null) {\n      this.removeRouter();\n    } else {\n      this.setRouter(data);\n    }\n  }\n\n  getRouter() {\n    return this.store.get('router');\n  }\n\n  setRouter(name, args, options) {\n    if (typeof name === 'object') {\n      this.store.set('router', name, args);\n    } else {\n      this.store.set('router', {\n        name,\n        args\n      }, options);\n    }\n\n    return this;\n  }\n\n  removeRouter(options = {}) {\n    this.store.remove('router', options);\n    return this;\n  } // #endregion\n  // #region connector\n\n\n  get connector() {\n    return this.getConnector();\n  }\n\n  set connector(data) {\n    if (data == null) {\n      this.removeConnector();\n    } else {\n      this.setConnector(data);\n    }\n  }\n\n  getConnector() {\n    return this.store.get('connector');\n  }\n\n  setConnector(name, args, options) {\n    if (typeof name === 'object') {\n      this.store.set('connector', name, args);\n    } else {\n      this.store.set('connector', {\n        name,\n        args\n      }, options);\n    }\n\n    return this;\n  }\n\n  removeConnector(options = {}) {\n    return this.store.remove('connector', options);\n  } // #endregion\n  // #region strategy\n\n\n  get strategy() {\n    return this.getStrategy();\n  }\n\n  set strategy(data) {\n    if (data == null) {\n      this.removeStrategy();\n    } else {\n      this.setStrategy(data);\n    }\n  }\n\n  getStrategy() {\n    return this.store.get('strategy');\n  }\n\n  setStrategy(name, args, options) {\n    if (typeof name === 'object') {\n      this.store.set('strategy', name, args);\n    } else {\n      this.store.set('strategy', {\n        name,\n        args\n      }, options);\n    }\n\n    return this;\n  }\n\n  removeStrategy(options = {}) {\n    return this.store.remove('strategy', options);\n  } // #endregion\n  // #region labels\n\n\n  getDefaultLabel() {\n    const ctor = this.constructor;\n    const defaults = this.store.get('defaultLabel') || ctor.defaultLabel || {};\n    return ObjectExt.cloneDeep(defaults);\n  }\n\n  get labels() {\n    return this.getLabels();\n  }\n\n  set labels(labels) {\n    this.setLabels(labels);\n  }\n\n  getLabels() {\n    return [...this.store.get('labels', [])].map(item => this.parseLabel(item));\n  }\n\n  setLabels(labels, options = {}) {\n    this.store.set('labels', Array.isArray(labels) ? labels : [labels], options);\n    return this;\n  }\n\n  insertLabel(label, index, options = {}) {\n    const labels = this.getLabels();\n    const len = labels.length;\n    let idx = index != null && Number.isFinite(index) ? index : len;\n\n    if (idx < 0) {\n      idx = len + idx + 1;\n    }\n\n    labels.splice(idx, 0, this.parseLabel(label));\n    return this.setLabels(labels, options);\n  }\n\n  appendLabel(label, options = {}) {\n    return this.insertLabel(label, -1, options);\n  }\n\n  getLabelAt(index) {\n    const labels = this.getLabels();\n\n    if (index != null && Number.isFinite(index)) {\n      return this.parseLabel(labels[index]);\n    }\n\n    return null;\n  }\n\n  setLabelAt(index, label, options = {}) {\n    if (index != null && Number.isFinite(index)) {\n      const labels = this.getLabels();\n      labels[index] = this.parseLabel(label);\n      this.setLabels(labels, options);\n    }\n\n    return this;\n  }\n\n  removeLabelAt(index, options = {}) {\n    const labels = this.getLabels();\n    const idx = index != null && Number.isFinite(index) ? index : -1;\n    const removed = labels.splice(idx, 1);\n    this.setLabels(labels, options);\n    return removed.length ? removed[0] : null;\n  }\n\n  parseLabel(label) {\n    if (typeof label === 'string') {\n      const ctor = this.constructor;\n      return ctor.parseStringLabel(label);\n    }\n\n    return label;\n  }\n\n  onLabelsChanged({\n    previous,\n    current\n  }) {\n    const added = previous && current ? current.filter(label1 => {\n      if (!previous.find(label2 => label1 === label2 || ObjectExt.isEqual(label1, label2))) {\n        return label1;\n      }\n\n      return null;\n    }) : current ? [...current] : [];\n    const removed = previous && current ? previous.filter(label1 => {\n      if (!current.find(label2 => label1 === label2 || ObjectExt.isEqual(label1, label2))) {\n        return label1;\n      }\n\n      return null;\n    }) : previous ? [...previous] : [];\n\n    if (added.length > 0) {\n      this.notify('labels:added', {\n        added,\n        cell: this,\n        edge: this\n      });\n    }\n\n    if (removed.length > 0) {\n      this.notify('labels:removed', {\n        removed,\n        cell: this,\n        edge: this\n      });\n    }\n  } // #endregion\n  // #region vertices\n\n\n  get vertexMarkup() {\n    return this.getVertexMarkup();\n  }\n\n  set vertexMarkup(markup) {\n    this.setVertexMarkup(markup);\n  }\n\n  getDefaultVertexMarkup() {\n    return this.store.get('defaultVertexMarkup') || Markup.getEdgeVertexMarkup();\n  }\n\n  getVertexMarkup() {\n    return this.store.get('vertexMarkup') || this.getDefaultVertexMarkup();\n  }\n\n  setVertexMarkup(markup, options = {}) {\n    this.store.set('vertexMarkup', Markup.clone(markup), options);\n    return this;\n  }\n\n  get vertices() {\n    return this.getVertices();\n  }\n\n  set vertices(vertices) {\n    this.setVertices(vertices);\n  }\n\n  getVertices() {\n    return [...this.store.get('vertices', [])];\n  }\n\n  setVertices(vertices, options = {}) {\n    const points = Array.isArray(vertices) ? vertices : [vertices];\n    this.store.set('vertices', points.map(p => Point.toJSON(p)), options);\n    return this;\n  }\n\n  insertVertex(vertice, index, options = {}) {\n    const vertices = this.getVertices();\n    const len = vertices.length;\n    let idx = index != null && Number.isFinite(index) ? index : len;\n\n    if (idx < 0) {\n      idx = len + idx + 1;\n    }\n\n    vertices.splice(idx, 0, Point.toJSON(vertice));\n    return this.setVertices(vertices, options);\n  }\n\n  appendVertex(vertex, options = {}) {\n    return this.insertVertex(vertex, -1, options);\n  }\n\n  getVertexAt(index) {\n    if (index != null && Number.isFinite(index)) {\n      const vertices = this.getVertices();\n      return vertices[index];\n    }\n\n    return null;\n  }\n\n  setVertexAt(index, vertice, options = {}) {\n    if (index != null && Number.isFinite(index)) {\n      const vertices = this.getVertices();\n      vertices[index] = vertice;\n      this.setVertices(vertices, options);\n    }\n\n    return this;\n  }\n\n  removeVertexAt(index, options = {}) {\n    const vertices = this.getVertices();\n    const idx = index != null && Number.isFinite(index) ? index : -1;\n    vertices.splice(idx, 1);\n    return this.setVertices(vertices, options);\n  }\n\n  onVertexsChanged({\n    previous,\n    current\n  }) {\n    const added = previous && current ? current.filter(p1 => {\n      if (!previous.find(p2 => Point.equals(p1, p2))) {\n        return p1;\n      }\n\n      return null;\n    }) : current ? [...current] : [];\n    const removed = previous && current ? previous.filter(p1 => {\n      if (!current.find(p2 => Point.equals(p1, p2))) {\n        return p1;\n      }\n\n      return null;\n    }) : previous ? [...previous] : [];\n\n    if (added.length > 0) {\n      this.notify('vertexs:added', {\n        added,\n        cell: this,\n        edge: this\n      });\n    }\n\n    if (removed.length > 0) {\n      this.notify('vertexs:removed', {\n        removed,\n        cell: this,\n        edge: this\n      });\n    }\n  } // #endregion\n  // #region markup\n\n\n  getDefaultMarkup() {\n    return this.store.get('defaultMarkup') || Markup.getEdgeMarkup();\n  }\n\n  getMarkup() {\n    return super.getMarkup() || this.getDefaultMarkup();\n  } // #endregion\n  // #region toolMarkup\n\n\n  get toolMarkup() {\n    return this.getToolMarkup();\n  }\n\n  set toolMarkup(markup) {\n    this.setToolMarkup(markup);\n  }\n\n  getDefaultToolMarkup() {\n    return this.store.get('defaultToolMarkup') || Markup.getEdgeToolMarkup();\n  }\n\n  getToolMarkup() {\n    return this.store.get('toolMarkup') || this.getDefaultToolMarkup();\n  }\n\n  setToolMarkup(markup, options = {}) {\n    this.store.set('toolMarkup', markup, options);\n    return this;\n  }\n\n  get doubleToolMarkup() {\n    return this.getDoubleToolMarkup();\n  }\n\n  set doubleToolMarkup(markup) {\n    this.setDoubleToolMarkup(markup);\n  }\n\n  getDefaultDoubleToolMarkup() {\n    return this.store.get('defaultDoubleToolMarkup');\n  }\n\n  getDoubleToolMarkup() {\n    return this.store.get('doubleToolMarkup') || this.getDefaultDoubleToolMarkup();\n  }\n\n  setDoubleToolMarkup(markup, options = {}) {\n    this.store.set('doubleToolMarkup', markup, options);\n    return this;\n  } // #endregion\n  // #region arrowheadMarkup\n\n\n  get arrowheadMarkup() {\n    return this.getArrowheadMarkup();\n  }\n\n  set arrowheadMarkup(markup) {\n    this.setArrowheadMarkup(markup);\n  }\n\n  getDefaultArrowheadMarkup() {\n    return this.store.get('defaultArrowheadMarkup') || Markup.getEdgeArrowheadMarkup();\n  }\n\n  getArrowheadMarkup() {\n    return this.store.get('arrowheadMarkup') || this.getDefaultArrowheadMarkup();\n  }\n\n  setArrowheadMarkup(markup, options = {}) {\n    this.store.set('arrowheadMarkup', markup, options);\n    return this;\n  } // #endregion\n  // #region transform\n\n  /**\n   * Translate the edge vertices (and source and target if they are points)\n   * by `tx` pixels in the x-axis and `ty` pixels in the y-axis.\n   */\n\n\n  translate(tx, ty, options = {}) {\n    options.translateBy = options.translateBy || this.id;\n    options.tx = tx;\n    options.ty = ty;\n    return this.applyToPoints(p => ({\n      x: (p.x || 0) + tx,\n      y: (p.y || 0) + ty\n    }), options);\n  }\n  /**\n   * Scales the edge's points (vertices) relative to the given origin.\n   */\n\n\n  scale(sx, sy, origin, options = {}) {\n    return this.applyToPoints(p => {\n      return Point.create(p).scale(sx, sy, origin).toJSON();\n    }, options);\n  }\n\n  applyToPoints(worker, options = {}) {\n    const attrs = {};\n    const source = this.getSource();\n    const target = this.getTarget();\n\n    if (Point.isPointLike(source)) {\n      attrs.source = worker(source);\n    }\n\n    if (Point.isPointLike(target)) {\n      attrs.target = worker(target);\n    }\n\n    const vertices = this.getVertices();\n\n    if (vertices.length > 0) {\n      attrs.vertices = vertices.map(worker);\n    }\n\n    this.store.set(attrs, options);\n    return this;\n  } // #endregion\n  // #region common\n\n\n  getBBox() {\n    return this.getPolyline().bbox();\n  }\n\n  getConnectionPoint() {\n    return this.getPolyline().pointAt(0.5);\n  }\n\n  getPolyline() {\n    const points = [this.getSourcePoint(), ...this.getVertices().map(vertice => Point.create(vertice)), this.getTargetPoint()];\n    return new Polyline(points);\n  }\n\n  updateParent(options) {\n    let newParent = null;\n    const source = this.getSourceCell();\n    const target = this.getTargetCell();\n    const prevParent = this.getParent();\n\n    if (source && target) {\n      if (source === target || source.isDescendantOf(target)) {\n        newParent = target;\n      } else if (target.isDescendantOf(source)) {\n        newParent = source;\n      } else {\n        newParent = Cell.getCommonAncestor(source, target);\n      }\n    } // Unembeds the edge if source and target has no common\n    // ancestor or common ancestor changed\n\n\n    if (prevParent && (!newParent || newParent.id !== prevParent.id)) {\n      prevParent.unembed(this, options);\n    }\n\n    if (newParent) {\n      newParent.embed(this, options);\n    }\n\n    return newParent;\n  }\n\n  hasLoop(options = {}) {\n    const source = this.getSource();\n    const target = this.getTarget();\n    const sourceId = source.cell;\n    const targetId = target.cell;\n\n    if (!sourceId || !targetId) {\n      return false;\n    }\n\n    let loop = sourceId === targetId; // Note that there in the deep mode a edge can have a loop,\n    // even if it connects only a parent and its embed.\n    // A loop \"target equals source\" is valid in both shallow and deep mode.\n    // eslint-disable-next-line\n\n    if (!loop && options.deep && this._model) {\n      const sourceCell = this.getSourceCell();\n      const targetCell = this.getTargetCell();\n\n      if (sourceCell && targetCell) {\n        loop = sourceCell.isAncestorOf(targetCell, options) || targetCell.isAncestorOf(sourceCell, options);\n      }\n    }\n\n    return loop;\n  }\n\n  getFragmentAncestor() {\n    const cells = [this, this.getSourceNode(), this.getTargetNode()].filter(item => item != null);\n    return this.getCommonAncestor(...cells);\n  }\n\n  isFragmentDescendantOf(cell) {\n    const ancestor = this.getFragmentAncestor();\n    return !!ancestor && (ancestor.id === cell.id || ancestor.isDescendantOf(cell));\n  }\n\n}\nEdge.defaults = {};\n\n(function (Edge) {\n  function equalTerminals(a, b) {\n    const a1 = a;\n    const b1 = b;\n\n    if (a1.cell === b1.cell) {\n      return a1.port === b1.port || a1.port == null && b1.port == null;\n    }\n\n    return false;\n  }\n\n  Edge.equalTerminals = equalTerminals;\n})(Edge || (Edge = {}));\n\n(function (Edge) {\n  Edge.defaultLabel = {\n    markup: [{\n      tagName: 'rect',\n      selector: 'body'\n    }, {\n      tagName: 'text',\n      selector: 'label'\n    }],\n    attrs: {\n      text: {\n        fill: '#000',\n        fontSize: 14,\n        textAnchor: 'middle',\n        textVerticalAnchor: 'middle',\n        pointerEvents: 'none'\n      },\n      rect: {\n        ref: 'label',\n        fill: '#fff',\n        rx: 3,\n        ry: 3,\n        refWidth: 1,\n        refHeight: 1,\n        refX: 0,\n        refY: 0\n      }\n    },\n    position: {\n      distance: 0.5\n    }\n  };\n\n  function parseStringLabel(text) {\n    return {\n      attrs: {\n        label: {\n          text\n        }\n      }\n    };\n  }\n\n  Edge.parseStringLabel = parseStringLabel;\n})(Edge || (Edge = {}));\n\n(function (Edge) {\n  Edge.toStringTag = `X6.${Edge.name}`;\n\n  function isEdge(instance) {\n    if (instance == null) {\n      return false;\n    }\n\n    if (instance instanceof Edge) {\n      return true;\n    }\n\n    const tag = instance[Symbol.toStringTag];\n    const edge = instance;\n\n    if ((tag == null || tag === Edge.toStringTag) && typeof edge.isNode === 'function' && typeof edge.isEdge === 'function' && typeof edge.prop === 'function' && typeof edge.attr === 'function' && typeof edge.disconnect === 'function' && typeof edge.getSource === 'function' && typeof edge.getTarget === 'function') {\n      return true;\n    }\n\n    return false;\n  }\n\n  Edge.isEdge = isEdge;\n})(Edge || (Edge = {}));\n\n(function (Edge) {\n  Edge.registry = Registry.create({\n    type: 'edge',\n\n    process(shape, options) {\n      if (ShareRegistry.exist(shape, false)) {\n        throw new Error(`Edge with name '${shape}' was registered by anthor Node`);\n      }\n\n      if (typeof options === 'function') {\n        options.config({\n          shape\n        });\n        return options;\n      }\n\n      let parent = Edge; // default inherit from 'dege'\n\n      const {\n        inherit = 'edge'\n      } = options,\n            others = __rest(options, [\"inherit\"]);\n\n      if (typeof inherit === 'string') {\n        const base = this.get(inherit || 'edge');\n\n        if (base == null && inherit) {\n          this.onNotFound(inherit, 'inherited');\n        } else {\n          parent = base;\n        }\n      } else {\n        parent = inherit;\n      }\n\n      if (others.constructorName == null) {\n        others.constructorName = shape;\n      }\n\n      const ctor = parent.define.call(parent, others);\n      ctor.config({\n        shape\n      });\n      return ctor;\n    }\n\n  });\n  ShareRegistry.setEdgeRegistry(Edge.registry);\n})(Edge || (Edge = {}));\n\n(function (Edge) {\n  let counter = 0;\n\n  function getClassName(name) {\n    if (name) {\n      return StringExt.pascalCase(name);\n    }\n\n    counter += 1;\n    return `CustomEdge${counter}`;\n  }\n\n  function define(config) {\n    const {\n      constructorName,\n      overwrite\n    } = config,\n          others = __rest(config, [\"constructorName\", \"overwrite\"]);\n\n    const ctor = ObjectExt.createClass(getClassName(constructorName || others.shape), this);\n    ctor.config(others);\n\n    if (others.shape) {\n      Edge.registry.register(others.shape, ctor, overwrite);\n    }\n\n    return ctor;\n  }\n\n  Edge.define = define;\n\n  function create(options) {\n    const shape = options.shape || 'edge';\n    const Ctor = Edge.registry.get(shape);\n\n    if (Ctor) {\n      return new Ctor(options);\n    }\n\n    return Edge.registry.onNotFound(shape);\n  }\n\n  Edge.create = create;\n})(Edge || (Edge = {}));\n\n(function (Edge) {\n  const shape = 'basic.edge';\n  Edge.config({\n    shape,\n\n    propHooks(metadata) {\n      const {\n        label,\n        vertices\n      } = metadata,\n            others = __rest(metadata, [\"label\", \"vertices\"]);\n\n      if (label) {\n        if (others.labels == null) {\n          others.labels = [];\n        }\n\n        const formated = typeof label === 'string' ? Edge.parseStringLabel(label) : label;\n        others.labels.push(formated);\n      }\n\n      if (vertices) {\n        if (Array.isArray(vertices)) {\n          others.vertices = vertices.map(item => Point.create(item).toJSON());\n        }\n      }\n\n      return others;\n    }\n\n  });\n  Edge.registry.register(shape, Edge);\n})(Edge || (Edge = {}));","map":{"version":3,"mappings":"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","names":["ObjectExt","StringExt","Point","Polyline","Registry","Markup","ShareRegistry","Cell","Edge","constructor","metadata","Symbol","toStringTag","preprocess","ignoreIdCheck","source","sourceCell","sourcePort","sourcePoint","target","targetCell","targetPort","targetPoint","others","data","isValidId","val","isCell","cell","id","isPoint","toJSON","Array","isArray","x","y","Object","terminal","port","create","setup","on","args","onLabelsChanged","onVertexsChanged","isEdge","disconnect","options","store","set","getSource","setSource","getTerminal","getSourceCellId","getSourcePortId","setTerminal","getTarget","setTarget","getTargetCellId","getTargetPortId","type","get","merge","p","cloneDeep","getSourcePoint","getTerminalPoint","getTargetPoint","isPointLike","getTerminalCell","getConnectionPoint","getSourceCell","getTargetCell","model","cellId","getCell","getSourceNode","getTerminalNode","getTargetNode","visited","isNode","router","getRouter","removeRouter","setRouter","name","remove","connector","getConnector","removeConnector","setConnector","strategy","getStrategy","removeStrategy","setStrategy","getDefaultLabel","ctor","defaults","defaultLabel","labels","getLabels","setLabels","map","item","parseLabel","insertLabel","label","index","len","length","idx","Number","isFinite","splice","appendLabel","getLabelAt","setLabelAt","removeLabelAt","removed","parseStringLabel","previous","current","added","filter","label1","find","label2","isEqual","notify","edge","vertexMarkup","getVertexMarkup","markup","setVertexMarkup","getDefaultVertexMarkup","getEdgeVertexMarkup","clone","vertices","getVertices","setVertices","points","insertVertex","vertice","appendVertex","vertex","getVertexAt","setVertexAt","removeVertexAt","p1","p2","equals","getDefaultMarkup","getEdgeMarkup","getMarkup","toolMarkup","getToolMarkup","setToolMarkup","getDefaultToolMarkup","getEdgeToolMarkup","doubleToolMarkup","getDoubleToolMarkup","setDoubleToolMarkup","getDefaultDoubleToolMarkup","arrowheadMarkup","getArrowheadMarkup","setArrowheadMarkup","getDefaultArrowheadMarkup","getEdgeArrowheadMarkup","translate","tx","ty","translateBy","applyToPoints","scale","sx","sy","origin","worker","attrs","getBBox","getPolyline","bbox","pointAt","updateParent","newParent","prevParent","getParent","isDescendantOf","getCommonAncestor","unembed","embed","hasLoop","sourceId","targetId","loop","deep","_model","isAncestorOf","getFragmentAncestor","cells","isFragmentDescendantOf","ancestor","equalTerminals","a","b","a1","b1","tagName","selector","text","fill","fontSize","textAnchor","textVerticalAnchor","pointerEvents","rect","ref","rx","ry","refWidth","refHeight","refX","refY","position","distance","instance","tag","prop","attr","process","shape","exist","Error","config","parent","inherit","base","onNotFound","constructorName","define","call","setEdgeRegistry","counter","getClassName","pascalCase","overwrite","createClass","register","Ctor","propHooks","formated","push"],"sourceRoot":"","sources":["../../src/model/edge.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}