{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { Util } from '../../global';\nimport { StringExt, FunctionExt } from '../../util';\nimport { Point, Rectangle, Angle } from '../../geometry';\nimport { Cell } from '../../model/cell';\nimport { notify } from '../transform/util';\nexport class NodePreset {\n  constructor(halo) {\n    this.halo = halo;\n  }\n\n  get options() {\n    return this.halo.options;\n  }\n\n  get graph() {\n    return this.halo.graph;\n  }\n\n  get model() {\n    return this.halo.model;\n  }\n\n  get view() {\n    return this.halo.view;\n  }\n\n  get cell() {\n    return this.halo.cell;\n  }\n\n  get node() {\n    return this.cell;\n  }\n\n  getPresets() {\n    return {\n      className: 'type-node',\n      handles: [{\n        name: 'remove',\n        position: 'nw',\n        events: {\n          mousedown: this.removeCell.bind(this)\n        },\n        icon: null\n      }, {\n        name: 'resize',\n        position: 'se',\n        events: {\n          mousedown: this.startResize.bind(this),\n          mousemove: this.doResize.bind(this),\n          mouseup: this.stopResize.bind(this)\n        },\n        icon: null\n      }, {\n        name: 'clone',\n        position: 'n',\n        events: {\n          mousedown: this.startClone.bind(this),\n          mousemove: this.doClone.bind(this),\n          mouseup: this.stopClone.bind(this)\n        },\n        icon: null\n      }, {\n        name: 'link',\n        position: 'e',\n        events: {\n          mousedown: this.startLink.bind(this),\n          mousemove: this.doLink.bind(this),\n          mouseup: this.stopLink.bind(this)\n        },\n        icon: null\n      }, {\n        name: 'fork',\n        position: 'ne',\n        events: {\n          mousedown: this.startFork.bind(this),\n          mousemove: this.doFork.bind(this),\n          mouseup: this.stopFork.bind(this)\n        },\n        icon: null\n      }, {\n        name: 'unlink',\n        position: 'w',\n        events: {\n          mousedown: this.unlink.bind(this)\n        },\n        icon: null\n      }, {\n        name: 'rotate',\n        position: 'sw',\n        events: {\n          mousedown: this.startRotate.bind(this),\n          mousemove: this.doRotate.bind(this),\n          mouseup: this.stopRotate.bind(this)\n        },\n        icon: null\n      }],\n\n      bbox(view) {\n        if (this.options.useCellGeometry) {\n          const node = view.cell;\n          return node.getBBox();\n        }\n\n        return view.getBBox();\n      },\n\n      content(view) {\n        const template = StringExt.template('x: <%= x %>, y: <%= y %>, width: <%= width %>, height: <%= height %>, angle: <%= angle %>');\n        const cell = view.cell;\n        const bbox = cell.getBBox();\n        return template({\n          x: Math.floor(bbox.x),\n          y: Math.floor(bbox.y),\n          width: Math.floor(bbox.width),\n          height: Math.floor(bbox.height),\n          angle: Math.floor(cell.getAngle())\n        });\n      },\n\n      magnet(view) {\n        return view.container;\n      },\n\n      tinyThreshold: 40,\n      smallThreshold: 80,\n      loopEdgePreferredSide: 'top',\n      loopEdgeWidth: 40,\n      rotateGrid: 15,\n      rotateEmbeds: false\n    };\n  }\n\n  removeCell() {\n    this.model.removeConnectedEdges(this.cell);\n    this.cell.remove();\n  } // #region create edge\n\n\n  startLink({\n    x,\n    y\n  }) {\n    this.halo.startBatch();\n    const graph = this.graph;\n    const edge = this.createEdgeConnectedToSource();\n    edge.setTarget({\n      x,\n      y\n    });\n    this.model.addEdge(edge, {\n      validation: false,\n      halo: this.halo.cid,\n      async: false\n    });\n    graph.view.undelegateEvents();\n    this.edgeView = graph.renderer.findViewByCell(edge);\n    this.edgeView.prepareArrowheadDragging('target', {\n      x,\n      y,\n      fallbackAction: 'remove'\n    });\n  }\n\n  createEdgeConnectedToSource() {\n    const magnet = this.getMagnet(this.view, 'source');\n    const terminal = this.getEdgeTerminal(this.view, magnet);\n    const edge = this.graph.hook.getDefaultEdge(this.view, magnet);\n    edge.setSource(terminal);\n    return edge;\n  }\n\n  getMagnet(view, terminal) {\n    const magnet = this.options.magnet;\n\n    if (typeof magnet === 'function') {\n      const val = FunctionExt.call(magnet, this.halo, view, terminal);\n\n      if (val instanceof SVGElement) {\n        return val;\n      }\n    }\n\n    throw new Error('`magnet()` has to return an SVGElement');\n  }\n\n  getEdgeTerminal(view, magnet) {\n    const terminal = {\n      cell: view.cell.id\n    };\n\n    if (magnet !== view.container) {\n      const port = magnet.getAttribute('port');\n\n      if (port) {\n        terminal.port = port;\n      } else {\n        terminal.selector = view.getSelector(magnet);\n      }\n    }\n\n    return terminal;\n  }\n\n  doLink({\n    e,\n    x,\n    y\n  }) {\n    if (this.edgeView) {\n      this.edgeView.onMouseMove(e, x, y);\n    }\n  }\n\n  stopLink({\n    e,\n    x,\n    y\n  }) {\n    const edgeView = this.edgeView;\n\n    if (edgeView) {\n      edgeView.onMouseUp(e, x, y);\n      const edge = edgeView.cell;\n\n      if (edge.hasLoop()) {\n        this.makeLoopEdge(edge);\n      }\n\n      this.halo.stopBatch();\n      this.halo.trigger('action:edge:addde', {\n        edge\n      });\n      this.edgeView = null;\n    }\n\n    this.graph.view.delegateEvents();\n  }\n\n  makeLoopEdge(edge) {\n    let vertex1 = null;\n    let vertex2 = null;\n    const loopEdgeWidth = this.options.loopEdgeWidth;\n    const graphOptions = this.graph.options;\n    const graphRect = new Rectangle(0, 0, graphOptions.width, graphOptions.height);\n    const bbox = this.graph.graphToLocal(this.view.getBBox());\n    const found = [this.options.loopEdgePreferredSide, 'top', 'bottom', 'left', 'right'].some(position => {\n      let point = null;\n      let dx = 0;\n      let dy = 0;\n\n      switch (position) {\n        case 'top':\n          point = new Point(bbox.x + bbox.width / 2, bbox.y - loopEdgeWidth);\n          dx = loopEdgeWidth / 2;\n          break;\n\n        case 'bottom':\n          point = new Point(bbox.x + bbox.width / 2, bbox.y + bbox.height + loopEdgeWidth);\n          dx = loopEdgeWidth / 2;\n          break;\n\n        case 'left':\n          point = new Point(bbox.x - loopEdgeWidth, bbox.y + bbox.height / 2);\n          dy = loopEdgeWidth / 2;\n          break;\n\n        case 'right':\n          point = new Point(bbox.x + bbox.width + loopEdgeWidth, bbox.y + bbox.height / 2);\n          dy = loopEdgeWidth / 2;\n          break;\n\n        default:\n          break;\n      }\n\n      if (point) {\n        vertex1 = point.translate(-dx, -dy);\n        vertex2 = point.translate(dx, dy);\n        return graphRect.containsPoint(vertex1) && graphRect.containsPoint(vertex2);\n      }\n\n      return false;\n    });\n\n    if (found && vertex1 && vertex2) {\n      edge.setVertices([vertex1, vertex2]);\n    }\n  } // #endregion\n  // #region resize\n\n\n  startResize({\n    e\n  }) {\n    this.halo.startBatch();\n    this.flip = [1, 0, 0, 1, 1, 0, 0, 1][Math.floor(Angle.normalize(this.node.getAngle()) / 45)];\n    this.view.addClass('node-resizing');\n    notify('node:resize', e, this.view);\n  }\n\n  doResize({\n    e,\n    dx,\n    dy\n  }) {\n    const size = this.node.getSize();\n    const width = Math.max(size.width + (this.flip ? dx : dy), 1);\n    const height = Math.max(size.height + (this.flip ? dy : dx), 1);\n    this.node.resize(width, height, {\n      absolute: true\n    });\n    notify('node:resizing', e, this.view);\n  }\n\n  stopResize({\n    e\n  }) {\n    this.view.removeClass('node-resizing');\n    notify('node:resized', e, this.view);\n    this.halo.stopBatch();\n  } // #endregion\n  // #region clone\n\n\n  startClone({\n    e,\n    x,\n    y\n  }) {\n    this.halo.startBatch();\n    const options = this.options;\n    const cloned = options.clone(this.cell, {\n      clone: true\n    });\n\n    if (!Cell.isCell(cloned)) {\n      throw new Error(\"option 'clone()' has to return a cell\");\n    }\n\n    this.centerNodeAtCursor(cloned, x, y);\n    this.model.addCell(cloned, {\n      halo: this.halo.cid,\n      async: false\n    });\n    const cloneView = this.graph.renderer.findViewByCell(cloned);\n    cloneView.onMouseDown(e, x, y);\n    this.halo.setEventData(e, {\n      cloneView\n    });\n  }\n\n  centerNodeAtCursor(cell, x, y) {\n    const center = cell.getBBox().getCenter();\n    const dx = x - center.x;\n    const dy = y - center.y;\n    cell.translate(dx, dy);\n  }\n\n  doClone({\n    e,\n    x,\n    y\n  }) {\n    const view = this.halo.getEventData(e).cloneView;\n\n    if (view) {\n      view.onMouseMove(e, x, y);\n    }\n  }\n\n  stopClone({\n    e,\n    x,\n    y\n  }) {\n    const nodeView = this.halo.getEventData(e).cloneView;\n\n    if (nodeView) {\n      nodeView.onMouseUp(e, x, y);\n    }\n\n    this.halo.stopBatch();\n  } // #endregion\n  // #region fork\n\n\n  startFork({\n    e,\n    x,\n    y\n  }) {\n    this.halo.startBatch();\n    const cloned = this.options.clone(this.cell, {\n      fork: true\n    });\n\n    if (!Cell.isCell(cloned)) {\n      throw new Error(\"option 'clone()' has to return a cell\");\n    }\n\n    this.centerNodeAtCursor(cloned, x, y);\n    this.model.addCell(cloned, {\n      halo: this.halo.cid,\n      async: false\n    });\n    const edge = this.createEdgeConnectedToSource();\n    const cloneView = this.graph.renderer.findViewByCell(cloned);\n    const magnet = this.getMagnet(cloneView, 'target');\n    const terminal = this.getEdgeTerminal(cloneView, magnet);\n    edge.setTarget(terminal);\n    this.model.addEdge(edge, {\n      halo: this.halo.cid,\n      async: false\n    });\n    cloneView.onMouseDown(e, x, y);\n    this.halo.setEventData(e, {\n      cloneView\n    });\n  }\n\n  doFork({\n    e,\n    x,\n    y\n  }) {\n    const view = this.halo.getEventData(e).cloneView;\n\n    if (view) {\n      view.onMouseMove(e, x, y);\n    }\n  }\n\n  stopFork({\n    e,\n    x,\n    y\n  }) {\n    const view = this.halo.getEventData(e).cloneView;\n\n    if (view) {\n      view.onMouseUp(e, x, y);\n    }\n\n    this.halo.stopBatch();\n  } // #endregion\n  // #region rotate\n\n\n  startRotate({\n    e,\n    x,\n    y\n  }) {\n    this.halo.startBatch();\n    const center = this.node.getBBox().getCenter();\n    const nodes = [this.node];\n\n    if (this.options.rotateEmbeds) {\n      this.node.getDescendants({\n        deep: true\n      }).reduce((memo, cell) => {\n        if (cell.isNode()) {\n          memo.push(cell);\n        }\n\n        return memo;\n      }, nodes);\n    }\n\n    this.halo.setEventData(e, {\n      center,\n      nodes,\n      rotateStartAngles: nodes.map(node => node.getAngle()),\n      clientStartAngle: new Point(x, y).theta(center)\n    });\n    nodes.forEach(node => {\n      const view = this.graph.findViewByCell(node);\n\n      if (view) {\n        view.addClass('node-rotating');\n        notify('node:rotate', e, view);\n      }\n    });\n  }\n\n  doRotate({\n    e,\n    x,\n    y\n  }) {\n    const data = this.halo.getEventData(e);\n    const delta = data.clientStartAngle - new Point(x, y).theta(data.center);\n    data.nodes.forEach((node, index) => {\n      const startAngle = data.rotateStartAngles[index];\n      const targetAngle = Util.snapToGrid(startAngle + delta, this.options.rotateGrid);\n      node.rotate(targetAngle, {\n        absolute: true,\n        center: data.center,\n        halo: this.halo.cid\n      });\n      notify('node:rotating', e, this.graph.findViewByCell(node));\n    });\n  }\n\n  stopRotate({\n    e\n  }) {\n    const data = this.halo.getEventData(e);\n    data.nodes.forEach(node => {\n      const view = this.graph.findViewByCell(node);\n      view.removeClass('node-rotating');\n      notify('node:rotated', e, view);\n    });\n    this.halo.stopBatch();\n  } // #endregion\n  // #region unlink\n\n\n  unlink() {\n    this.halo.startBatch();\n    this.model.removeConnectedEdges(this.cell);\n    this.halo.stopBatch();\n  }\n\n}","map":{"version":3,"mappings":"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","names":["Util","StringExt","FunctionExt","Point","Rectangle","Angle","Cell","notify","NodePreset","constructor","halo","options","graph","model","view","cell","node","getPresets","className","handles","name","position","events","mousedown","removeCell","bind","icon","startResize","mousemove","doResize","mouseup","stopResize","startClone","doClone","stopClone","startLink","doLink","stopLink","startFork","doFork","stopFork","unlink","startRotate","doRotate","stopRotate","bbox","useCellGeometry","getBBox","content","template","x","Math","floor","y","width","height","angle","getAngle","magnet","container","tinyThreshold","smallThreshold","loopEdgePreferredSide","loopEdgeWidth","rotateGrid","rotateEmbeds","removeConnectedEdges","remove","startBatch","edge","createEdgeConnectedToSource","setTarget","addEdge","validation","cid","async","undelegateEvents","edgeView","renderer","findViewByCell","prepareArrowheadDragging","fallbackAction","getMagnet","terminal","getEdgeTerminal","hook","getDefaultEdge","setSource","val","call","SVGElement","Error","id","port","getAttribute","selector","getSelector","e","onMouseMove","onMouseUp","hasLoop","makeLoopEdge","stopBatch","trigger","delegateEvents","vertex1","vertex2","graphOptions","graphRect","graphToLocal","found","some","point","dx","dy","translate","containsPoint","setVertices","flip","normalize","addClass","size","getSize","max","resize","absolute","removeClass","cloned","clone","isCell","centerNodeAtCursor","addCell","cloneView","onMouseDown","setEventData","center","getCenter","getEventData","nodeView","fork","nodes","getDescendants","deep","reduce","memo","isNode","push","rotateStartAngles","map","clientStartAngle","theta","forEach","data","delta","index","startAngle","targetAngle","snapToGrid","rotate"],"sourceRoot":"","sources":["../../../src/addon/halo/node-preset.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}