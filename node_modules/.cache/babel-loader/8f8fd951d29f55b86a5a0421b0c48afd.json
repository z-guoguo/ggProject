{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // deep first search with both order low for pre, lim for post\n\nvar dfsBothOrder = function (g) {\n  var _a;\n\n  var result = {};\n  var lim = 0;\n\n  var dfs = function (v) {\n    var _a;\n\n    var low = lim;\n    (_a = g.children(v)) === null || _a === void 0 ? void 0 : _a.forEach(dfs);\n    result[v] = {\n      low: low,\n      lim: lim++\n    };\n  };\n\n  (_a = g.children()) === null || _a === void 0 ? void 0 : _a.forEach(dfs);\n  return result;\n}; // Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\n\n\nvar findPath = function (g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca; // Traverse up from v to find the LCA\n\n  parent = v;\n\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n\n  lca = parent; // Traverse from w to LCA\n\n  parent = w;\n\n  while (parent && parent !== lca) {\n    wPath.push(parent);\n    parent = g.parent(parent);\n  }\n\n  return {\n    lca: lca,\n    path: vPath.concat(wPath.reverse())\n  };\n};\n\nvar parentDummyChains = function (g) {\n  var _a;\n\n  var postorderNums = dfsBothOrder(g);\n  (_a = g.graph().dummyChains) === null || _a === void 0 ? void 0 : _a.forEach(function (startV) {\n    var _a, _b;\n\n    var v = startV;\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    if (!edgeObj) return;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while (pathV !== lca && ((_a = g.node(pathV)) === null || _a === void 0 ? void 0 : _a.maxRank) < node.rank) {\n          pathIdx++;\n          pathV = path[pathIdx];\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 && ((_b = g.node(path[pathIdx + 1])) === null || _b === void 0 ? void 0 : _b.minRank) <= node.rank) {\n          pathIdx++;\n        }\n\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n};\n\nexports.default = parentDummyChains;","map":{"version":3,"mappings":"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","names":["dfsBothOrder","g","result","lim","dfs","v","low","children","_a","forEach","findPath","postorderNums","w","vPath","wPath","Math","min","max","parent","lca","push","path","concat","reverse","parentDummyChains","graph","dummyChains","startV","node","edgeObj","pathData","pathIdx","pathV","ascending","maxRank","rank","length","_b","minRank","setParent","successors","exports"],"sourceRoot":"","sources":["../../../../src/layout/dagre/src/parent-dummy-chains.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}