{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ml_matrix_1 = require(\"ml-matrix\");\n\nvar MDS =\n/** @class */\nfunction () {\n  function MDS(params) {\n    this.distances = params.distances;\n    this.dimension = params.dimension || 2;\n    this.linkDistance = params.linkDistance;\n  }\n\n  MDS.prototype.layout = function () {\n    var self = this;\n    var dimension = self.dimension,\n        distances = self.distances,\n        linkDistance = self.linkDistance;\n\n    try {\n      // square distances\n      var M = ml_matrix_1.Matrix.mul(ml_matrix_1.Matrix.pow(distances, 2), -0.5); // double centre the rows/columns\n\n      var rowMeans = M.mean('row');\n      var colMeans = M.mean('column');\n      var totalMean = M.mean();\n      M.add(totalMean).subRowVector(rowMeans).subColumnVector(colMeans); // take the SVD of the double centred matrix, and return the\n      // points from it\n\n      var ret = new ml_matrix_1.SingularValueDecomposition(M);\n      var eigenValues_1 = ml_matrix_1.Matrix.sqrt(ret.diagonalMatrix).diagonal();\n      return ret.leftSingularVectors.toJSON().map(function (row) {\n        return ml_matrix_1.Matrix.mul([row], [eigenValues_1]).toJSON()[0].splice(0, dimension);\n      });\n    } catch (_a) {\n      var res = [];\n\n      for (var i = 0; i < distances.length; i++) {\n        var x = Math.random() * linkDistance;\n        var y = Math.random() * linkDistance;\n        res.push([x, y]);\n      }\n\n      return res;\n    }\n  };\n\n  return MDS;\n}();\n\nexports.default = MDS;","map":{"version":3,"mappings":";;;;;;AACA;;AAEA;AAAA;AAAA;EAUE,aAAYA,MAAZ,EAAqF;IACnF,KAAKC,SAAL,GAAiBD,MAAM,CAACC,SAAxB;IACA,KAAKC,SAAL,GAAiBF,MAAM,CAACE,SAAP,IAAoB,CAArC;IACA,KAAKC,YAAL,GAAoBH,MAAM,CAACG,YAA3B;EACD;;EAEMC,uBAAP;IACE,IAAMC,IAAI,GAAG,IAAb;IACQ,aAAS,GAA8BA,IAAI,UAA3C;IAAA,IAAWJ,SAAS,GAAmBI,IAAI,UAA3C;IAAA,IAAsBF,YAAY,GAAKE,IAAI,aAA3C;;IAER,IAAI;MACF;MACA,IAAMC,CAAC,GAAGC,mBAASC,GAAT,CAAaD,mBAASE,GAAT,CAAaR,SAAb,EAAwB,CAAxB,CAAb,EAAyC,CAAC,GAA1C,CAAV,CAFE,CAIF;;MACA,IAAMS,QAAQ,GAAGJ,CAAC,CAACK,IAAF,CAAO,KAAP,CAAjB;MACA,IAAMC,QAAQ,GAAGN,CAAC,CAACK,IAAF,CAAO,QAAP,CAAjB;MACA,IAAME,SAAS,GAAGP,CAAC,CAACK,IAAF,EAAlB;MACAL,CAAC,CAACQ,GAAF,CAAMD,SAAN,EAAiBE,YAAjB,CAA8BL,QAA9B,EAAwCM,eAAxC,CAAwDJ,QAAxD,EARE,CAUF;MACA;;MACA,IAAMK,GAAG,GAAG,IAAIV,sCAAJ,CAA+BD,CAA/B,CAAZ;MACA,IAAMY,aAAW,GAAGX,mBAASY,IAAT,CAAcF,GAAG,CAACG,cAAlB,EAAkCC,QAAlC,EAApB;MACA,OAAOJ,GAAG,CAACK,mBAAJ,CAAwBC,MAAxB,GAAiCC,GAAjC,CAAqC,UAACC,GAAD,EAAc;QACxD,OAAOlB,mBAASC,GAAT,CAAa,CAACiB,GAAD,CAAb,EAAoB,CAACP,aAAD,CAApB,EAAmCK,MAAnC,GAA4C,CAA5C,EAA+CG,MAA/C,CAAsD,CAAtD,EAAyDxB,SAAzD,CAAP;MACD,CAFM,CAAP;IAGD,CAjBD,CAiBE,WAAM;MACN,IAAMyB,GAAG,GAAiB,EAA1B;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3B,SAAS,CAAC4B,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;QACzC,IAAME,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAgB7B,YAA1B;QACA,IAAM8B,CAAC,GAAGF,IAAI,CAACC,MAAL,KAAgB7B,YAA1B;QACAwB,GAAG,CAACO,IAAJ,CAAS,CAACJ,CAAD,EAAIG,CAAJ,CAAT;MACD;;MACD,OAAON,GAAP;IACD;EACF,CA9BM;;EA+BT;AAAC,CA/CD","names":["params","distances","dimension","linkDistance","MDS","self","M","ml_matrix_1","mul","pow","rowMeans","mean","colMeans","totalMean","add","subRowVector","subColumnVector","ret","eigenValues_1","sqrt","diagonalMatrix","diagonal","leftSingularVectors","toJSON","map","row","splice","res","i","length","x","Math","random","y","push"],"sourceRoot":"","sources":["../../../src/layout/radial/mds.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}