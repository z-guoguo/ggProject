{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.regexp.flags.js\";\n\n/* eslint-disable no-bitwise */\nexport class FlagManager {\n  constructor(view, actions, bootstrap = []) {\n    this.view = view;\n    const flags = {};\n    const attrs = {};\n    let shift = 0;\n    Object.keys(actions).forEach(attr => {\n      let labels = actions[attr];\n\n      if (!Array.isArray(labels)) {\n        labels = [labels];\n      }\n\n      labels.forEach(label => {\n        let flag = flags[label];\n\n        if (!flag) {\n          shift += 1;\n          flag = flags[label] = 1 << shift;\n        }\n\n        attrs[attr] |= flag;\n      });\n    });\n    let labels = bootstrap;\n\n    if (!Array.isArray(labels)) {\n      labels = [labels];\n    }\n\n    labels.forEach(label => {\n      if (!flags[label]) {\n        shift += 1;\n        flags[label] = 1 << shift;\n      }\n    }); // 26 - 30 are reserved for paper flags\n    // 31+ overflows maximal number\n\n    if (shift > 25) {\n      throw new Error('Maximum number of flags exceeded.');\n    }\n\n    this.flags = flags;\n    this.attrs = attrs;\n    this.bootstrap = bootstrap;\n  }\n\n  get cell() {\n    return this.view.cell;\n  }\n\n  getFlag(label) {\n    const flags = this.flags;\n\n    if (flags == null) {\n      return 0;\n    }\n\n    if (Array.isArray(label)) {\n      return label.reduce((memo, key) => memo | flags[key], 0);\n    }\n\n    return flags[label] | 0;\n  }\n\n  hasAction(flag, label) {\n    return flag & this.getFlag(label);\n  }\n\n  removeAction(flag, label) {\n    return flag ^ flag & this.getFlag(label);\n  }\n\n  getBootstrapFlag() {\n    return this.getFlag(this.bootstrap);\n  }\n\n  getChangedFlag() {\n    let flag = 0;\n\n    if (!this.attrs) {\n      return flag;\n    }\n\n    Object.keys(this.attrs).forEach(attr => {\n      if (this.cell.hasChanged(attr)) {\n        flag |= this.attrs[attr];\n      }\n    });\n    return flag;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["FlagManager","constructor","view","actions","bootstrap","flags","attrs","shift","Object","keys","forEach","attr","labels","Array","isArray","label","flag","Error","cell","getFlag","reduce","memo","key","hasAction","removeAction","getBootstrapFlag","getChangedFlag","hasChanged"],"sourceRoot":"","sources":["../../src/view/flag.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}