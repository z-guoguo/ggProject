{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util'; // 菱形shape\n\nregisterNode('diamond', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 80],\n    style: {\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'diamond',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n        icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('path', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      name: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    var w = icon.width,\n        h = icon.height,\n        show = icon.show,\n        text = icon.text;\n\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -w / 2,\n            y: -h / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n  getPath: function getPath(cfg) {\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n    var path = [['M', 0, -height / 2], ['L', width / 2, 0], ['L', 0, height / 2], ['L', -width / 2, 0], ['Z'] // 封闭\n    ];\n    return path;\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var path = this.getPath(cfg);\n\n    var styles = __assign({\n      path: path\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var path = this.getPath(cfg); // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n\n    var strokeStyle = {\n      stroke: cfg.color,\n      path: path\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');","map":{"version":3,"names":["__assign","__rest","registerNode","BaseGlobal","Global","mix","options","size","style","stroke","defaultNode","fill","lineWidth","labelCfg","nodeLabel","fontSize","fontFamily","windowFontFamily","linkPoints","top","right","bottom","left","icon","show","img","width","height","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","_a","mergeStyle","getOptions","getShapeStyle","keyShape","addShape","attrs","className","concat","type","name","draggable","w","h","text","x","y","textBaseline","textAlign","drawLinkPoints","markSize","markR","r","markStyle","getSize","isAnchorPoint","getPath","path","defaultStyle","strokeStyle","color","styles","update","item","updateType","getContainer","get","attr","updateShape","updateLinkPoints"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-element/es/nodes/diamond.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util'; // 菱形shape\n\nregisterNode('diamond', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 80],\n    style: {\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'diamond',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n        icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('path', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      name: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    var w = icon.width,\n        h = icon.height,\n        show = icon.show,\n        text = icon.text;\n\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -w / 2,\n            y: -h / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n  getPath: function getPath(cfg) {\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n    var path = [['M', 0, -height / 2], ['L', width / 2, 0], ['L', 0, height / 2], ['L', -width / 2, 0], ['Z'] // 封闭\n    ];\n    return path;\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var path = this.getPath(cfg);\n\n    var styles = __assign({\n      path: path\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var path = this.getPath(cfg); // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n\n    var strokeStyle = {\n      stroke: cfg.color,\n      path: path\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');"],"mappings":"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"},"metadata":{},"sourceType":"module"}