{"ast":null,"code":"/**\n * @fileoverview 图片\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport { isString, isNil } from '../util/util';\n\nfunction isCanvas(dom) {\n  return dom instanceof HTMLElement && isString(dom.nodeName) && dom.nodeName.toUpperCase() === 'CANVAS';\n}\n\nvar ImageShape =\n/** @class */\nfunction (_super) {\n  __extends(ImageShape, _super);\n\n  function ImageShape() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ImageShape.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    });\n  };\n\n  ImageShape.prototype.initAttrs = function (attrs) {\n    this._setImage(attrs.img);\n  }; // image 不计算 stroke\n\n\n  ImageShape.prototype.isStroke = function () {\n    return false;\n  }; // 仅仅使用包围盒检测来进行拾取\n  // 所以不需要复写 isInStrokeOrPath 的方法\n\n\n  ImageShape.prototype.isOnlyHitBox = function () {\n    return true;\n  };\n\n  ImageShape.prototype._afterLoading = function () {\n    if (this.get('toDraw') === true) {\n      var canvas = this.get('canvas');\n\n      if (canvas) {\n        // 这段应该改成局部渲染\n        canvas.draw();\n      } else {\n        // 这种方式如果发生遮挡会出现问题\n        this.createPath(this.get('context'));\n      }\n    }\n  };\n\n  ImageShape.prototype._setImage = function (img) {\n    var _this = this;\n\n    var attrs = this.attrs;\n\n    if (isString(img)) {\n      var image_1 = new Image();\n\n      image_1.onload = function () {\n        // 图片未加载完，则已经被销毁\n        if (_this.destroyed) {\n          return false;\n        } // 缓存原始地址，可以做对比，防止重复加载图片\n        // 如果考虑到在加载过程中可能替换 img 属性，则情况更加复杂\n        // this.set('imgSrc', img);\n        // 这里会循环调用 _setImage 方法，但不会再走这个分支\n\n\n        _this.attr('img', image_1);\n\n        _this.set('loading', false);\n\n        _this._afterLoading();\n\n        var callback = _this.get('callback');\n\n        if (callback) {\n          callback.call(_this);\n        }\n      }; // 设置跨域\n\n\n      image_1.crossOrigin = 'Anonymous';\n      image_1.src = img; // loading 过程中不绘制\n\n      this.set('loading', true);\n    } else if (img instanceof Image) {\n      // 如果是一个 image 对象，则设置宽高\n      if (!attrs.width) {\n        attrs.width = img.width;\n      }\n\n      if (!attrs.height) {\n        attrs.height = img.height;\n      }\n    } else if (isCanvas(img)) {\n      // 如果设置了 canvas 对象\n      if (!attrs.width) {\n        attrs.width = Number(img.getAttribute('width'));\n      }\n\n      if (!attrs.height) {\n        attrs.height, Number(img.getAttribute('height'));\n      }\n    }\n  };\n\n  ImageShape.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue); // 如果加载的已经是当前图片，则不再处理\n\n\n    if (name === 'img') {\n      // 可以加缓冲，&& this.get('imgSrc') !== value\n      this._setImage(value);\n    }\n  };\n\n  ImageShape.prototype.createPath = function (context) {\n    // 正在加载则不绘制\n    if (this.get('loading')) {\n      this.set('toDraw', true); // 加载完成后绘制\n\n      this.set('context', context);\n      return;\n    }\n\n    var attrs = this.attr();\n    var x = attrs.x,\n        y = attrs.y,\n        width = attrs.width,\n        height = attrs.height,\n        sx = attrs.sx,\n        sy = attrs.sy,\n        swidth = attrs.swidth,\n        sheight = attrs.sheight;\n    var img = attrs.img;\n\n    if (img instanceof Image || isCanvas(img)) {\n      if (!isNil(sx) && !isNil(sy) && !isNil(swidth) && !isNil(sheight)) {\n        context.drawImage(img, sx, sy, swidth, sheight, x, y, width, height);\n      } else {\n        context.drawImage(img, x, y, width, height);\n      }\n    }\n  };\n\n  return ImageShape;\n}(ShapeBase);\n\nexport default ImageShape;","map":{"version":3,"mappings":"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","names":["ShapeBase","isString","isNil","isCanvas","dom","HTMLElement","nodeName","toUpperCase","__extends","ImageShape","attrs","_super","getDefaultAttrs","call","x","y","width","height","_setImage","img","get","canvas","draw","createPath","image_1","Image","onload","_this","destroyed","attr","set","_afterLoading","callback","crossOrigin","src","Number","getAttribute","name","value","originValue","onAttrChange","context","sx","sy","swidth","sheight","drawImage"],"sourceRoot":"","sources":["../../src/shape/image.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}