{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nvar min = Math.min,\n    max = Math.max,\n    abs = Math.abs;\nvar DEFAULT_TRIGGER = 'shift';\nvar ALLOW_EVENTS = ['drag', 'shift', 'ctrl', 'alt', 'control'];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      brushStyle: {\n        fill: '#EEF6FF',\n        fillOpacity: 0.4,\n        stroke: '#DDEEFE',\n        lineWidth: 1\n      },\n      onSelect: function onSelect() {},\n      onDeselect: function onDeselect() {},\n      selectedState: 'selected',\n      trigger: DEFAULT_TRIGGER,\n      includeEdges: true,\n      selectedEdges: [],\n      selectedNodes: []\n    };\n  },\n  getEvents: function getEvents() {\n    // 检测输入是否合法\n    if (!(ALLOW_EVENTS.indexOf(this.trigger.toLowerCase()) > -1)) {\n      this.trigger = DEFAULT_TRIGGER;\n      console.warn(\"Behavior brush-select 的 trigger 参数不合法，请输入 'drag'、'shift'、'ctrl' 或 'alt'\");\n    }\n\n    if (this.trigger === 'drag') {\n      return {\n        'dragstart': 'onMouseDown',\n        'drag': 'onMouseMove',\n        'dragend': 'onMouseUp',\n        'canvas:click': 'clearStates'\n      };\n    }\n\n    return {\n      'dragstart': 'onMouseDown',\n      'drag': 'onMouseMove',\n      'dragend': 'onMouseUp',\n      'canvas:click': 'clearStates',\n      'keyup': 'onKeyUp',\n      'keydown': 'onKeyDown'\n    };\n  },\n  onMouseDown: function onMouseDown(e) {\n    // 按在node上面拖动时候不应该是框选\n    var item = e.item;\n    var brush = this.brush;\n\n    if (item) {\n      return;\n    }\n\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n\n    if (this.selectedNodes && this.selectedNodes.length !== 0) {\n      this.clearStates();\n    }\n\n    if (!brush) {\n      brush = this.createBrush();\n    }\n\n    this.originPoint = {\n      x: e.canvasX,\n      y: e.canvasY\n    };\n    brush.attr({\n      width: 0,\n      height: 0\n    });\n    brush.show();\n    this.dragging = true;\n  },\n  onMouseMove: function onMouseMove(e) {\n    if (!this.dragging) {\n      return;\n    }\n\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n\n    this.updateBrush(e);\n  },\n  onMouseUp: function onMouseUp(e) {\n    var graph = this.graph; // TODO: 触发了 canvas:click 导致 clearStates\n\n    if (!this.brush && !this.dragging) {\n      return;\n    }\n\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n\n    this.brush.remove(true); // remove and destroy\n\n    this.brush = null;\n    this.getSelectedNodes(e);\n    this.dragging = false;\n  },\n  clearStates: function clearStates() {\n    var _a = this,\n        graph = _a.graph,\n        selectedState = _a.selectedState;\n\n    var nodes = graph.findAllByState('node', selectedState);\n    var edges = graph.findAllByState('edge', selectedState);\n    nodes.forEach(function (node) {\n      return graph.setItemState(node, selectedState, false);\n    });\n    edges.forEach(function (edge) {\n      return graph.setItemState(edge, selectedState, false);\n    });\n    this.selectedNodes = [];\n    this.selectedEdges = [];\n\n    if (this.onDeselect) {\n      this.onDeselect(this.selectedNodes, this.selectedEdges);\n    }\n\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: [],\n        edges: []\n      },\n      select: false\n    });\n  },\n  getSelectedNodes: function getSelectedNodes(e) {\n    var _this = this;\n\n    var _a = this,\n        graph = _a.graph,\n        originPoint = _a.originPoint,\n        shouldUpdate = _a.shouldUpdate;\n\n    var state = this.selectedState;\n    var p1 = {\n      x: e.x,\n      y: e.y\n    };\n    var p2 = graph.getPointByCanvas(originPoint.x, originPoint.y);\n    var left = min(p1.x, p2.x);\n    var right = max(p1.x, p2.x);\n    var top = min(p1.y, p2.y);\n    var bottom = max(p1.y, p2.y);\n    var selectedNodes = [];\n    var selectedIds = [];\n    graph.getNodes().forEach(function (node) {\n      if (!node.isVisible()) return; // 隐藏节点不能被选中\n\n      var bbox = node.getBBox();\n\n      if (bbox.centerX >= left && bbox.centerX <= right && bbox.centerY >= top && bbox.centerY <= bottom) {\n        if (shouldUpdate(node, 'select')) {\n          selectedNodes.push(node);\n          var model = node.getModel();\n          selectedIds.push(model.id);\n          graph.setItemState(node, state, true);\n        }\n      }\n    });\n    var selectedEdges = [];\n\n    if (this.includeEdges) {\n      // 选中边，边的source和target都在选中的节点中时才选中\n      selectedNodes.forEach(function (node) {\n        var edges = node.getOutEdges();\n        edges.forEach(function (edge) {\n          if (!edge.isVisible()) return; // 隐藏边不能够被选中\n\n          var model = edge.getModel();\n          var source = model.source,\n              target = model.target;\n\n          if (selectedIds.includes(source) && selectedIds.includes(target) && shouldUpdate(edge, 'select')) {\n            selectedEdges.push(edge);\n            graph.setItemState(edge, _this.selectedState, true);\n          }\n        });\n      });\n    }\n\n    this.selectedEdges = selectedEdges;\n    this.selectedNodes = selectedNodes;\n\n    if (this.onSelect) {\n      this.onSelect(selectedNodes, selectedEdges);\n    }\n\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: selectedNodes,\n        edges: selectedEdges\n      },\n      select: true\n    });\n  },\n  createBrush: function createBrush() {\n    var self = this;\n    var brush = self.graph.get('canvas').addShape('rect', {\n      attrs: self.brushStyle,\n      capture: false,\n      name: 'brush-shape'\n    });\n    this.brush = brush;\n    this.delegate = brush;\n    return brush;\n  },\n  updateBrush: function updateBrush(e) {\n    var originPoint = this.originPoint;\n    this.brush.attr({\n      width: abs(e.canvasX - originPoint.x),\n      height: abs(e.canvasY - originPoint.y),\n      x: min(e.canvasX, originPoint.x),\n      y: min(e.canvasY, originPoint.y)\n    });\n  },\n  onKeyDown: function onKeyDown(e) {\n    var code = e.key;\n\n    if (!code) {\n      return;\n    }\n\n    var triggerLowerCase = this.trigger.toLowerCase();\n    var codeLowerCase = code.toLowerCase(); // 按住 control 键时，允许用户设置 trigger 为 ctrl\n\n    if (codeLowerCase === triggerLowerCase || codeLowerCase === 'control' && triggerLowerCase === 'ctrl' || codeLowerCase === 'ctrl' && triggerLowerCase === 'control') {\n      this.keydown = true;\n    } else {\n      this.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    if (this.brush) {\n      // 清除所有选中状态后，设置拖得动状态为false，并清除框选的brush\n      this.brush.remove(true);\n      this.brush = null;\n      this.dragging = false;\n    }\n\n    this.keydown = false;\n  }\n};","map":{"version":3,"names":["min","Math","max","abs","DEFAULT_TRIGGER","ALLOW_EVENTS","getDefaultCfg","brushStyle","fill","fillOpacity","stroke","lineWidth","onSelect","onDeselect","selectedState","trigger","includeEdges","selectedEdges","selectedNodes","getEvents","indexOf","toLowerCase","console","warn","onMouseDown","e","item","brush","keydown","length","clearStates","createBrush","originPoint","x","canvasX","y","canvasY","attr","width","height","show","dragging","onMouseMove","updateBrush","onMouseUp","graph","remove","getSelectedNodes","_a","nodes","findAllByState","edges","forEach","node","setItemState","edge","emit","selectedItems","select","_this","shouldUpdate","state","p1","p2","getPointByCanvas","left","right","top","bottom","selectedIds","getNodes","isVisible","bbox","getBBox","centerX","centerY","push","model","getModel","id","getOutEdges","source","target","includes","self","get","addShape","attrs","capture","name","delegate","onKeyDown","code","key","triggerLowerCase","codeLowerCase","onKeyUp"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-pc/es/behavior/brush-select.js"],"sourcesContent":["var min = Math.min,\n    max = Math.max,\n    abs = Math.abs;\nvar DEFAULT_TRIGGER = 'shift';\nvar ALLOW_EVENTS = ['drag', 'shift', 'ctrl', 'alt', 'control'];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      brushStyle: {\n        fill: '#EEF6FF',\n        fillOpacity: 0.4,\n        stroke: '#DDEEFE',\n        lineWidth: 1\n      },\n      onSelect: function onSelect() {},\n      onDeselect: function onDeselect() {},\n      selectedState: 'selected',\n      trigger: DEFAULT_TRIGGER,\n      includeEdges: true,\n      selectedEdges: [],\n      selectedNodes: []\n    };\n  },\n  getEvents: function getEvents() {\n    // 检测输入是否合法\n    if (!(ALLOW_EVENTS.indexOf(this.trigger.toLowerCase()) > -1)) {\n      this.trigger = DEFAULT_TRIGGER;\n      console.warn(\"Behavior brush-select 的 trigger 参数不合法，请输入 'drag'、'shift'、'ctrl' 或 'alt'\");\n    }\n\n    if (this.trigger === 'drag') {\n      return {\n        'dragstart': 'onMouseDown',\n        'drag': 'onMouseMove',\n        'dragend': 'onMouseUp',\n        'canvas:click': 'clearStates'\n      };\n    }\n\n    return {\n      'dragstart': 'onMouseDown',\n      'drag': 'onMouseMove',\n      'dragend': 'onMouseUp',\n      'canvas:click': 'clearStates',\n      'keyup': 'onKeyUp',\n      'keydown': 'onKeyDown'\n    };\n  },\n  onMouseDown: function onMouseDown(e) {\n    // 按在node上面拖动时候不应该是框选\n    var item = e.item;\n    var brush = this.brush;\n\n    if (item) {\n      return;\n    }\n\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n\n    if (this.selectedNodes && this.selectedNodes.length !== 0) {\n      this.clearStates();\n    }\n\n    if (!brush) {\n      brush = this.createBrush();\n    }\n\n    this.originPoint = {\n      x: e.canvasX,\n      y: e.canvasY\n    };\n    brush.attr({\n      width: 0,\n      height: 0\n    });\n    brush.show();\n    this.dragging = true;\n  },\n  onMouseMove: function onMouseMove(e) {\n    if (!this.dragging) {\n      return;\n    }\n\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n\n    this.updateBrush(e);\n  },\n  onMouseUp: function onMouseUp(e) {\n    var graph = this.graph; // TODO: 触发了 canvas:click 导致 clearStates\n\n    if (!this.brush && !this.dragging) {\n      return;\n    }\n\n    if (this.trigger !== 'drag' && !this.keydown) {\n      return;\n    }\n\n    this.brush.remove(true); // remove and destroy\n\n    this.brush = null;\n    this.getSelectedNodes(e);\n    this.dragging = false;\n  },\n  clearStates: function clearStates() {\n    var _a = this,\n        graph = _a.graph,\n        selectedState = _a.selectedState;\n\n    var nodes = graph.findAllByState('node', selectedState);\n    var edges = graph.findAllByState('edge', selectedState);\n    nodes.forEach(function (node) {\n      return graph.setItemState(node, selectedState, false);\n    });\n    edges.forEach(function (edge) {\n      return graph.setItemState(edge, selectedState, false);\n    });\n    this.selectedNodes = [];\n    this.selectedEdges = [];\n\n    if (this.onDeselect) {\n      this.onDeselect(this.selectedNodes, this.selectedEdges);\n    }\n\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: [],\n        edges: []\n      },\n      select: false\n    });\n  },\n  getSelectedNodes: function getSelectedNodes(e) {\n    var _this = this;\n\n    var _a = this,\n        graph = _a.graph,\n        originPoint = _a.originPoint,\n        shouldUpdate = _a.shouldUpdate;\n\n    var state = this.selectedState;\n    var p1 = {\n      x: e.x,\n      y: e.y\n    };\n    var p2 = graph.getPointByCanvas(originPoint.x, originPoint.y);\n    var left = min(p1.x, p2.x);\n    var right = max(p1.x, p2.x);\n    var top = min(p1.y, p2.y);\n    var bottom = max(p1.y, p2.y);\n    var selectedNodes = [];\n    var selectedIds = [];\n    graph.getNodes().forEach(function (node) {\n      if (!node.isVisible()) return; // 隐藏节点不能被选中\n\n      var bbox = node.getBBox();\n\n      if (bbox.centerX >= left && bbox.centerX <= right && bbox.centerY >= top && bbox.centerY <= bottom) {\n        if (shouldUpdate(node, 'select')) {\n          selectedNodes.push(node);\n          var model = node.getModel();\n          selectedIds.push(model.id);\n          graph.setItemState(node, state, true);\n        }\n      }\n    });\n    var selectedEdges = [];\n\n    if (this.includeEdges) {\n      // 选中边，边的source和target都在选中的节点中时才选中\n      selectedNodes.forEach(function (node) {\n        var edges = node.getOutEdges();\n        edges.forEach(function (edge) {\n          if (!edge.isVisible()) return; // 隐藏边不能够被选中\n\n          var model = edge.getModel();\n          var source = model.source,\n              target = model.target;\n\n          if (selectedIds.includes(source) && selectedIds.includes(target) && shouldUpdate(edge, 'select')) {\n            selectedEdges.push(edge);\n            graph.setItemState(edge, _this.selectedState, true);\n          }\n        });\n      });\n    }\n\n    this.selectedEdges = selectedEdges;\n    this.selectedNodes = selectedNodes;\n\n    if (this.onSelect) {\n      this.onSelect(selectedNodes, selectedEdges);\n    }\n\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: selectedNodes,\n        edges: selectedEdges\n      },\n      select: true\n    });\n  },\n  createBrush: function createBrush() {\n    var self = this;\n    var brush = self.graph.get('canvas').addShape('rect', {\n      attrs: self.brushStyle,\n      capture: false,\n      name: 'brush-shape'\n    });\n    this.brush = brush;\n    this.delegate = brush;\n    return brush;\n  },\n  updateBrush: function updateBrush(e) {\n    var originPoint = this.originPoint;\n    this.brush.attr({\n      width: abs(e.canvasX - originPoint.x),\n      height: abs(e.canvasY - originPoint.y),\n      x: min(e.canvasX, originPoint.x),\n      y: min(e.canvasY, originPoint.y)\n    });\n  },\n  onKeyDown: function onKeyDown(e) {\n    var code = e.key;\n\n    if (!code) {\n      return;\n    }\n\n    var triggerLowerCase = this.trigger.toLowerCase();\n    var codeLowerCase = code.toLowerCase(); // 按住 control 键时，允许用户设置 trigger 为 ctrl\n\n    if (codeLowerCase === triggerLowerCase || codeLowerCase === 'control' && triggerLowerCase === 'ctrl' || codeLowerCase === 'ctrl' && triggerLowerCase === 'control') {\n      this.keydown = true;\n    } else {\n      this.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    if (this.brush) {\n      // 清除所有选中状态后，设置拖得动状态为false，并清除框选的brush\n      this.brush.remove(true);\n      this.brush = null;\n      this.dragging = false;\n    }\n\n    this.keydown = false;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}