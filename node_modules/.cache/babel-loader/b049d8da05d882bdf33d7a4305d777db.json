{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.width = exports.sep = exports.positionX = exports.balance = exports.alignCoordinates = exports.findSmallestWidthAlignment = exports.buildBlockGraph = exports.horizontalCompaction = exports.verticalAlignment = exports.hasConflict = exports.addConflict = exports.findOtherInnerSegmentNode = exports.findType2Conflicts = exports.findType1Conflicts = void 0;\n/*\n * This module provides coordinate assignment based on Brandes and KÃ¶pf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nvar graphlib_1 = require(\"@antv/graphlib\");\n\nvar util_1 = require(\"../util\");\n\nvar BlockGraph =\n/** @class */\nfunction (_super) {\n  __extends(BlockGraph, _super);\n\n  function BlockGraph() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return BlockGraph;\n}(graphlib_1.Graph);\n\nvar findType1Conflicts = function (g, layering) {\n  var conflicts = {};\n\n  var visitLayer = function (prevLayer, layer) {\n    // last visited node in the previous layer that is incident on an inner\n    // segment.\n    var k0 = 0; // Tracks the last node in this layer scanned for crossings with a type-1\n    // segment.\n\n    var scanPos = 0;\n    var prevLayerLength = prevLayer.length;\n    var lastNode = layer === null || layer === void 0 ? void 0 : layer[(layer === null || layer === void 0 ? void 0 : layer.length) - 1];\n    layer === null || layer === void 0 ? void 0 : layer.forEach(function (v, i) {\n      var _a;\n\n      var w = (0, exports.findOtherInnerSegmentNode)(g, v);\n      var k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        (_a = layer.slice(scanPos, i + 1)) === null || _a === void 0 ? void 0 : _a.forEach(function (scanNode) {\n          var _a;\n\n          (_a = g.predecessors(scanNode)) === null || _a === void 0 ? void 0 : _a.forEach(function (u) {\n            var _a;\n\n            var uLabel = g.node(u);\n            var uPos = uLabel.order;\n\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && ((_a = g.node(scanNode)) === null || _a === void 0 ? void 0 : _a.dummy))) {\n              (0, exports.addConflict)(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n    return layer;\n  };\n\n  if (layering === null || layering === void 0 ? void 0 : layering.length) {\n    layering.reduce(visitLayer);\n  }\n\n  return conflicts;\n};\n\nexports.findType1Conflicts = findType1Conflicts;\n\nvar findType2Conflicts = function (g, layering) {\n  var conflicts = {};\n\n  var scan = function (south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    var range = [];\n\n    for (var i = southPos; i < southEnd; i++) {\n      range.push(i);\n    }\n\n    range.forEach(function (i) {\n      var _a, _b;\n\n      v = south[i];\n\n      if ((_a = g.node(v)) === null || _a === void 0 ? void 0 : _a.dummy) {\n        (_b = g.predecessors(v)) === null || _b === void 0 ? void 0 : _b.forEach(function (u) {\n          var uNode = g.node(u);\n\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            (0, exports.addConflict)(conflicts, u, v);\n          }\n        });\n      }\n    });\n  };\n\n  var visitLayer = function (north, south) {\n    var prevNorthPos = -1;\n    var nextNorthPos;\n    var southPos = 0;\n    south === null || south === void 0 ? void 0 : south.forEach(function (v, southLookahead) {\n      var _a;\n\n      if (((_a = g.node(v)) === null || _a === void 0 ? void 0 : _a.dummy) === \"border\") {\n        var predecessors = g.predecessors(v) || [];\n\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n    return south;\n  };\n\n  if (layering === null || layering === void 0 ? void 0 : layering.length) {\n    layering.reduce(visitLayer);\n  }\n\n  return conflicts;\n};\n\nexports.findType2Conflicts = findType2Conflicts;\n\nvar findOtherInnerSegmentNode = function (g, v) {\n  var _a, _b;\n\n  if ((_a = g.node(v)) === null || _a === void 0 ? void 0 : _a.dummy) {\n    return (_b = g.predecessors(v)) === null || _b === void 0 ? void 0 : _b.find(function (u) {\n      return g.node(u).dummy;\n    });\n  }\n};\n\nexports.findOtherInnerSegmentNode = findOtherInnerSegmentNode;\n\nvar addConflict = function (conflicts, v, w) {\n  var vv = v;\n  var ww = w;\n\n  if (vv > ww) {\n    var tmp = vv;\n    vv = ww;\n    ww = tmp;\n  }\n\n  var conflictsV = conflicts[vv];\n\n  if (!conflictsV) {\n    conflicts[vv] = conflictsV = {};\n  }\n\n  conflictsV[ww] = true;\n};\n\nexports.addConflict = addConflict;\n\nvar hasConflict = function (conflicts, v, w) {\n  var vv = v;\n  var ww = w;\n\n  if (vv > ww) {\n    var tmp = v;\n    vv = ww;\n    ww = tmp;\n  }\n\n  return !!conflicts[vv];\n};\n\nexports.hasConflict = hasConflict;\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\n\nvar verticalAlignment = function (g, layering, conflicts, neighborFn) {\n  var root = {};\n  var align = {};\n  var pos = {}; // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n\n  layering === null || layering === void 0 ? void 0 : layering.forEach(function (layer) {\n    layer === null || layer === void 0 ? void 0 : layer.forEach(function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n  layering === null || layering === void 0 ? void 0 : layering.forEach(function (layer) {\n    var prevIdx = -1;\n    layer === null || layer === void 0 ? void 0 : layer.forEach(function (v) {\n      var ws = neighborFn(v);\n\n      if (ws.length) {\n        ws = ws.sort(function (a, b) {\n          return pos[a] - pos[b];\n        });\n        var mp = (ws.length - 1) / 2;\n\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n\n          if (align[v] === v && prevIdx < pos[w] && !(0, exports.hasConflict)(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n  return {\n    root: root,\n    align: align\n  };\n};\n\nexports.verticalAlignment = verticalAlignment;\n\nvar horizontalCompaction = function (g, layering, root, align, reverseSep) {\n  var _a; // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n\n\n  var xs = {};\n  var blockG = (0, exports.buildBlockGraph)(g, layering, root, reverseSep);\n  var borderType = reverseSep ? \"borderLeft\" : \"borderRight\";\n\n  var iterate = function (setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }; // First pass, assign smallest coordinates\n\n\n  var pass1 = function (elem) {\n    xs[elem] = (blockG.inEdges(elem) || []).reduce(function (acc, e) {\n      return Math.max(acc, (xs[e.v] || 0) + blockG.edge(e));\n    }, 0);\n  }; // Second pass, assign greatest coordinates\n\n\n  var pass2 = function (elem) {\n    var min = (blockG.outEdges(elem) || []).reduce(function (acc, e) {\n      return Math.min(acc, (xs[e.w] || 0) - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n    var node = g.node(elem);\n\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  };\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG)); // Assign x coordinates to all nodes\n\n  (_a = Object.values(align)) === null || _a === void 0 ? void 0 : _a.forEach(function (v) {\n    xs[v] = xs[root[v]];\n  });\n  return xs;\n};\n\nexports.horizontalCompaction = horizontalCompaction;\n\nvar buildBlockGraph = function (g, layering, root, reverseSep) {\n  var blockGraph = new BlockGraph();\n  var graphLabel = g.graph();\n  var sepFn = (0, exports.sep)(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n  layering === null || layering === void 0 ? void 0 : layering.forEach(function (layer) {\n    var u;\n    layer === null || layer === void 0 ? void 0 : layer.forEach(function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n\n      if (u) {\n        var uRoot = root[u];\n        var prevMax = blockGraph.edgeFromArgs(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n\n      u = v;\n    });\n  });\n  return blockGraph;\n};\n\nexports.buildBlockGraph = buildBlockGraph;\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\n\nvar findSmallestWidthAlignment = function (g, xss) {\n  return (0, util_1.minBy)(Object.values(xss), function (xs) {\n    var _a;\n\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n    (_a = Object.keys(xs)) === null || _a === void 0 ? void 0 : _a.forEach(function (v) {\n      var x = xs[v];\n      var halfWidth = (0, exports.width)(g, v) / 2;\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n    return max - min;\n  });\n};\n\nexports.findSmallestWidthAlignment = findSmallestWidthAlignment;\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\n\nfunction alignCoordinates(xss, alignTo) {\n  // @ts-ignore\n  var alignToVals = Object.values(alignTo);\n  var alignToMin = Math.min.apply(Math, alignToVals);\n  var alignToMax = Math.max.apply(Math, alignToVals);\n  [\"u\", \"d\"].forEach(function (vert) {\n    [\"l\", \"r\"].forEach(function (horiz) {\n      var alignment = vert + horiz;\n      var xs = xss[alignment];\n      var delta;\n      if (xs === alignTo) return;\n      var xsVals = Object.values(xs);\n      delta = horiz === \"l\" ? alignToMin - Math.min.apply(Math, xsVals) : alignToMax - Math.max.apply(Math, xsVals);\n\n      if (delta) {\n        xss[alignment] = {};\n        Object.keys(xs).forEach(function (key) {\n          xss[alignment][key] = xs[key] + delta;\n        });\n      }\n    });\n  });\n}\n\nexports.alignCoordinates = alignCoordinates;\n\nvar balance = function (xss, align) {\n  var result = {};\n  Object.keys(xss.ul).forEach(function (key) {\n    if (align) {\n      result[key] = xss[align.toLowerCase()][key];\n    } else {\n      var values = Object.values(xss).map(function (x) {\n        return x[key];\n      });\n      var xs = values.sort(function (a, b) {\n        return a - b;\n      });\n      result[key] = (xs[1] + xs[2]) / 2;\n    }\n  });\n  return result;\n};\n\nexports.balance = balance;\n\nvar positionX = function (g) {\n  var layering = (0, util_1.buildLayerMatrix)(g);\n  var conflicts = Object.assign((0, exports.findType1Conflicts)(g, layering), (0, exports.findType2Conflicts)(g, layering));\n  var xss = {};\n  var adjustedLayering;\n  [\"u\", \"d\"].forEach(function (vert) {\n    adjustedLayering = vert === \"u\" ? layering : Object.values(layering).reverse();\n    [\"l\", \"r\"].forEach(function (horiz) {\n      if (horiz === \"r\") {\n        adjustedLayering = adjustedLayering.map(function (inner) {\n          return Object.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === \"u\" ? g.predecessors : g.successors).bind(g);\n      var align = (0, exports.verticalAlignment)(g, adjustedLayering, conflicts, neighborFn);\n      var xs = (0, exports.horizontalCompaction)(g, adjustedLayering, align.root, align.align, horiz === \"r\");\n\n      if (horiz === \"r\") {\n        Object.keys(xs).forEach(function (key) {\n          xs[key] = -xs[key];\n        });\n      }\n\n      xss[vert + horiz] = xs;\n    });\n  });\n  var smallestWidth = (0, exports.findSmallestWidthAlignment)(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return (0, exports.balance)(xss, g.graph().align);\n};\n\nexports.positionX = positionX;\n\nvar sep = function (nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n    sum += vLabel.width / 2;\n\n    if (vLabel.hasOwnProperty(\"labelpos\")) {\n      switch ((vLabel.labelpos || \"\").toLowerCase()) {\n        case \"l\":\n          delta = -vLabel.width / 2;\n          break;\n\n        case \"r\":\n          delta = vLabel.width / 2;\n          break;\n      }\n    }\n\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n\n    delta = 0;\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += wLabel.width / 2;\n\n    if (wLabel.labelpos) {\n      switch ((wLabel.labelpos || \"\").toLowerCase()) {\n        case \"l\":\n          delta = wLabel.width / 2;\n          break;\n\n        case \"r\":\n          delta = -wLabel.width / 2;\n          break;\n      }\n    }\n\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n\n    delta = 0;\n    return sum;\n  };\n};\n\nexports.sep = sep;\n\nvar width = function (g, v) {\n  return g.node(v).width || 0;\n};\n\nexports.width = width;","map":{"version":3,"mappings":"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","names":["__extends","graphlib_1","findType1Conflicts","g","layering","conflicts","visitLayer","prevLayer","layer","k0","scanPos","prevLayerLength","length","lastNode","forEach","v","i","w","k1","node","order","slice","_a","scanNode","predecessors","u","uLabel","uPos","dummy","reduce","exports","findType2Conflicts","scan","south","southPos","southEnd","prevNorthBorder","nextNorthBorder","range","push","_b","uNode","north","prevNorthPos","nextNorthPos","southLookahead","findOtherInnerSegmentNode","find","addConflict","vv","ww","tmp","conflictsV","hasConflict","verticalAlignment","neighborFn","root","align","pos","prevIdx","ws","sort","a","b","mp","Math","floor","il","ceil","horizontalCompaction","reverseSep","xs","blockG","borderType","iterate","setXsFunc","nextNodesFunc","stack","nodes","elem","pop","visited","concat","pass1","inEdges","acc","e","max","edge","pass2","min","outEdges","Number","POSITIVE_INFINITY","bind","successors","values","buildBlockGraph","blockGraph","BlockGraph","graphLabel","graph","sepFn","nodesep","edgesep","vRoot","setNode","uRoot","prevMax","edgeFromArgs","setEdge","findSmallestWidthAlignment","xss","Object","NEGATIVE_INFINITY","keys","x","halfWidth","alignCoordinates","alignTo","alignToVals","alignToMin","apply","alignToMax","vert","horiz","alignment","delta","xsVals","key","balance","result","ul","toLowerCase","map","positionX","assign","adjustedLayering","reverse","inner","smallestWidth","sep","nodeSep","edgeSep","vLabel","wLabel","sum","width","hasOwnProperty","labelpos"],"sourceRoot":"","sources":["../../../../../src/layout/dagre/src/position/bk.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}