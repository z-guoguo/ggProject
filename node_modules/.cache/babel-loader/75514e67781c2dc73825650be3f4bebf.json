{"ast":null,"code":"import { Point } from '../../geometry';\nimport { Dom, NumberExt, FunctionExt } from '../../util';\nimport { ToolsView } from '../../view/tool';\nimport * as Util from './util';\nexport class Button extends ToolsView.ToolItem {\n  onRender() {\n    Dom.addClass(this.container, this.prefixClassName('cell-tool-button'));\n    this.update();\n  }\n\n  update() {\n    this.updatePosition();\n    return this;\n  }\n\n  updatePosition() {\n    const view = this.cellView;\n    const matrix = view.cell.isEdge() ? this.getEdgeMatrix() : this.getNodeMatrix();\n    Dom.transform(this.container, matrix, {\n      absolute: true\n    });\n  }\n\n  getNodeMatrix() {\n    const view = this.cellView;\n    const options = this.options;\n    let {\n      x = 0,\n      y = 0\n    } = options;\n    const {\n      offset,\n      useCellGeometry,\n      rotate\n    } = options;\n    let bbox = Util.getViewBBox(view, useCellGeometry);\n    const angle = view.cell.getAngle();\n\n    if (!rotate) {\n      bbox = bbox.bbox(angle);\n    }\n\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (typeof offset === 'number') {\n      offsetX = offset;\n      offsetY = offset;\n    } else if (typeof offset === 'object') {\n      offsetX = offset.x;\n      offsetY = offset.y;\n    }\n\n    x = NumberExt.normalizePercentage(x, bbox.width);\n    y = NumberExt.normalizePercentage(y, bbox.height);\n    let matrix = Dom.createSVGMatrix().translate(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2);\n\n    if (rotate) {\n      matrix = matrix.rotate(angle);\n    }\n\n    matrix = matrix.translate(x + offsetX - bbox.width / 2, y + offsetY - bbox.height / 2);\n    return matrix;\n  }\n\n  getEdgeMatrix() {\n    const view = this.cellView;\n    const options = this.options;\n    const {\n      offset = 0,\n      distance = 0,\n      rotate\n    } = options;\n    let tangent;\n    let position;\n    let angle;\n\n    if (NumberExt.isPercentage(distance)) {\n      tangent = view.getTangentAtRatio(parseFloat(distance) / 100);\n    } else {\n      tangent = view.getTangentAtLength(distance);\n    }\n\n    if (tangent) {\n      position = tangent.start;\n      angle = tangent.vector().vectorAngle(new Point(1, 0)) || 0;\n    } else {\n      position = view.getConnection().start;\n      angle = 0;\n    }\n\n    let matrix = Dom.createSVGMatrix().translate(position.x, position.y).rotate(angle);\n\n    if (typeof offset === 'object') {\n      matrix = matrix.translate(offset.x || 0, offset.y || 0);\n    } else {\n      matrix = matrix.translate(0, offset);\n    }\n\n    if (!rotate) {\n      matrix = matrix.rotate(-angle);\n    }\n\n    return matrix;\n  }\n\n  onMouseDown(e) {\n    if (this.guard(e)) {\n      return;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    const onClick = this.options.onClick;\n\n    if (typeof onClick === 'function') {\n      FunctionExt.call(onClick, this.cellView, {\n        e,\n        view: this.cellView,\n        cell: this.cellView.cell,\n        btn: this\n      });\n    }\n  }\n\n}\n\n(function (Button) {\n  Button.config({\n    name: 'button',\n    events: {\n      mousedown: 'onMouseDown',\n      touchstart: 'onMouseDown'\n    }\n  });\n})(Button || (Button = {}));\n\n(function (Button) {\n  Button.Remove = Button.define({\n    name: 'button-remove',\n    markup: [{\n      tagName: 'circle',\n      selector: 'button',\n      attrs: {\n        r: 7,\n        fill: '#FF1D00',\n        cursor: 'pointer'\n      }\n    }, {\n      tagName: 'path',\n      selector: 'icon',\n      attrs: {\n        d: 'M -3 -3 3 3 M -3 3 3 -3',\n        fill: 'none',\n        stroke: '#FFFFFF',\n        'stroke-width': 2,\n        'pointer-events': 'none'\n      }\n    }],\n    distance: 60,\n    offset: 0,\n\n    onClick({\n      view,\n      btn\n    }) {\n      btn.parent.remove();\n      view.cell.remove({\n        ui: true,\n        toolId: btn.cid\n      });\n    }\n\n  });\n})(Button || (Button = {}));","map":{"version":3,"mappings":"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","names":["Point","Dom","NumberExt","FunctionExt","ToolsView","Util","Button","ToolItem","onRender","addClass","container","prefixClassName","update","updatePosition","view","cellView","matrix","cell","isEdge","getEdgeMatrix","getNodeMatrix","transform","absolute","options","x","y","offset","useCellGeometry","rotate","bbox","getViewBBox","angle","getAngle","offsetX","offsetY","normalizePercentage","width","height","createSVGMatrix","translate","distance","tangent","position","isPercentage","getTangentAtRatio","parseFloat","getTangentAtLength","start","vector","vectorAngle","getConnection","onMouseDown","e","guard","stopPropagation","preventDefault","onClick","call","btn","config","name","events","mousedown","touchstart","define","markup","tagName","selector","attrs","r","fill","cursor","d","stroke","parent","remove","ui","toolId","cid"],"sourceRoot":"","sources":["../../../src/registry/tool/button.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}