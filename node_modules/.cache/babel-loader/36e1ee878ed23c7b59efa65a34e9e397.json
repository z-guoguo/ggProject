{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Cubic as CubicUtil } from '@antv/g-math';\nimport { each, isNil } from '@antv/util';\nimport ShapeBase from './base';\nimport { path2Absolute, path2Segments } from '@antv/path-util';\nimport { drawPath } from '../util/draw';\nimport isPointInPath from '../util/in-path/point-in-path';\nimport isInPolygon from '../util/in-path/polygon';\nimport PathUtil from '../util/path';\nimport * as ArrowUtil from '../util/arrow'; // 是否在多个多边形内部\n\nfunction isInPolygons(polygons, x, y) {\n  var isHit = false;\n\n  for (var i = 0; i < polygons.length; i++) {\n    var points = polygons[i];\n    isHit = isInPolygon(points, x, y);\n\n    if (isHit) {\n      break;\n    }\n  }\n\n  return isHit;\n}\n\nvar Path =\n/** @class */\nfunction (_super) {\n  __extends(Path, _super);\n\n  function Path() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Path.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      startArrow: false,\n      endArrow: false\n    });\n  };\n\n  Path.prototype.initAttrs = function (attrs) {\n    this._setPathArr(attrs.path);\n\n    this.setArrow();\n  }; // 更新属性时，检测是否更改了 path\n\n\n  Path.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n\n    if (name === 'path') {\n      this._setPathArr(value);\n    } // 由于箭头的绘制依赖于 line 的诸多 attrs，因此这里不再对每个 attr 进行判断，attr 每次变化都会影响箭头的更新\n\n\n    this.setArrow();\n  }; // 将 path 转换成绝对路径\n\n\n  Path.prototype._setPathArr = function (path) {\n    // 转换 path 的格式\n    this.attrs.path = path2Absolute(path);\n    var hasArc = PathUtil.hasArc(path); // 为了加速 path 的绘制、拾取和计算，这个地方可以缓存很多东西\n    // 这些缓存都是第一次需要时计算和存储，虽然增加了复杂度，但是频繁调用的方法，性能有很大提升\n\n    this.set('hasArc', hasArc);\n    this.set('paramsCache', {}); // 清理缓存\n\n    this.set('segments', null); // 延迟生成 path，在动画场景下可能不会有拾取\n\n    this.set('curve', null);\n    this.set('tCache', null);\n    this.set('totalLength', null);\n  };\n\n  Path.prototype.getSegments = function () {\n    var segments = this.get('segements');\n\n    if (!segments) {\n      segments = path2Segments(this.attr('path'));\n      this.set('segments', segments);\n    }\n\n    return segments;\n  };\n\n  Path.prototype.setArrow = function () {\n    var attrs = this.attr();\n    var startArrow = attrs.startArrow,\n        endArrow = attrs.endArrow;\n\n    if (startArrow) {\n      var tangent = this.getStartTangent();\n      ArrowUtil.addStartArrow(this, attrs, tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1]);\n    }\n\n    if (endArrow) {\n      var tangent = this.getEndTangent();\n      ArrowUtil.addEndArrow(this, attrs, tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1]);\n    }\n  };\n\n  Path.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n    var segments = this.getSegments();\n    var hasArc = this.get('hasArc');\n    var isHit = false;\n\n    if (isStroke) {\n      var length_1 = this.getTotalLength();\n      isHit = PathUtil.isPointInStroke(segments, lineWidth, x, y, length_1);\n    }\n\n    if (!isHit && isFill) {\n      if (hasArc) {\n        // 存在曲线时，暂时使用 canvas 的 api 计算，后续可以进行多边形切割\n        isHit = isPointInPath(this, x, y);\n      } else {\n        var path = this.attr('path');\n        var extractResutl = PathUtil.extractPolygons(path); // 提取出来的多边形包含闭合的和非闭合的，在这里统一按照多边形处理\n\n        isHit = isInPolygons(extractResutl.polygons, x, y) || isInPolygons(extractResutl.polylines, x, y);\n      }\n    }\n\n    return isHit;\n  };\n\n  Path.prototype.createPath = function (context) {\n    var attrs = this.attr();\n    var paramsCache = this.get('paramsCache'); // 由于计算圆弧的参数成本很大，所以要缓存\n\n    drawPath(this, context, attrs, paramsCache);\n  };\n\n  Path.prototype.afterDrawPath = function (context) {\n    var startArrowShape = this.get('startArrowShape');\n    var endArrowShape = this.get('endArrowShape');\n\n    if (startArrowShape) {\n      startArrowShape.draw(context);\n    }\n\n    if (endArrowShape) {\n      endArrowShape.draw(context);\n    }\n  };\n  /**\n   * Get total length of path\n   * @return {number} length\n   */\n\n\n  Path.prototype.getTotalLength = function () {\n    var totalLength = this.get('totalLength');\n\n    if (!isNil(totalLength)) {\n      return totalLength;\n    }\n\n    this._calculateCurve();\n\n    this._setTcache();\n\n    return this.get('totalLength');\n  };\n  /**\n   * Get point according to ratio\n   * @param {number} ratio\n   * @return {Point} point\n   */\n\n\n  Path.prototype.getPoint = function (ratio) {\n    var tCache = this.get('tCache');\n\n    if (!tCache) {\n      this._calculateCurve();\n\n      this._setTcache();\n\n      tCache = this.get('tCache');\n    }\n\n    var subt;\n    var index;\n    var curve = this.get('curve');\n\n    if (!tCache || tCache.length === 0) {\n      if (curve) {\n        return {\n          x: curve[0][1],\n          y: curve[0][2]\n        };\n      }\n\n      return null;\n    }\n\n    each(tCache, function (v, i) {\n      if (ratio >= v[0] && ratio <= v[1]) {\n        subt = (ratio - v[0]) / (v[1] - v[0]);\n        index = i;\n      }\n    });\n    var seg = curve[index];\n\n    if (isNil(seg) || isNil(index)) {\n      return null;\n    }\n\n    var l = seg.length;\n    var nextSeg = curve[index + 1];\n    return CubicUtil.pointAt(seg[l - 2], seg[l - 1], nextSeg[1], nextSeg[2], nextSeg[3], nextSeg[4], nextSeg[5], nextSeg[6], subt);\n  };\n\n  Path.prototype._calculateCurve = function () {\n    var path = this.attr().path;\n    this.set('curve', PathUtil.pathToCurve(path));\n  };\n\n  Path.prototype._setTcache = function () {\n    var totalLength = 0;\n    var tempLength = 0; // 每段 curve 对应起止点的长度比例列表，形如: [[0, 0.25], [0.25, 0.6]. [0.6, 0.9], [0.9, 1]]\n\n    var tCache = [];\n    var segmentT;\n    var segmentL;\n    var segmentN;\n    var l;\n    var curve = this.get('curve');\n\n    if (!curve) {\n      return;\n    }\n\n    each(curve, function (segment, i) {\n      segmentN = curve[i + 1];\n      l = segment.length;\n\n      if (segmentN) {\n        totalLength += CubicUtil.length(segment[l - 2], segment[l - 1], segmentN[1], segmentN[2], segmentN[3], segmentN[4], segmentN[5], segmentN[6]) || 0;\n      }\n    });\n    this.set('totalLength', totalLength);\n\n    if (totalLength === 0) {\n      this.set('tCache', []);\n      return;\n    }\n\n    each(curve, function (segment, i) {\n      segmentN = curve[i + 1];\n      l = segment.length;\n\n      if (segmentN) {\n        segmentT = [];\n        segmentT[0] = tempLength / totalLength;\n        segmentL = CubicUtil.length(segment[l - 2], segment[l - 1], segmentN[1], segmentN[2], segmentN[3], segmentN[4], segmentN[5], segmentN[6]); // 当 path 不连续时，segmentL 可能为空，为空时需要作为 0 处理\n\n        tempLength += segmentL || 0;\n        segmentT[1] = tempLength / totalLength;\n        tCache.push(segmentT);\n      }\n    });\n    this.set('tCache', tCache);\n  };\n  /**\n   * Get start tangent vector\n   * @return {Array}\n   */\n\n\n  Path.prototype.getStartTangent = function () {\n    var segments = this.getSegments();\n    var result;\n\n    if (segments.length > 1) {\n      var startPoint = segments[0].currentPoint;\n      var endPoint = segments[1].currentPoint;\n      var tangent = segments[1].startTangent;\n      result = [];\n\n      if (tangent) {\n        result.push([startPoint[0] - tangent[0], startPoint[1] - tangent[1]]);\n        result.push([startPoint[0], startPoint[1]]);\n      } else {\n        result.push([endPoint[0], endPoint[1]]);\n        result.push([startPoint[0], startPoint[1]]);\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Get end tangent vector\n   * @return {Array}\n   */\n\n\n  Path.prototype.getEndTangent = function () {\n    var segments = this.getSegments();\n    var length = segments.length;\n    var result;\n\n    if (length > 1) {\n      var startPoint = segments[length - 2].currentPoint;\n      var endPoint = segments[length - 1].currentPoint;\n      var tangent = segments[length - 1].endTangent;\n      result = [];\n\n      if (tangent) {\n        result.push([endPoint[0] - tangent[0], endPoint[1] - tangent[1]]);\n        result.push([endPoint[0], endPoint[1]]);\n      } else {\n        result.push([startPoint[0], startPoint[1]]);\n        result.push([endPoint[0], endPoint[1]]);\n      }\n    }\n\n    return result;\n  };\n\n  return Path;\n}(ShapeBase);\n\nexport default Path;","map":{"version":3,"mappings":"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","names":["Cubic","CubicUtil","each","isNil","ShapeBase","path2Absolute","path2Segments","drawPath","isPointInPath","isInPolygon","PathUtil","ArrowUtil","isInPolygons","polygons","x","y","isHit","i","length","points","__extends","Path","attrs","_super","getDefaultAttrs","call","startArrow","endArrow","_setPathArr","path","setArrow","name","value","originValue","onAttrChange","hasArc","set","segments","get","attr","tangent","getStartTangent","addStartArrow","getEndTangent","addEndArrow","isStroke","isFill","lineWidth","getSegments","length_1","getTotalLength","isPointInStroke","extractResutl","extractPolygons","polylines","context","paramsCache","startArrowShape","endArrowShape","draw","totalLength","_calculateCurve","_setTcache","ratio","tCache","subt","index","curve","v","seg","l","nextSeg","pointAt","pathToCurve","tempLength","segmentT","segmentL","segmentN","segment","push","result","startPoint","currentPoint","endPoint","startTangent","endTangent"],"sourceRoot":"","sources":["../../src/shape/path.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}