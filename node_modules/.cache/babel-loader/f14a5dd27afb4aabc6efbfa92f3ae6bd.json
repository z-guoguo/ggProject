{"ast":null,"code":"import { Point } from '../point';\nconst regexSupportedData = new RegExp(`^[\\\\s\\\\dLMCZz,.]*$`);\nexport function isValid(data) {\n  if (typeof data !== 'string') {\n    return false;\n  }\n\n  return regexSupportedData.test(data);\n}\n/**\n * Returns the remainder of division of `n` by `m`. You should use this\n * instead of the built-in operation as the built-in operation does not\n * properly handle negative numbers.\n */\n\nfunction mod(n, m) {\n  return (n % m + m) % m;\n}\n\nfunction draw(points, round, initialMove, close, exclude) {\n  const data = [];\n  const end = points[points.length - 1];\n  const rounded = round != null && round > 0;\n  const arcSize = round || 0; // Adds virtual waypoint in the center between start and end point\n\n  if (close && rounded) {\n    points = points.slice(); // eslint-disable-line\n\n    const p0 = points[0];\n    const wp = new Point(end.x + (p0.x - end.x) / 2, end.y + (p0.y - end.y) / 2);\n    points.splice(0, 0, wp);\n  }\n\n  let pt = points[0];\n  let i = 1; // Draws the line segments\n\n  if (initialMove) {\n    data.push('M', pt.x, pt.y);\n  } else {\n    data.push('L', pt.x, pt.y);\n  }\n\n  while (i < (close ? points.length : points.length - 1)) {\n    let tmp = points[mod(i, points.length)];\n    let dx = pt.x - tmp.x;\n    let dy = pt.y - tmp.y;\n\n    if (rounded && (dx !== 0 || dy !== 0) && (exclude == null || exclude.indexOf(i - 1) < 0)) {\n      // Draws a line from the last point to the current\n      // point with a spacing of size off the current point\n      // into direction of the last point\n      let dist = Math.sqrt(dx * dx + dy * dy);\n      const nx1 = dx * Math.min(arcSize, dist / 2) / dist;\n      const ny1 = dy * Math.min(arcSize, dist / 2) / dist;\n      const x1 = tmp.x + nx1;\n      const y1 = tmp.y + ny1;\n      data.push('L', x1, y1); // Draws a curve from the last point to the current\n      // point with a spacing of size off the current point\n      // into direction of the next point\n\n      let next = points[mod(i + 1, points.length)]; // Uses next non-overlapping point\n\n      while (i < points.length - 2 && Math.round(next.x - tmp.x) === 0 && Math.round(next.y - tmp.y) === 0) {\n        next = points[mod(i + 2, points.length)];\n        i += 1;\n      }\n\n      dx = next.x - tmp.x;\n      dy = next.y - tmp.y;\n      dist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n      const nx2 = dx * Math.min(arcSize, dist / 2) / dist;\n      const ny2 = dy * Math.min(arcSize, dist / 2) / dist;\n      const x2 = tmp.x + nx2;\n      const y2 = tmp.y + ny2;\n      data.push('Q', tmp.x, tmp.y, x2, y2);\n      tmp = new Point(x2, y2);\n    } else {\n      data.push('L', tmp.x, tmp.y);\n    }\n\n    pt = tmp;\n    i += 1;\n  }\n\n  if (close) {\n    data.push('Z');\n  } else {\n    data.push('L', end.x, end.y);\n  }\n\n  return data.map(v => typeof v === 'string' ? v : +v.toFixed(3)).join(' ');\n}\n\nexport function drawPoints(points, options = {}) {\n  const pts = [];\n\n  if (points && points.length) {\n    points.forEach(p => {\n      if (Array.isArray(p)) {\n        pts.push({\n          x: p[0],\n          y: p[1]\n        });\n      } else {\n        pts.push({\n          x: p.x,\n          y: p.y\n        });\n      }\n    });\n  }\n\n  return draw(pts, options.round, options.initialMove == null || options.initialMove, options.close, options.exclude);\n}\n/**\n * Converts the given arc to a series of curves.\n */\n\nexport function arcToCurves(x0, y0, r1, r2, angle = 0, largeArcFlag = 0, sweepFlag = 0, x, y) {\n  if (r1 === 0 || r2 === 0) {\n    return [];\n  }\n\n  x -= x0; // eslint-disable-line\n\n  y -= y0; // eslint-disable-line\n\n  r1 = Math.abs(r1); // eslint-disable-line\n\n  r2 = Math.abs(r2); // eslint-disable-line\n\n  const ctx = -x / 2;\n  const cty = -y / 2;\n  const cpsi = Math.cos(angle * Math.PI / 180);\n  const spsi = Math.sin(angle * Math.PI / 180);\n  const rxd = cpsi * ctx + spsi * cty;\n  const ryd = -1 * spsi * ctx + cpsi * cty;\n  const rxdd = rxd * rxd;\n  const rydd = ryd * ryd;\n  const r1x = r1 * r1;\n  const r2y = r2 * r2;\n  const lamda = rxdd / r1x + rydd / r2y;\n  let sds;\n\n  if (lamda > 1) {\n    r1 = Math.sqrt(lamda) * r1; // eslint-disable-line\n\n    r2 = Math.sqrt(lamda) * r2; // eslint-disable-line\n\n    sds = 0;\n  } else {\n    let seif = 1;\n\n    if (largeArcFlag === sweepFlag) {\n      seif = -1;\n    }\n\n    sds = seif * Math.sqrt((r1x * r2y - r1x * rydd - r2y * rxdd) / (r1x * rydd + r2y * rxdd));\n  }\n\n  const txd = sds * r1 * ryd / r2;\n  const tyd = -1 * sds * r2 * rxd / r1;\n  const tx = cpsi * txd - spsi * tyd + x / 2;\n  const ty = spsi * txd + cpsi * tyd + y / 2;\n  let rad = Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1) - Math.atan2(0, 1);\n  let s1 = rad >= 0 ? rad : 2 * Math.PI + rad;\n  rad = Math.atan2((-ryd - tyd) / r2, (-rxd - txd) / r1) - Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1);\n  let dr = rad >= 0 ? rad : 2 * Math.PI + rad;\n\n  if (sweepFlag === 0 && dr > 0) {\n    dr -= 2 * Math.PI;\n  } else if (sweepFlag !== 0 && dr < 0) {\n    dr += 2 * Math.PI;\n  }\n\n  const sse = dr * 2 / Math.PI;\n  const seg = Math.ceil(sse < 0 ? -1 * sse : sse);\n  const segr = dr / seg;\n  const t = 8 / 3 * Math.sin(segr / 4) * Math.sin(segr / 4) / Math.sin(segr / 2);\n  const cpsir1 = cpsi * r1;\n  const cpsir2 = cpsi * r2;\n  const spsir1 = spsi * r1;\n  const spsir2 = spsi * r2;\n  let mc = Math.cos(s1);\n  let ms = Math.sin(s1);\n  let x2 = -t * (cpsir1 * ms + spsir2 * mc);\n  let y2 = -t * (spsir1 * ms - cpsir2 * mc);\n  let x3 = 0;\n  let y3 = 0;\n  const result = [];\n\n  for (let n = 0; n < seg; n += 1) {\n    s1 += segr;\n    mc = Math.cos(s1);\n    ms = Math.sin(s1);\n    x3 = cpsir1 * mc - spsir2 * ms + tx;\n    y3 = spsir1 * mc + cpsir2 * ms + ty;\n    const dx = -t * (cpsir1 * ms + spsir2 * mc);\n    const dy = -t * (spsir1 * ms - cpsir2 * mc); // CurveTo updates x0, y0 so need to restore it\n\n    const index = n * 6;\n    result[index] = Number(x2 + x0);\n    result[index + 1] = Number(y2 + y0);\n    result[index + 2] = Number(x3 - dx + x0);\n    result[index + 3] = Number(y3 - dy + y0);\n    result[index + 4] = Number(x3 + x0);\n    result[index + 5] = Number(y3 + y0);\n    x2 = x3 + dx;\n    y2 = y3 + dy;\n  }\n\n  return result.map(num => +num.toFixed(2));\n}\nexport function drawArc(startX, startY, rx, ry, xAxisRotation = 0, largeArcFlag = 0, sweepFlag = 0, stopX, stopY) {\n  const data = [];\n  const points = arcToCurves(startX, startY, rx, ry, xAxisRotation, largeArcFlag, sweepFlag, stopX, stopY);\n\n  if (points != null) {\n    for (let i = 0, ii = points.length; i < ii; i += 6) {\n      data.push('C', points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5]);\n    }\n  }\n\n  return data.join(' ');\n}","map":{"version":3,"mappings":"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","names":["Point","regexSupportedData","RegExp","isValid","data","test","mod","n","m","draw","points","round","initialMove","close","exclude","end","length","rounded","arcSize","slice","p0","wp","x","y","splice","pt","i","push","tmp","dx","dy","indexOf","dist","Math","sqrt","nx1","min","ny1","x1","y1","next","max","nx2","ny2","x2","y2","map","v","toFixed","join","drawPoints","options","pts","forEach","p","Array","isArray","arcToCurves","x0","y0","r1","r2","angle","largeArcFlag","sweepFlag","abs","ctx","cty","cpsi","cos","PI","spsi","sin","rxd","ryd","rxdd","rydd","r1x","r2y","lamda","sds","seif","txd","tyd","tx","ty","rad","atan2","s1","dr","sse","seg","ceil","segr","t","cpsir1","cpsir2","spsir1","spsir2","mc","ms","x3","y3","result","index","Number","num","drawArc","startX","startY","rx","ry","xAxisRotation","stopX","stopY","ii"],"sourceRoot":"","sources":["../../../src/geometry/path/util.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}