{"ast":null,"code":"/**\n * @fileoverview 椭圆\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base'; // 根据椭圆公式计算 x*x/rx*rx + y*y/ry*ry;\n\nfunction ellipseDistance(squareX, squareY, rx, ry) {\n  return squareX / (rx * rx) + squareY / (ry * ry);\n}\n\nvar Ellipse =\n/** @class */\nfunction (_super) {\n  __extends(Ellipse, _super);\n\n  function Ellipse() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Ellipse.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      rx: 0,\n      ry: 0\n    });\n  };\n\n  Ellipse.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n    var attrs = this.attr();\n    var halfLineWith = lineWidth / 2;\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var rx = attrs.rx,\n        ry = attrs.ry;\n    var squareX = (x - cx) * (x - cx);\n    var squareY = (y - cy) * (y - cy); // 使用椭圆的公式： x*x/rx*rx + y*y/ry*ry = 1;\n\n    if (isFill && isStroke) {\n      return ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\n    }\n\n    if (isFill) {\n      return ellipseDistance(squareX, squareY, rx, ry) <= 1;\n    }\n\n    if (isStroke) {\n      return ellipseDistance(squareX, squareY, rx - halfLineWith, ry - halfLineWith) >= 1 && ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\n    }\n\n    return false;\n  };\n\n  Ellipse.prototype.createPath = function (context) {\n    var attrs = this.attr();\n    var cx = attrs.x;\n    var cy = attrs.y;\n    var rx = attrs.rx;\n    var ry = attrs.ry;\n    context.beginPath(); // 兼容逻辑\n\n    if (context.ellipse) {\n      context.ellipse(cx, cy, rx, ry, 0, 0, Math.PI * 2, false);\n    } else {\n      // 如果不支持，则使用圆来绘制，进行变形\n      var r = rx > ry ? rx : ry;\n      var scaleX = rx > ry ? 1 : rx / ry;\n      var scaleY = rx > ry ? ry / rx : 1;\n      context.save();\n      context.translate(cx, cy);\n      context.scale(scaleX, scaleY);\n      context.arc(0, 0, r, 0, Math.PI * 2);\n      context.restore();\n      context.closePath();\n    }\n  };\n\n  return Ellipse;\n}(ShapeBase);\n\nexport default Ellipse;","map":{"version":3,"mappings":"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","names":["ShapeBase","ellipseDistance","squareX","squareY","rx","ry","__extends","Ellipse","attrs","_super","getDefaultAttrs","call","x","y","isStroke","isFill","lineWidth","attr","halfLineWith","cx","cy","context","beginPath","ellipse","Math","PI","r","scaleX","scaleY","save","translate","scale","arc","restore","closePath"],"sourceRoot":"","sources":["../../src/shape/ellipse.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}