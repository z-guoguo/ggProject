{"ast":null,"code":"import { isDate, isString, last } from '@antv/util';\nimport fecha from 'fecha';\nimport * as fecha1 from 'fecha';\nimport bisector from './bisector';\nvar FORMAT_METHOD = 'format';\nexport function timeFormat(time, mask) {\n  var method = fecha1[FORMAT_METHOD] || fecha[FORMAT_METHOD];\n  return method(time, mask);\n}\n/**\n * 转换成时间戳\n * @param value 时间值\n */\n\nexport function toTimeStamp(value) {\n  if (isString(value)) {\n    if (value.indexOf('T') > 0) {\n      value = new Date(value).getTime();\n    } else {\n      // new Date('2010/01/10') 和 new Date('2010-01-10') 的差别在于:\n      // 如果仅有年月日时，前者是带有时区的: Fri Jan 10 2020 02:40:13 GMT+0800 (中国标准时间)\n      // 后者会格式化成 Sun Jan 10 2010 08:00:00 GMT+0800 (中国标准时间)\n      value = new Date(value.replace(/-/gi, '/')).getTime();\n    }\n  }\n\n  if (isDate(value)) {\n    value = value.getTime();\n  }\n\n  return value;\n}\nvar SECOND = 1000;\nvar MINUTE = 60 * SECOND;\nvar HOUR = 60 * MINUTE;\nvar DAY = 24 * HOUR;\nvar MONTH = DAY * 31;\nvar YEAR = DAY * 365;\nexport { SECOND, MINUTE, HOUR, DAY, MONTH, YEAR };\nvar intervals = [['HH:mm:ss', SECOND], ['HH:mm:ss', SECOND * 10], ['HH:mm:ss', SECOND * 30], ['HH:mm', MINUTE], ['HH:mm', MINUTE * 10], ['HH:mm', MINUTE * 30], ['HH', HOUR], ['HH', HOUR * 6], ['HH', HOUR * 12], ['YYYY-MM-DD', DAY], ['YYYY-MM-DD', DAY * 4], ['YYYY-WW', DAY * 7], ['YYYY-MM', MONTH], ['YYYY-MM', MONTH * 4], ['YYYY-MM', MONTH * 6], ['YYYY', DAY * 380]];\nexport function getTickInterval(min, max, tickCount) {\n  var target = (max - min) / tickCount;\n  var idx = bisector(function (o) {\n    return o[1];\n  })(intervals, target) - 1;\n  var interval = intervals[idx];\n\n  if (idx < 0) {\n    interval = intervals[0];\n  } else if (idx >= intervals.length) {\n    interval = last(intervals);\n  }\n\n  return interval;\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,QAAuC,YAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,OAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,IAAMC,aAAa,GAAG,QAAtB;AAEA,OAAM,SAAUC,UAAV,CAAqBC,IAArB,EAA2BC,IAA3B,EAA+B;EACnC,IAAMC,MAAM,GAAGN,MAAM,CAACE,aAAD,CAAN,IAAyBH,KAAK,CAACG,aAAD,CAA7C;EACA,OAAOI,MAAM,CAACF,IAAD,EAAOC,IAAP,CAAb;AACD;AACD;;;;;AAIA,OAAM,SAAUE,WAAV,CAAsBC,KAAtB,EAAgC;EACpC,IAAIX,QAAQ,CAACW,KAAD,CAAZ,EAAqB;IACnB,IAAIA,KAAK,CAACC,OAAN,CAAc,GAAd,IAAqB,CAAzB,EAA4B;MAC1BD,KAAK,GAAG,IAAIE,IAAJ,CAASF,KAAT,EAAgBG,OAAhB,EAAR;IACD,CAFD,MAEO;MACL;MACA;MACA;MACAH,KAAK,GAAG,IAAIE,IAAJ,CAASF,KAAK,CAACI,OAAN,CAAc,KAAd,EAAqB,GAArB,CAAT,EAAoCD,OAApC,EAAR;IACD;EACF;;EACD,IAAIf,MAAM,CAACY,KAAD,CAAV,EAAmB;IACjBA,KAAK,GAAGA,KAAK,CAACG,OAAN,EAAR;EACD;;EACD,OAAOH,KAAP;AACD;AAED,IAAMK,MAAM,GAAG,IAAf;AACA,IAAMC,MAAM,GAAG,KAAKD,MAApB;AACA,IAAME,IAAI,GAAG,KAAKD,MAAlB;AACA,IAAME,GAAG,GAAG,KAAKD,IAAjB;AACA,IAAME,KAAK,GAAGD,GAAG,GAAG,EAApB;AACA,IAAME,IAAI,GAAGF,GAAG,GAAG,GAAnB;AAEA,SAASH,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,KAApC,EAA2CC,IAA3C;AAEA,IAAMC,SAAS,GAAe,CAC5B,CAAC,UAAD,EAAaN,MAAb,CAD4B,EAE5B,CAAC,UAAD,EAAaA,MAAM,GAAG,EAAtB,CAF4B,EAG5B,CAAC,UAAD,EAAaA,MAAM,GAAG,EAAtB,CAH4B,EAI5B,CAAC,OAAD,EAAUC,MAAV,CAJ4B,EAK5B,CAAC,OAAD,EAAUA,MAAM,GAAG,EAAnB,CAL4B,EAM5B,CAAC,OAAD,EAAUA,MAAM,GAAG,EAAnB,CAN4B,EAO5B,CAAC,IAAD,EAAOC,IAAP,CAP4B,EAQ5B,CAAC,IAAD,EAAOA,IAAI,GAAG,CAAd,CAR4B,EAS5B,CAAC,IAAD,EAAOA,IAAI,GAAG,EAAd,CAT4B,EAU5B,CAAC,YAAD,EAAeC,GAAf,CAV4B,EAW5B,CAAC,YAAD,EAAeA,GAAG,GAAG,CAArB,CAX4B,EAY5B,CAAC,SAAD,EAAYA,GAAG,GAAG,CAAlB,CAZ4B,EAa5B,CAAC,SAAD,EAAYC,KAAZ,CAb4B,EAc5B,CAAC,SAAD,EAAYA,KAAK,GAAG,CAApB,CAd4B,EAe5B,CAAC,SAAD,EAAYA,KAAK,GAAG,CAApB,CAf4B,EAgB5B,CAAC,MAAD,EAASD,GAAG,GAAG,GAAf,CAhB4B,CAA9B;AAmBA,OAAM,SAAUI,eAAV,CAA0BC,GAA1B,EAAuCC,GAAvC,EAAoDC,SAApD,EAAqE;EACzE,IAAMC,MAAM,GAAG,CAACF,GAAG,GAAGD,GAAP,IAAcE,SAA7B;EACA,IAAME,GAAG,GAAGxB,QAAQ,CAAC,UAACyB,CAAD,EAAY;IAAK,QAAC,CAAC,CAAD,CAAD;EAAI,CAAtB,CAAR,CAAgCP,SAAhC,EAA2CK,MAA3C,IAAqD,CAAjE;EACA,IAAIG,QAAQ,GAAaR,SAAS,CAACM,GAAD,CAAlC;;EACA,IAAIA,GAAG,GAAG,CAAV,EAAa;IACXE,QAAQ,GAAGR,SAAS,CAAC,CAAD,CAApB;EACD,CAFD,MAEO,IAAIM,GAAG,IAAIN,SAAS,CAACS,MAArB,EAA6B;IAClCD,QAAQ,GAAG7B,IAAI,CAACqB,SAAD,CAAf;EACD;;EACD,OAAOQ,QAAP;AACD","names":["isDate","isString","last","fecha","fecha1","bisector","FORMAT_METHOD","timeFormat","time","mask","method","toTimeStamp","value","indexOf","Date","getTime","replace","SECOND","MINUTE","HOUR","DAY","MONTH","YEAR","intervals","getTickInterval","min","max","tickCount","target","idx","o","interval","length"],"sourceRoot":"","sources":["../../src/util/time.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}