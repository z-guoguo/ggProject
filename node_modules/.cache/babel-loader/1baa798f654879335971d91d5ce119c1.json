{"ast":null,"code":"import { head, isNil, last } from '@antv/util';\nimport extended from '../util/extended';\nimport interval from '../util/interval';\nimport strictLimit from '../util/strict-limit';\n/**\n * 计算线性的 ticks，使用 wilkinson extended 方法\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\n\nexport default function linear(cfg) {\n  var min = cfg.min,\n      max = cfg.max,\n      tickCount = cfg.tickCount,\n      nice = cfg.nice,\n      tickInterval = cfg.tickInterval,\n      minLimit = cfg.minLimit,\n      maxLimit = cfg.maxLimit;\n  var ticks = extended(min, max, tickCount, nice).ticks;\n\n  if (!isNil(minLimit) || !isNil(maxLimit)) {\n    return strictLimit(cfg, head(ticks), last(ticks));\n  }\n\n  if (tickInterval) {\n    return interval(min, max, tickInterval).ticks;\n  }\n\n  return ticks;\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,QAAkC,YAAlC;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA;;;;;;AAKA,eAAc,SAAUC,MAAV,CAAiBC,GAAjB,EAAiC;EACrC,OAAG,GAA6DA,GAAG,IAAnE;EAAA,IAAKC,GAAG,GAAwDD,GAAG,IAAnE;EAAA,IAAUE,SAAS,GAA6CF,GAAG,UAAnE;EAAA,IAAqBG,IAAI,GAAuCH,GAAG,KAAnE;EAAA,IAA2BI,YAAY,GAAyBJ,GAAG,aAAnE;EAAA,IAAyCK,QAAQ,GAAeL,GAAG,SAAnE;EAAA,IAAmDM,QAAQ,GAAKN,GAAG,SAAnE;EACR,IAAMO,KAAK,GAAGX,QAAQ,CAACY,GAAD,EAAMP,GAAN,EAAWC,SAAX,EAAsBC,IAAtB,CAAR,CAAoCI,KAAlD;;EAEA,IAAI,CAACb,KAAK,CAACW,QAAD,CAAN,IAAoB,CAACX,KAAK,CAACY,QAAD,CAA9B,EAA0C;IACxC,OAAOR,WAAW,CAACE,GAAD,EAAMP,IAAI,CAACc,KAAD,CAAV,EAAmBZ,IAAI,CAACY,KAAD,CAAvB,CAAlB;EACD;;EACD,IAAIH,YAAJ,EAAkB;IAChB,OAAOP,QAAQ,CAACW,GAAD,EAAMP,GAAN,EAAWG,YAAX,CAAR,CAAiCG,KAAxC;EACD;;EACD,OAAOA,KAAP;AACD","names":["head","isNil","last","extended","interval","strictLimit","linear","cfg","max","tickCount","nice","tickInterval","minLimit","maxLimit","ticks","min"],"sourceRoot":"","sources":["../../src/tick-method/linear.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}