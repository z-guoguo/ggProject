{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Basecoat } from '../common';\nimport { ObjectExt } from '../util';\nexport class Store extends Basecoat {\n  constructor(data = {}) {\n    super();\n    this.pending = false;\n    this.changing = false;\n    this.data = {};\n    this.mutate(ObjectExt.cloneDeep(data));\n    this.changed = {};\n  }\n\n  mutate(data, options = {}) {\n    const unset = options.unset === true;\n    const silent = options.silent === true;\n    const changes = [];\n    const changing = this.changing;\n    this.changing = true;\n\n    if (!changing) {\n      this.previous = ObjectExt.cloneDeep(this.data);\n      this.changed = {};\n    }\n\n    const current = this.data;\n    const previous = this.previous;\n    const changed = this.changed;\n    Object.keys(data).forEach(k => {\n      const key = k;\n      const newValue = data[key];\n\n      if (!ObjectExt.isEqual(current[key], newValue)) {\n        changes.push(key);\n      }\n\n      if (!ObjectExt.isEqual(previous[key], newValue)) {\n        changed[key] = newValue;\n      } else {\n        delete changed[key];\n      }\n\n      if (unset) {\n        delete current[key];\n      } else {\n        current[key] = newValue;\n      }\n    });\n\n    if (!silent && changes.length > 0) {\n      this.pending = true;\n      this.pendingOptions = options;\n      changes.forEach(key => {\n        this.emit('change:*', {\n          key,\n          options,\n          store: this,\n          current: current[key],\n          previous: previous[key]\n        });\n      });\n    }\n\n    if (changing) {\n      return this;\n    }\n\n    if (!silent) {\n      // Changes can be recursively nested within `\"change\"` events.\n      while (this.pending) {\n        this.pending = false;\n        this.emit('changed', {\n          current,\n          previous,\n          store: this,\n          options: this.pendingOptions\n        });\n      }\n    }\n\n    this.pending = false;\n    this.changing = false;\n    this.pendingOptions = null;\n    return this;\n  }\n\n  get(key, defaultValue) {\n    if (key == null) {\n      return this.data;\n    }\n\n    const ret = this.data[key];\n    return ret == null ? defaultValue : ret;\n  }\n\n  getPrevious(key) {\n    if (this.previous) {\n      const ret = this.previous[key];\n      return ret == null ? undefined : ret;\n    }\n\n    return undefined;\n  }\n\n  set(key, value, options) {\n    if (key != null) {\n      if (typeof key === 'object') {\n        this.mutate(key, value);\n      } else {\n        this.mutate({\n          [key]: value\n        }, options);\n      }\n    }\n\n    return this;\n  }\n\n  remove(key, options) {\n    const empty = undefined;\n    const subset = {};\n    let opts;\n\n    if (typeof key === 'string') {\n      subset[key] = empty;\n      opts = options;\n    } else if (Array.isArray(key)) {\n      key.forEach(k => subset[k] = empty);\n      opts = options;\n    } else {\n      // eslint-disable-next-line\n      for (const key in this.data) {\n        subset[key] = empty;\n      }\n\n      opts = key;\n    }\n\n    this.mutate(subset, Object.assign(Object.assign({}, opts), {\n      unset: true\n    }));\n    return this;\n  }\n\n  getByPath(path) {\n    return ObjectExt.getByPath(this.data, path, '/');\n  }\n\n  setByPath(path, value, options = {}) {\n    const delim = '/';\n    const pathArray = Array.isArray(path) ? [...path] : path.split(delim);\n    const pathString = Array.isArray(path) ? path.join(delim) : path;\n    const property = pathArray[0];\n    const pathArrayLength = pathArray.length;\n    options.propertyPath = pathString;\n    options.propertyValue = value;\n    options.propertyPathArray = pathArray;\n\n    if (pathArrayLength === 1) {\n      this.set(property, value, options);\n    } else {\n      const update = {};\n      let diver = update;\n      let nextKey = property; // Initialize the nested object. Subobjects are either arrays or objects.\n      // An empty array is created if the sub-key is an integer. Otherwise, an\n      // empty object is created.\n\n      for (let i = 1; i < pathArrayLength; i += 1) {\n        const key = pathArray[i];\n        const isArrayIndex = Number.isFinite(Number(key));\n        diver = diver[nextKey] = isArrayIndex ? [] : {};\n        nextKey = key;\n      } // Fills update with the `value` on `path`.\n\n\n      ObjectExt.setByPath(update, pathArray, value, delim);\n      const data = ObjectExt.cloneDeep(this.data); // If rewrite mode enabled, we replace value referenced by path with the\n      // new one (we don't merge).\n\n      if (options.rewrite) {\n        ObjectExt.unsetByPath(data, path, delim);\n      }\n\n      const merged = ObjectExt.merge(data, update);\n      this.set(property, merged[property], options);\n    }\n\n    return this;\n  }\n\n  removeByPath(path, options) {\n    const keys = Array.isArray(path) ? path : path.split('/');\n    const key = keys[0];\n\n    if (keys.length === 1) {\n      this.remove(key, options);\n    } else {\n      const paths = keys.slice(1);\n      const prop = ObjectExt.cloneDeep(this.get(key));\n\n      if (prop) {\n        ObjectExt.unsetByPath(prop, paths);\n      }\n\n      this.set(key, prop, options);\n    }\n\n    return this;\n  }\n\n  hasChanged(key) {\n    if (key == null) {\n      return Object.keys(this.changed).length > 0;\n    }\n\n    return key in this.changed;\n  }\n  /**\n   * Returns an object containing all the data that have changed,\n   * or `null` if there are no changes. Useful for determining what\n   * parts of a view need to be updated.\n   */\n\n\n  getChanges(diff) {\n    if (diff == null) {\n      return this.hasChanged() ? ObjectExt.cloneDeep(this.changed) : null;\n    }\n\n    const old = this.changing ? this.previous : this.data;\n    const changed = {};\n    let hasChanged; // eslint-disable-next-line\n\n    for (const key in diff) {\n      const val = diff[key];\n\n      if (!ObjectExt.isEqual(old[key], val)) {\n        changed[key] = val;\n        hasChanged = true;\n      }\n    }\n\n    return hasChanged ? ObjectExt.cloneDeep(changed) : null;\n  }\n  /**\n   * Returns a copy of the store's `data` object.\n   */\n\n\n  toJSON() {\n    return ObjectExt.cloneDeep(this.data);\n  }\n\n  clone() {\n    const constructor = this.constructor;\n    return new constructor(this.data);\n  }\n\n  dispose() {\n    this.off();\n    this.data = {};\n    this.previous = {};\n    this.changed = {};\n    this.pending = false;\n    this.changing = false;\n    this.pendingOptions = null;\n    this.trigger('disposed', {\n      store: this\n    });\n  }\n\n}\n\n__decorate([Basecoat.dispose()], Store.prototype, \"dispose\", null);","map":{"version":3,"mappings":"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","names":["Basecoat","ObjectExt","Store","constructor","data","mutate","cloneDeep","changed","options","unset","silent","changes","changing","previous","current","Object","keys","forEach","k","key","newValue","isEqual","push","length","pending","pendingOptions","emit","store","get","defaultValue","ret","getPrevious","undefined","set","value","remove","empty","subset","opts","Array","isArray","getByPath","path","setByPath","delim","pathArray","split","pathString","join","property","pathArrayLength","propertyPath","propertyValue","propertyPathArray","update","diver","nextKey","i","isArrayIndex","Number","isFinite","rewrite","unsetByPath","merged","merge","removeByPath","paths","slice","prop","hasChanged","getChanges","diff","old","val","toJSON","clone","dispose","off","trigger","__decorate"],"sourceRoot":"","sources":["../../src/model/store.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}