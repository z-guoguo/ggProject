{"ast":null,"code":"/**\n * @fileoverview 事件处理器\n * @author dxq613@gmail.com\n */\nimport GraphEvent from './graph-event';\nimport { each, isParent } from '../util/util';\nvar CLICK_OFFSET = 40;\nvar LEFT_BTN_CODE = 0;\nvar DELEGATION_SPLIT = ':';\nvar EVENTS = ['mousedown', 'mouseup', 'dblclick', 'mouseout', 'mouseover', 'mousemove', 'mouseleave', 'mouseenter', 'touchstart', 'touchmove', 'touchend', 'dragenter', 'dragover', 'dragleave', 'drop', 'contextmenu', 'mousewheel']; // 是否有委托事件监听\n\nfunction hasDelegation(events, type) {\n  for (var key in events) {\n    if (events.hasOwnProperty(key) && key.indexOf(DELEGATION_SPLIT + type) >= 0) {\n      return true;\n    }\n  }\n\n  return false;\n} // 触发目标事件，目标只能是 shape 或 canvas\n\n\nfunction emitTargetEvent(target, type, eventObj) {\n  eventObj.name = type;\n  eventObj.target = target;\n  eventObj.currentTarget = target;\n  eventObj.delegateTarget = target;\n  target.emit(type, eventObj);\n} // 事件冒泡, enter 和 leave 需要对 fromShape 和 toShape 进行判同\n\n\nfunction bubbleEvent(container, type, eventObj) {\n  if (eventObj.bubbles) {\n    var relativeShape = void 0;\n    var isOverEvent = false;\n\n    if (type === 'mouseenter') {\n      relativeShape = eventObj.fromShape;\n      isOverEvent = true;\n    } else if (type === 'mouseleave') {\n      isOverEvent = true;\n      relativeShape = eventObj.toShape;\n    } // canvas 上的 mouseenter， mouseleave 事件，仅当进入或者移出 canvas 时触发\n\n\n    if (container.isCanvas() && isOverEvent) {\n      return;\n    } // 如果相关图形同当前图形在同一个容器内，不触发事件\n\n\n    if (relativeShape && isParent(container, relativeShape)) {\n      // 阻止继续向上冒泡\n      eventObj.bubbles = false;\n      return;\n    } // 事件名称可能在委托过程中被修改，因此事件冒泡时需要重新设置事件名称\n\n\n    eventObj.name = type;\n    eventObj.currentTarget = container;\n    eventObj.delegateTarget = container;\n    container.emit(type, eventObj);\n  }\n}\n\nvar EventController =\n/** @class */\nfunction () {\n  function EventController(cfg) {\n    var _this = this; // 正在被拖拽的图形\n\n\n    this.draggingShape = null;\n    this.dragging = false; // 当前鼠标/touch所在位置的图形\n\n    this.currentShape = null;\n    this.mousedownShape = null;\n    this.mousedownPoint = null; // 统一处理所有的回调\n\n    this._eventCallback = function (ev) {\n      var type = ev.type;\n\n      _this._triggerEvent(type, ev);\n    }; // 在 document 处理拖拽到画布外的事件，处理从图形上移除画布未被捕捉的问题\n\n\n    this._onDocumentMove = function (ev) {\n      var canvas = _this.canvas;\n      var el = canvas.get('el');\n\n      if (el !== ev.target) {\n        // 不在 canvas 上移动\n        if (_this.dragging || _this.currentShape) {\n          var pointInfo = _this._getPointInfo(ev); // 还在拖拽过程中\n\n\n          if (_this.dragging) {\n            _this._emitEvent('drag', ev, pointInfo, _this.draggingShape);\n          } // 说明从某个图形直接移动到了画布外面，\n          // 修复了 mouseleave 的 bug 后不再出现这种情况\n          // if (this.currentShape) {\n          //   this._emitEvent('mouseleave', ev, pointInfo, this.currentShape, this.currentShape, null);\n          //   this.currentShape = null;\n          // }\n\n        }\n      }\n    }; // 在 document 上处理拖拽到外面，释放鼠标时触发 dragend\n\n\n    this._onDocumentMouseUp = function (ev) {\n      var canvas = _this.canvas;\n      var el = canvas.get('el');\n\n      if (el !== ev.target) {\n        // 不在 canvas 上移动\n        if (_this.dragging) {\n          var pointInfo = _this._getPointInfo(ev);\n\n          if (_this.draggingShape) {\n            // 如果存在拖拽的图形，则也触发 drop 事件\n            _this._emitEvent('drop', ev, pointInfo, null);\n          }\n\n          _this._emitEvent('dragend', ev, pointInfo, _this.draggingShape);\n\n          _this._afterDrag(_this.draggingShape, pointInfo, ev);\n        }\n      }\n    };\n\n    this.canvas = cfg.canvas;\n  }\n\n  EventController.prototype.init = function () {\n    this._bindEvents();\n  }; // 注册事件\n\n\n  EventController.prototype._bindEvents = function () {\n    var _this = this;\n\n    var el = this.canvas.get('el');\n    each(EVENTS, function (eventName) {\n      el.addEventListener(eventName, _this._eventCallback);\n    });\n\n    if (document) {\n      // 处理移动到外面没有触发 shape mouse leave 的事件\n      // 处理拖拽到外部的问题\n      document.addEventListener('mousemove', this._onDocumentMove); // 处理拖拽过程中在外部释放鼠标的问题\n\n      document.addEventListener('mouseup', this._onDocumentMouseUp);\n    }\n  }; // 清理事件\n\n\n  EventController.prototype._clearEvents = function () {\n    var _this = this;\n\n    var el = this.canvas.get('el');\n    each(EVENTS, function (eventName) {\n      el.removeEventListener(eventName, _this._eventCallback);\n    });\n\n    if (document) {\n      document.removeEventListener('mousemove', this._onDocumentMove);\n      document.removeEventListener('mouseup', this._onDocumentMouseUp);\n    }\n  };\n\n  EventController.prototype._getEventObj = function (type, event, point, target, fromShape, toShape) {\n    var eventObj = new GraphEvent(type, event);\n    eventObj.fromShape = fromShape;\n    eventObj.toShape = toShape;\n    eventObj.x = point.x;\n    eventObj.y = point.y;\n    eventObj.clientX = point.clientX;\n    eventObj.clientY = point.clientY;\n    eventObj.propagationPath.push(target); // 事件的x,y应该是基于画布左上角的，与canvas的matrix无关\n\n    return eventObj;\n  }; // 根据点获取图形，提取成独立方法，便于后续优化\n\n\n  EventController.prototype._getShape = function (point, ev) {\n    return this.canvas.getShape(point.x, point.y, ev);\n  }; // 获取事件的当前点的信息\n\n\n  EventController.prototype._getPointInfo = function (ev) {\n    var canvas = this.canvas;\n    var clientPoint = canvas.getClientByEvent(ev);\n    var point = canvas.getPointByEvent(ev);\n    return {\n      x: point.x,\n      y: point.y,\n      clientX: clientPoint.x,\n      clientY: clientPoint.y\n    };\n  }; // 触发事件\n\n\n  EventController.prototype._triggerEvent = function (type, ev) {\n    var pointInfo = this._getPointInfo(ev); // 每次都获取图形有一定成本，后期可以考虑进行缓存策略\n\n\n    var shape = this._getShape(pointInfo, ev);\n\n    var method = this[\"_on\" + type];\n    var leaveCanvas = false;\n\n    if (method) {\n      method.call(this, pointInfo, shape, ev);\n    } else {\n      var preShape = this.currentShape; // 如果进入、移出画布时存在图形，则要分别触发事件\n\n      if (type === 'mouseenter' || type === 'dragenter' || type === 'mouseover') {\n        this._emitEvent(type, ev, pointInfo, null, null, shape); // 先进入画布\n\n\n        if (shape) {\n          this._emitEvent(type, ev, pointInfo, shape, null, shape); // 再触发图形的事件\n\n        }\n\n        if (type === 'mouseenter' && this.draggingShape) {\n          // 如果正在拖拽图形, 则触发 dragleave\n          this._emitEvent('dragenter', ev, pointInfo, null);\n        }\n      } else if (type === 'mouseleave' || type === 'dragleave' || type === 'mouseout') {\n        leaveCanvas = true;\n\n        if (preShape) {\n          this._emitEvent(type, ev, pointInfo, preShape, preShape, null); // 先触发图形的事件\n\n        }\n\n        this._emitEvent(type, ev, pointInfo, null, preShape, null); // 再触发离开画布事件\n\n\n        if (type === 'mouseleave' && this.draggingShape) {\n          this._emitEvent('dragleave', ev, pointInfo, null);\n        }\n      } else {\n        this._emitEvent(type, ev, pointInfo, shape, null, null); // 一般事件中不需要考虑 from, to\n\n      }\n    }\n\n    if (!leaveCanvas) {\n      this.currentShape = shape;\n    } // 当鼠标从画布移动到 shape 或者从 preShape 移动到 shape 时，应用 shape 上的鼠标样式\n\n\n    if (shape && !shape.get('destroyed')) {\n      var canvas = this.canvas;\n      var el = canvas.get('el');\n      el.style.cursor = shape.attr('cursor') || canvas.get('cursor');\n    }\n  }; // 记录下点击的位置、图形，便于拖拽事件、click 事件的判定\n\n\n  EventController.prototype._onmousedown = function (pointInfo, shape, event) {\n    // 只有鼠标左键的 mousedown 事件才会设置 mousedownShape 等属性，避免鼠标右键的 mousedown 事件引起其他事件发生\n    if (event.button === LEFT_BTN_CODE) {\n      this.mousedownShape = shape;\n      this.mousedownPoint = pointInfo;\n      this.mousedownTimeStamp = event.timeStamp;\n    }\n\n    this._emitEvent('mousedown', event, pointInfo, shape, null, null); // mousedown 不考虑fromShape, toShape\n\n  }; // mouseleave 和 mouseenter 都是成对存在的\n  // mouseenter 和 mouseover 同时触发\n\n\n  EventController.prototype._emitMouseoverEvents = function (event, pointInfo, fromShape, toShape) {\n    var el = this.canvas.get('el');\n\n    if (fromShape !== toShape) {\n      if (fromShape) {\n        this._emitEvent('mouseout', event, pointInfo, fromShape, fromShape, toShape);\n\n        this._emitEvent('mouseleave', event, pointInfo, fromShape, fromShape, toShape); // 当鼠标从 fromShape 移动到画布上时，重置鼠标样式\n\n\n        if (!toShape || toShape.get('destroyed')) {\n          el.style.cursor = this.canvas.get('cursor');\n        }\n      }\n\n      if (toShape) {\n        this._emitEvent('mouseover', event, pointInfo, toShape, fromShape, toShape);\n\n        this._emitEvent('mouseenter', event, pointInfo, toShape, fromShape, toShape);\n      }\n    }\n  }; // dragover 不等同于 mouseover，而等同于 mousemove\n\n\n  EventController.prototype._emitDragoverEvents = function (event, pointInfo, fromShape, toShape, isCanvasEmit) {\n    if (toShape) {\n      if (toShape !== fromShape) {\n        if (fromShape) {\n          this._emitEvent('dragleave', event, pointInfo, fromShape, fromShape, toShape);\n        }\n\n        this._emitEvent('dragenter', event, pointInfo, toShape, fromShape, toShape);\n      }\n\n      if (!isCanvasEmit) {\n        this._emitEvent('dragover', event, pointInfo, toShape);\n      }\n    } else if (fromShape) {\n      // TODO: 此处判断有问题，当 drag 图形时，也会触发一次 dragleave 事件，因为此时 toShape 为 null，这不是所期望的\n      // 经过空白区域\n      this._emitEvent('dragleave', event, pointInfo, fromShape, fromShape, toShape);\n    }\n\n    if (isCanvasEmit) {\n      this._emitEvent('dragover', event, pointInfo, toShape);\n    }\n  }; // drag 完成后，需要做一些清理工作\n\n\n  EventController.prototype._afterDrag = function (draggingShape, pointInfo, event) {\n    if (draggingShape) {\n      draggingShape.set('capture', true); // 恢复可以拾取\n\n      this.draggingShape = null;\n    }\n\n    this.dragging = false; // drag 完成后，有可能 draggingShape 已经移动到了当前位置，所以不能直接取当前图形\n\n    var shape = this._getShape(pointInfo, event); // 拖拽完成后，进行 enter，leave 的判定\n\n\n    if (shape !== draggingShape) {\n      this._emitMouseoverEvents(event, pointInfo, draggingShape, shape);\n    }\n\n    this.currentShape = shape; // 更新当前 shape，如果不处理当前图形的 mouseleave 事件可能会出问题\n  }; // 按键抬起时，会终止拖拽、触发点击\n\n\n  EventController.prototype._onmouseup = function (pointInfo, shape, event) {\n    // eevent.button === 0 表示鼠标左键事件，此处加上判断主要是为了避免右键鼠标会触发 mouseup 和 click 事件\n    // ref: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n    if (event.button === LEFT_BTN_CODE) {\n      var draggingShape = this.draggingShape;\n\n      if (this.dragging) {\n        // 存在可以拖拽的图形，同时拖拽到其他图形上时触发 drag 事件\n        if (draggingShape) {\n          this._emitEvent('drop', event, pointInfo, shape);\n        }\n\n        this._emitEvent('dragend', event, pointInfo, draggingShape);\n\n        this._afterDrag(draggingShape, pointInfo, event);\n      } else {\n        this._emitEvent('mouseup', event, pointInfo, shape); // 先触发 mouseup 再触发 click\n\n\n        if (shape === this.mousedownShape) {\n          this._emitEvent('click', event, pointInfo, shape);\n        }\n\n        this.mousedownShape = null;\n        this.mousedownPoint = null;\n      }\n    }\n  }; // 当触发浏览器的 dragover 事件时，不会再触发 mousemove ，所以这时候的 dragenter, dragleave 事件需要重新处理\n\n\n  EventController.prototype._ondragover = function (pointInfo, shape, event) {\n    event.preventDefault(); // 如果不对 dragover 进行 preventDefault，则不会在 canvas 上触发 drop 事件\n\n    var preShape = this.currentShape;\n\n    this._emitDragoverEvents(event, pointInfo, preShape, shape, true);\n  }; // 大量的图形事件，都通过 mousemove 模拟\n\n\n  EventController.prototype._onmousemove = function (pointInfo, shape, event) {\n    var canvas = this.canvas;\n    var preShape = this.currentShape;\n    var draggingShape = this.draggingShape; // 正在拖拽时\n\n    if (this.dragging) {\n      // 正在拖拽中\n      if (draggingShape) {\n        // 如果拖拽了 shape 会触发 dragenter, dragleave, dragover 和 drag 事件\n        this._emitDragoverEvents(event, pointInfo, preShape, shape, false);\n      } // 如果存在 draggingShape 则会在 draggingShape 上触发 drag 事件，冒泡到 canvas 上\n      // 否则在 canvas 上触发 drag 事件\n\n\n      this._emitEvent('drag', event, pointInfo, draggingShape);\n    } else {\n      var mousedownPoint = this.mousedownPoint;\n\n      if (mousedownPoint) {\n        // 当鼠标点击下去，同时移动时，进行 drag 判定\n        var mousedownShape = this.mousedownShape;\n        var now = event.timeStamp;\n        var timeWindow = now - this.mousedownTimeStamp;\n        var dx = mousedownPoint.clientX - pointInfo.clientX;\n        var dy = mousedownPoint.clientY - pointInfo.clientY;\n        var dist = dx * dx + dy * dy;\n\n        if (timeWindow > 120 || dist > CLICK_OFFSET) {\n          if (mousedownShape && mousedownShape.get('draggable')) {\n            // 设置了 draggable 的 shape 才能触发 drag 相关的事件\n            draggingShape = this.mousedownShape; // 拖动鼠标点下时的 shape\n\n            draggingShape.set('capture', false); // 禁止继续拾取，否则无法进行 dragover,dragenter,dragleave,drop的判定\n\n            this.draggingShape = draggingShape;\n            this.dragging = true;\n\n            this._emitEvent('dragstart', event, pointInfo, draggingShape); // 清理按下鼠标时缓存的值\n\n\n            this.mousedownShape = null;\n            this.mousedownPoint = null;\n          } else if (!mousedownShape && canvas.get('draggable')) {\n            // 设置了 draggable 的 canvas 才能触发 drag 相关的事件\n            this.dragging = true;\n\n            this._emitEvent('dragstart', event, pointInfo, null); // 清理按下鼠标时缓存的值\n\n\n            this.mousedownShape = null;\n            this.mousedownPoint = null;\n          } else {\n            this._emitMouseoverEvents(event, pointInfo, preShape, shape);\n\n            this._emitEvent('mousemove', event, pointInfo, shape);\n          }\n        } else {\n          this._emitMouseoverEvents(event, pointInfo, preShape, shape);\n\n          this._emitEvent('mousemove', event, pointInfo, shape);\n        }\n      } else {\n        // 没有按键按下时，则直接触发 mouse over 相关的各种事件\n        this._emitMouseoverEvents(event, pointInfo, preShape, shape); // 始终触发移动\n\n\n        this._emitEvent('mousemove', event, pointInfo, shape);\n      }\n    }\n  }; // 触发事件\n\n\n  EventController.prototype._emitEvent = function (type, event, pointInfo, shape, fromShape, toShape) {\n    var eventObj = this._getEventObj(type, event, pointInfo, shape, fromShape, toShape); // 存在 shape 触发，则进行冒泡处理\n\n\n    if (shape) {\n      eventObj.shape = shape; // 触发 shape 上的事件\n\n      emitTargetEvent(shape, type, eventObj);\n      var parent_1 = shape.getParent(); // 执行冒泡\n\n      while (parent_1) {\n        // 委托事件要先触发\n        parent_1.emitDelegation(type, eventObj); // 事件冒泡停止，不能妨碍委托事件\n\n        if (!eventObj.propagationStopped) {\n          bubbleEvent(parent_1, type, eventObj);\n        }\n\n        eventObj.propagationPath.push(parent_1);\n        parent_1 = parent_1.getParent();\n      }\n    } else {\n      // 如果没有 shape 直接在 canvas 上触发\n      var canvas = this.canvas; // 直接触发 canvas 上的事件\n\n      emitTargetEvent(canvas, type, eventObj);\n    }\n  };\n\n  EventController.prototype.destroy = function () {\n    // 清理事件\n    this._clearEvents(); // 清理缓存的对象\n\n\n    this.canvas = null;\n    this.currentShape = null;\n    this.draggingShape = null;\n    this.mousedownPoint = null;\n    this.mousedownShape = null;\n    this.mousedownTimeStamp = null;\n  };\n\n  return EventController;\n}();\n\nexport default EventController;","map":{"version":3,"mappings":"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","names":["GraphEvent","each","isParent","CLICK_OFFSET","LEFT_BTN_CODE","DELEGATION_SPLIT","EVENTS","hasDelegation","events","type","key","hasOwnProperty","indexOf","emitTargetEvent","target","eventObj","name","currentTarget","delegateTarget","emit","bubbleEvent","container","bubbles","relativeShape","isOverEvent","fromShape","toShape","isCanvas","cfg","ev","_this","_triggerEvent","canvas","el","get","dragging","currentShape","pointInfo","_getPointInfo","_emitEvent","draggingShape","_afterDrag","EventController","_bindEvents","eventName","addEventListener","_eventCallback","document","_onDocumentMove","_onDocumentMouseUp","removeEventListener","event","point","x","y","clientX","clientY","propagationPath","push","getShape","clientPoint","getClientByEvent","getPointByEvent","shape","_getShape","method","leaveCanvas","call","preShape","style","cursor","attr","button","mousedownShape","mousedownPoint","mousedownTimeStamp","timeStamp","isCanvasEmit","set","_emitMouseoverEvents","preventDefault","_emitDragoverEvents","now","timeWindow","dx","dy","dist","_getEventObj","parent_1","getParent","emitDelegation","propagationStopped","_clearEvents"],"sourceRoot":"","sources":["../../src/event/event-contoller.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}