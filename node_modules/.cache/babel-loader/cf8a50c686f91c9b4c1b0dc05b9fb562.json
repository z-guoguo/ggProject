{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nimport { inject, injectable, named } from 'inversify';\nimport { IDENTIFIER } from '../../identifier';\nimport { CopyPass } from './passes/CopyPass';\nimport { PixelPickingPass } from './passes/PixelPickingPass';\nimport { RenderPass } from './passes/RenderPass';\nexport var RendererSystem = (_dec = injectable(), _dec2 = inject(IDENTIFIER.Systems), _dec3 = named(IDENTIFIER.FrameGraphSystem), _dec4 = inject(IDENTIFIER.RenderPassFactory), _dec5 = inject(IDENTIFIER.ConfigService), _dec6 = inject(IDENTIFIER.ResourcePool), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function () {\n  function RendererSystem() {\n    _classCallCheck(this, RendererSystem);\n\n    _initializerDefineProperty(this, \"frameGraphSystem\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"renderPassFactory\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"configService\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"resourcePool\", _descriptor4, this);\n  }\n\n  _createClass(RendererSystem, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(views) {\n        var _this$renderPassFacto, setupRenderPass, executeRenderPass, renderPass, _this$renderPassFacto2, setupCopyPass, executeCopyPass, tearDownCopyPass, copyPass;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // const pixelPickingPass = this.renderPassFactory<PixelPickingPassData>(\n                //   PixelPickingPass.IDENTIFIER,\n                // );\n                // const {\n                //   setup: setupPixelPickingPass,\n                //   execute: executePixelPickingPass,\n                //   tearDown: tearDownPickingPass,\n                // } = pixelPickingPass;\n                // this.frameGraphSystem.addPass<PixelPickingPassData>(\n                //   PixelPickingPass.IDENTIFIER,\n                //   setupPixelPickingPass,\n                //   executePixelPickingPass,\n                //   tearDownPickingPass,\n                // );\n                _this$renderPassFacto = this.renderPassFactory(RenderPass.IDENTIFIER), setupRenderPass = _this$renderPassFacto.setup, executeRenderPass = _this$renderPassFacto.execute;\n                renderPass = this.frameGraphSystem.addPass(RenderPass.IDENTIFIER, setupRenderPass, executeRenderPass);\n                _this$renderPassFacto2 = this.renderPassFactory(CopyPass.IDENTIFIER), setupCopyPass = _this$renderPassFacto2.setup, executeCopyPass = _this$renderPassFacto2.execute, tearDownCopyPass = _this$renderPassFacto2.tearDown;\n                copyPass = this.frameGraphSystem.addPass(CopyPass.IDENTIFIER, setupCopyPass, executeCopyPass, tearDownCopyPass);\n                this.frameGraphSystem.present(copyPass.data.output);\n              // this.frameGraphSystem.present(renderPass.data.output);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function execute(_x) {\n        return _execute.apply(this, arguments);\n      }\n\n      return execute;\n    }()\n  }, {\n    key: \"tearDown\",\n    value: function tearDown() {\n      this.resourcePool.clean();\n    }\n  }, {\n    key: \"pick\",\n    value: function pick(position, view) {\n      var pickingPass = this.renderPassFactory(PixelPickingPass.IDENTIFIER);\n      return pickingPass.pick(position, view);\n    }\n  }]);\n\n  return RendererSystem;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"frameGraphSystem\", [_dec2, _dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"renderPassFactory\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"configService\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"resourcePool\", [_dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);","map":{"version":3,"mappings":";;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,KAA7B,QAA0C,WAA1C;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAIA,SAASC,QAAT,QAAuC,mBAAvC;AAEA,SACEC,gBADF,QAGO,2BAHP;AAIA,SAASC,UAAT,QAA2C,qBAA3C;AAGA,WAAaC,cAAb,WADCN,UAAU,EACX,UACGD,MAAM,CAACG,UAAU,CAACK,OAAZ,CADT,UAEGN,KAAK,CAACC,UAAU,CAACM,gBAAZ,CAFR,UAKGT,MAAM,CAACG,UAAU,CAACO,iBAAZ,CALT,UAQGV,MAAM,CAACG,UAAU,CAACQ,aAAZ,CART,UAWGX,MAAM,CAACG,UAAU,CAACS,YAAZ,CAXT;EAAA;IAAAC;;IAAAC;;IAAAA;;IAAAA;;IAAAA;EAAA;;EAAAC;IAAAC;IAAAC;MAAA,yFAcuBC,KAdvB;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAeI;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBA5BJC,wBAiCQ,KAAKC,iBAAL,CAAuCd,UAAU,CAACH,UAAlD,CAjCR,EA+BakB,eA/Bb,yBA+BMC,KA/BN,EAgCeC,iBAhCf,yBAgCMC,OAhCN;gBAkCUC,UAlCV,GAkCuB,KAAKC,gBAAL,CAAsBC,OAAtB,CACjBrB,UAAU,CAACH,UADM,EAEjBkB,eAFiB,EAGjBE,iBAHiB,CAAbE;gBAlCVG,yBA4CQ,KAAKR,iBAAL,CAAqChB,QAAQ,CAACD,UAA9C,CA5CR,EAyCa0B,aAzCb,0BAyCMP,KAzCN,EA0CeQ,eA1Cf,0BA0CMN,OA1CN,EA2CgBO,gBA3ChB,0BA2CMC,QA3CN;gBA6CUC,QA7CV,GA6CqB,KAAKP,gBAAL,CAAsBC,OAAtB,CACfvB,QAAQ,CAACD,UADM,EAEf0B,aAFe,EAGfC,eAHe,EAIfC,gBAJe,CAAXE;gBAON,KAAKP,gBAAL,CAAsBQ,OAAtB,CAA8BD,QAAQ,CAACE,IAATF,CAAcG,MAA5C;cACA;;cArDJ;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAApB;IAAAC,2BAwDoB;MAChB,KAAKoB,YAAL,CAAkBC,KAAlB;IACD;EA1DH;IAAAtB;IAAAC,qBA4DcsB,QA5Dd,EA4DkDC,IA5DlD,EA4D+D;MAC3D,IAAMC,WAAW,GAAG,KAAKrB,iBAAL,CAClBf,gBAAgB,CAACF,UADC,CAApB;MAIA,OAAOsC,WAAW,CAACC,IAAZD,CAAiBF,QAAjBE,EAA2BD,IAA3BC,CAAP;IACD;EAlEH;;EAAA;AAAA;EAAAE;EAAAC;EAAAC;EAAAC;AAAA;EAAAH;EAAAC;EAAAC;EAAAC;AAAA;EAAAH;EAAAC;EAAAC;EAAAC;AAAA;EAAAH;EAAAC;EAAAC;EAAAC;AAAA","names":["inject","injectable","named","IDENTIFIER","CopyPass","PixelPickingPass","RenderPass","RendererSystem","Systems","FrameGraphSystem","RenderPassFactory","ConfigService","ResourcePool","_classCallCheck","_initializerDefineProperty","_createClass","key","value","views","_this$renderPassFacto","renderPassFactory","setupRenderPass","setup","executeRenderPass","execute","renderPass","frameGraphSystem","addPass","_this$renderPassFacto2","setupCopyPass","executeCopyPass","tearDownCopyPass","tearDown","copyPass","present","data","output","resourcePool","clean","position","view","pickingPass","pick","configurable","enumerable","writable","initializer"],"sources":["../../../src/components/renderer/System.ts"],"sourcesContent":["import { inject, injectable, named } from 'inversify';\nimport { IConfigService, ISystem } from '../..';\nimport { IDENTIFIER } from '../../identifier';\nimport { ResourcePool } from '../framegraph/ResourcePool';\nimport { FrameGraphSystem } from '../framegraph/System';\nimport { IView } from './IRendererService';\nimport { CopyPass, CopyPassData } from './passes/CopyPass';\nimport { IRenderPass } from './passes/IRenderPass';\nimport {\n  PixelPickingPass,\n  PixelPickingPassData,\n} from './passes/PixelPickingPass';\nimport { RenderPass, RenderPassData } from './passes/RenderPass';\n\n@injectable()\nexport class RendererSystem implements ISystem {\n  @inject(IDENTIFIER.Systems)\n  @named(IDENTIFIER.FrameGraphSystem)\n  private readonly frameGraphSystem: FrameGraphSystem;\n\n  @inject(IDENTIFIER.RenderPassFactory)\n  private readonly renderPassFactory: <T>(name: string) => IRenderPass<T>;\n\n  @inject(IDENTIFIER.ConfigService)\n  private readonly configService: IConfigService;\n\n  @inject(IDENTIFIER.ResourcePool)\n  private readonly resourcePool: ResourcePool;\n\n  public async execute(views: IView[]) {\n    // const pixelPickingPass = this.renderPassFactory<PixelPickingPassData>(\n    //   PixelPickingPass.IDENTIFIER,\n    // );\n    // const {\n    //   setup: setupPixelPickingPass,\n    //   execute: executePixelPickingPass,\n    //   tearDown: tearDownPickingPass,\n    // } = pixelPickingPass;\n    // this.frameGraphSystem.addPass<PixelPickingPassData>(\n    //   PixelPickingPass.IDENTIFIER,\n    //   setupPixelPickingPass,\n    //   executePixelPickingPass,\n    //   tearDownPickingPass,\n    // );\n\n    const {\n      setup: setupRenderPass,\n      execute: executeRenderPass,\n    } = this.renderPassFactory<RenderPassData>(RenderPass.IDENTIFIER);\n    const renderPass = this.frameGraphSystem.addPass<RenderPassData>(\n      RenderPass.IDENTIFIER,\n      setupRenderPass,\n      executeRenderPass,\n    );\n\n    const {\n      setup: setupCopyPass,\n      execute: executeCopyPass,\n      tearDown: tearDownCopyPass,\n    } = this.renderPassFactory<CopyPassData>(CopyPass.IDENTIFIER);\n    const copyPass = this.frameGraphSystem.addPass<CopyPassData>(\n      CopyPass.IDENTIFIER,\n      setupCopyPass,\n      executeCopyPass,\n      tearDownCopyPass,\n    );\n\n    this.frameGraphSystem.present(copyPass.data.output);\n    // this.frameGraphSystem.present(renderPass.data.output);\n  }\n\n  public tearDown() {\n    this.resourcePool.clean();\n  }\n\n  public pick(position: { x: number; y: number }, view: IView) {\n    const pickingPass = this.renderPassFactory<PixelPickingPassData>(\n      PixelPickingPass.IDENTIFIER,\n    ) as PixelPickingPass;\n\n    return pickingPass.pick(position, view);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}