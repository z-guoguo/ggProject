{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each, head, last } from '@antv/util';\nimport Continuous from './base';\n/**\n * 分段度量\n */\n\nvar Quantize =\n/** @class */\nfunction (_super) {\n  __extends(Quantize, _super);\n\n  function Quantize() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'quantize';\n    return _this;\n  }\n\n  Quantize.prototype.invert = function (value) {\n    var ticks = this.ticks;\n    var length = ticks.length;\n    var percent = this.getInvertPercent(value);\n    var minIndex = Math.floor(percent * (length - 1)); // 最后一个\n\n    if (minIndex >= length - 1) {\n      return last(ticks);\n    } // 超出左边界， 则取第一个\n\n\n    if (minIndex < 0) {\n      return head(ticks);\n    }\n\n    var minTick = ticks[minIndex];\n    var nextTick = ticks[minIndex + 1]; // 比当前值小的 tick 在度量上的占比\n\n    var minIndexPercent = minIndex / (length - 1);\n    var maxIndexPercent = (minIndex + 1) / (length - 1);\n    return minTick + (percent - minIndexPercent) / (maxIndexPercent - minIndexPercent) * (nextTick - minTick);\n  };\n\n  Quantize.prototype.initCfg = function () {\n    this.tickMethod = 'r-pretty';\n    this.tickCount = 5;\n    this.nice = true;\n  };\n\n  Quantize.prototype.calculateTicks = function () {\n    var ticks = _super.prototype.calculateTicks.call(this);\n\n    if (!this.nice) {\n      // 如果 nice = false ,补充 min, max\n      if (last(ticks) !== this.max) {\n        ticks.push(this.max);\n      }\n\n      if (head(ticks) !== this.min) {\n        ticks.unshift(this.min);\n      }\n    }\n\n    return ticks;\n  }; // 计算当前值在刻度中的占比\n\n\n  Quantize.prototype.getScalePercent = function (value) {\n    var ticks = this.ticks; // 超出左边界\n\n    if (value < head(ticks)) {\n      return 0;\n    } // 超出右边界\n\n\n    if (value > last(ticks)) {\n      return 1;\n    }\n\n    var minIndex = 0;\n    each(ticks, function (tick, index) {\n      if (value >= tick) {\n        minIndex = index;\n      } else {\n        return false;\n      }\n    });\n    return minIndex / (ticks.length - 1);\n  };\n\n  return Quantize;\n}(Continuous);\n\nexport default Quantize;","map":{"version":3,"mappings":";AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,QAAvB;AAEA;;;;AAGA;AAAA;AAAA;EAAuBC;;EAAvB;IAAA;;IACSC,aAAO,UAAP;;EA+DR;;EA7DQC,4BAAP,UAAcC,KAAd,EAAmB;IACjB,IAAMC,KAAK,GAAG,KAAKA,KAAnB;IACA,IAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;IACA,IAAMC,OAAO,GAAG,KAAKC,gBAAL,CAAsBJ,KAAtB,CAAhB;IACA,IAAMK,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAO,IAAID,MAAM,GAAG,CAAb,CAAlB,CAAjB,CAJiB,CAKjB;;IACA,IAAIG,QAAQ,IAAIH,MAAM,GAAG,CAAzB,EAA4B;MAC1B,OAAOP,IAAI,CAACM,KAAD,CAAX;IACD,CARgB,CASjB;;;IACA,IAAII,QAAQ,GAAG,CAAf,EAAkB;MAChB,OAAOX,IAAI,CAACO,KAAD,CAAX;IACD;;IACD,IAAMO,OAAO,GAAGP,KAAK,CAACI,QAAD,CAArB;IACA,IAAMI,QAAQ,GAAGR,KAAK,CAACI,QAAQ,GAAG,CAAZ,CAAtB,CAdiB,CAejB;;IACA,IAAMK,eAAe,GAAGL,QAAQ,IAAIH,MAAM,GAAG,CAAb,CAAhC;IACA,IAAMS,eAAe,GAAI,CAACN,QAAQ,GAAG,CAAZ,KAAkBH,MAAM,GAAG,CAA3B,CAAzB;IACA,OAAOM,OAAO,GAAG,CAACL,OAAO,GAAGO,eAAX,KAA+BC,eAAe,GAAGD,eAAjD,KAAqED,QAAQ,GAAGD,OAAhF,CAAjB;EACD,CAnBM;;EAqBGT,6BAAV;IACE,KAAKa,UAAL,GAAkB,UAAlB;IACA,KAAKC,SAAL,GAAiB,CAAjB;IACA,KAAKC,IAAL,GAAY,IAAZ;EACD,CAJS;;EAMAf,oCAAV;IACE,IAAME,KAAK,GAAGc,iBAAMC,cAAN,CAAoBC,IAApB,CAAoB,IAApB,CAAd;;IACA,IAAI,CAAC,KAAKH,IAAV,EAAgB;MAAE;MAChB,IAAInB,IAAI,CAACM,KAAD,CAAJ,KAAgB,KAAKiB,GAAzB,EAA8B;QAC5BjB,KAAK,CAACkB,IAAN,CAAW,KAAKD,GAAhB;MACD;;MACD,IAAIxB,IAAI,CAACO,KAAD,CAAJ,KAAgB,KAAKmB,GAAzB,EAA8B;QAC5BnB,KAAK,CAACoB,OAAN,CAAc,KAAKD,GAAnB;MACD;IACF;;IACD,OAAOnB,KAAP;EACD,CAXS,CA9BZ,CA2CE;;;EACUF,qCAAV,UAA0BC,KAA1B,EAA+B;IAC7B,IAAMC,KAAK,GAAG,KAAKA,KAAnB,CAD6B,CAE7B;;IACA,IAAID,KAAK,GAAGN,IAAI,CAACO,KAAD,CAAhB,EAAyB;MACvB,OAAO,CAAP;IACD,CAL4B,CAM7B;;;IACA,IAAID,KAAK,GAAGL,IAAI,CAACM,KAAD,CAAhB,EAAyB;MACvB,OAAO,CAAP;IACD;;IACD,IAAII,QAAQ,GAAG,CAAf;IACAZ,IAAI,CAACQ,KAAD,EAAQ,UAACqB,IAAD,EAAOC,KAAP,EAAY;MACtB,IAAIvB,KAAK,IAAIsB,IAAb,EAAmB;QACjBjB,QAAQ,GAAGkB,KAAX;MACD,CAFD,MAEO;QACL,OAAO,KAAP;MACD;IACF,CANG,CAAJ;IAOA,OAAOlB,QAAQ,IAAIJ,KAAK,CAACC,MAAN,GAAe,CAAnB,CAAf;EACD,CAnBS;;EAoBZ;AAAC,CAhED,CAAuBN,UAAvB;;AAkEA,eAAeG,QAAf","names":["each","head","last","Continuous","__extends","_this","Quantize","value","ticks","length","percent","getInvertPercent","minIndex","Math","floor","minTick","nextTick","minIndexPercent","maxIndexPercent","tickMethod","tickCount","nice","_super","calculateTicks","call","max","push","min","unshift","tick","index"],"sourceRoot":"","sources":["../../src/continuous/quantize.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}