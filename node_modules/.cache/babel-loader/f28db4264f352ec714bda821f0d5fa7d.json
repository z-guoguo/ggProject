{"ast":null,"code":"import { NumberExt } from '../../util';\nimport { Point } from '../../geometry'; // `x-align` when set to `middle` causes centering of the subelement around its new x coordinate.\n// `x-align` when set to `right` uses the x coordinate as referenced to the right of the bbox.\n\nexport const xAlign = {\n  offset: offsetWrapper('x', 'width', 'right')\n}; // `y-align` when set to `middle` causes centering of the subelement around its new y coordinate.\n// `y-align` when set to `bottom` uses the y coordinate as referenced to the bottom of the bbox.\n\nexport const yAlign = {\n  offset: offsetWrapper('y', 'height', 'bottom')\n};\nexport const resetOffset = {\n  offset(val, {\n    refBBox\n  }) {\n    return val ? {\n      x: -refBBox.x,\n      y: -refBBox.y\n    } : {\n      x: 0,\n      y: 0\n    };\n  }\n\n};\n\nfunction offsetWrapper(axis, dimension, corner) {\n  return (value, {\n    refBBox\n  }) => {\n    const point = new Point();\n    let delta;\n\n    if (value === 'middle') {\n      delta = refBBox[dimension] / 2;\n    } else if (value === corner) {\n      delta = refBBox[dimension];\n    } else if (typeof value === 'number' && Number.isFinite(value)) {\n      delta = value > -1 && value < 1 ? -refBBox[dimension] * value : -value;\n    } else if (NumberExt.isPercentage(value)) {\n      delta = refBBox[dimension] * parseFloat(value) / 100;\n    } else {\n      delta = 0;\n    }\n\n    point[axis] = -(refBBox[axis] + delta);\n    return point;\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CAGA;AACA;;AACA,OAAO,MAAMC,MAAM,GAAoB;EACrCC,MAAM,EAAEC,aAAa,CAAC,GAAD,EAAM,OAAN,EAAe,OAAf;AADgB,CAAhC,C,CAIP;AACA;;AACA,OAAO,MAAMC,MAAM,GAAoB;EACrCF,MAAM,EAAEC,aAAa,CAAC,GAAD,EAAM,QAAN,EAAgB,QAAhB;AADgB,CAAhC;AAIP,OAAO,MAAME,WAAW,GAAoB;EAC1CH,MAAM,CAACI,GAAD,EAAM;IAAEC;EAAF,CAAN,EAAiB;IACrB,OAAOD,GAAG,GAAG;MAAEE,CAAC,EAAE,CAACD,OAAO,CAACC,CAAd;MAAiBC,CAAC,EAAE,CAACF,OAAO,CAACE;IAA7B,CAAH,GAAsC;MAAED,CAAC,EAAE,CAAL;MAAQC,CAAC,EAAE;IAAX,CAAhD;EACD;;AAHyC,CAArC;;AAMP,SAASN,aAAT,CACEO,IADF,EAEEC,SAFF,EAGEC,MAHF,EAG4B;EAE1B,OAAO,CAACC,KAAD,EAAQ;IAAEN;EAAF,CAAR,KAAuB;IAC5B,MAAMO,KAAK,GAAG,IAAId,KAAJ,EAAd;IACA,IAAIe,KAAJ;;IACA,IAAIF,KAAK,KAAK,QAAd,EAAwB;MACtBE,KAAK,GAAGR,OAAO,CAACI,SAAD,CAAP,GAAqB,CAA7B;IACD,CAFD,MAEO,IAAIE,KAAK,KAAKD,MAAd,EAAsB;MAC3BG,KAAK,GAAGR,OAAO,CAACI,SAAD,CAAf;IACD,CAFM,MAEA,IAAI,OAAOE,KAAP,KAAiB,QAAjB,IAA6BG,MAAM,CAACC,QAAP,CAAgBJ,KAAhB,CAAjC,EAAyD;MAC9DE,KAAK,GAAGF,KAAK,GAAG,CAAC,CAAT,IAAcA,KAAK,GAAG,CAAtB,GAA0B,CAACN,OAAO,CAACI,SAAD,CAAR,GAAsBE,KAAhD,GAAwD,CAACA,KAAjE;IACD,CAFM,MAEA,IAAId,SAAS,CAACmB,YAAV,CAAuBL,KAAvB,CAAJ,EAAmC;MACxCE,KAAK,GAAIR,OAAO,CAACI,SAAD,CAAP,GAAqBQ,UAAU,CAACN,KAAD,CAAhC,GAA2C,GAAnD;IACD,CAFM,MAEA;MACLE,KAAK,GAAG,CAAR;IACD;;IACDD,KAAK,CAACJ,IAAD,CAAL,GAAc,EAAEH,OAAO,CAACG,IAAD,CAAP,GAAgBK,KAAlB,CAAd;IACA,OAAOD,KAAP;EACD,CAhBD;AAiBD","names":["NumberExt","Point","xAlign","offset","offsetWrapper","yAlign","resetOffset","val","refBBox","x","y","axis","dimension","corner","value","point","delta","Number","isFinite","isPercentage","parseFloat"],"sourceRoot":"","sources":["../../../src/registry/attr/align.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}