{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findMinMaxNodeXY = exports.traverseTreeUp = exports.scaleMatrix = exports.getAdjMatrix = exports.floydWarshall = exports.getDegree = exports.getEdgeTerminal = void 0;\n\nvar object_1 = require(\"./object\");\n\nvar getEdgeTerminal = function (edge, type) {\n  var terminal = edge[type];\n\n  if ((0, object_1.isObject)(terminal)) {\n    return terminal.cell;\n  }\n\n  return terminal;\n};\n\nexports.getEdgeTerminal = getEdgeTerminal;\n\nvar getDegree = function (n, nodeIdxMap, edges) {\n  var degrees = [];\n\n  for (var i = 0; i < n; i++) {\n    degrees[i] = 0;\n  }\n\n  if (!edges) return degrees;\n  edges.forEach(function (e) {\n    var source = (0, exports.getEdgeTerminal)(e, 'source');\n    var target = (0, exports.getEdgeTerminal)(e, 'target');\n\n    if (source) {\n      degrees[nodeIdxMap[source]] += 1;\n    }\n\n    if (target) {\n      degrees[nodeIdxMap[target]] += 1;\n    }\n  });\n  return degrees;\n};\n\nexports.getDegree = getDegree;\n\nvar floydWarshall = function (adjMatrix) {\n  // initialize\n  var dist = [];\n  var size = adjMatrix.length;\n\n  for (var i = 0; i < size; i += 1) {\n    dist[i] = [];\n\n    for (var j = 0; j < size; j += 1) {\n      if (i === j) {\n        dist[i][j] = 0;\n      } else if (adjMatrix[i][j] === 0 || !adjMatrix[i][j]) {\n        dist[i][j] = Infinity;\n      } else {\n        dist[i][j] = adjMatrix[i][j];\n      }\n    }\n  } // floyd\n\n\n  for (var k = 0; k < size; k += 1) {\n    for (var i = 0; i < size; i += 1) {\n      for (var j = 0; j < size; j += 1) {\n        if (dist[i][j] > dist[i][k] + dist[k][j]) {\n          dist[i][j] = dist[i][k] + dist[k][j];\n        }\n      }\n    }\n  }\n\n  return dist;\n};\n\nexports.floydWarshall = floydWarshall;\n\nvar getAdjMatrix = function (data, directed) {\n  var nodes = data.nodes,\n      edges = data.edges;\n  var matrix = []; // map node with index in data.nodes\n\n  var nodeMap = {};\n\n  if (!nodes) {\n    throw new Error('invalid nodes data!');\n  }\n\n  if (nodes) {\n    nodes.forEach(function (node, i) {\n      nodeMap[node.id] = i;\n      var row = [];\n      matrix.push(row);\n    });\n  }\n\n  if (edges) {\n    edges.forEach(function (e) {\n      var source = (0, exports.getEdgeTerminal)(e, 'source');\n      var target = (0, exports.getEdgeTerminal)(e, 'target');\n      var sIndex = nodeMap[source];\n      var tIndex = nodeMap[target];\n      matrix[sIndex][tIndex] = 1;\n\n      if (!directed) {\n        matrix[tIndex][sIndex] = 1;\n      }\n    });\n  }\n\n  return matrix;\n};\n\nexports.getAdjMatrix = getAdjMatrix;\n/**\n * scale matrix\n * @param matrix [ [], [], [] ]\n * @param ratio\n */\n\nvar scaleMatrix = function (matrix, ratio) {\n  var result = [];\n  matrix.forEach(function (row) {\n    var newRow = [];\n    row.forEach(function (v) {\n      newRow.push(v * ratio);\n    });\n    result.push(newRow);\n  });\n  return result;\n};\n\nexports.scaleMatrix = scaleMatrix;\n/**\n * depth first traverse, from leaves to root, children in inverse order\n *  if the fn returns false, terminate the traverse\n */\n\nvar traverseUp = function (data, fn) {\n  if (data && data.children) {\n    for (var i = data.children.length - 1; i >= 0; i--) {\n      if (!traverseUp(data.children[i], fn)) return;\n    }\n  }\n\n  if (!fn(data)) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * depth first traverse, from leaves to root, children in inverse order\n * if the fn returns false, terminate the traverse\n */\n\n\nvar traverseTreeUp = function (data, fn) {\n  if (typeof fn !== 'function') {\n    return;\n  }\n\n  traverseUp(data, fn);\n};\n\nexports.traverseTreeUp = traverseTreeUp;\n\nvar findMinMaxNodeXY = function (nodes) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n  nodes.forEach(function (node) {\n    if (minX > node.x) minX = node.x;\n    if (minY > node.y) minY = node.y;\n    if (maxX < node.x) maxX = node.x;\n    if (maxY < node.y) maxY = node.y;\n  });\n  return {\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY\n  };\n};\n\nexports.findMinMaxNodeXY = findMinMaxNodeXY;","map":{"version":3,"mappings":"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","names":["getEdgeTerminal","edge","type","terminal","cell","exports","getDegree","n","nodeIdxMap","edges","degrees","i","forEach","e","source","target","floydWarshall","adjMatrix","dist","size","length","j","Infinity","k","getAdjMatrix","data","directed","matrix","nodeMap","nodes","Error","node","id","row","push","sIndex","tIndex","scaleMatrix","ratio","result","newRow","v","traverseUp","fn","children","traverseTreeUp","findMinMaxNodeXY","minX","minY","maxX","maxY","x","y"],"sourceRoot":"","sources":["../../src/util/math.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}