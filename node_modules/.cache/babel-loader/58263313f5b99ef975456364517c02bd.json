{"ast":null,"code":"/**\n * @fileoverview 矩阵运算，本来是要引入 gl-matrix, 但是考虑到 g-mobile 对大小有限制，同时 g-webgl 使用的 matrix 不一致\n * 所以，这里仅实现 2D 几个运算，上层自己引入 gl-matrix\n * @author dxq613@gmail.com\n */\n\n/**\n * 3阶矩阵相乘\n * @param {number[]} a 矩阵1\n * @param {number[]} b 矩阵2\n */\nexport function multiplyMatrix(a, b) {\n  var out = [];\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a10 = a[3];\n  var a11 = a[4];\n  var a12 = a[5];\n  var a20 = a[6];\n  var a21 = a[7];\n  var a22 = a[8];\n  var b00 = b[0];\n  var b01 = b[1];\n  var b02 = b[2];\n  var b10 = b[3];\n  var b11 = b[4];\n  var b12 = b[5];\n  var b20 = b[6];\n  var b21 = b[7];\n  var b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * 3阶矩阵同2阶向量相乘\n * @param {number[]} m 矩阵\n * @param {number[]} v 二阶向量\n */\n\nexport function multiplyVec2(m, v) {\n  var out = [];\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * 矩阵的逆\n * @param {number[]} a 矩阵\n */\n\nexport function invert(a) {\n  var out = [];\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a10 = a[3];\n  var a11 = a[4];\n  var a12 = a[5];\n  var a20 = a[6];\n  var a21 = a[7];\n  var a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}","map":{"version":3,"mappings":"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","names":["multiplyMatrix","a","b","out","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","multiplyVec2","m","v","x","y","invert","det"],"sourceRoot":"","sources":["../../src/util/matrix.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}