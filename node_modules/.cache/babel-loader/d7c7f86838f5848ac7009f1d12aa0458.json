{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Line } from '../../geometry';\nimport { normalizePoint, toResult } from './util';\nexport const line = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  const start = normalizePoint(elemBBox, groupPositionArgs.start || elemBBox.getOrigin());\n  const end = normalizePoint(elemBBox, groupPositionArgs.end || elemBBox.getCorner());\n  return lineLayout(portsPositionArgs, start, end, groupPositionArgs);\n};\nexport const left = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getTopLeft(), elemBBox.getBottomLeft(), groupPositionArgs);\n};\nexport const right = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getTopRight(), elemBBox.getBottomRight(), groupPositionArgs);\n};\nexport const top = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getTopLeft(), elemBBox.getTopRight(), groupPositionArgs);\n};\nexport const bottom = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getBottomLeft(), elemBBox.getBottomRight(), groupPositionArgs);\n};\n\nfunction lineLayout(portsPositionArgs, p1, p2, groupPositionArgs) {\n  const line = new Line(p1, p2);\n  const length = portsPositionArgs.length;\n  return portsPositionArgs.map((_a, index) => {\n    var {\n      strict\n    } = _a,\n        offset = __rest(_a, [\"strict\"]);\n\n    const ratio = strict || groupPositionArgs.strict ? (index + 1) / (length + 1) : (index + 0.5) / length;\n    const p = line.pointAt(ratio);\n\n    if (offset.dx || offset.dy) {\n      p.translate(offset.dx || 0, offset.dy || 0);\n    }\n\n    return toResult(p.round(), 0, offset);\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA,SAAgBA,IAAhB,QAA4B,gBAA5B;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,QAAzC;AAYA,OAAO,MAAMC,IAAI,GAAoC,CACnDC,iBADmD,EAEnDC,QAFmD,EAGnDC,iBAHmD,KAIjD;EACF,MAAMC,KAAK,GAAGN,cAAc,CAC1BI,QAD0B,EAE1BC,iBAAiB,CAACC,KAAlB,IAA2BF,QAAQ,CAACG,SAAT,EAFD,CAA5B;EAIA,MAAMC,GAAG,GAAGR,cAAc,CACxBI,QADwB,EAExBC,iBAAiB,CAACG,GAAlB,IAAyBJ,QAAQ,CAACK,SAAT,EAFD,CAA1B;EAKA,OAAOC,UAAU,CAACP,iBAAD,EAAoBG,KAApB,EAA2BE,GAA3B,EAAgCH,iBAAhC,CAAjB;AACD,CAfM;AAiBP,OAAO,MAAMM,IAAI,GAAoC,CACnDR,iBADmD,EAEnDC,QAFmD,EAGnDC,iBAHmD,KAIjD;EACF,OAAOK,UAAU,CACfP,iBADe,EAEfC,QAAQ,CAACQ,UAAT,EAFe,EAGfR,QAAQ,CAACS,aAAT,EAHe,EAIfR,iBAJe,CAAjB;AAMD,CAXM;AAaP,OAAO,MAAMS,KAAK,GAAoC,CACpDX,iBADoD,EAEpDC,QAFoD,EAGpDC,iBAHoD,KAIlD;EACF,OAAOK,UAAU,CACfP,iBADe,EAEfC,QAAQ,CAACW,WAAT,EAFe,EAGfX,QAAQ,CAACY,cAAT,EAHe,EAIfX,iBAJe,CAAjB;AAMD,CAXM;AAaP,OAAO,MAAMY,GAAG,GAAoC,CAClDd,iBADkD,EAElDC,QAFkD,EAGlDC,iBAHkD,KAIhD;EACF,OAAOK,UAAU,CACfP,iBADe,EAEfC,QAAQ,CAACQ,UAAT,EAFe,EAGfR,QAAQ,CAACW,WAAT,EAHe,EAIfV,iBAJe,CAAjB;AAMD,CAXM;AAaP,OAAO,MAAMa,MAAM,GAAoC,CACrDf,iBADqD,EAErDC,QAFqD,EAGrDC,iBAHqD,KAInD;EACF,OAAOK,UAAU,CACfP,iBADe,EAEfC,QAAQ,CAACS,aAAT,EAFe,EAGfT,QAAQ,CAACY,cAAT,EAHe,EAIfX,iBAJe,CAAjB;AAMD,CAXM;;AAaP,SAASK,UAAT,CACEP,iBADF,EAEEgB,EAFF,EAGEC,EAHF,EAIEf,iBAJF,EAI6B;EAE3B,MAAMH,IAAI,GAAG,IAAIH,IAAJ,CAASoB,EAAT,EAAaC,EAAb,CAAb;EACA,MAAMC,MAAM,GAAGlB,iBAAiB,CAACkB,MAAjC;EACA,OAAOlB,iBAAiB,CAACmB,GAAlB,CAAsB,CAACC,EAAD,EAAwBC,KAAxB,KAAiC;QAAhC;MAAEC;IAAF,IAAQF;QAAKG,MAAM,cAAnB,UAAmB;;IAC/C,MAAMC,KAAK,GACTF,MAAM,IAAIpB,iBAAiB,CAACoB,MAA5B,GACI,CAACD,KAAK,GAAG,CAAT,KAAeH,MAAM,GAAG,CAAxB,CADJ,GAEI,CAACG,KAAK,GAAG,GAAT,IAAgBH,MAHtB;IAKA,MAAMO,CAAC,GAAG1B,IAAI,CAAC2B,OAAL,CAAaF,KAAb,CAAV;;IACA,IAAID,MAAM,CAACI,EAAP,IAAaJ,MAAM,CAACK,EAAxB,EAA4B;MAC1BH,CAAC,CAACI,SAAF,CAAYN,MAAM,CAACI,EAAP,IAAa,CAAzB,EAA4BJ,MAAM,CAACK,EAAP,IAAa,CAAzC;IACD;;IAED,OAAO9B,QAAQ,CAAC2B,CAAC,CAACK,KAAF,EAAD,EAAY,CAAZ,EAAeP,MAAf,CAAf;EACD,CAZM,CAAP;AAaD","names":["Line","normalizePoint","toResult","line","portsPositionArgs","elemBBox","groupPositionArgs","start","getOrigin","end","getCorner","lineLayout","left","getTopLeft","getBottomLeft","right","getTopRight","getBottomRight","top","bottom","p1","p2","length","map","_a","index","strict","offset","ratio","p","pointAt","dx","dy","translate","round"],"sourceRoot":"","sources":["../../../src/registry/port-layout/line.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}