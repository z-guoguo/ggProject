{"ast":null,"code":"import WebWorker from './work';\nexport var LayoutWorker = function LayoutWorker(workerScriptURL) {\n  if (workerScriptURL === void 0) {\n    workerScriptURL = 'https://unpkg.com/@antv/layout@latest/dist/layout.min.js';\n  }\n\n  function workerCode() {\n    var LAYOUT_MESSAGE = {\n      // run layout\n      RUN: 'LAYOUT_RUN',\n      // layout ended with success\n      END: 'LAYOUT_END',\n      // layout error\n      ERROR: 'LAYOUT_ERROR',\n      // layout tick, used in force directed layout\n      TICK: 'LAYOUT_TICK',\n      GPURUN: 'GPU_LAYOUT_RUN',\n      GPUEND: 'GPU_LAYOUT_END'\n    }; // @ts-ignore\n\n    layout.registerLayout('grid', layout.GridLayout); // @ts-ignore\n\n    layout.registerLayout('random', layout.RandomLayout); // @ts-ignore\n\n    layout.registerLayout('force', layout.ForceLayout); // @ts-ignore\n\n    layout.registerLayout('circular', layout.CircularLayout); // @ts-ignore\n\n    layout.registerLayout('dagre', layout.DagreLayout); // @ts-ignore\n\n    layout.registerLayout('dagreCompound', layout.DagreCompoundLayout); // @ts-ignore\n\n    layout.registerLayout('radial', layout.RadialLayout); // @ts-ignore\n\n    layout.registerLayout('concentric', layout.ConcentricLayout); // @ts-ignore\n\n    layout.registerLayout('mds', layout.MDSLayout); // @ts-ignore\n\n    layout.registerLayout('fruchterman', layout.FruchtermanLayout); // @ts-ignore\n\n    layout.registerLayout('fruchterman-gpu', layout.FruchtermanGPULayout); // @ts-ignore\n\n    layout.registerLayout('gForce', layout.GForceLayout); // @ts-ignore\n\n    layout.registerLayout('gForce-gpu', layout.GForceGPULayout); // @ts-ignore\n\n    layout.registerLayout('comboForce', layout.ComboForceLayout); // @ts-ignore\n\n    layout.registerLayout('comboCombined', layout.ComboCombinedLayout); // @ts-ignore\n\n    layout.registerLayout('forceAtlas2', layout.ForceAtlas2Layout);\n\n    function isLayoutMessage(event) {\n      var type = event.data.type;\n      return type === LAYOUT_MESSAGE.RUN || type === LAYOUT_MESSAGE.GPURUN;\n    }\n\n    function handleLayoutMessage(event) {\n      var _this = this;\n\n      var type = event.data.type;\n\n      switch (type) {\n        case LAYOUT_MESSAGE.RUN:\n          {\n            var _a = event.data,\n                nodes_1 = _a.nodes,\n                edges = _a.edges,\n                _b = _a.layoutCfg,\n                layoutCfg = _b === void 0 ? {} : _b;\n            var layoutType = layoutCfg.type; // @ts-ignore\n\n            var LayoutClass = layout.getLayoutByName(layoutType);\n\n            if (!LayoutClass) {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" not found\")\n              });\n              break;\n            } // eslint-disable-next-line prefer-const\n\n\n            var layoutMethod_1;\n\n            layoutCfg.onLayoutEnd = function () {\n              _this.postMessage({\n                type: LAYOUT_MESSAGE.END,\n                nodes: nodes_1\n              });\n\n              layoutMethod_1 === null || layoutMethod_1 === void 0 ? void 0 : layoutMethod_1.destroy();\n            };\n\n            layoutMethod_1 = new LayoutClass(layoutCfg);\n            layoutMethod_1.init({\n              nodes: nodes_1,\n              edges: edges\n            });\n            layoutMethod_1.execute();\n            break;\n          }\n\n        case LAYOUT_MESSAGE.GPURUN:\n          {\n            var _c = event.data,\n                nodes = _c.nodes,\n                edges = _c.edges,\n                _d = _c.layoutCfg,\n                layoutCfg = _d === void 0 ? {} : _d,\n                canvas = _c.canvas;\n            var layoutType = layoutCfg.type; // @ts-ignore\n\n            var LayoutClass = layout.getLayoutByName(layoutType);\n\n            if (!LayoutClass) {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" not found\")\n              });\n              break;\n            }\n\n            if (layoutType.split('-')[1] !== 'gpu') {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" does not support GPU\")\n              });\n              break;\n            }\n\n            var layoutMethod = new LayoutClass(layoutCfg);\n            layoutMethod.init({\n              nodes: nodes,\n              edges: edges\n            });\n            layoutMethod.executeWithWorker(canvas, this);\n            break;\n          }\n\n        default:\n          break;\n      }\n    }\n\n    onmessage = function onmessage(event) {\n      if (isLayoutMessage(event)) {\n        handleLayoutMessage(event);\n      }\n    };\n  }\n\n  var layoutWorker = new WebWorker(workerCode, workerScriptURL);\n  return layoutWorker;\n};","map":{"version":3,"names":["WebWorker","LayoutWorker","workerScriptURL","workerCode","LAYOUT_MESSAGE","RUN","END","ERROR","TICK","GPURUN","GPUEND","layout","registerLayout","GridLayout","RandomLayout","ForceLayout","CircularLayout","DagreLayout","DagreCompoundLayout","RadialLayout","ConcentricLayout","MDSLayout","FruchtermanLayout","FruchtermanGPULayout","GForceLayout","GForceGPULayout","ComboForceLayout","ComboCombinedLayout","ForceAtlas2Layout","isLayoutMessage","event","type","data","handleLayoutMessage","_this","_a","nodes_1","nodes","edges","_b","layoutCfg","layoutType","LayoutClass","getLayoutByName","postMessage","message","concat","layoutMethod_1","onLayoutEnd","destroy","init","execute","_c","_d","canvas","split","layoutMethod","executeWithWorker","onmessage","layoutWorker"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-pc/es/layout/worker/layout.worker.js"],"sourcesContent":["import WebWorker from './work';\nexport var LayoutWorker = function LayoutWorker(workerScriptURL) {\n  if (workerScriptURL === void 0) {\n    workerScriptURL = 'https://unpkg.com/@antv/layout@latest/dist/layout.min.js';\n  }\n\n  function workerCode() {\n    var LAYOUT_MESSAGE = {\n      // run layout\n      RUN: 'LAYOUT_RUN',\n      // layout ended with success\n      END: 'LAYOUT_END',\n      // layout error\n      ERROR: 'LAYOUT_ERROR',\n      // layout tick, used in force directed layout\n      TICK: 'LAYOUT_TICK',\n      GPURUN: 'GPU_LAYOUT_RUN',\n      GPUEND: 'GPU_LAYOUT_END'\n    }; // @ts-ignore\n\n    layout.registerLayout('grid', layout.GridLayout); // @ts-ignore\n\n    layout.registerLayout('random', layout.RandomLayout); // @ts-ignore\n\n    layout.registerLayout('force', layout.ForceLayout); // @ts-ignore\n\n    layout.registerLayout('circular', layout.CircularLayout); // @ts-ignore\n\n    layout.registerLayout('dagre', layout.DagreLayout); // @ts-ignore\n\n    layout.registerLayout('dagreCompound', layout.DagreCompoundLayout); // @ts-ignore\n\n    layout.registerLayout('radial', layout.RadialLayout); // @ts-ignore\n\n    layout.registerLayout('concentric', layout.ConcentricLayout); // @ts-ignore\n\n    layout.registerLayout('mds', layout.MDSLayout); // @ts-ignore\n\n    layout.registerLayout('fruchterman', layout.FruchtermanLayout); // @ts-ignore\n\n    layout.registerLayout('fruchterman-gpu', layout.FruchtermanGPULayout); // @ts-ignore\n\n    layout.registerLayout('gForce', layout.GForceLayout); // @ts-ignore\n\n    layout.registerLayout('gForce-gpu', layout.GForceGPULayout); // @ts-ignore\n\n    layout.registerLayout('comboForce', layout.ComboForceLayout); // @ts-ignore\n\n    layout.registerLayout('comboCombined', layout.ComboCombinedLayout); // @ts-ignore\n\n    layout.registerLayout('forceAtlas2', layout.ForceAtlas2Layout);\n\n    function isLayoutMessage(event) {\n      var type = event.data.type;\n      return type === LAYOUT_MESSAGE.RUN || type === LAYOUT_MESSAGE.GPURUN;\n    }\n\n    function handleLayoutMessage(event) {\n      var _this = this;\n\n      var type = event.data.type;\n\n      switch (type) {\n        case LAYOUT_MESSAGE.RUN:\n          {\n            var _a = event.data,\n                nodes_1 = _a.nodes,\n                edges = _a.edges,\n                _b = _a.layoutCfg,\n                layoutCfg = _b === void 0 ? {} : _b;\n            var layoutType = layoutCfg.type; // @ts-ignore\n\n            var LayoutClass = layout.getLayoutByName(layoutType);\n\n            if (!LayoutClass) {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" not found\")\n              });\n              break;\n            } // eslint-disable-next-line prefer-const\n\n\n            var layoutMethod_1;\n\n            layoutCfg.onLayoutEnd = function () {\n              _this.postMessage({\n                type: LAYOUT_MESSAGE.END,\n                nodes: nodes_1\n              });\n\n              layoutMethod_1 === null || layoutMethod_1 === void 0 ? void 0 : layoutMethod_1.destroy();\n            };\n\n            layoutMethod_1 = new LayoutClass(layoutCfg);\n            layoutMethod_1.init({\n              nodes: nodes_1,\n              edges: edges\n            });\n            layoutMethod_1.execute();\n            break;\n          }\n\n        case LAYOUT_MESSAGE.GPURUN:\n          {\n            var _c = event.data,\n                nodes = _c.nodes,\n                edges = _c.edges,\n                _d = _c.layoutCfg,\n                layoutCfg = _d === void 0 ? {} : _d,\n                canvas = _c.canvas;\n            var layoutType = layoutCfg.type; // @ts-ignore\n\n            var LayoutClass = layout.getLayoutByName(layoutType);\n\n            if (!LayoutClass) {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" not found\")\n              });\n              break;\n            }\n\n            if (layoutType.split('-')[1] !== 'gpu') {\n              this.postMessage({\n                type: LAYOUT_MESSAGE.ERROR,\n                message: \"layout \".concat(layoutType, \" does not support GPU\")\n              });\n              break;\n            }\n\n            var layoutMethod = new LayoutClass(layoutCfg);\n            layoutMethod.init({\n              nodes: nodes,\n              edges: edges\n            });\n            layoutMethod.executeWithWorker(canvas, this);\n            break;\n          }\n\n        default:\n          break;\n      }\n    }\n\n    onmessage = function onmessage(event) {\n      if (isLayoutMessage(event)) {\n        handleLayoutMessage(event);\n      }\n    };\n  }\n\n  var layoutWorker = new WebWorker(workerCode, workerScriptURL);\n  return layoutWorker;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}