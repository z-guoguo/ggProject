{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false\n    } = options;\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n    let swapped = false;\n    let a;\n\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone(); // eslint-disable-next-line no-console\n\n        console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n    let si = new Float64Array(ni);\n\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n\n          a.set(k, k, a.get(k, k) + 1);\n        }\n\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n\n          t = -t / a.get(k, k);\n\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n\n          e[k + 1] += 1;\n        }\n\n        e[k] = -e[k];\n\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n\n        U.set(j, j, 1);\n      }\n\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n\n            t = -t / U.get(k, k);\n\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n\n          U.set(k, k, 1 + U.get(k, k));\n\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n\n            t = -t / V.get(k + 1, k);\n\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n\n    while (p > 0) {\n      let k, kase;\n\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n\n        const alpha = Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n\n          let t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1:\n          {\n            let f = e[p - 2];\n            e[p - 2] = 0;\n\n            for (let j = p - 2; j >= k; j--) {\n              let t = hypotenuse(s[j], f);\n              let cs = s[j] / t;\n              let sn = f / t;\n              s[j] = t;\n\n              if (j !== k) {\n                f = -sn * e[j - 1];\n                e[j - 1] = cs * e[j - 1];\n              }\n\n              if (wantv) {\n                for (let i = 0; i < n; i++) {\n                  t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                  V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                  V.set(i, j, t);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 2:\n          {\n            let f = e[k - 1];\n            e[k - 1] = 0;\n\n            for (let j = k; j < p; j++) {\n              let t = hypotenuse(s[j], f);\n              let cs = s[j] / t;\n              let sn = f / t;\n              s[j] = t;\n              f = -sn * e[j];\n              e[j] = cs * e[j];\n\n              if (wantu) {\n                for (let i = 0; i < m; i++) {\n                  t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                  U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                  U.set(i, j, t);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 3:\n          {\n            const scale = Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2]), Math.abs(e[p - 2]), Math.abs(s[k]), Math.abs(e[k]));\n            const sp = s[p - 1] / scale;\n            const spm1 = s[p - 2] / scale;\n            const epm1 = e[p - 2] / scale;\n            const sk = s[k] / scale;\n            const ek = e[k] / scale;\n            const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n            const c = sp * epm1 * (sp * epm1);\n            let shift = 0;\n\n            if (b !== 0 || c !== 0) {\n              if (b < 0) {\n                shift = 0 - Math.sqrt(b * b + c);\n              } else {\n                shift = Math.sqrt(b * b + c);\n              }\n\n              shift = c / (b + shift);\n            }\n\n            let f = (sk + sp) * (sk - sp) + shift;\n            let g = sk * ek;\n\n            for (let j = k; j < p - 1; j++) {\n              let t = hypotenuse(f, g);\n              if (t === 0) t = Number.MIN_VALUE;\n              let cs = f / t;\n              let sn = g / t;\n\n              if (j !== k) {\n                e[j - 1] = t;\n              }\n\n              f = cs * s[j] + sn * e[j];\n              e[j] = cs * e[j] - sn * s[j];\n              g = sn * s[j + 1];\n              s[j + 1] = cs * s[j + 1];\n\n              if (wantv) {\n                for (let i = 0; i < n; i++) {\n                  t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                  V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                  V.set(i, j, t);\n                }\n              }\n\n              t = hypotenuse(f, g);\n              if (t === 0) t = Number.MIN_VALUE;\n              cs = f / t;\n              sn = g / t;\n              s[j] = t;\n              f = cs * e[j] + sn * s[j + 1];\n              s[j + 1] = -sn * e[j] + cs * s[j + 1];\n              g = sn * e[j + 1];\n              e[j + 1] = cs * e[j + 1];\n\n              if (wantu && j < m - 1) {\n                for (let i = 0; i < m; i++) {\n                  t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                  U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                  U.set(i, j, t);\n                }\n              }\n            }\n\n            e[p - 2] = f;\n            iter = iter + 1;\n            break;\n          }\n\n        case 4:\n          {\n            if (s[k] <= 0) {\n              s[k] = s[k] < 0 ? -s[k] : 0;\n\n              if (wantv) {\n                for (let i = 0; i <= pp; i++) {\n                  V.set(i, k, -V.get(i, k));\n                }\n              }\n            }\n\n            while (k < pp) {\n              if (s[k] >= s[k + 1]) {\n                break;\n              }\n\n              let t = s[k];\n              s[k] = s[k + 1];\n              s[k + 1] = t;\n\n              if (wantv && k < n - 1) {\n                for (let i = 0; i < n; i++) {\n                  t = V.get(i, k + 1);\n                  V.set(i, k + 1, V.get(i, k));\n                  V.set(i, k, t);\n                }\n              }\n\n              if (wantu && k < m - 1) {\n                for (let i = 0; i < m; i++) {\n                  t = U.get(i, k + 1);\n                  U.set(i, k + 1, U.get(i, k));\n                  U.set(i, k, t);\n                }\n              }\n\n              k++;\n            }\n\n            iter = 0;\n            p--;\n            break;\n          }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n\n}","map":{"version":3,"names":["Matrix","WrapperMatrix2D","hypotenuse","SingularValueDecomposition","constructor","value","options","checkMatrix","isEmpty","Error","m","rows","n","columns","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","a","clone","console","warn","transpose","aux","nu","Math","min","ni","s","Float64Array","U","V","e","work","si","i","nct","nrt","max","mrc","k","get","set","j","t","p","pp","iter","eps","Number","EPSILON","kase","alpha","MIN_VALUE","abs","isNaN","ks","f","cs","sn","scale","sp","spm1","epm1","sk","ek","b","c","shift","sqrt","g","tmp","solve","Y","threshold","scols","length","Ls","zeros","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solveForDiagonal","diag","inverse","vcols","X","ucols","condition","norm2","rank","tol","r","ii","diagonal","Array","from","leftSingularVectors","diagonalMatrix"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/ml-matrix/src/dc/svd.js"],"sourcesContent":["import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}