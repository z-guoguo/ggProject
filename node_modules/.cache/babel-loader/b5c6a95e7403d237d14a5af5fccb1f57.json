{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { AbstractShape } from '@antv/g-base';\nimport { setShadow, setTransform, setClip } from '../util/svg';\nimport { createDom } from '../util/dom';\nimport { refreshElement } from '../util/draw';\nimport { SVG_ATTR_MAP } from '../constant';\nimport * as Shape from './index';\nimport Group from '../group';\nimport { getBBoxMethod } from '@antv/g-base';\n\nvar ShapeBase =\n/** @class */\nfunction (_super) {\n  __extends(ShapeBase, _super);\n\n  function ShapeBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'svg';\n    _this.canFill = false;\n    _this.canStroke = false;\n    return _this;\n  }\n\n  ShapeBase.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this); // 设置默认值\n\n\n    return __assign(__assign({}, attrs), {\n      lineWidth: 1,\n      lineAppendWidth: 0,\n      strokeOpacity: 1,\n      fillOpacity: 1\n    });\n  }; // 覆盖基类的 afterAttrsChange 方法\n\n\n  ShapeBase.prototype.afterAttrsChange = function (targetAttrs) {\n    _super.prototype.afterAttrsChange.call(this, targetAttrs);\n\n    var canvas = this.get('canvas'); // 只有挂载到画布下，才对元素进行实际渲染\n\n    if (canvas && canvas.get('autoDraw')) {\n      var context = canvas.get('context');\n      this.draw(context, targetAttrs);\n    }\n  };\n\n  ShapeBase.prototype.getShapeBase = function () {\n    return Shape;\n  };\n\n  ShapeBase.prototype.getGroupBase = function () {\n    return Group;\n  };\n  /**\n   * 一些方法调用会引起画布变化\n   * @param {ChangeType} changeType 改变的类型\n   */\n\n\n  ShapeBase.prototype.onCanvasChange = function (changeType) {\n    refreshElement(this, changeType);\n  };\n\n  ShapeBase.prototype.calculateBBox = function () {\n    var el = this.get('el');\n    var bbox = null; // 包围盒计算依赖于绘制，如果还没有生成对应的 Dom 元素，则包围盒的长宽均为 0\n\n    if (el) {\n      bbox = el.getBBox();\n    } else {\n      var bboxMethod = getBBoxMethod(this.get('type'));\n\n      if (bboxMethod) {\n        bbox = bboxMethod(this);\n      }\n    }\n\n    if (bbox) {\n      var x = bbox.x,\n          y = bbox.y,\n          width = bbox.width,\n          height = bbox.height;\n      var lineWidth = this.getHitLineWidth();\n      var halfWidth = lineWidth / 2;\n      var minX = x - halfWidth;\n      var minY = y - halfWidth;\n      var maxX = x + width + halfWidth;\n      var maxY = y + height + halfWidth;\n      return {\n        x: minX,\n        y: minY,\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n        width: width + lineWidth,\n        height: height + lineWidth\n      };\n    }\n\n    return {\n      x: 0,\n      y: 0,\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0,\n      width: 0,\n      height: 0\n    };\n  };\n\n  ShapeBase.prototype.isFill = function () {\n    var _a = this.attr(),\n        fill = _a.fill,\n        fillStyle = _a.fillStyle;\n\n    return (fill || fillStyle || this.isClipShape()) && this.canFill;\n  };\n\n  ShapeBase.prototype.isStroke = function () {\n    var _a = this.attr(),\n        stroke = _a.stroke,\n        strokeStyle = _a.strokeStyle;\n\n    return (stroke || strokeStyle) && this.canStroke;\n  };\n\n  ShapeBase.prototype.draw = function (context, targetAttrs) {\n    var el = this.get('el');\n\n    if (this.get('destroyed')) {\n      if (el) {\n        el.parentNode.removeChild(el);\n      }\n    } else {\n      if (!el) {\n        createDom(this);\n      }\n\n      setClip(this, context);\n      this.createPath(context, targetAttrs);\n      this.shadow(context, targetAttrs);\n      this.strokeAndFill(context, targetAttrs);\n      this.transform(targetAttrs);\n    }\n  };\n  /**\n   * @protected\n   * 绘制图形的路径\n   * @param {Defs} context 上下文\n   * @param {ShapeAttrs} targetAttrs 渲染的目标属性\n   */\n\n\n  ShapeBase.prototype.createPath = function (context, targetAttrs) {}; // stroke and fill\n\n\n  ShapeBase.prototype.strokeAndFill = function (context, targetAttrs) {\n    var attrs = targetAttrs || this.attr();\n    var fill = attrs.fill,\n        fillStyle = attrs.fillStyle,\n        stroke = attrs.stroke,\n        strokeStyle = attrs.strokeStyle,\n        fillOpacity = attrs.fillOpacity,\n        strokeOpacity = attrs.strokeOpacity,\n        lineWidth = attrs.lineWidth;\n    var el = this.get('el');\n\n    if (this.canFill) {\n      // 初次渲染和更新渲染的逻辑有所不同: 初次渲染值为空时，需要设置为 none，否则就会是黑色，而更新渲染则不需要\n      if (!targetAttrs) {\n        this._setColor(context, 'fill', fill || fillStyle);\n      } else if ('fill' in attrs) {\n        this._setColor(context, 'fill', fill);\n      } else if ('fillStyle' in attrs) {\n        // compatible with fillStyle\n        this._setColor(context, 'fill', fillStyle);\n      }\n\n      if (fillOpacity) {\n        el.setAttribute(SVG_ATTR_MAP['fillOpacity'], fillOpacity);\n      }\n    }\n\n    if (this.canStroke && lineWidth > 0) {\n      if (!targetAttrs) {\n        this._setColor(context, 'stroke', stroke || strokeStyle);\n      } else if ('stroke' in attrs) {\n        this._setColor(context, 'stroke', stroke);\n      } else if ('strokeStyle' in attrs) {\n        // compatible with strokeStyle\n        this._setColor(context, 'stroke', strokeStyle);\n      }\n\n      if (strokeOpacity) {\n        el.setAttribute(SVG_ATTR_MAP['strokeOpacity'], strokeOpacity);\n      }\n\n      if (lineWidth) {\n        el.setAttribute(SVG_ATTR_MAP['lineWidth'], lineWidth);\n      }\n    }\n  };\n\n  ShapeBase.prototype._setColor = function (context, attr, value) {\n    var el = this.get('el');\n\n    if (!value) {\n      // need to set `none` to avoid default value\n      el.setAttribute(SVG_ATTR_MAP[attr], 'none');\n      return;\n    }\n\n    value = value.trim();\n\n    if (/^[r,R,L,l]{1}[\\s]*\\(/.test(value)) {\n      var id = context.find('gradient', value);\n\n      if (!id) {\n        id = context.addGradient(value);\n      }\n\n      el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n    } else if (/^[p,P]{1}[\\s]*\\(/.test(value)) {\n      var id = context.find('pattern', value);\n\n      if (!id) {\n        id = context.addPattern(value);\n      }\n\n      el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n    } else {\n      el.setAttribute(SVG_ATTR_MAP[attr], value);\n    }\n  };\n\n  ShapeBase.prototype.shadow = function (context, targetAttrs) {\n    var attrs = this.attr();\n\n    var _a = targetAttrs || attrs,\n        shadowOffsetX = _a.shadowOffsetX,\n        shadowOffsetY = _a.shadowOffsetY,\n        shadowBlur = _a.shadowBlur,\n        shadowColor = _a.shadowColor;\n\n    if (shadowOffsetX || shadowOffsetY || shadowBlur || shadowColor) {\n      setShadow(this, context);\n    }\n  };\n\n  ShapeBase.prototype.transform = function (targetAttrs) {\n    var attrs = this.attr();\n    var matrix = (targetAttrs || attrs).matrix;\n\n    if (matrix) {\n      setTransform(this);\n    }\n  };\n\n  ShapeBase.prototype.isInShape = function (refX, refY) {\n    return this.isPointInPath(refX, refY);\n  };\n\n  ShapeBase.prototype.isPointInPath = function (refX, refY) {\n    var el = this.get('el');\n    var canvas = this.get('canvas');\n    var bbox = canvas.get('el').getBoundingClientRect();\n    var clientX = refX + bbox.left;\n    var clientY = refY + bbox.top;\n    var element = document.elementFromPoint(clientX, clientY);\n\n    if (element && element.isEqualNode(el)) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * 获取线拾取的宽度\n   * @returns {number} 线的拾取宽度\n   */\n\n\n  ShapeBase.prototype.getHitLineWidth = function () {\n    var _a = this.attrs,\n        lineWidth = _a.lineWidth,\n        lineAppendWidth = _a.lineAppendWidth;\n\n    if (this.isStroke()) {\n      return lineWidth + lineAppendWidth;\n    }\n\n    return 0;\n  };\n\n  return ShapeBase;\n}(AbstractShape);\n\nexport default ShapeBase;","map":{"version":3,"mappings":"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","names":["AbstractShape","setShadow","setTransform","setClip","createDom","refreshElement","SVG_ATTR_MAP","Shape","Group","getBBoxMethod","__extends","_this","ShapeBase","attrs","_super","getDefaultAttrs","call","lineWidth","lineAppendWidth","strokeOpacity","fillOpacity","targetAttrs","afterAttrsChange","canvas","get","context","draw","changeType","el","bbox","getBBox","bboxMethod","y","width","height","getHitLineWidth","halfWidth","minX","x","minY","maxX","maxY","attr","fill","fillStyle","isClipShape","canFill","stroke","strokeStyle","canStroke","parentNode","removeChild","createPath","shadow","strokeAndFill","transform","_setColor","setAttribute","value","trim","test","id","find","addGradient","addPattern","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","matrix","refX","refY","isPointInPath","getBoundingClientRect","clientX","left","clientY","top","element","document","elementFromPoint","isEqualNode","isStroke"],"sourceRoot":"","sources":["../../src/shape/base.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}