{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { Line } from '../line';\nimport { Curve } from '../curve';\nimport { Point } from '../point';\nimport { LineTo } from './lineto';\nimport { Segment } from './segment';\nexport class MoveTo extends Segment {\n  constructor(x, y) {\n    super();\n    this.isVisible = false;\n    this.isSubpathStart = true;\n\n    if (Line.isLine(x) || Curve.isCurve(x)) {\n      this.endPoint = x.end.clone().round(2);\n    } else {\n      this.endPoint = Point.create(x, y).round(2);\n    }\n  }\n\n  get start() {\n    throw new Error('Illegal access. Moveto segments should not need a start property.');\n  }\n\n  get type() {\n    return 'M';\n  }\n\n  bbox() {\n    return null;\n  }\n\n  closestPoint() {\n    return this.end.clone();\n  }\n\n  closestPointLength() {\n    return 0;\n  }\n\n  closestPointNormalizedLength() {\n    return 0;\n  }\n\n  closestPointT() {\n    return 1;\n  }\n\n  closestPointTangent() {\n    return null;\n  }\n\n  length() {\n    return 0;\n  }\n\n  lengthAtT() {\n    return 0;\n  }\n\n  divideAt() {\n    return [this.clone(), this.clone()];\n  }\n\n  divideAtLength() {\n    return [this.clone(), this.clone()];\n  }\n\n  getSubdivisions() {\n    return [];\n  }\n\n  pointAt() {\n    return this.end.clone();\n  }\n\n  pointAtLength() {\n    return this.end.clone();\n  }\n\n  pointAtT() {\n    return this.end.clone();\n  }\n\n  tangentAt() {\n    return null;\n  }\n\n  tangentAtLength() {\n    return null;\n  }\n\n  tangentAtT() {\n    return null;\n  }\n\n  isDifferentiable() {\n    return false;\n  }\n\n  scale(sx, sy, origin) {\n    this.end.scale(sx, sy, origin);\n    return this;\n  }\n\n  rotate(angle, origin) {\n    this.end.rotate(angle, origin);\n    return this;\n  }\n\n  translate(tx, ty) {\n    if (typeof tx === 'number') {\n      this.end.translate(tx, ty);\n    } else {\n      this.end.translate(tx);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new MoveTo(this.end);\n  }\n\n  equals(s) {\n    return this.type === s.type && this.end.equals(s.end);\n  }\n\n  toJSON() {\n    return {\n      type: this.type,\n      end: this.end.toJSON()\n    };\n  }\n\n  serialize() {\n    const end = this.end;\n    return `${this.type} ${end.x} ${end.y}`;\n  }\n\n}\n\n(function (MoveTo) {\n  function create(...args) {\n    const len = args.length;\n    const arg0 = args[0]; // line provided\n\n    if (Line.isLine(arg0)) {\n      return new MoveTo(arg0);\n    } // curve provided\n\n\n    if (Curve.isCurve(arg0)) {\n      return new MoveTo(arg0);\n    } // points provided\n\n\n    if (Point.isPointLike(arg0)) {\n      if (len === 1) {\n        return new MoveTo(arg0);\n      } // this is a moveto-with-subsequent-poly-line segment\n\n\n      const segments = []; // points come one by one\n\n      for (let i = 0; i < len; i += 1) {\n        if (i === 0) {\n          segments.push(new MoveTo(args[i]));\n        } else {\n          segments.push(new LineTo(args[i]));\n        }\n      }\n\n      return segments;\n    } // coordinates provided\n\n\n    if (len === 2) {\n      return new MoveTo(+args[0], +args[1]);\n    } // this is a moveto-with-subsequent-poly-line segment\n\n\n    const segments = [];\n\n    for (let i = 0; i < len; i += 2) {\n      const x = +args[i];\n      const y = +args[i + 1];\n\n      if (i === 0) {\n        segments.push(new MoveTo(x, y));\n      } else {\n        segments.push(new LineTo(x, y));\n      }\n    }\n\n    return segments;\n  }\n\n  MoveTo.create = create;\n})(MoveTo || (MoveTo = {}));","map":{"version":3,"mappings":"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","names":["Line","Curve","Point","LineTo","Segment","MoveTo","constructor","x","y","isVisible","isSubpathStart","isLine","isCurve","endPoint","end","clone","round","create","start","Error","type","bbox","closestPoint","closestPointLength","closestPointNormalizedLength","closestPointT","closestPointTangent","length","lengthAtT","divideAt","divideAtLength","getSubdivisions","pointAt","pointAtLength","pointAtT","tangentAt","tangentAtLength","tangentAtT","isDifferentiable","scale","sx","sy","origin","rotate","angle","translate","tx","ty","equals","s","toJSON","serialize","args","len","arg0","isPointLike","segments","i","push"],"sourceRoot":"","sources":["../../../src/geometry/path/moveto.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}