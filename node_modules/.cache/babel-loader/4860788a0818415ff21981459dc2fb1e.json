{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _class, _class2, _descriptor, _temp;\n\nimport { IDENTIFIER } from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\nexport var View = (_dec = injectable(), _dec2 = inject(IDENTIFIER.Systems), _dec3 = named(IDENTIFIER.RendererSystem), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function () {\n  function View() {\n    _classCallCheck(this, View);\n\n    _initializerDefineProperty(this, \"rendererSystem\", _descriptor, this);\n\n    this.camera = void 0;\n    this.scene = void 0;\n    this.viewport = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    this.clearColor = [1, 1, 1, 1];\n  }\n\n  _createClass(View, [{\n    key: \"getCamera\",\n    value: function getCamera() {\n      return this.camera;\n    }\n  }, {\n    key: \"getScene\",\n    value: function getScene() {\n      return this.scene;\n    }\n  }, {\n    key: \"getViewport\",\n    value: function getViewport() {\n      return this.viewport;\n    }\n  }, {\n    key: \"getClearColor\",\n    value: function getClearColor() {\n      return this.clearColor;\n    }\n  }, {\n    key: \"setCamera\",\n    value: function setCamera(camera) {\n      this.camera = camera;\n      return this;\n    }\n  }, {\n    key: \"setScene\",\n    value: function setScene(scene) {\n      this.scene = scene;\n      return this;\n    }\n  }, {\n    key: \"setViewport\",\n    value: function setViewport(viewport) {\n      this.viewport = viewport;\n      return this;\n    }\n  }, {\n    key: \"setClearColor\",\n    value: function setClearColor(clearColor) {\n      this.clearColor = clearColor;\n      return this;\n    }\n  }, {\n    key: \"pick\",\n    value: function pick(position) {\n      return this.rendererSystem.pick(position, this);\n    }\n  }]);\n\n  return View;\n}(), _temp), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"rendererSystem\", [_dec2, _dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);","map":{"version":3,"mappings":";;;;;;;;AAAA,SAEEA,UAFF,QAOO,qBAPP;AAQA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,KAA7B,QAA0C,WAA1C;AAGA,WAAaC,IAAb,WADCF,UAAU,EACX,UACGD,MAAM,CAACD,UAAU,CAACK,OAAZ,CADT,UAEGF,KAAK,CAACH,UAAU,CAACM,cAAZ,CAFR;EAAA;IAAAC;;IAAAC;;IAAA,KAKUC,MALV;IAAA,KAMUC,KANV;IAAA,KAOUC,QAPV,GAOgC;MAC5BC,CAAC,EAAE,CADyB;MAE5BC,CAAC,EAAE,CAFyB;MAG5BC,KAAK,EAAE,CAHqB;MAI5BC,MAAM,EAAE;IAJoB,CAPhC;IAAA,KAaUC,UAbV,GAayD,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAbzD;EAAA;;EAAAC;IAAAC;IAAAC,4BAeqB;MACjB,OAAO,KAAKV,MAAZ;IACD;EAjBH;IAAAS;IAAAC,2BAmBoB;MAChB,OAAO,KAAKT,KAAZ;IACD;EArBH;IAAAQ;IAAAC,8BAuBuB;MACnB,OAAO,KAAKR,QAAZ;IACD;EAzBH;IAAAO;IAAAC,gCA2ByB;MACrB,OAAO,KAAKH,UAAZ;IACD;EA7BH;IAAAE;IAAAC,0BA+BmBV,MA/BnB,EA+BoC;MAChC,KAAKA,MAAL,GAAcA,MAAd;MACA,OAAO,IAAP;IACD;EAlCH;IAAAS;IAAAC,yBAoCkBT,KApClB,EAoCiC;MAC7B,KAAKA,KAAL,GAAaA,KAAb;MACA,OAAO,IAAP;IACD;EAvCH;IAAAQ;IAAAC,4BAyCqBR,QAzCrB,EAyC0C;MACtC,KAAKA,QAAL,GAAgBA,QAAhB;MACA,OAAO,IAAP;IACD;EA5CH;IAAAO;IAAAC,8BA8CuBH,UA9CvB,EA8CqE;MACjE,KAAKA,UAAL,GAAkBA,UAAlB;MACA,OAAO,IAAP;IACD;EAjDH;IAAAE;IAAAC,qBAmDcC,QAnDd,EAmDkD;MAC9C,OAAO,KAAKC,cAAL,CAAoBC,IAApB,CAAyBF,QAAzB,EAAmC,IAAnC,CAAP;IACD;EArDH;;EAAA;AAAA;EAAAG;EAAAC;EAAAC;EAAAC;AAAA","names":["IDENTIFIER","inject","injectable","named","View","Systems","RendererSystem","_classCallCheck","_initializerDefineProperty","camera","scene","viewport","x","y","width","height","clearColor","_createClass","key","value","position","rendererSystem","pick","configurable","enumerable","writable","initializer"],"sources":["../src/View.ts"],"sourcesContent":["import {\n  ICamera,\n  IDENTIFIER,\n  IScene,\n  IView,\n  IViewport,\n  RendererSystem,\n} from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\n\n@injectable()\nexport class View implements IView {\n  @inject(IDENTIFIER.Systems)\n  @named(IDENTIFIER.RendererSystem)\n  private readonly rendererSystem: RendererSystem;\n\n  private camera: ICamera;\n  private scene: IScene;\n  private viewport: IViewport = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  };\n  private clearColor: [number, number, number, number] = [1, 1, 1, 1];\n\n  public getCamera() {\n    return this.camera;\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getViewport() {\n    return this.viewport;\n  }\n\n  public getClearColor() {\n    return this.clearColor;\n  }\n\n  public setCamera(camera: ICamera) {\n    this.camera = camera;\n    return this;\n  }\n\n  public setScene(scene: IScene) {\n    this.scene = scene;\n    return this;\n  }\n\n  public setViewport(viewport: IViewport) {\n    this.viewport = viewport;\n    return this;\n  }\n\n  public setClearColor(clearColor: [number, number, number, number]) {\n    this.clearColor = clearColor;\n    return this;\n  }\n\n  public pick(position: { x: number; y: number }) {\n    return this.rendererSystem.pick(position, this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}