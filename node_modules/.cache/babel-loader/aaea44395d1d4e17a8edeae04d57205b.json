{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DagreCompoundLayout = void 0;\n\nvar base_1 = require(\"./base\");\n\nvar dagre_compound_1 = require(\"dagre-compound\");\n\nvar util_1 = require(\"../util\");\n\nvar DagreCompoundLayout =\n/** @class */\nfunction (_super) {\n  __extends(DagreCompoundLayout, _super);\n\n  function DagreCompoundLayout(options) {\n    var _this = _super.call(this) || this;\n    /** layout 方向, 可选 TB, BT, LR, RL */\n\n\n    _this.rankdir = 'TB';\n    /** 节点水平间距(px) */\n\n    _this.nodesep = 50;\n    /** 边水平间距(px) */\n\n    _this.edgesep = 5;\n    /** 每一层节点之间间距 */\n\n    _this.ranksep = 50;\n    /** 是否保留布局连线的控制点 */\n\n    _this.controlPoints = true;\n    /** 是否保留使用布局计算的锚点 */\n\n    _this.anchorPoint = true;\n    _this.nodes = [];\n    _this.edges = [];\n    _this.combos = [];\n    /** 迭代结束的回调函数 */\n\n    _this.onLayoutEnd = function () {};\n\n    _this.updateCfg(options);\n\n    return _this;\n  }\n\n  DagreCompoundLayout.prototype.getDefaultCfg = function () {\n    return {\n      rankdir: 'TB',\n      align: undefined,\n      begin: undefined,\n      nodeSize: undefined,\n      nodesep: 50,\n      ranksep: 50,\n      controlPoints: true,\n      anchorPoint: true // 是否使用布局计算的锚点\n\n    };\n  };\n\n  DagreCompoundLayout.prototype.init = function (data) {\n    var hiddenNodes = data.hiddenNodes || []; // 被隐藏的节点\n\n    var hiddenEdges = data.hiddenEdges || []; // 被隐藏的边\n\n    var hiddenCombos = data.hiddenCombos || []; // 赋值 hiddenCombos\n    // 确保此次排序按照用户输入顺序\n\n    this.nodes = this.getDataByOrder((data.nodes || []).concat(hiddenNodes));\n    this.edges = this.getDataByOrder((data.edges || []).concat(hiddenEdges));\n    this.combos = (data.combos || []).concat(hiddenCombos.map(function (hc) {\n      return __assign(__assign({}, hc), {\n        collapsed: true\n      });\n    }));\n  };\n\n  DagreCompoundLayout.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes,\n        edges = self.edges;\n    if (!nodes) return;\n\n    var _a = self.getLayoutConfig(),\n        graphDef = _a.graphDef,\n        graphOption = _a.graphOption,\n        graphSettings = _a.graphSettings;\n\n    var renderInfo = (0, dagre_compound_1.buildGraph)(graphDef, graphOption, graphSettings);\n    var flattenedRenderInfo = (0, dagre_compound_1.flatGraph)(renderInfo, true); // 打平数据进行遍历\n\n    this.updatePosition(flattenedRenderInfo);\n    if (self.onLayoutEnd) self.onLayoutEnd();\n    return {\n      nodes: nodes,\n      edges: edges\n    };\n  };\n  /**\n   * combo 模式下查找节点完整路径\n   * @param nodeId\n   * @private\n   */\n\n\n  DagreCompoundLayout.prototype.getNodePath = function (nodeId) {\n    var self = this;\n    var nodes = self.nodes,\n        combos = self.combos;\n    var targetNode = nodes.find(function (n) {\n      return n.id === nodeId;\n    });\n\n    var findPath = function (comboId, fullPath) {\n      if (fullPath === void 0) {\n        fullPath = [];\n      }\n\n      var combo = combos.find(function (c) {\n        return c.id === comboId;\n      });\n\n      if (combo) {\n        fullPath.unshift(comboId);\n\n        if (combo.parentId) {\n          return findPath(combo.parentId, fullPath);\n        }\n\n        return fullPath;\n      }\n\n      return fullPath;\n    };\n\n    if (targetNode && targetNode.comboId) {\n      return findPath(targetNode.comboId, [nodeId]);\n    }\n\n    return [nodeId];\n  };\n  /** 准备 dagre-compound 布局参数 */\n\n\n  DagreCompoundLayout.prototype.getLayoutConfig = function () {\n    var _a, _b, _c;\n\n    var self = this;\n    var nodes = self.nodes,\n        edges = self.edges,\n        combos = self.combos,\n        nodeSize = self.nodeSize,\n        rankdir = self.rankdir,\n        align = self.align,\n        edgesep = self.edgesep,\n        nodesep = self.nodesep,\n        ranksep = self.ranksep,\n        settings = self.settings;\n    var compound = (combos || []).reduce(function (pre, cur) {\n      var matchedNodes = nodes.filter(function (n) {\n        return n.comboId === cur.id;\n      }).map(function (n) {\n        return n.id;\n      });\n      var matchedCombos = (combos || []).filter(function (n) {\n        return n.parentId === cur.id;\n      }).map(function (n) {\n        return n.id;\n      });\n\n      if (matchedNodes.length || matchedCombos.length) {\n        pre[cur.id] = __spreadArray(__spreadArray([], matchedNodes, true), matchedCombos, true);\n      }\n\n      return pre;\n    }, {});\n    /** 计算 nodeSize */\n\n    var nodeSizeFunc;\n\n    if (!nodeSize) {\n      nodeSizeFunc = function (d) {\n        if (d && d.size) {\n          if ((0, util_1.isArray)(d.size)) {\n            return d.size;\n          }\n\n          if ((0, util_1.isObject)(d.size)) {\n            return [d.size.width || 40, d.size.height || 40];\n          }\n\n          return [d.size, d.size];\n        }\n\n        return [40, 40];\n      };\n    } else if ((0, util_1.isArray)(nodeSize)) {\n      nodeSizeFunc = function () {\n        return nodeSize;\n      };\n    } else {\n      nodeSizeFunc = function () {\n        return [nodeSize, nodeSize];\n      };\n    }\n    /** 计算 comboSize */\n\n\n    var comboSizeFunc = function (d) {\n      if (d && d.size) {\n        if ((0, util_1.isArray)(d.size)) {\n          return d.size;\n        }\n\n        return [d.size, d.size];\n      }\n\n      return [80, 40];\n    }; // 接受 defaultCombo 设置的 size\n\n\n    var _d = comboSizeFunc(combos === null || combos === void 0 ? void 0 : combos[0]),\n        metaWidth = _d[0],\n        metaHeight = _d[1]; // 初始化 padding\n\n\n    var subSceneMeta = (_b = (_a = self.graphSettings) === null || _a === void 0 ? void 0 : _a.subScene) === null || _b === void 0 ? void 0 : _b.meta;\n\n    var _e = ((_c = combos.find(function (c) {\n      return !c.collapsed;\n    })) === null || _c === void 0 ? void 0 : _c.padding) || [20, 20, 20, 20],\n        paddingTop = _e[0],\n        paddingRight = _e[1],\n        paddingBottom = _e[2],\n        paddingLeft = _e[3];\n\n    var graphDef = {\n      compound: compound,\n      nodes: __spreadArray([], (nodes || []).map(function (n) {\n        var size = nodeSizeFunc(n);\n        var width = size[0];\n        var height = size[1];\n        return __assign(__assign({}, n), {\n          width: width,\n          height: height\n        });\n      }), true),\n      edges: __spreadArray([], (edges || []).map(function (e) {\n        return __assign(__assign({}, e), {\n          v: e.source,\n          w: e.target\n        });\n      }), true)\n    }; // 需要展开的节点\n\n    var graphOption = {\n      expanded: (combos || []).filter(function (c) {\n        return !c.collapsed;\n      }).map(function (c) {\n        return c.id;\n      })\n    }; // dagre-compound 布局参数\n\n    var graphMetaConfig = {\n      graph: {\n        meta: {\n          align: align,\n          rankDir: rankdir,\n          nodeSep: nodesep,\n          edgeSep: edgesep,\n          rankSep: ranksep\n        }\n      },\n      subScene: {\n        meta: {\n          paddingTop: paddingTop || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingTop) || 20,\n          paddingRight: paddingRight || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingRight) || 20,\n          paddingBottom: paddingBottom || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingBottom) || 20,\n          paddingLeft: paddingLeft || (subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingLeft) || 20,\n          labelHeight: 0\n        }\n      },\n      nodeSize: {\n        meta: {\n          width: metaWidth,\n          height: metaHeight\n        }\n      }\n    }; // 合并用户输入的内容\n\n    var graphSettings = (0, dagre_compound_1.mergeConfig)(settings, __assign({}, (0, dagre_compound_1.mergeConfig)(graphMetaConfig, dagre_compound_1.LAYOUT_CONFIG)));\n    self.graphSettings = graphSettings;\n    return {\n      graphDef: graphDef,\n      graphOption: graphOption,\n      graphSettings: graphSettings\n    };\n  };\n  /** 更新节点与边位置 */\n\n\n  DagreCompoundLayout.prototype.updatePosition = function (flattenedGraph) {\n    var nodes = flattenedGraph.nodes,\n        edges = flattenedGraph.edges;\n    this.updateNodePosition(nodes, edges);\n    this.updateEdgePosition(nodes, edges);\n  };\n\n  DagreCompoundLayout.prototype.getBegin = function (flattenedNodes, flattenedEdges) {\n    var self = this;\n    var begin = self.begin;\n    var dBegin = [0, 0];\n\n    if (begin) {\n      var minX_1 = Infinity;\n      var minY_1 = Infinity;\n      flattenedNodes.forEach(function (node) {\n        if (minX_1 > node.x) minX_1 = node.x;\n        if (minY_1 > node.y) minY_1 = node.y;\n      });\n      flattenedEdges.forEach(function (edge) {\n        edge.points.forEach(function (point) {\n          if (minX_1 > point.x) minX_1 = point.x;\n          if (minY_1 > point.y) minY_1 = point.y;\n        });\n      });\n      dBegin[0] = begin[0] - minX_1;\n      dBegin[1] = begin[1] - minY_1;\n    }\n\n    return dBegin;\n  };\n\n  DagreCompoundLayout.prototype.updateNodePosition = function (flattenedNodes, flattenedEdges) {\n    var self = this;\n    var combos = self.combos,\n        nodes = self.nodes,\n        edges = self.edges,\n        anchorPoint = self.anchorPoint,\n        graphSettings = self.graphSettings;\n    var dBegin = this.getBegin(flattenedNodes, flattenedEdges);\n    flattenedNodes.forEach(function (node) {\n      var _a;\n\n      var x = node.x,\n          y = node.y,\n          id = node.id,\n          type = node.type,\n          coreBox = node.coreBox;\n\n      if (type === dagre_compound_1.HierarchyNodeType.META && id !== dagre_compound_1.ROOT_NAME) {\n        var i = combos.findIndex(function (item) {\n          return item.id === id;\n        });\n        var subSceneMeta = (_a = graphSettings === null || graphSettings === void 0 ? void 0 : graphSettings.subScene) === null || _a === void 0 ? void 0 : _a.meta; // 将布局生成的 combo 位置暂存至 offsetX offsetY\n\n        combos[i].offsetX = x + dBegin[0];\n        combos[i].offsetY = y + dBegin[1];\n        combos[i].fixSize = [coreBox.width, coreBox.height];\n        combos[i].fixCollapseSize = [coreBox.width, coreBox.height]; // 如果设置了收起时隐藏 padding，则手动优化 combo padding 信息，展开的话则恢复\n\n        if (!node.expanded) {\n          combos[i].padding = [0, 0, 0, 0];\n        } else {\n          combos[i].padding = [subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingTop, subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingRight, subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingBottom, subSceneMeta === null || subSceneMeta === void 0 ? void 0 : subSceneMeta.paddingLeft];\n        }\n      } else if (type === dagre_compound_1.HierarchyNodeType.OP) {\n        var i = nodes.findIndex(function (item) {\n          return item.id === id;\n        });\n        nodes[i].x = x + dBegin[0];\n        nodes[i].y = y + dBegin[1];\n\n        if (anchorPoint) {\n          var anchorPoints_1 = [];\n          var outEdges = flattenedEdges.filter(function (e) {\n            return e.v === id;\n          });\n          var inEdges = flattenedEdges.filter(function (e) {\n            return e.w === id;\n          }); // 指定出边锚点，锚点中心点为 [0.5, 0.5]\n\n          if (outEdges.length > 0) {\n            outEdges.forEach(function (outEdge) {\n              var firstPoint = outEdge.points[0];\n              var anchorPointX = (firstPoint.x - x) / node.width + 0.5;\n              var anchorPointY = (firstPoint.y - y) / node.height + 0.5;\n              anchorPoints_1.push([anchorPointX, anchorPointY]); // 出边对应 source 边锚点\n\n              outEdge.baseEdgeList.forEach(function (baseEdge) {\n                var edge = edges.find(function (e) {\n                  return e.source === baseEdge.v && e.target === baseEdge.w;\n                });\n\n                if (edge) {\n                  edge.sourceAnchor = anchorPoints_1.length - 1;\n                }\n              });\n            });\n          } // 指定入边锚点\n\n\n          if (inEdges.length > 0) {\n            inEdges.forEach(function (inEdge) {\n              var lastPoint = inEdge.points[inEdge.points.length - 1];\n              var anchorPointX = (lastPoint.x - x) / node.width + 0.5;\n              var anchorPointY = (lastPoint.y - y) / node.height + 0.5;\n              anchorPoints_1.push([anchorPointX, anchorPointY]); // 出边对应 source 锚点\n\n              inEdge.baseEdgeList.forEach(function (baseEdge) {\n                var edge = edges.find(function (e) {\n                  return e.source === baseEdge.v && e.target === baseEdge.w;\n                });\n\n                if (edge) {\n                  edge.targetAnchor = anchorPoints_1.length - 1;\n                }\n              });\n            });\n          }\n\n          nodes[i].anchorPoints = anchorPoints_1.length > 0 ? anchorPoints_1 : nodes[i].anchorPoints || [];\n        }\n      }\n    });\n  };\n\n  DagreCompoundLayout.prototype.updateEdgePosition = function (flattenedNodes, flattenedEdges) {\n    var self = this;\n    var combos = self.combos,\n        edges = self.edges,\n        controlPoints = self.controlPoints;\n    var dBegin = this.getBegin(flattenedNodes, flattenedEdges);\n\n    if (controlPoints) {\n      combos.forEach(function (combo) {\n        combo.inEdges = [];\n        combo.outEdges = [];\n      });\n      edges.forEach(function (sourceEdge) {\n        var _a, _b, _c, _d;\n\n        var sourceNode = flattenedNodes.find(function (v) {\n          return v.id === sourceEdge.source;\n        });\n        var targetNode = flattenedNodes.find(function (v) {\n          return v.id === sourceEdge.target;\n        }); // Combo 收起状态，dagre-compound 不会渲染该节点，边需要使用到 group 的边作为补充\n\n        var points = [];\n        var sortedEdges = [];\n\n        if (sourceNode && targetNode) {\n          sortedEdges = (0, dagre_compound_1.getEdges)(sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.id, targetNode === null || targetNode === void 0 ? void 0 : targetNode.id, flattenedNodes);\n        } else if (!sourceNode || !targetNode) {\n          /** 存在收起节点时，需要重新计算边的 controlPoints，确保线正常 */\n          // 情况1：目标节点被收起了，向上寻找该节点最近一个存在的父节点\n          var sourceNodePath = self.getNodePath(sourceEdge.source);\n          var targetNodePath = self.getNodePath(sourceEdge.target);\n          var lastExistingSource_1 = sourceNodePath.reverse().slice(!sourceNode ? 1 : 0).find(function (parentId) {\n            return flattenedNodes.find(function (fNode) {\n              return fNode.id === parentId;\n            });\n          });\n          var lastExistingTarget_1 = targetNodePath.reverse().slice(!targetNode ? 1 : 0).find(function (parentId) {\n            return flattenedNodes.find(function (fNode) {\n              return fNode.id === parentId;\n            });\n          });\n          sourceNode = flattenedNodes.find(function (v) {\n            return v.id === lastExistingSource_1;\n          });\n          targetNode = flattenedNodes.find(function (v) {\n            return v.id === lastExistingTarget_1;\n          });\n          sortedEdges = (0, dagre_compound_1.getEdges)(sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.id, targetNode === null || targetNode === void 0 ? void 0 : targetNode.id, flattenedNodes, {\n            v: sourceEdge.source,\n            w: sourceEdge.target\n          });\n        }\n\n        points = sortedEdges.reduce(function (pre, cur) {\n          return __spreadArray(__spreadArray([], pre, true), cur.points.map(function (p) {\n            return __assign(__assign({}, p), {\n              x: p.x + dBegin[0],\n              y: p.y + dBegin[1]\n            });\n          }), true);\n        }, []); // 取消首尾节点\n\n        points = points.slice(1, -1);\n        sourceEdge.controlPoints = points;\n\n        if ((targetNode === null || targetNode === void 0 ? void 0 : targetNode.type) === dagre_compound_1.NodeType.META) {\n          // combo 节点控制点\n          var i = combos.findIndex(function (item) {\n            return item.id === (targetNode === null || targetNode === void 0 ? void 0 : targetNode.id);\n          });\n\n          if (!combos[i] || ((_a = combos[i].inEdges) === null || _a === void 0 ? void 0 : _a.some(function (inEdge) {\n            return inEdge.source === sourceNode.id && inEdge.target === targetNode.id;\n          }))) {\n            return;\n          }\n\n          (_b = combos[i].inEdges) === null || _b === void 0 ? void 0 : _b.push({\n            source: sourceNode.id,\n            target: targetNode.id,\n            controlPoints: points\n          });\n        }\n\n        if ((sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.type) === dagre_compound_1.NodeType.META) {\n          var i = combos.findIndex(function (item) {\n            return item.id === (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.id);\n          });\n\n          if (!combos[i] || ((_c = combos[i].outEdges) === null || _c === void 0 ? void 0 : _c.some(function (oedge) {\n            return oedge.source === sourceNode.id && oedge.target === targetNode.id;\n          }))) {\n            return;\n          }\n\n          (_d = combos[i].outEdges) === null || _d === void 0 ? void 0 : _d.push({\n            source: sourceNode.id,\n            target: targetNode.id,\n            controlPoints: points\n          });\n        }\n      });\n    }\n  };\n\n  DagreCompoundLayout.prototype.getType = function () {\n    return 'dagreCompound';\n  };\n  /**\n   * 确保布局使用的数据与用户输入数据顺序一致\n   * 通过 layoutOrder 排序 节点 与 边\n   * @param list\n   * @private\n   */\n\n\n  DagreCompoundLayout.prototype.getDataByOrder = function (list) {\n    if (list.every(function (n) {\n      return n.layoutOrder !== undefined;\n    })) {// 所有数据均设置过索引，表示仅布局，数据未变化，无需处理\n    } else {\n      // 首次布局或动态添加删减节点时重新赋值\n      list.forEach(function (n, i) {\n        n.layoutOrder = i;\n      });\n    } // 按照 layoutOrder 排序\n\n\n    return list.sort(function (pre, cur) {\n      return pre.layoutOrder - cur.layoutOrder;\n    });\n  };\n\n  return DagreCompoundLayout;\n}(base_1.Base);\n\nexports.DagreCompoundLayout = DagreCompoundLayout;","map":{"version":3,"mappings":"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","names":["__extends","options","_super","_this","updateCfg","DagreCompoundLayout","rankdir","align","undefined","begin","nodeSize","nodesep","ranksep","controlPoints","anchorPoint","data","hiddenNodes","hiddenEdges","hiddenCombos","nodes","getDataByOrder","concat","edges","combos","map","hc","collapsed","self","getLayoutConfig","graphDef","graphOption","graphSettings","renderInfo","flattenedRenderInfo","updatePosition","onLayoutEnd","nodeId","targetNode","find","n","id","findPath","comboId","fullPath","combo","c","unshift","parentId","edgesep","settings","compound","reduce","pre","cur","matchedNodes","filter","matchedCombos","length","__spreadArray","nodeSizeFunc","d","size","width","height","comboSizeFunc","metaWidth","metaHeight","subSceneMeta","_a","subScene","_b","meta","_c","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","e","v","source","w","target","expanded","graphMetaConfig","graph","rankDir","nodeSep","edgeSep","rankSep","labelHeight","__assign","dagre_compound_1","flattenedGraph","updateNodePosition","updateEdgePosition","flattenedNodes","flattenedEdges","dBegin","minX_1","Infinity","minY_1","forEach","node","x","y","edge","points","point","getBegin","type","coreBox","META","i","findIndex","item","offsetX","offsetY","fixSize","fixCollapseSize","OP","anchorPoints_1","outEdges","inEdges","outEdge","firstPoint","anchorPointX","anchorPointY","push","baseEdgeList","baseEdge","sourceAnchor","inEdge","lastPoint","targetAnchor","anchorPoints","sourceEdge","sourceNode","sortedEdges","sourceNodePath","getNodePath","targetNodePath","lastExistingSource_1","reverse","slice","fNode","lastExistingTarget_1","p","some","oedge","_d","list","every","layoutOrder","sort","base_1","exports"],"sourceRoot":"","sources":["../../src/layout/dagreCompound.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}