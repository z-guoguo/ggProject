{"ast":null,"code":"/**\n * @fileoverview text\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { detect } from 'detect-browser';\nimport { setTransform } from '../util/svg';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar LETTER_SPACING = 0.3;\nvar BASELINE_MAP = {\n  top: 'before-edge',\n  middle: 'central',\n  bottom: 'after-edge',\n  alphabetic: 'baseline',\n  hanging: 'hanging'\n}; // for FireFox\n\nvar BASELINE_MAP_FOR_FIREFOX = {\n  top: 'text-before-edge',\n  middle: 'central',\n  bottom: 'text-after-edge',\n  alphabetic: 'alphabetic',\n  hanging: 'hanging'\n};\nvar ANCHOR_MAP = {\n  left: 'left',\n  start: 'left',\n  center: 'middle',\n  right: 'end',\n  end: 'end'\n};\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'text';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n\n  Text.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      text: null,\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontVariant: 'normal',\n      textAlign: 'start',\n      textBaseline: 'bottom'\n    });\n  };\n\n  Text.prototype.createPath = function (context, targetAttrs) {\n    var _this = this;\n\n    var attrs = this.attr();\n    var el = this.get('el');\n\n    this._setFont();\n\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'text') {\n        _this._setText(\"\" + value);\n      } else if (attr === 'matrix' && value) {\n        setTransform(_this);\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n    el.setAttribute('paint-order', 'stroke');\n    el.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');\n  };\n\n  Text.prototype._setFont = function () {\n    var el = this.get('el');\n\n    var _a = this.attr(),\n        textBaseline = _a.textBaseline,\n        textAlign = _a.textAlign;\n\n    var browser = detect();\n\n    if (browser && browser.name === 'firefox') {\n      // compatible with FireFox browser, ref: https://github.com/antvis/g/issues/119\n      el.setAttribute('dominant-baseline', BASELINE_MAP_FOR_FIREFOX[textBaseline] || 'alphabetic');\n    } else {\n      el.setAttribute('alignment-baseline', BASELINE_MAP[textBaseline] || 'baseline');\n    }\n\n    el.setAttribute('text-anchor', ANCHOR_MAP[textAlign] || 'left');\n  };\n\n  Text.prototype._setText = function (text) {\n    var el = this.get('el');\n\n    var _a = this.attr(),\n        x = _a.x,\n        _b = _a.textBaseline,\n        baseline = _b === void 0 ? 'bottom' : _b;\n\n    if (!text) {\n      el.innerHTML = '';\n    } else if (~text.indexOf('\\n')) {\n      var textArr = text.split('\\n');\n      var textLen_1 = textArr.length - 1;\n      var arr_1 = '';\n      each(textArr, function (segment, i) {\n        if (i === 0) {\n          if (baseline === 'alphabetic') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -textLen_1 + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'top') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"0.9em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'middle') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -(textLen_1 - 1) / 2 + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'bottom') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"-\" + (textLen_1 + LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'hanging') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + (-(textLen_1 - 1) - LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n          }\n        } else {\n          arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"1em\\\">\" + segment + \"</tspan>\";\n        }\n      });\n      el.innerHTML = arr_1;\n    } else {\n      el.innerHTML = text;\n    }\n  };\n\n  return Text;\n}(ShapeBase);\n\nexport default Text;","map":{"version":3,"mappings":"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","names":["each","detect","setTransform","SVG_ATTR_MAP","ShapeBase","LETTER_SPACING","BASELINE_MAP","top","middle","bottom","alphabetic","hanging","BASELINE_MAP_FOR_FIREFOX","ANCHOR_MAP","left","start","center","right","end","__extends","_this","Text","attrs","_super","getDefaultAttrs","call","x","y","text","fontSize","fontFamily","fontStyle","fontWeight","fontVariant","textAlign","textBaseline","context","targetAttrs","attr","el","get","_setFont","value","_setText","setAttribute","browser","name","_b","baseline","innerHTML","indexOf","textArr","split","textLen_1","length","arr_1","segment","i"],"sourceRoot":"","sources":["../../src/shape/text.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}