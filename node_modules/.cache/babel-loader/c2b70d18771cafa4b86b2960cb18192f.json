{"ast":null,"code":"\"use strict\";\n/**\n * @fileOverview Combo force layout\n * @author shiwu.wyy@antfin.com\n */\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ComboForceLayout = void 0;\n\nvar base_1 = require(\"./base\");\n\nvar util_1 = require(\"../util\");\n/**\n * force layout for graph with combos\n */\n\n\nvar ComboForceLayout =\n/** @class */\nfunction (_super) {\n  __extends(ComboForceLayout, _super);\n\n  function ComboForceLayout(options) {\n    var _this = _super.call(this) || this;\n    /** 布局中心 */\n\n\n    _this.center = [0, 0];\n    /** 停止迭代的最大迭代数 */\n\n    _this.maxIteration = 100;\n    /** 重力大小，影响图的紧凑程度 */\n\n    _this.gravity = 10;\n    /** 群组中心力大小 */\n\n    _this.comboGravity = 10;\n    /** 默认边长度 */\n\n    _this.linkDistance = 10;\n    /** 每次迭代位移的衰减相关参数 */\n\n    _this.alpha = 1;\n    _this.alphaMin = 0.001;\n    _this.alphaDecay = 1 - Math.pow(_this.alphaMin, 1 / 300);\n    _this.alphaTarget = 0;\n    /** 节点运动速度衰减参数 */\n\n    _this.velocityDecay = 0.6;\n    /** 边引力大小 */\n\n    _this.edgeStrength = 0.6;\n    /** 节点引力大小 */\n\n    _this.nodeStrength = 30;\n    /** 是否开启防止重叠 */\n\n    _this.preventOverlap = false;\n    /** 是否开启节点之间的防止重叠 */\n\n    _this.preventNodeOverlap = false;\n    /** 是否开启 Combo 之间的防止重叠 */\n\n    _this.preventComboOverlap = false;\n    /** 防止重叠的碰撞力大小 */\n\n    _this.collideStrength = undefined;\n    /** 防止重叠的碰撞力大小 */\n\n    _this.nodeCollideStrength = 0.5;\n    /** 防止重叠的碰撞力大小 */\n\n    _this.comboCollideStrength = 0.5;\n    /** Combo 最小间距，防止重叠时的间隙 */\n\n    _this.comboSpacing = 20;\n    /** Combo 内部的 padding */\n\n    _this.comboPadding = 10;\n    /** 优化计算斥力的速度，两节点间距超过 optimizeRangeFactor * width 则不再计算斥力和重叠斥力 */\n\n    _this.optimizeRangeFactor = 1;\n    /** 每次迭代的回调函数 */\n\n    _this.onTick = function () {};\n    /** 迭代结束的回调函数 */\n\n\n    _this.onLayoutEnd = function () {};\n    /** 根据边两端节点层级差距的调整引力系数的因子，取值范围 [0, 1]。层级差距越大，引力越小 */\n\n\n    _this.depthAttractiveForceScale = 1;\n    /** 根据边两端节点层级差距的调整斥力系数的因子，取值范围 [1, Infinity]。层级差距越大，斥力越大 */\n\n    _this.depthRepulsiveForceScale = 2;\n    /** 内部计算参数 */\n\n    _this.nodes = [];\n    _this.edges = [];\n    _this.combos = [];\n    _this.comboTrees = [];\n    _this.width = 300;\n    _this.height = 300;\n    _this.bias = [];\n    _this.nodeMap = {};\n    _this.oriComboMap = {};\n    _this.indexMap = {};\n    _this.comboMap = {};\n    _this.previousLayouted = false;\n\n    _this.updateCfg(options);\n\n    return _this;\n  }\n\n  ComboForceLayout.prototype.getDefaultCfg = function () {\n    return {\n      maxIteration: 100,\n      center: [0, 0],\n      gravity: 10,\n      speed: 1,\n      comboGravity: 30,\n      preventOverlap: false,\n      preventComboOverlap: true,\n      preventNodeOverlap: true,\n      nodeSpacing: undefined,\n      collideStrength: undefined,\n      nodeCollideStrength: 0.5,\n      comboCollideStrength: 0.5,\n      comboSpacing: 20,\n      comboPadding: 10,\n      edgeStrength: 0.6,\n      nodeStrength: 30,\n      linkDistance: 10\n    };\n  };\n  /**\n   * 执行布局\n   */\n\n\n  ComboForceLayout.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var center = self.center;\n    self.comboTree = {\n      id: \"comboTreeRoot\",\n      depth: -1,\n      children: self.comboTrees\n    };\n\n    if (!nodes || nodes.length === 0) {\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return;\n    }\n\n    if (nodes.length === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return;\n    }\n\n    self.initVals(); // layout\n\n    self.run();\n    if (self.onLayoutEnd) self.onLayoutEnd();\n  };\n\n  ComboForceLayout.prototype.run = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var maxIteration = self.previousLayouted ? self.maxIteration / 5 : self.maxIteration;\n\n    if (!self.width && typeof window !== \"undefined\") {\n      self.width = window.innerWidth;\n    }\n\n    if (!self.height && typeof window !== \"undefined\") {\n      self.height = window.innerHeight;\n    }\n\n    var center = self.center;\n    var velocityDecay = self.velocityDecay; // init the positions to make the nodes with same combo gather around the combo\n\n    var comboMap = self.comboMap;\n    if (!self.previousLayouted) self.initPos(comboMap);\n\n    var _loop_1 = function (i) {\n      var displacements = [];\n      nodes.forEach(function (_, j) {\n        displacements[j] = {\n          x: 0,\n          y: 0\n        };\n      });\n      self.applyCalculate(displacements); // gravity for combos\n\n      self.applyComboCenterForce(displacements); // move\n\n      nodes.forEach(function (n, j) {\n        if (!(0, util_1.isNumber)(n.x) || !(0, util_1.isNumber)(n.y)) return;\n        n.x += displacements[j].x * velocityDecay;\n        n.y += displacements[j].y * velocityDecay;\n      });\n      self.alpha += (self.alphaTarget - self.alpha) * self.alphaDecay;\n      self.onTick();\n    }; // iterate\n\n\n    for (var i = 0; i < maxIteration; i++) {\n      _loop_1(i);\n    } // move to center\n\n\n    var meanCenter = [0, 0];\n    nodes.forEach(function (n) {\n      if (!(0, util_1.isNumber)(n.x) || !(0, util_1.isNumber)(n.y)) return;\n      meanCenter[0] += n.x;\n      meanCenter[1] += n.y;\n    });\n    meanCenter[0] /= nodes.length;\n    meanCenter[1] /= nodes.length;\n    var centerOffset = [center[0] - meanCenter[0], center[1] - meanCenter[1]];\n    nodes.forEach(function (n, j) {\n      if (!(0, util_1.isNumber)(n.x) || !(0, util_1.isNumber)(n.y)) return;\n      n.x += centerOffset[0];\n      n.y += centerOffset[1];\n    }); // arrange the empty combo\n\n    self.combos.forEach(function (combo) {\n      var mapped = comboMap[combo.id];\n\n      if (mapped && mapped.empty) {\n        combo.x = mapped.cx || combo.x;\n        combo.y = mapped.cy || combo.y;\n      }\n    });\n    self.previousLayouted = true;\n  };\n\n  ComboForceLayout.prototype.initVals = function () {\n    var self = this;\n    var edges = self.edges;\n    var nodes = self.nodes;\n    var combos = self.combos;\n    var count = {};\n    var nodeMap = {};\n    var indexMap = {};\n    nodes.forEach(function (node, i) {\n      nodeMap[node.id] = node;\n      indexMap[node.id] = i;\n    });\n    self.nodeMap = nodeMap;\n    self.indexMap = indexMap;\n    var oriComboMap = {};\n    combos.forEach(function (combo) {\n      oriComboMap[combo.id] = combo;\n    });\n    self.oriComboMap = oriComboMap;\n    self.comboMap = self.getComboMap();\n    var preventOverlap = self.preventOverlap;\n    self.preventComboOverlap = self.preventComboOverlap || preventOverlap;\n    self.preventNodeOverlap = self.preventNodeOverlap || preventOverlap;\n    var collideStrength = self.collideStrength;\n\n    if (collideStrength) {\n      self.comboCollideStrength = collideStrength;\n      self.nodeCollideStrength = collideStrength;\n    }\n\n    self.comboCollideStrength = self.comboCollideStrength ? self.comboCollideStrength : 0;\n    self.nodeCollideStrength = self.nodeCollideStrength ? self.nodeCollideStrength : 0; // get edge bias\n\n    for (var i = 0; i < edges.length; ++i) {\n      var source = (0, util_1.getEdgeTerminal)(edges[i], 'source');\n      var target = (0, util_1.getEdgeTerminal)(edges[i], 'target');\n      if (count[source]) count[source]++;else count[source] = 1;\n      if (count[target]) count[target]++;else count[target] = 1;\n    }\n\n    var bias = [];\n\n    for (var i = 0; i < edges.length; ++i) {\n      var source = (0, util_1.getEdgeTerminal)(edges[i], 'source');\n      var target = (0, util_1.getEdgeTerminal)(edges[i], 'target');\n      bias[i] = count[source] / (count[source] + count[target]);\n    }\n\n    this.bias = bias;\n    var nodeSize = self.nodeSize;\n    var nodeSpacing = self.nodeSpacing;\n    var nodeSizeFunc;\n    var nodeSpacingFunc; // nodeSpacing to function\n\n    if ((0, util_1.isNumber)(nodeSpacing)) {\n      nodeSpacingFunc = function () {\n        return nodeSpacing;\n      };\n    } else if ((0, util_1.isFunction)(nodeSpacing)) {\n      nodeSpacingFunc = nodeSpacing;\n    } else {\n      nodeSpacingFunc = function () {\n        return 0;\n      };\n    }\n\n    this.nodeSpacing = nodeSpacingFunc; // nodeSize to function\n\n    if (!nodeSize) {\n      nodeSizeFunc = function (d) {\n        if (d.size) {\n          if ((0, util_1.isArray)(d.size)) {\n            var res = d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n            return res / 2;\n          }\n\n          if ((0, util_1.isObject)(d.size)) {\n            var res = d.size.width > d.size.height ? d.size.width : d.size.height;\n            return res / 2;\n          }\n\n          return d.size / 2;\n        }\n\n        return 10;\n      };\n    } else if ((0, util_1.isFunction)(nodeSize)) {\n      nodeSizeFunc = function (d) {\n        return nodeSize(d);\n      };\n    } else if ((0, util_1.isArray)(nodeSize)) {\n      var larger = nodeSize[0] > nodeSize[1] ? nodeSize[0] : nodeSize[1];\n      var radius_1 = larger / 2;\n\n      nodeSizeFunc = function (d) {\n        return radius_1;\n      };\n    } else {\n      // number type\n      var radius_2 = nodeSize / 2;\n\n      nodeSizeFunc = function (d) {\n        return radius_2;\n      };\n    }\n\n    this.nodeSize = nodeSizeFunc; // comboSpacing to function\n\n    var comboSpacing = self.comboSpacing;\n    var comboSpacingFunc;\n\n    if ((0, util_1.isNumber)(comboSpacing)) {\n      comboSpacingFunc = function () {\n        return comboSpacing;\n      };\n    } else if ((0, util_1.isFunction)(comboSpacing)) {\n      comboSpacingFunc = comboSpacing;\n    } else {\n      // null type\n      comboSpacingFunc = function () {\n        return 0;\n      };\n    }\n\n    this.comboSpacing = comboSpacingFunc; // comboPadding to function\n\n    var comboPadding = self.comboPadding;\n    var comboPaddingFunc;\n\n    if ((0, util_1.isNumber)(comboPadding)) {\n      comboPaddingFunc = function () {\n        return comboPadding;\n      };\n    } else if ((0, util_1.isArray)(comboPadding)) {\n      comboPaddingFunc = function () {\n        return Math.max.apply(null, comboPadding);\n      };\n    } else if ((0, util_1.isFunction)(comboPadding)) {\n      comboPaddingFunc = comboPadding;\n    } else {\n      // null type\n      comboPaddingFunc = function () {\n        return 0;\n      };\n    }\n\n    this.comboPadding = comboPaddingFunc; // linkDistance to function\n\n    var linkDistance = this.linkDistance;\n    var linkDistanceFunc;\n\n    if (!linkDistance) {\n      linkDistance = 10;\n    }\n\n    if ((0, util_1.isNumber)(linkDistance)) {\n      linkDistanceFunc = function (d) {\n        return linkDistance;\n      };\n    } else {\n      linkDistanceFunc = linkDistance;\n    }\n\n    this.linkDistance = linkDistanceFunc; // linkStrength to function\n\n    var edgeStrength = this.edgeStrength;\n    var edgeStrengthFunc;\n\n    if (!edgeStrength) {\n      edgeStrength = 1;\n    }\n\n    if ((0, util_1.isNumber)(edgeStrength)) {\n      edgeStrengthFunc = function (d) {\n        return edgeStrength;\n      };\n    } else {\n      edgeStrengthFunc = edgeStrength;\n    }\n\n    this.edgeStrength = edgeStrengthFunc; // nodeStrength to function\n\n    var nodeStrength = this.nodeStrength;\n    var nodeStrengthFunc;\n\n    if (!nodeStrength) {\n      nodeStrength = 30;\n    }\n\n    if ((0, util_1.isNumber)(nodeStrength)) {\n      nodeStrengthFunc = function (d) {\n        return nodeStrength;\n      };\n    } else {\n      nodeStrengthFunc = nodeStrength;\n    }\n\n    this.nodeStrength = nodeStrengthFunc;\n  };\n\n  ComboForceLayout.prototype.initPos = function (comboMap) {\n    var self = this;\n    var nodes = self.nodes;\n    nodes.forEach(function (node, i) {\n      var comboId = node.comboId;\n      var combo = comboMap[comboId];\n\n      if (comboId && combo) {\n        node.x = combo.cx + 100 / (i + 1);\n        node.y = combo.cy + 100 / (i + 1);\n      } else {\n        node.x = 100 / (i + 1);\n        node.y = 100 / (i + 1);\n      }\n    });\n  };\n\n  ComboForceLayout.prototype.getComboMap = function () {\n    var self = this;\n    var nodeMap = self.nodeMap;\n    var comboTrees = self.comboTrees;\n    var oriComboMap = self.oriComboMap;\n    var comboMap = {};\n    (comboTrees || []).forEach(function (ctree) {\n      var treeChildren = [];\n      (0, util_1.traverseTreeUp)(ctree, function (treeNode) {\n        if (treeNode.itemType === \"node\") return true; // skip it\n\n        if (!oriComboMap[treeNode.id]) return true; // means it is hidden, skip it\n\n        if (comboMap[treeNode.id] === undefined) {\n          var combo = {\n            id: treeNode.id,\n            name: treeNode.id,\n            cx: 0,\n            cy: 0,\n            count: 0,\n            depth: self.oriComboMap[treeNode.id].depth || 0,\n            children: []\n          };\n          comboMap[treeNode.id] = combo;\n        }\n\n        var children = treeNode.children;\n\n        if (children) {\n          children.forEach(function (child) {\n            if (!comboMap[child.id] && !nodeMap[child.id]) return true; // means it is hidden\n\n            treeChildren.push(child);\n          });\n        }\n\n        var c = comboMap[treeNode.id];\n        c.cx = 0;\n        c.cy = 0;\n\n        if (treeChildren.length === 0) {\n          c.empty = true;\n          var oriCombo = oriComboMap[treeNode.id];\n          c.cx = oriCombo.x;\n          c.cy = oriCombo.y;\n        }\n\n        treeChildren.forEach(function (child) {\n          c.count++;\n\n          if (child.itemType !== \"node\") {\n            var childCombo = comboMap[child.id];\n            if ((0, util_1.isNumber)(childCombo.cx)) c.cx += childCombo.cx;\n            if ((0, util_1.isNumber)(childCombo.cy)) c.cy += childCombo.cy;\n            return;\n          }\n\n          var node = nodeMap[child.id]; // means the node is hidden, skip it\n\n          if (!node) return;\n\n          if ((0, util_1.isNumber)(node.x)) {\n            c.cx += node.x;\n          }\n\n          if ((0, util_1.isNumber)(node.y)) {\n            c.cy += node.y;\n          }\n        });\n        c.cx /= c.count || 1;\n        c.cy /= c.count || 1;\n        c.children = treeChildren;\n        return true;\n      });\n    });\n    return comboMap;\n  };\n\n  ComboForceLayout.prototype.applyComboCenterForce = function (displacements) {\n    var self = this;\n    var gravity = self.gravity;\n    var comboGravity = self.comboGravity || gravity;\n    var alpha = this.alpha;\n    var comboTrees = self.comboTrees;\n    var indexMap = self.indexMap;\n    var nodeMap = self.nodeMap;\n    var comboMap = self.comboMap;\n    (comboTrees || []).forEach(function (ctree) {\n      (0, util_1.traverseTreeUp)(ctree, function (treeNode) {\n        if (treeNode.itemType === \"node\") return true; // skip it\n\n        var combo = comboMap[treeNode.id]; // means the combo is hidden, skip it\n\n        if (!combo) return true;\n        var c = comboMap[treeNode.id]; // higher depth the combo, larger the gravity\n\n        var gravityScale = (c.depth + 1) / 10 * 0.5; // apply combo center force for all the descend nodes in this combo\n        // and update the center position and count for this combo\n\n        var comboX = c.cx;\n        var comboY = c.cy;\n        c.cx = 0;\n        c.cy = 0;\n        c.children.forEach(function (child) {\n          if (child.itemType !== \"node\") {\n            var childCombo = comboMap[child.id];\n            if (childCombo && (0, util_1.isNumber)(childCombo.cx)) c.cx += childCombo.cx;\n            if (childCombo && (0, util_1.isNumber)(childCombo.cy)) c.cy += childCombo.cy;\n            return;\n          }\n\n          var node = nodeMap[child.id];\n          var vecX = node.x - comboX || 0.005;\n          var vecY = node.y - comboY || 0.005;\n          var l = Math.sqrt(vecX * vecX + vecY * vecY);\n          var childIdx = indexMap[node.id];\n          var params = comboGravity * alpha / l * gravityScale;\n          displacements[childIdx].x -= vecX * params;\n          displacements[childIdx].y -= vecY * params;\n          if ((0, util_1.isNumber)(node.x)) c.cx += node.x;\n          if ((0, util_1.isNumber)(node.y)) c.cy += node.y;\n        });\n        c.cx /= c.count || 1;\n        c.cy /= c.count || 1;\n        return true;\n      });\n    });\n  };\n\n  ComboForceLayout.prototype.applyCalculate = function (displacements) {\n    var self = this;\n    var comboMap = self.comboMap;\n    var nodes = self.nodes; // store the vx, vy, and distance to reduce dulplicate calculation\n\n    var vecMap = {};\n    nodes.forEach(function (v, i) {\n      nodes.forEach(function (u, j) {\n        if (i < j) return;\n        var vx = v.x - u.x || 0.005;\n        var vy = v.y - u.y || 0.005;\n        var vl2 = vx * vx + vy * vy;\n        var vl = Math.sqrt(vl2);\n        if (vl2 < 1) vl2 = vl;\n        vecMap[\"\".concat(v.id, \"-\").concat(u.id)] = {\n          vx: vx,\n          vy: vy,\n          vl2: vl2,\n          vl: vl\n        };\n        vecMap[\"\".concat(u.id, \"-\").concat(v.id)] = {\n          vl2: vl2,\n          vl: vl,\n          vx: -vx,\n          vy: -vy\n        };\n      });\n    }); // get the sizes of the combos\n\n    self.updateComboSizes(comboMap);\n    self.calRepulsive(displacements, vecMap);\n    self.calAttractive(displacements, vecMap);\n    var preventComboOverlap = self.preventComboOverlap;\n    if (preventComboOverlap) self.comboNonOverlapping(displacements, comboMap);\n  };\n  /**\n   * Update the sizes of the combos according to their children\n   * Used for combos nonoverlap, but not re-render the combo shapes\n   */\n\n\n  ComboForceLayout.prototype.updateComboSizes = function (comboMap) {\n    var self = this;\n    var comboTrees = self.comboTrees;\n    var nodeMap = self.nodeMap;\n    var nodeSize = self.nodeSize;\n    var comboSpacing = self.comboSpacing;\n    var comboPadding = self.comboPadding;\n    (comboTrees || []).forEach(function (ctree) {\n      var treeChildren = [];\n      (0, util_1.traverseTreeUp)(ctree, function (treeNode) {\n        if (treeNode.itemType === \"node\") return true; // skip it\n\n        var c = comboMap[treeNode.id]; // means the combo is hidden, skip it\n\n        if (!c) return false;\n        var children = treeNode.children;\n\n        if (children) {\n          children.forEach(function (child) {\n            // means the combo is hidden.\n            if (!comboMap[child.id] && !nodeMap[child.id]) return;\n            treeChildren.push(child);\n          });\n        }\n\n        c.minX = Infinity;\n        c.minY = Infinity;\n        c.maxX = -Infinity;\n        c.maxY = -Infinity;\n        treeChildren.forEach(function (child) {\n          if (child.itemType !== \"node\") return true; // skip it\n\n          var node = nodeMap[child.id];\n          if (!node) return true; // means it is hidden\n\n          var r = nodeSize(node);\n          var nodeMinX = node.x - r;\n          var nodeMinY = node.y - r;\n          var nodeMaxX = node.x + r;\n          var nodeMaxY = node.y + r;\n          if (c.minX > nodeMinX) c.minX = nodeMinX;\n          if (c.minY > nodeMinY) c.minY = nodeMinY;\n          if (c.maxX < nodeMaxX) c.maxX = nodeMaxX;\n          if (c.maxY < nodeMaxY) c.maxY = nodeMaxY;\n        });\n        var minSize = self.oriComboMap[treeNode.id].size || 10;\n        if ((0, util_1.isArray)(minSize)) minSize = minSize[0];\n        var maxLength = Math.max(c.maxX - c.minX, c.maxY - c.minY, minSize);\n        c.r = maxLength / 2 + comboSpacing(c) / 2 + comboPadding(c);\n        return true;\n      });\n    });\n  };\n  /**\n   * prevent the overlappings among combos\n   */\n\n\n  ComboForceLayout.prototype.comboNonOverlapping = function (displacements, comboMap) {\n    var self = this;\n    var comboTree = self.comboTree;\n    var comboCollideStrength = self.comboCollideStrength;\n    var indexMap = self.indexMap;\n    var nodeMap = self.nodeMap;\n    (0, util_1.traverseTreeUp)(comboTree, function (treeNode) {\n      if (!comboMap[treeNode.id] && !nodeMap[treeNode.id] && treeNode.id !== \"comboTreeRoot\") {\n        return false;\n      } // means it is hidden\n\n\n      var children = treeNode.children; // 同个子树下的子 combo 间两两对比\n\n      if (children && children.length > 1) {\n        children.forEach(function (v, i) {\n          if (v.itemType === \"node\") return false; // skip it\n\n          var cv = comboMap[v.id];\n          if (!cv) return; // means it is hidden, skip it\n\n          children.forEach(function (u, j) {\n            if (i <= j) return false;\n            if (u.itemType === \"node\") return false; // skip it\n\n            var cu = comboMap[u.id];\n            if (!cu) return false; // means it is hidden, skip it\n\n            var vx = cv.cx - cu.cx || 0.005;\n            var vy = cv.cy - cu.cy || 0.005;\n            var l = vx * vx + vy * vy;\n            var rv = cv.r || 1;\n            var ru = cu.r || 1;\n            var r = rv + ru;\n            var ru2 = ru * ru;\n            var rv2 = rv * rv; // overlapping\n\n            if (l < r * r) {\n              var vnodes = v.children;\n              if (!vnodes || vnodes.length === 0) return false; // skip it\n\n              var unodes_1 = u.children;\n              if (!unodes_1 || unodes_1.length === 0) return false; // skip it\n\n              var sqrtl = Math.sqrt(l);\n              var ll = (r - sqrtl) / sqrtl * comboCollideStrength;\n              var xl_1 = vx * ll;\n              var yl_1 = vy * ll;\n              var rratio_1 = ru2 / (rv2 + ru2);\n              var irratio_1 = 1 - rratio_1; // 两兄弟 combo 的子节点上施加斥力\n\n              vnodes.forEach(function (vn) {\n                if (vn.itemType !== \"node\") return false; // skip it\n\n                if (!nodeMap[vn.id]) return; // means it is hidden, skip it\n\n                var vindex = indexMap[vn.id];\n                unodes_1.forEach(function (un) {\n                  if (un.itemType !== \"node\") return false;\n                  if (!nodeMap[un.id]) return false; // means it is hidden, skip it\n\n                  var uindex = indexMap[un.id];\n                  displacements[vindex].x += xl_1 * rratio_1;\n                  displacements[vindex].y += yl_1 * rratio_1;\n                  displacements[uindex].x -= xl_1 * irratio_1;\n                  displacements[uindex].y -= yl_1 * irratio_1;\n                });\n              });\n            }\n          });\n        });\n      }\n\n      return true;\n    });\n  };\n  /**\n   * Calculate the repulsive force between each node pair\n   * @param displacements The array stores the displacements for nodes\n   * @param vecMap The map stores vector between each node pair\n   */\n\n\n  ComboForceLayout.prototype.calRepulsive = function (displacements, vecMap) {\n    var self = this;\n    var nodes = self.nodes;\n    var max = self.width * self.optimizeRangeFactor;\n    var nodeStrength = self.nodeStrength;\n    var alpha = self.alpha;\n    var nodeCollideStrength = self.nodeCollideStrength;\n    var preventNodeOverlap = self.preventNodeOverlap;\n    var nodeSizeFunc = self.nodeSize;\n    var nodeSpacingFunc = self.nodeSpacing;\n    var scale = self.depthRepulsiveForceScale;\n    var center = self.center;\n    nodes.forEach(function (v, i) {\n      if (!v.x || !v.y) return; // center gravity\n\n      if (center) {\n        var gravity = self.gravity;\n        var vecX = v.x - center[0] || 0.005;\n        var vecY = v.y - center[1] || 0.005;\n        var l = Math.sqrt(vecX * vecX + vecY * vecY);\n        displacements[i].x -= vecX * gravity * alpha / l;\n        displacements[i].y -= vecY * gravity * alpha / l;\n      }\n\n      nodes.forEach(function (u, j) {\n        if (i === j) {\n          return;\n        }\n\n        if (!u.x || !u.y) return;\n        var _a = vecMap[\"\".concat(v.id, \"-\").concat(u.id)],\n            vl2 = _a.vl2,\n            vl = _a.vl;\n        if (vl > max) return;\n        var _b = vecMap[\"\".concat(v.id, \"-\").concat(u.id)],\n            vx = _b.vx,\n            vy = _b.vy;\n        var depthDiff = Math.log(Math.abs(u.depth - v.depth) / 10) + 1 || 1;\n        depthDiff = depthDiff < 1 ? 1 : depthDiff;\n        if (u.comboId !== v.comboId) depthDiff += 1;\n        var depthParam = depthDiff ? Math.pow(scale, depthDiff) : 1;\n        var params = nodeStrength(u) * alpha / vl2 * depthParam;\n        displacements[i].x += vx * params;\n        displacements[i].y += vy * params; // prevent node overlappings\n\n        if (i < j && preventNodeOverlap) {\n          var ri = nodeSizeFunc(v) + nodeSpacingFunc(v) || 1;\n          var rj = nodeSizeFunc(u) + nodeSpacingFunc(u) || 1;\n          var r = ri + rj;\n\n          if (vl2 < r * r) {\n            var ll = (r - vl) / vl * nodeCollideStrength;\n            var rj2 = rj * rj;\n            var rratio = rj2 / (ri * ri + rj2);\n            var xl = vx * ll;\n            var yl = vy * ll;\n            displacements[i].x += xl * rratio;\n            displacements[i].y += yl * rratio;\n            rratio = 1 - rratio;\n            displacements[j].x -= xl * rratio;\n            displacements[j].y -= yl * rratio;\n          }\n        }\n      });\n    });\n  };\n  /**\n   * Calculate the attractive force between the node pair with edge\n   * @param displacements The array stores the displacements for nodes\n   * @param vecMap The map stores vector between each node pair\n   */\n\n\n  ComboForceLayout.prototype.calAttractive = function (displacements, vecMap) {\n    var self = this;\n    var edges = self.edges;\n    var linkDistance = self.linkDistance;\n    var alpha = self.alpha;\n    var edgeStrength = self.edgeStrength;\n    var bias = self.bias;\n    var scale = self.depthAttractiveForceScale;\n    edges.forEach(function (e, i) {\n      var source = (0, util_1.getEdgeTerminal)(e, 'source');\n      var target = (0, util_1.getEdgeTerminal)(e, 'target');\n      if (!source || !target || source === target) return;\n      var uIndex = self.indexMap[source];\n      var vIndex = self.indexMap[target];\n      var u = self.nodeMap[source];\n      var v = self.nodeMap[target];\n      if (!u || !v) return;\n      var depthDiff = u.depth === v.depth ? 0 : Math.log(Math.abs(u.depth - v.depth) / 10);\n\n      if (u.comboId === v.comboId) {\n        depthDiff = depthDiff / 2;\n      }\n\n      var depthParam = depthDiff ? Math.pow(scale, depthDiff) : 1;\n\n      if (u.comboId !== v.comboId && depthParam === 1) {\n        depthParam = scale / 2;\n      } else if (u.comboId === v.comboId) {\n        depthParam = 2;\n      }\n\n      if (!(0, util_1.isNumber)(v.x) || !(0, util_1.isNumber)(u.x) || !(0, util_1.isNumber)(v.y) || !(0, util_1.isNumber)(u.y)) {\n        return;\n      }\n\n      var _a = vecMap[\"\".concat(target, \"-\").concat(source)],\n          vl = _a.vl,\n          vx = _a.vx,\n          vy = _a.vy;\n      var l = (vl - linkDistance(e)) / vl * alpha * edgeStrength(e) * depthParam;\n      var vecX = vx * l;\n      var vecY = vy * l;\n      var b = bias[i];\n      displacements[vIndex].x -= vecX * b;\n      displacements[vIndex].y -= vecY * b;\n      displacements[uIndex].x += vecX * (1 - b);\n      displacements[uIndex].y += vecY * (1 - b);\n    });\n  };\n\n  ComboForceLayout.prototype.getType = function () {\n    return \"comboForce\";\n  };\n\n  return ComboForceLayout;\n}(base_1.Base);\n\nexports.ComboForceLayout = ComboForceLayout;","map":{"version":3,"mappings":"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","names":["__extends","options","_super","_this","Math","alphaMin","undefined","updateCfg","ComboForceLayout","maxIteration","center","gravity","speed","comboGravity","preventOverlap","preventComboOverlap","preventNodeOverlap","nodeSpacing","collideStrength","nodeCollideStrength","comboCollideStrength","comboSpacing","comboPadding","edgeStrength","nodeStrength","linkDistance","self","nodes","comboTree","id","depth","children","comboTrees","length","onLayoutEnd","x","y","initVals","run","previousLayouted","width","window","innerWidth","height","innerHeight","velocityDecay","comboMap","initPos","i","displacements","forEach","_","j","applyCalculate","applyComboCenterForce","n","alpha","alphaTarget","alphaDecay","onTick","meanCenter","centerOffset","combos","combo","mapped","empty","cx","cy","edges","count","nodeMap","indexMap","node","oriComboMap","getComboMap","source","target","bias","nodeSize","nodeSizeFunc","nodeSpacingFunc","d","size","res","larger","radius_1","radius_2","comboSpacingFunc","comboPaddingFunc","max","apply","linkDistanceFunc","edgeStrengthFunc","nodeStrengthFunc","comboId","ctree","treeChildren","treeNode","itemType","name","child","push","c","oriCombo","childCombo","gravityScale","comboX","comboY","vecX","vecY","l","sqrt","childIdx","params","vecMap","v","u","vx","vy","vl2","vl","concat","updateComboSizes","calRepulsive","calAttractive","comboNonOverlapping","minX","Infinity","minY","maxX","maxY","r","nodeMinX","nodeMinY","nodeMaxX","nodeMaxY","minSize","maxLength","cv","cu","rv","ru","ru2","rv2","vnodes","unodes_1","sqrtl","ll","xl_1","yl_1","rratio_1","irratio_1","vn","vindex","un","uindex","optimizeRangeFactor","scale","depthRepulsiveForceScale","depthDiff","log","abs","depthParam","ri","rj","rj2","rratio","xl","yl","depthAttractiveForceScale","e","uIndex","vIndex","b","base_1","exports"],"sourceRoot":"","sources":["../../src/layout/comboForce.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}