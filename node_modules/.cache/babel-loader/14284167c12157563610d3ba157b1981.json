{"ast":null,"code":"import isArray from './is-array';\n/**\n * Flattens `array` a single level deep.\n *\n * @param {Array} arr The array to flatten.\n * @return {Array} Returns the new flattened array.\n * @example\n *\n * flatten([1, [2, [3, [4]], 5]]);  // => [1, 2, [3, [4]], 5]\n */\n\nvar flatten = function (arr) {\n  if (!isArray(arr)) {\n    return [];\n  }\n\n  var rst = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    rst = rst.concat(arr[i]);\n  }\n\n  return rst;\n};\n\nexport default flatten;","map":{"version":3,"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AAEA;;;;;;;;;;AASA,IAAMC,OAAO,GAAG,UAAaC,GAAb,EAAqB;EACnC,IAAI,CAACF,OAAO,CAACE,GAAD,CAAZ,EAAmB;IACjB,OAAO,EAAP;EACD;;EACD,IAAIC,GAAG,GAAQ,EAAf;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;IACnCD,GAAG,GAAGA,GAAG,CAACG,MAAJ,CAAWJ,GAAG,CAACE,CAAD,CAAd,CAAN;EACD;;EACD,OAAOD,GAAP;AACD,CATD;;AAWA,eAAeF,OAAf","names":["isArray","flatten","arr","rst","i","length","concat"],"sourceRoot":"","sources":["../src/flatten.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}