{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBindingDictionary = exports.createMockRequest = exports.plan = void 0;\n\nvar binding_count_1 = require(\"../bindings/binding_count\");\n\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\n\nvar literal_types_1 = require(\"../constants/literal_types\");\n\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\n\nvar exceptions_1 = require(\"../utils/exceptions\");\n\nvar serialization_1 = require(\"../utils/serialization\");\n\nvar context_1 = require(\"./context\");\n\nvar metadata_1 = require(\"./metadata\");\n\nvar plan_1 = require(\"./plan\");\n\nvar reflection_utils_1 = require(\"./reflection_utils\");\n\nvar request_1 = require(\"./request\");\n\nvar target_1 = require(\"./target\");\n\nfunction getBindingDictionary(cntnr) {\n  return cntnr._bindingDictionary;\n}\n\nexports.getBindingDictionary = getBindingDictionary;\n\nfunction _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {\n  var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;\n  var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);\n  var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);\n\n  if (key !== undefined) {\n    var tagMetadata = new metadata_1.Metadata(key, value);\n    target.metadata.push(tagMetadata);\n  }\n\n  return target;\n}\n\nfunction _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {\n  var bindings = getBindings(context.container, target.serviceIdentifier);\n  var activeBindings = [];\n\n  if (bindings.length === binding_count_1.BindingCount.NoBindingsAvailable && context.container.options.autoBindInjectable && typeof target.serviceIdentifier === \"function\" && metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {\n    context.container.bind(target.serviceIdentifier).toSelf();\n    bindings = getBindings(context.container, target.serviceIdentifier);\n  }\n\n  if (!avoidConstraints) {\n    activeBindings = bindings.filter(function (binding) {\n      var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);\n      return binding.constraint(request);\n    });\n  } else {\n    activeBindings = bindings;\n  }\n\n  _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);\n\n  return activeBindings;\n}\n\nfunction _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {\n  switch (bindings.length) {\n    case binding_count_1.BindingCount.NoBindingsAvailable:\n      if (target.isOptional()) {\n        return bindings;\n      } else {\n        var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n        var msg = ERROR_MSGS.NOT_REGISTERED;\n        msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);\n        msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n        throw new Error(msg);\n      }\n\n    case binding_count_1.BindingCount.OnlyOneBindingAvailable:\n      if (!target.isArray()) {\n        return bindings;\n      }\n\n    case binding_count_1.BindingCount.MultipleBindingsAvailable:\n    default:\n      if (!target.isArray()) {\n        var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n        var msg = ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifierString;\n        msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n        throw new Error(msg);\n      } else {\n        return bindings;\n      }\n\n  }\n}\n\nfunction _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {\n  var activeBindings;\n  var childRequest;\n\n  if (parentRequest === null) {\n    activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);\n    childRequest = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);\n    var thePlan = new plan_1.Plan(context, childRequest);\n    context.addPlan(thePlan);\n  } else {\n    activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);\n    childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);\n  }\n\n  activeBindings.forEach(function (binding) {\n    var subChildRequest = null;\n\n    if (target.isArray()) {\n      subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);\n    } else {\n      if (binding.cache) {\n        return;\n      }\n\n      subChildRequest = childRequest;\n    }\n\n    if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {\n      var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);\n\n      if (!context.container.options.skipBaseClassChecks) {\n        var baseClassDependencyCount = reflection_utils_1.getBaseClassDependencyCount(metadataReader, binding.implementationType);\n\n        if (dependencies.length < baseClassDependencyCount) {\n          var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(reflection_utils_1.getFunctionName(binding.implementationType));\n          throw new Error(error);\n        }\n      }\n\n      dependencies.forEach(function (dependency) {\n        _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);\n      });\n    }\n  });\n}\n\nfunction getBindings(container, serviceIdentifier) {\n  var bindings = [];\n  var bindingDictionary = getBindingDictionary(container);\n\n  if (bindingDictionary.hasKey(serviceIdentifier)) {\n    bindings = bindingDictionary.get(serviceIdentifier);\n  } else if (container.parent !== null) {\n    bindings = getBindings(container.parent, serviceIdentifier);\n  }\n\n  return bindings;\n}\n\nfunction plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {\n  if (avoidConstraints === void 0) {\n    avoidConstraints = false;\n  }\n\n  var context = new context_1.Context(container);\n\n  var target = _createTarget(isMultiInject, targetType, serviceIdentifier, \"\", key, value);\n\n  try {\n    _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);\n\n    return context;\n  } catch (error) {\n    if (exceptions_1.isStackOverflowExeption(error)) {\n      if (context.plan) {\n        serialization_1.circularDependencyToException(context.plan.rootRequest);\n      }\n    }\n\n    throw error;\n  }\n}\n\nexports.plan = plan;\n\nfunction createMockRequest(container, serviceIdentifier, key, value) {\n  var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, \"\", serviceIdentifier, new metadata_1.Metadata(key, value));\n  var context = new context_1.Context(container);\n  var request = new request_1.Request(serviceIdentifier, context, null, [], target);\n  return request;\n}\n\nexports.createMockRequest = createMockRequest;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,SAASA,oBAAT,CAA+BC,KAA/B,EAAyC;EACrC,OAAOA,KAAK,CAACC,kBAAb;AACH;;AAyPiCC;;AAvPlC,SAASC,aAAT,CACIC,aADJ,EAEIC,UAFJ,EAGIC,iBAHJ,EAIIC,IAJJ,EAKIC,GALJ,EAMIC,KANJ,EAMe;EAGX,IAAMC,WAAW,GAAGN,aAAa,GAAGO,YAAY,CAACC,gBAAhB,GAAmCD,YAAY,CAACE,UAAjF;EACA,IAAMC,cAAc,GAAG,IAAIC,mBAAJ,CAAaL,WAAb,EAA0BJ,iBAA1B,CAAvB;EACA,IAAMU,MAAM,GAAG,IAAIC,eAAJ,CAAWZ,UAAX,EAAuBE,IAAvB,EAA6BD,iBAA7B,EAAgDQ,cAAhD,CAAf;;EAEA,IAAIN,GAAG,KAAKU,SAAZ,EAAuB;IACnB,IAAMC,WAAW,GAAG,IAAIJ,mBAAJ,CAAaP,GAAb,EAAkBC,KAAlB,CAApB;IACAO,MAAM,CAACI,QAAP,CAAgBC,IAAhB,CAAqBF,WAArB;EACH;;EAED,OAAOH,MAAP;AAEH;;AAED,SAASM,kBAAT,CACIC,cADJ,EAEIC,gBAFJ,EAGIC,OAHJ,EAIIC,aAJJ,EAKIV,MALJ,EAK6B;EAGzB,IAAIW,QAAQ,GAAGC,WAAW,CAAMH,OAAO,CAACI,SAAd,EAAyBb,MAAM,CAACV,iBAAhC,CAA1B;EACA,IAAIwB,cAAc,GAA8B,EAAhD;;EAGA,IAAIH,QAAQ,CAACI,MAAT,KAAoBC,6BAAaC,mBAAjC,IACAR,OAAO,CAACI,SAAR,CAAkBK,OAAlB,CAA0BC,kBAD1B,IAEA,OAAOnB,MAAM,CAACV,iBAAd,KAAoC,UAFpC,IAGAiB,cAAc,CAACa,sBAAf,CAAsCpB,MAAM,CAACV,iBAA7C,EAAgE+B,yBAHpE,EAIE;IACEZ,OAAO,CAACI,SAAR,CAAkBS,IAAlB,CAAuBtB,MAAM,CAACV,iBAA9B,EAAiDiC,MAAjD;IACAZ,QAAQ,GAAGC,WAAW,CAACH,OAAO,CAACI,SAAT,EAAoBb,MAAM,CAACV,iBAA3B,CAAtB;EACH;;EAGD,IAAI,CAACkB,gBAAL,EAAuB;IAGnBM,cAAc,GAAGH,QAAQ,CAACa,MAAT,CAAgB,UAACC,OAAD,EAAQ;MAErC,IAAMC,OAAO,GAAG,IAAIC,iBAAJ,CACZF,OAAO,CAACnC,iBADI,EAEZmB,OAFY,EAGZC,aAHY,EAIZe,OAJY,EAKZzB,MALY,CAAhB;MAQA,OAAOyB,OAAO,CAACG,UAAR,CAAmBF,OAAnB,CAAP;IAEH,CAZgB,CAAjB;EAcH,CAjBD,MAiBO;IAEHZ,cAAc,GAAGH,QAAjB;EACH;;EAGDkB,2BAA2B,CAAC7B,MAAM,CAACV,iBAAR,EAA2BwB,cAA3B,EAA2Cd,MAA3C,EAAmDS,OAAO,CAACI,SAA3D,CAA3B;;EAEA,OAAOC,cAAP;AACH;;AAED,SAASe,2BAAT,CACIvC,iBADJ,EAEIqB,QAFJ,EAGIX,MAHJ,EAIIa,SAJJ,EAImC;EAG/B,QAAQF,QAAQ,CAACI,MAAjB;IAEI,KAAKC,6BAAaC,mBAAlB;MACI,IAAIjB,MAAM,CAAC8B,UAAP,EAAJ,EAAyB;QACrB,OAAOnB,QAAP;MACH,CAFD,MAEO;QACH,IAAMoB,uBAAuB,GAAGC,6CAA6B1C,iBAA7B,CAAhC;QACA,IAAI2C,GAAG,GAAGC,UAAU,CAACC,cAArB;QACAF,GAAG,IAAID,sCAAsBD,uBAAtB,EAA+C/B,MAA/C,CAAP;QACAiC,GAAG,IAAID,2DAA2CnB,SAA3C,EAAsDkB,uBAAtD,EAA+EnB,WAA/E,CAAP;QACA,MAAM,IAAIwB,KAAJ,CAAUH,GAAV,CAAN;MACH;;IAEL,KAAKjB,6BAAaqB,uBAAlB;MACI,IAAI,CAACrC,MAAM,CAACsC,OAAP,EAAL,EAAuB;QACnB,OAAO3B,QAAP;MACH;;IAEL,KAAKK,6BAAauB,yBAAlB;IACA;MACI,IAAI,CAACvC,MAAM,CAACsC,OAAP,EAAL,EAAuB;QACnB,IAAMP,uBAAuB,GAAGC,6CAA6B1C,iBAA7B,CAAhC;QACA,IAAI2C,GAAG,GAAMC,UAAU,CAACM,eAAX,GAA0B,GAA1B,GAA8BT,uBAA3C;QACAE,GAAG,IAAID,2DAA2CnB,SAA3C,EAAsDkB,uBAAtD,EAA+EnB,WAA/E,CAAP;QACA,MAAM,IAAIwB,KAAJ,CAAUH,GAAV,CAAN;MACH,CALD,MAKO;QACH,OAAOtB,QAAP;MACH;;EA3BT;AA8BH;;AAED,SAAS8B,kBAAT,CACIlC,cADJ,EAEIC,gBAFJ,EAGIlB,iBAHJ,EAIImB,OAJJ,EAKIC,aALJ,EAMIV,MANJ,EAM6B;EAGzB,IAAIc,cAAJ;EACA,IAAI4B,YAAJ;;EAEA,IAAIhC,aAAa,KAAK,IAAtB,EAA4B;IAExBI,cAAc,GAAGR,kBAAkB,CAACC,cAAD,EAAiBC,gBAAjB,EAAmCC,OAAnC,EAA4C,IAA5C,EAAkDT,MAAlD,CAAnC;IAEA0C,YAAY,GAAG,IAAIf,iBAAJ,CACXrC,iBADW,EAEXmB,OAFW,EAGX,IAHW,EAIXK,cAJW,EAKXd,MALW,CAAf;IAQA,IAAM2C,OAAO,GAAG,IAAIC,WAAJ,CAASnC,OAAT,EAAkBiC,YAAlB,CAAhB;IACAjC,OAAO,CAACoC,OAAR,CAAgBF,OAAhB;EAEH,CAfD,MAeO;IACH7B,cAAc,GAAGR,kBAAkB,CAACC,cAAD,EAAiBC,gBAAjB,EAAmCC,OAAnC,EAA4CC,aAA5C,EAA2DV,MAA3D,CAAnC;IACA0C,YAAY,GAAGhC,aAAa,CAACoC,eAAd,CAA8B9C,MAAM,CAACV,iBAArC,EAAwDwB,cAAxD,EAAwEd,MAAxE,CAAf;EACH;;EAEDc,cAAc,CAACiC,OAAf,CAAuB,UAACtB,OAAD,EAAQ;IAE3B,IAAIuB,eAAe,GAA8B,IAAjD;;IAEA,IAAIhD,MAAM,CAACsC,OAAP,EAAJ,EAAsB;MAClBU,eAAe,GAAGN,YAAY,CAACI,eAAb,CAA6BrB,OAAO,CAACnC,iBAArC,EAAwDmC,OAAxD,EAAiEzB,MAAjE,CAAlB;IACH,CAFD,MAEO;MACH,IAAIyB,OAAO,CAACwB,KAAZ,EAAmB;QACf;MACH;;MACDD,eAAe,GAAGN,YAAlB;IACH;;IAED,IAAIjB,OAAO,CAACyB,IAAR,KAAiBC,gCAAgBC,QAAjC,IAA6C3B,OAAO,CAAC4B,kBAAR,KAA+B,IAAhF,EAAsF;MAElF,IAAMC,YAAY,GAAGC,mCAAgBhD,cAAhB,EAAgCkB,OAAO,CAAC4B,kBAAxC,CAArB;;MAEA,IAAI,CAAC5C,OAAO,CAACI,SAAR,CAAkBK,OAAlB,CAA0BsC,mBAA/B,EAAoD;QAIhD,IAAMC,wBAAwB,GAAGF,+CAA4BhD,cAA5B,EAA4CkB,OAAO,CAAC4B,kBAApD,CAAjC;;QAEA,IAAIC,YAAY,CAACvC,MAAb,GAAsB0C,wBAA1B,EAAoD;UAChD,IAAMC,KAAK,GAAGxB,UAAU,CAACyB,yBAAX,CAAqCJ,mCAAgB9B,OAAO,CAAC4B,kBAAxB,CAArC,CAAd;UACA,MAAM,IAAIjB,KAAJ,CAAUsB,KAAV,CAAN;QACH;MACJ;;MAEDJ,YAAY,CAACP,OAAb,CAAqB,UAACa,UAAD,EAA8B;QAC/CnB,kBAAkB,CAAClC,cAAD,EAAiB,KAAjB,EAAwBqD,UAAU,CAACtE,iBAAnC,EAAsDmB,OAAtD,EAA+DuC,eAA/D,EAAgFY,UAAhF,CAAlB;MACH,CAFD;IAIH;EAEJ,CAnCD;AAqCH;;AAED,SAAShD,WAAT,CACIC,SADJ,EAEIvB,iBAFJ,EAEsD;EAGlD,IAAIqB,QAAQ,GAA4B,EAAxC;EACA,IAAMkD,iBAAiB,GAA+C9E,oBAAoB,CAAC8B,SAAD,CAA1F;;EAEA,IAAIgD,iBAAiB,CAACC,MAAlB,CAAyBxE,iBAAzB,CAAJ,EAAiD;IAE7CqB,QAAQ,GAAGkD,iBAAiB,CAACE,GAAlB,CAAsBzE,iBAAtB,CAAX;EAEH,CAJD,MAIO,IAAIuB,SAAS,CAACmD,MAAV,KAAqB,IAAzB,EAA+B;IAGlCrD,QAAQ,GAAGC,WAAW,CAAIC,SAAS,CAACmD,MAAd,EAAsB1E,iBAAtB,CAAtB;EAEH;;EAED,OAAOqB,QAAP;AACH;;AAED,SAASsD,IAAT,CACI1D,cADJ,EAEIM,SAFJ,EAGIzB,aAHJ,EAIIC,UAJJ,EAKIC,iBALJ,EAMIE,GANJ,EAOIC,KAPJ,EAQIe,gBARJ,EAQ4B;EAAxB;IAAAA;EAAwB;;EAGxB,IAAMC,OAAO,GAAG,IAAIyD,iBAAJ,CAAYrD,SAAZ,CAAhB;;EACA,IAAMb,MAAM,GAAGb,aAAa,CAACC,aAAD,EAAgBC,UAAhB,EAA4BC,iBAA5B,EAA+C,EAA/C,EAAmDE,GAAnD,EAAwDC,KAAxD,CAA5B;;EAEA,IAAI;IACAgD,kBAAkB,CAAClC,cAAD,EAAiBC,gBAAjB,EAAmClB,iBAAnC,EAAsDmB,OAAtD,EAA+D,IAA/D,EAAqET,MAArE,CAAlB;;IACA,OAAOS,OAAP;EACH,CAHD,CAGE,OAAOiD,KAAP,EAAc;IACZ,IACIS,qCAAwBT,KAAxB,CADJ,EAEE;MACE,IAAIjD,OAAO,CAACwD,IAAZ,EAAkB;QACdjC,8CAA8BvB,OAAO,CAACwD,IAAR,CAAaG,WAA3C;MACH;IACJ;;IACD,MAAMV,KAAN;EACH;AAEJ;;AAeQxE;;AAbT,SAASmF,iBAAT,CACIxD,SADJ,EAEIvB,iBAFJ,EAGIE,GAHJ,EAIIC,KAJJ,EAIc;EAGV,IAAMO,MAAM,GAAG,IAAIC,eAAJ,CAAWkD,+BAAemB,QAA1B,EAAoC,EAApC,EAAwChF,iBAAxC,EAA2D,IAAIS,mBAAJ,CAAaP,GAAb,EAAkBC,KAAlB,CAA3D,CAAf;EACA,IAAMgB,OAAO,GAAG,IAAIyD,iBAAJ,CAAYrD,SAAZ,CAAhB;EACA,IAAMa,OAAO,GAAG,IAAIC,iBAAJ,CAAYrC,iBAAZ,EAA+BmB,OAA/B,EAAwC,IAAxC,EAA8C,EAA9C,EAAkDT,MAAlD,CAAhB;EACA,OAAO0B,OAAP;AACH;;AAEcxC","names":["getBindingDictionary","cntnr","_bindingDictionary","exports","_createTarget","isMultiInject","targetType","serviceIdentifier","name","key","value","metadataKey","METADATA_KEY","MULTI_INJECT_TAG","INJECT_TAG","injectMetadata","metadata_1","target","target_1","undefined","tagMetadata","metadata","push","_getActiveBindings","metadataReader","avoidConstraints","context","parentRequest","bindings","getBindings","container","activeBindings","length","binding_count_1","NoBindingsAvailable","options","autoBindInjectable","getConstructorMetadata","compilerGeneratedMetadata","bind","toSelf","filter","binding","request","request_1","constraint","_validateActiveBindingCount","isOptional","serviceIdentifierString","serialization_1","msg","ERROR_MSGS","NOT_REGISTERED","Error","OnlyOneBindingAvailable","isArray","MultipleBindingsAvailable","AMBIGUOUS_MATCH","_createSubRequests","childRequest","thePlan","plan_1","addPlan","addChildRequest","forEach","subChildRequest","cache","type","literal_types_1","Instance","implementationType","dependencies","reflection_utils_1","skipBaseClassChecks","baseClassDependencyCount","error","ARGUMENTS_LENGTH_MISMATCH","dependency","bindingDictionary","hasKey","get","parent","plan","context_1","exceptions_1","rootRequest","createMockRequest","Variable"],"sourceRoot":"","sources":["../../src/planning/planner.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}