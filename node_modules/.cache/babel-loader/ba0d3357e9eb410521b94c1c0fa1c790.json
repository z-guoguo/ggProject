{"ast":null,"code":"import { Line } from '../../geometry';\nimport { resolve, getPointAtEdge } from '../node-anchor/util';\nimport { getClosestPoint } from './closest';\nimport { FunctionExt } from '../../util';\n\nconst orthogonal = function (view, magnet, refPoint, options) {\n  const OFFSET = 1e6;\n  const path = view.getConnection();\n  const segmentSubdivisions = view.getConnectionSubdivisions();\n  const vLine = new Line(refPoint.clone().translate(0, OFFSET), refPoint.clone().translate(0, -OFFSET));\n  const hLine = new Line(refPoint.clone().translate(OFFSET, 0), refPoint.clone().translate(-OFFSET, 0));\n  const vIntersections = vLine.intersect(path, {\n    segmentSubdivisions\n  });\n  const hIntersections = hLine.intersect(path, {\n    segmentSubdivisions\n  });\n  const intersections = [];\n\n  if (vIntersections) {\n    intersections.push(...vIntersections);\n  }\n\n  if (hIntersections) {\n    intersections.push(...hIntersections);\n  }\n\n  if (intersections.length > 0) {\n    return refPoint.closest(intersections);\n  }\n\n  if (options.fallbackAt != null) {\n    return getPointAtEdge(view, options.fallbackAt);\n  }\n\n  return FunctionExt.call(getClosestPoint, this, view, magnet, refPoint, options);\n};\n\nexport const orth = resolve(orthogonal);","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,QAA4B,gBAA5B;AACA,SAAyBC,OAAzB,EAAkCC,cAAlC,QAAwD,qBAAxD;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA,SAASC,WAAT,QAA4B,YAA5B;;AAMA,MAAMC,UAAU,GACd,UAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,OAAlC,EAAyC;EACvC,MAAMC,MAAM,GAAG,GAAf;EACA,MAAMC,IAAI,GAAGL,IAAI,CAACM,aAAL,EAAb;EACA,MAAMC,mBAAmB,GAAGP,IAAI,CAACQ,yBAAL,EAA5B;EACA,MAAMC,KAAK,GAAG,IAAIf,IAAJ,CACZQ,QAAQ,CAACQ,KAAT,GAAiBC,SAAjB,CAA2B,CAA3B,EAA8BP,MAA9B,CADY,EAEZF,QAAQ,CAACQ,KAAT,GAAiBC,SAAjB,CAA2B,CAA3B,EAA8B,CAACP,MAA/B,CAFY,CAAd;EAIA,MAAMQ,KAAK,GAAG,IAAIlB,IAAJ,CACZQ,QAAQ,CAACQ,KAAT,GAAiBC,SAAjB,CAA2BP,MAA3B,EAAmC,CAAnC,CADY,EAEZF,QAAQ,CAACQ,KAAT,GAAiBC,SAAjB,CAA2B,CAACP,MAA5B,EAAoC,CAApC,CAFY,CAAd;EAKA,MAAMS,cAAc,GAAGJ,KAAK,CAACK,SAAN,CAAgBT,IAAhB,EAAsB;IAC3CE;EAD2C,CAAtB,CAAvB;EAIA,MAAMQ,cAAc,GAAGH,KAAK,CAACE,SAAN,CAAgBT,IAAhB,EAAsB;IAC3CE;EAD2C,CAAtB,CAAvB;EAIA,MAAMS,aAAa,GAAG,EAAtB;;EACA,IAAIH,cAAJ,EAAoB;IAClBG,aAAa,CAACC,IAAd,CAAmB,GAAGJ,cAAtB;EACD;;EACD,IAAIE,cAAJ,EAAoB;IAClBC,aAAa,CAACC,IAAd,CAAmB,GAAGF,cAAtB;EACD;;EAED,IAAIC,aAAa,CAACE,MAAd,GAAuB,CAA3B,EAA8B;IAC5B,OAAOhB,QAAQ,CAACiB,OAAT,CAAiBH,aAAjB,CAAP;EACD;;EAED,IAAIb,OAAO,CAACiB,UAAR,IAAsB,IAA1B,EAAgC;IAC9B,OAAOxB,cAAc,CAACI,IAAD,EAAOG,OAAO,CAACiB,UAAf,CAArB;EACD;;EAED,OAAOtB,WAAW,CAACuB,IAAZ,CACLxB,eADK,EAEL,IAFK,EAGLG,IAHK,EAILC,MAJK,EAKLC,QALK,EAMLC,OANK,CAAP;AAQD,CA9CH;;AAgDA,OAAO,MAAMmB,IAAI,GAAG3B,OAAO,CAGzBI,UAHyB,CAApB","names":["Line","resolve","getPointAtEdge","getClosestPoint","FunctionExt","orthogonal","view","magnet","refPoint","options","OFFSET","path","getConnection","segmentSubdivisions","getConnectionSubdivisions","vLine","clone","translate","hLine","vIntersections","intersect","hIntersections","intersections","push","length","closest","fallbackAt","call","orth"],"sourceRoot":"","sources":["../../../src/registry/edge-anchor/orth.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}