{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Grid =\n/** @class */\nfunction () {\n  function Grid() {\n    this.cells = [];\n    this.columnNum = 0;\n    this.rowNum = 0;\n    this.additionColumn = [];\n    this.additionRow = [];\n  }\n\n  Grid.prototype.init = function (width, height, gridSize) {\n    this.cells = [];\n    this.CELL_W = gridSize.CELL_W || Grid.DEFAULT_CELL_W;\n    this.CELL_H = gridSize.CELL_H || Grid.DEFAULT_CELL_H;\n    this.columnNum = Math.ceil(width / this.CELL_W);\n    this.rowNum = Math.ceil(height / this.CELL_H);\n    Grid.MIN_DIST = Math.pow(width, 2) + Math.pow(height, 2);\n\n    for (var i = 0; i < this.columnNum; i++) {\n      var tmp = [];\n\n      for (var j = 0; j < this.rowNum; j++) {\n        var cell = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false\n        };\n        tmp.push(cell);\n      }\n\n      this.cells.push(tmp);\n    }\n  };\n\n  Grid.prototype.findGridByNodeId = function (nodeId) {\n    var _a, _b;\n\n    for (var i = 0; i < this.columnNum; i++) {\n      for (var j = 0; j < this.rowNum; j++) {\n        if (this.cells[i][j].node) {\n          if (((_b = (_a = this.cells[i][j]) === null || _a === void 0 ? void 0 : _a.node) === null || _b === void 0 ? void 0 : _b.id) === nodeId) {\n            return {\n              column: i,\n              row: j\n            };\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  Grid.prototype.sqdist = function (a, b) {\n    return Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2);\n  };\n\n  Grid.prototype.occupyNearest = function (p) {\n    var minDist = Grid.MIN_DIST;\n    var d;\n    var candidate = null;\n\n    for (var i = 0; i < this.columnNum; i++) {\n      for (var j = 0; j < this.rowNum; j++) {\n        if (!this.cells[i][j].occupied && (d = this.sqdist(p, this.cells[i][j])) < minDist) {\n          minDist = d;\n          candidate = this.cells[i][j];\n        }\n      }\n    }\n\n    if (candidate) {\n      candidate.occupied = true;\n    }\n\n    return candidate;\n  };\n\n  Grid.prototype.insertColumn = function (columnIndex, length) {\n    if (length <= 0) return; // 插入空列\n\n    for (var i = 0; i < length; i++) {\n      this.cells[i + this.columnNum] = [];\n\n      for (var j = 0; j < this.rowNum; j++) {\n        this.cells[i + this.columnNum][j] = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false,\n          node: null\n        };\n      }\n    } // 交换数据\n\n\n    for (var i = this.columnNum - 1; i > columnIndex; i--) {\n      for (var j = 0; j < this.rowNum; j++) {\n        this.cells[i + length][j] = __assign(__assign({}, this.cells[i][j]), {\n          x: (i + length) * this.CELL_W,\n          y: j * this.CELL_H\n        });\n        this.cells[i][j] = {\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: true,\n          node: null\n        };\n      }\n    } // 已有行列的处理\n\n\n    for (var j = 0; j < this.additionColumn.length; j++) {\n      if (this.additionColumn[j] >= columnIndex) {\n        this.additionColumn[j] += length;\n      }\n    } // 记录新增的行列\n\n\n    for (var i = 0; i < length; i++) {\n      this.additionColumn.push(columnIndex + i + 1);\n    }\n\n    this.columnNum += length;\n  };\n\n  Grid.prototype.insertRow = function (rowIndex, length) {\n    if (length <= 0) return; // 插入空行\n\n    for (var j = 0; j < length; j++) {\n      for (var i = 0; i < this.columnNum; i++) {\n        this.cells[i][j + this.rowNum] = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false,\n          node: null\n        };\n      }\n    } // 交换数据\n\n\n    for (var i = 0; i < this.columnNum; i++) {\n      for (var j = this.rowNum - 1; j > rowIndex; j--) {\n        this.cells[i][j + length] = __assign(__assign({}, this.cells[i][j]), {\n          dx: i,\n          dy: j + length,\n          x: i * this.CELL_W,\n          y: (j + length) * this.CELL_H\n        });\n        this.cells[i][j] = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false,\n          node: null\n        };\n      }\n    } // 已有行列的处理\n\n\n    for (var j = 0; j < this.additionRow.length; j++) {\n      if (this.additionRow[j] >= rowIndex) {\n        this.additionRow[j] += length;\n      }\n    } // 记录新增的行列\n\n\n    for (var i = 0; i < length; i++) {\n      this.additionRow.push(rowIndex + i + 1);\n    }\n\n    this.rowNum += length;\n  };\n\n  Grid.prototype.getNodes = function () {\n    var nodes = [];\n\n    for (var i = 0; i < this.columnNum; i++) {\n      for (var j = 0; j < this.rowNum; j++) {\n        if (this.cells[i][j].node) {\n          nodes.push(this.cells[i][j]);\n        }\n      }\n    }\n\n    return nodes;\n  };\n\n  Grid.MIN_DIST = 50;\n  Grid.DEFAULT_CELL_W = 80;\n  Grid.DEFAULT_CELL_H = 80;\n  return Grid;\n}();\n\nexports.default = Grid;","map":{"version":3,"mappings":"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","names":["Grid","width","height","gridSize","cells","CELL_W","DEFAULT_CELL_W","CELL_H","DEFAULT_CELL_H","columnNum","Math","ceil","rowNum","MIN_DIST","pow","i","tmp","j","cell","dx","dy","x","y","occupied","push","nodeId","node","_a","_b","id","column","row","a","b","p","minDist","d","candidate","sqdist","columnIndex","length","__assign","additionColumn","rowIndex","additionRow","nodes"],"sourceRoot":"","sources":["../../../src/layout/er/grid.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}