{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLayoutByName = exports.unRegisterLayout = exports.registerLayout = void 0;\n\nvar base_1 = require(\"../layout/base\");\n\nvar util_1 = require(\"../util\");\n\nvar map = new Map();\n\nvar registerLayout = function (name, layoutOverride) {\n  if (map.get(name)) {\n    console.warn(\"The layout with the name \".concat(name, \" exists already, it will be overridden\"));\n  }\n\n  if ((0, util_1.isObject)(layoutOverride)) {\n    // tslint:disable-next-line: max-classes-per-file\n    var GLayout =\n    /** @class */\n    function (_super) {\n      __extends(GLayout, _super);\n\n      function GLayout(cfg) {\n        var _this = _super.call(this) || this;\n\n        var self = _this;\n        var props = {};\n        var defaultCfg = self.getDefaultCfg();\n        Object.assign(props, defaultCfg, layoutOverride, cfg);\n        Object.keys(props).forEach(function (key) {\n          var value = props[key];\n          self[key] = value;\n        });\n        return _this;\n      }\n\n      return GLayout;\n    }(base_1.Base);\n\n    map.set(name, GLayout);\n  } else {\n    map.set(name, layoutOverride);\n  }\n\n  return map.get(name);\n};\n\nexports.registerLayout = registerLayout;\n\nvar unRegisterLayout = function (name) {\n  if (map.has(name)) {\n    map.delete(name);\n  }\n};\n\nexports.unRegisterLayout = unRegisterLayout;\n\nvar getLayoutByName = function (name) {\n  if (map.has(name)) {\n    return map.get(name);\n  }\n\n  return null;\n};\n\nexports.getLayoutByName = getLayoutByName;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,GAAG,GAAqB,IAAIC,GAAJ,EAA9B;;AAEO,IAAMC,cAAc,GAAG,UAACC,IAAD,EAAeC,cAAf,EAAkC;EAC9D,IAAIJ,GAAG,CAACK,GAAJ,CAAQF,IAAR,CAAJ,EAAmB;IACjBG,OAAO,CAACC,IAAR,CAAa,mCAA4BJ,IAA5B,EAAgC,wCAAhC,CAAb;EACD;;EACD,IAAI,qBAASC,cAAT,CAAJ,EAA8B;IAC5B;IACA;IAAA;IAAA;MAAsBI;;MACpB,iBAAYC,GAAZ,EAAoB;QAApB,YACEC,qBAAO,IADT;;QAEE,IAAMC,IAAI,GAAGC,KAAb;QACA,IAAMC,KAAK,GAAQ,EAAnB;QACA,IAAMC,UAAU,GAAGH,IAAI,CAACI,aAAL,EAAnB;QACAC,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqBC,UAArB,EAAiCV,cAAjC,EAAiDK,GAAjD;QACAO,MAAM,CAACE,IAAP,CAAYL,KAAZ,EAAmBM,OAAnB,CAA2B,UAACC,GAAD,EAAY;UACrC,IAAMC,KAAK,GAAGR,KAAK,CAACO,GAAD,CAAnB;UACAT,IAAI,CAACS,GAAD,CAAJ,GAAYC,KAAZ;QACD,CAHD;;MAID;;MACH;IAAC,CAZD,CAAsBC,WAAtB;;IAaAtB,GAAG,CAACuB,GAAJ,CAAQpB,IAAR,EAAcqB,OAAd;EACD,CAhBD,MAgBO;IACLxB,GAAG,CAACuB,GAAJ,CAAQpB,IAAR,EAAcC,cAAd;EACD;;EACD,OAAOJ,GAAG,CAACK,GAAJ,CAAQF,IAAR,CAAP;AACD,CAxBM;;AAAMsB,yBAAcvB,cAAd;;AA0BN,IAAMwB,gBAAgB,GAAG,UAACvB,IAAD,EAAa;EAC3C,IAAIH,GAAG,CAAC2B,GAAJ,CAAQxB,IAAR,CAAJ,EAAmB;IACjBH,GAAG,CAAC4B,MAAJ,CAAWzB,IAAX;EACD;AACF,CAJM;;AAAMsB,2BAAgBC,gBAAhB;;AAMN,IAAMG,eAAe,GAAG,UAAC1B,IAAD,EAAa;EAC1C,IAAIH,GAAG,CAAC2B,GAAJ,CAAQxB,IAAR,CAAJ,EAAmB;IACjB,OAAOH,GAAG,CAACK,GAAJ,CAAQF,IAAR,CAAP;EACD;;EACD,OAAO,IAAP;AACD,CALM;;AAAMsB,0BAAeI,eAAf","names":["map","Map","registerLayout","name","layoutOverride","get","console","warn","__extends","cfg","_super","self","_this","props","defaultCfg","getDefaultCfg","Object","assign","keys","forEach","key","value","base_1","set","GLayout","exports","unRegisterLayout","has","delete","getLayoutByName"],"sourceRoot":"","sources":["../../src/registy/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}