{"ast":null,"code":"import { DAY, HOUR, MINUTE, MONTH, SECOND, YEAR } from '../util/time';\n\nfunction getYear(date) {\n  return new Date(date).getFullYear();\n}\n\nfunction createYear(year) {\n  return new Date(year, 0, 1).getTime();\n}\n\nfunction getMonth(date) {\n  return new Date(date).getMonth();\n}\n\nfunction diffMonth(min, max) {\n  var minYear = getYear(min);\n  var maxYear = getYear(max);\n  var minMonth = getMonth(min);\n  var maxMonth = getMonth(max);\n  return (maxYear - minYear) * 12 + (maxMonth - minMonth) % 12;\n}\n\nfunction creatMonth(year, month) {\n  return new Date(year, month, 1).getTime();\n}\n\nfunction diffDay(min, max) {\n  return Math.ceil((max - min) / DAY);\n}\n\nfunction diffHour(min, max) {\n  return Math.ceil((max - min) / HOUR);\n}\n\nfunction diffMinus(min, max) {\n  return Math.ceil((max - min) / (60 * 1000));\n}\n/**\n * 计算 time 的 ticks，对 month, year 进行 pretty 处理\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\n\n\nexport default function timePretty(cfg) {\n  var min = cfg.min,\n      max = cfg.max,\n      minTickInterval = cfg.minTickInterval,\n      tickCount = cfg.tickCount;\n  var tickInterval = cfg.tickInterval;\n  var ticks = []; // 指定 tickInterval 后 tickCount 不生效，需要重新计算\n\n  if (!tickInterval) {\n    tickInterval = (max - min) / tickCount; // 如果设置了最小间距，则使用最小间距\n\n    if (minTickInterval && tickInterval < minTickInterval) {\n      tickInterval = minTickInterval;\n    }\n  }\n\n  tickInterval = Math.max(Math.floor((max - min) / (Math.pow(2, 12) - 1)), tickInterval);\n  var minYear = getYear(min); // 如果间距大于 1 年，则将开始日期从整年开始\n\n  if (tickInterval > YEAR) {\n    var maxYear = getYear(max);\n    var yearInterval = Math.ceil(tickInterval / YEAR);\n\n    for (var i = minYear; i <= maxYear + yearInterval; i = i + yearInterval) {\n      ticks.push(createYear(i));\n    }\n  } else if (tickInterval > MONTH) {\n    // 大于月时\n    var monthInterval = Math.ceil(tickInterval / MONTH);\n    var mmMoth = getMonth(min);\n    var dMonths = diffMonth(min, max);\n\n    for (var i = 0; i <= dMonths + monthInterval; i = i + monthInterval) {\n      ticks.push(creatMonth(minYear, i + mmMoth));\n    }\n  } else if (tickInterval > DAY) {\n    // 大于天\n    var date = new Date(min);\n    var year = date.getFullYear();\n    var month = date.getMonth();\n    var mday = date.getDate();\n    var day = Math.ceil(tickInterval / DAY);\n    var ddays = diffDay(min, max);\n\n    for (var i = 0; i < ddays + day; i = i + day) {\n      ticks.push(new Date(year, month, mday + i).getTime());\n    }\n  } else if (tickInterval > HOUR) {\n    // 大于小时\n    var date = new Date(min);\n    var year = date.getFullYear();\n    var month = date.getMonth();\n    var day = date.getDate();\n    var hour = date.getHours();\n    var hours = Math.ceil(tickInterval / HOUR);\n    var dHours = diffHour(min, max);\n\n    for (var i = 0; i <= dHours + hours; i = i + hours) {\n      ticks.push(new Date(year, month, day, hour + i).getTime());\n    }\n  } else if (tickInterval > MINUTE) {\n    // 大于分钟\n    var dMinus = diffMinus(min, max);\n    var minutes = Math.ceil(tickInterval / MINUTE);\n\n    for (var i = 0; i <= dMinus + minutes; i = i + minutes) {\n      ticks.push(min + i * MINUTE);\n    }\n  } else {\n    // 小于分钟\n    var interval = tickInterval;\n\n    if (interval < SECOND) {\n      interval = SECOND;\n    }\n\n    var minSecond = Math.floor(min / SECOND) * SECOND;\n    var dSeconds = Math.ceil((max - min) / SECOND);\n    var seconds = Math.ceil(interval / SECOND);\n\n    for (var i = 0; i < dSeconds + seconds; i = i + seconds) {\n      ticks.push(minSecond + i * SECOND);\n    }\n  } // 最好是能从算法能解决这个问题，但是如果指定了 tickInterval，计算 ticks，也只能这么算，所以\n  // 打印警告提示\n\n\n  if (ticks.length >= 512) {\n    console.warn(\"Notice: current ticks length(\" + ticks.length + \") >= 512, may cause performance issues, even out of memory. Because of the configure \\\"tickInterval\\\"(in milliseconds, current is \" + tickInterval + \") is too small, increase the value to solve the problem!\");\n  }\n\n  return ticks;\n}","map":{"version":3,"mappings":"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","names":["DAY","HOUR","MINUTE","MONTH","SECOND","YEAR","getYear","date","Date","getFullYear","createYear","year","getTime","getMonth","diffMonth","min","max","minYear","maxYear","minMonth","maxMonth","creatMonth","month","diffDay","Math","ceil","diffHour","diffMinus","timePretty","cfg","minTickInterval","tickCount","ticks","tickInterval","floor","yearInterval","i","push","monthInterval","mmMoth","dMonths","mday","getDate","day","ddays","hour","getHours","hours","dHours","dMinus","minutes","interval","minSecond","dSeconds","seconds","length","console","warn"],"sourceRoot":"","sources":["../../src/tick-method/time-pretty.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}