{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { isNil, each, isString } from './util';\nimport { getOffScreenContext } from './offscreen';\n/**\n * 获取文本的高度\n * @param text 文本\n * @param fontSize 字体大小\n * @param lineHeight 行高，可以为空\n */\n\nexport function getTextHeight(text, fontSize, lineHeight) {\n  var lineCount = 1;\n\n  if (isString(text)) {\n    lineCount = text.split('\\n').length;\n  }\n\n  if (lineCount > 1) {\n    var spaceingY = getLineSpaceing(fontSize, lineHeight);\n    return fontSize * lineCount + spaceingY * (lineCount - 1);\n  }\n\n  return fontSize;\n}\n/**\n * 获取行间距如果文本多行，需要获取文本间距\n * @param fontSize 字体大小\n * @param lineHeight 行高\n */\n\nexport function getLineSpaceing(fontSize, lineHeight) {\n  return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\n}\n/**\n * 字体宽度\n * @param text 文本\n * @param font 字体\n */\n\nexport function getTextWidth(text, font) {\n  var context = getOffScreenContext(); // 获取离屏的 ctx 进行计算\n\n  var width = 0; // null 或者 undefined 时，宽度为 0\n\n  if (isNil(text) || text === '') {\n    return width;\n  }\n\n  context.save();\n  context.font = font;\n\n  if (isString(text) && text.includes('\\n')) {\n    var textArr = text.split('\\n');\n    each(textArr, function (subText) {\n      var measureWidth = context.measureText(subText).width;\n\n      if (width < measureWidth) {\n        width = measureWidth;\n      }\n    });\n  } else {\n    width = context.measureText(text).width;\n  }\n\n  context.restore();\n  return width;\n}\nexport function assembleFont(attrs) {\n  var fontSize = attrs.fontSize,\n      fontFamily = attrs.fontFamily,\n      fontWeight = attrs.fontWeight,\n      fontStyle = attrs.fontStyle,\n      fontVariant = attrs.fontVariant;\n  return [fontStyle, fontVariant, fontWeight, fontSize + \"px\", fontFamily].join(' ').trim();\n}","map":{"version":3,"mappings":";AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,QAAtC;AACA,SAASC,mBAAT,QAAoC,aAApC;AAGA;;;;;;;AAMA,OAAM,SAAUC,aAAV,CAAwBC,IAAxB,EAAsCC,QAAtC,EAAwDC,UAAxD,EAA2E;EAC/E,IAAIC,SAAS,GAAG,CAAhB;;EACA,IAAIN,QAAQ,CAACG,IAAD,CAAZ,EAAoB;IAClBG,SAAS,GAAGH,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiBC,MAA7B;EACD;;EACD,IAAIF,SAAS,GAAG,CAAhB,EAAmB;IACjB,IAAMG,SAAS,GAAGC,eAAe,CAACN,QAAD,EAAWC,UAAX,CAAjC;IACA,OAAOD,QAAQ,GAAGE,SAAX,GAAuBG,SAAS,IAAIH,SAAS,GAAG,CAAhB,CAAvC;EACD;;EACD,OAAOF,QAAP;AACD;AAED;;;;;;AAKA,OAAM,SAAUM,eAAV,CAA0BN,QAA1B,EAA4CC,UAA5C,EAA+D;EACnE,OAAOA,UAAU,GAAGA,UAAU,GAAGD,QAAhB,GAA2BA,QAAQ,GAAG,IAAvD;AACD;AAED;;;;;;AAKA,OAAM,SAAUO,YAAV,CAAuBR,IAAvB,EAAqCS,IAArC,EAAiD;EACrD,IAAMC,OAAO,GAAGZ,mBAAmB,EAAnC,CADqD,CACd;;EACvC,IAAIa,KAAK,GAAG,CAAZ,CAFqD,CAGrD;;EACA,IAAIhB,KAAK,CAACK,IAAD,CAAL,IAAeA,IAAI,KAAK,EAA5B,EAAgC;IAC9B,OAAOW,KAAP;EACD;;EACDD,OAAO,CAACE,IAAR;EACAF,OAAO,CAACD,IAAR,GAAeA,IAAf;;EACA,IAAIZ,QAAQ,CAACG,IAAD,CAAR,IAAkBA,IAAI,CAACa,QAAL,CAAc,IAAd,CAAtB,EAA2C;IACzC,IAAMC,OAAO,GAAGd,IAAI,CAACI,KAAL,CAAW,IAAX,CAAhB;IACAR,IAAI,CAACkB,OAAD,EAAU,UAACC,OAAD,EAAQ;MACpB,IAAMC,YAAY,GAAGN,OAAO,CAACO,WAAR,CAAoBF,OAApB,EAA6BJ,KAAlD;;MACA,IAAIA,KAAK,GAAGK,YAAZ,EAA0B;QACxBL,KAAK,GAAGK,YAAR;MACD;IACF,CALG,CAAJ;EAMD,CARD,MAQO;IACLL,KAAK,GAAGD,OAAO,CAACO,WAAR,CAAoBjB,IAApB,EAA0BW,KAAlC;EACD;;EACDD,OAAO,CAACQ,OAAR;EACA,OAAOP,KAAP;AACD;AAED,OAAM,SAAUQ,YAAV,CAAuBC,KAAvB,EAAwC;EACpC,YAAQ,GAAqDA,KAAK,SAAlE;EAAA,IAAUC,UAAU,GAAyCD,KAAK,WAAlE;EAAA,IAAsBE,UAAU,GAA6BF,KAAK,WAAlE;EAAA,IAAkCG,SAAS,GAAkBH,KAAK,UAAlE;EAAA,IAA6CI,WAAW,GAAKJ,KAAK,YAAlE;EACR,OAAO,CAACG,SAAD,EAAYC,WAAZ,EAAyBF,UAAzB,EAAwCrB,QAAQ,OAAhD,EAAsDoB,UAAtD,EAAkEI,IAAlE,CAAuE,GAAvE,EAA4EC,IAA5E,EAAP;AACD","names":["isNil","each","isString","getOffScreenContext","getTextHeight","text","fontSize","lineHeight","lineCount","split","length","spaceingY","getLineSpaceing","getTextWidth","font","context","width","save","includes","textArr","subText","measureWidth","measureText","restore","assembleFont","attrs","fontFamily","fontWeight","fontStyle","fontVariant","join","trim"],"sourceRoot":"","sources":["../../src/util/text.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}