{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { FunctionExt, ObjectExt } from '../util';\nimport { Model } from '../model/model';\nimport { CellView } from '../view/cell';\nimport { NodeView } from '../view/node';\nimport { EdgeView } from '../view/edge';\nimport { Knob } from '../addon/knob';\nimport { MiniMap } from '../addon/minimap';\nimport { Snapline } from '../addon/snapline';\nimport { Scroller } from '../addon/scroller';\nimport { Selection } from '../addon/selection';\nimport { Clipboard } from '../addon/clipboard';\nimport { Transform } from '../addon/transform';\nimport { HTML } from '../shape/standard/html';\nimport { Edge as StandardEdge } from '../shape/standard/edge';\nimport { Base } from './base';\nimport { Options } from './options';\nimport { Renderer } from './renderer';\nimport { GraphView } from './view';\nimport { DefsManager } from './defs';\nimport { GridManager } from './grid';\nimport { CoordManager } from './coord';\nimport { SnaplineManager } from './snapline';\nimport { ScrollerManager } from './scroller';\nimport { ClipboardManager } from './clipboard';\nimport { HighlightManager } from './highlight';\nimport { TransformManager } from './transform';\nimport { SelectionManager } from './selection';\nimport { BackgroundManager } from './background';\nimport { HistoryManager } from './history';\nimport { MiniMapManager } from './minimap';\nimport { Keyboard } from './keyboard';\nimport { MouseWheel } from './mousewheel';\nimport { PrintManager } from './print';\nimport { FormatManager } from './format';\nimport { KnobManager } from './knob';\nimport { PanningManager } from './panning';\nimport { SizeManager } from './size';\nvar Decorator;\n\n(function (Decorator) {\n  function hook(nullable, hookName) {\n    return (target, methodName, descriptor) => {\n      const raw = descriptor.value;\n      const name = hookName || methodName;\n\n      descriptor.value = function (...args) {\n        const hook = this.options[name];\n\n        if (hook != null) {\n          this.getNativeValue = raw.bind(this, ...args);\n          const ret = FunctionExt.call(hook, this.graph, ...args);\n          this.getNativeValue = null;\n\n          if (ret != null || nullable === true && ret === null) {\n            return ret;\n          }\n        }\n\n        return raw.call(this, ...args);\n      };\n    };\n  }\n\n  Decorator.hook = hook;\n\n  function after(hookName) {\n    return (target, methodName, descriptor) => {\n      const raw = descriptor.value;\n      const name = hookName || methodName;\n\n      descriptor.value = function (...args) {\n        let ret = raw.call(this, ...args);\n        const hook = this.options[name];\n\n        if (hook != null) {\n          ret = FunctionExt.call(hook, this.graph, ...args) && ret;\n        }\n\n        return ret;\n      };\n    };\n  }\n\n  Decorator.after = after;\n})(Decorator || (Decorator = {}));\n\nexport class Hook extends Base {\n  createModel() {\n    if (this.options.model) {\n      return this.options.model;\n    }\n\n    const model = new Model();\n    model.graph = this.graph;\n    return model;\n  }\n\n  createView() {\n    return new GraphView(this.graph);\n  }\n\n  createRenderer() {\n    return new Renderer(this.graph);\n  }\n\n  createDefsManager() {\n    return new DefsManager(this.graph);\n  }\n\n  createGridManager() {\n    return new GridManager(this.graph);\n  }\n\n  createCoordManager() {\n    return new CoordManager(this.graph);\n  }\n\n  createKnobManager() {\n    return new KnobManager(this.graph);\n  }\n\n  createTransform(node, widgetOptions) {\n    const options = this.getTransformOptions(node);\n\n    if (options.resizable || options.rotatable) {\n      return new Transform(Object.assign(Object.assign({\n        node,\n        graph: this.graph\n      }, options), widgetOptions));\n    }\n\n    if (options.clearAll) {\n      Transform.removeInstances(this.graph);\n    }\n\n    return null;\n  }\n\n  createKnob(node, widgetOptions) {\n    const options = Options.parseOptionGroup(this.graph, node, this.options.knob);\n    const localOptions = Object.assign(Object.assign({}, options), widgetOptions);\n\n    if (localOptions.clearAll) {\n      Knob.removeInstances(this.graph);\n    }\n\n    localOptions.clearAll = false;\n    const knob = node.prop('knob');\n    const widgets = [];\n    const meta = Array.isArray(knob) ? knob : [knob];\n    meta.forEach((knob, index) => {\n      if (knob) {\n        if (knob.enabled === false) {\n          return;\n        }\n\n        if (typeof knob.enabled === 'function' && knob.enabled.call(this.graph, node) === false) {\n          return;\n        }\n      } else {\n        return;\n      }\n\n      if (options.enabled) {\n        widgets.push(new Knob(Object.assign({\n          node,\n          index,\n          graph: this.graph\n        }, localOptions)));\n      }\n    });\n    return widgets;\n  }\n\n  getTransformOptions(node) {\n    const resizing = Options.parseOptionGroup(this.graph, node, this.options.resizing);\n    const rotating = Options.parseOptionGroup(this.graph, node, this.options.rotating);\n    const transforming = Options.parseOptionGroup(this.graph, node, this.options.transforming);\n    const options = Object.assign(Object.assign({}, transforming), {\n      resizable: resizing.enabled,\n      minWidth: resizing.minWidth,\n      maxWidth: resizing.maxWidth,\n      minHeight: resizing.minHeight,\n      maxHeight: resizing.maxHeight,\n      orthogonalResizing: resizing.orthogonal,\n      restrictedResizing: resizing.restrict != null ? resizing.restrict : resizing.restricted,\n      autoScrollOnResizing: resizing.autoScroll,\n      preserveAspectRatio: resizing.preserveAspectRatio,\n      allowReverse: resizing.allowReverse,\n      rotatable: rotating.enabled,\n      rotateGrid: rotating.grid\n    });\n    return options;\n  }\n\n  createTransformManager() {\n    return new TransformManager(this.graph);\n  }\n\n  createHighlightManager() {\n    return new HighlightManager(this.graph);\n  }\n\n  createBackgroundManager() {\n    return new BackgroundManager(this.graph);\n  }\n\n  createClipboard() {\n    return new Clipboard();\n  }\n\n  createClipboardManager() {\n    return new ClipboardManager(this.graph);\n  }\n\n  createSnapline() {\n    return new Snapline(Object.assign({\n      graph: this.graph\n    }, this.options.snapline));\n  }\n\n  createSnaplineManager() {\n    return new SnaplineManager(this.graph);\n  }\n\n  createSelection() {\n    return new Selection(Object.assign({\n      graph: this.graph\n    }, this.options.selecting));\n  }\n\n  createSelectionManager() {\n    return new SelectionManager(this.graph);\n  } // eslint-disable-next-line\n\n\n  allowRubberband(e) {\n    return true;\n  }\n\n  createHistoryManager() {\n    return new HistoryManager(Object.assign({\n      graph: this.graph\n    }, this.options.history));\n  }\n\n  createScroller() {\n    if (this.options.scroller.enabled) {\n      return new Scroller(Object.assign({\n        graph: this.graph\n      }, this.options.scroller));\n    }\n\n    return null;\n  }\n\n  createScrollerManager() {\n    return new ScrollerManager(this.graph);\n  } // eslint-disable-next-line\n\n\n  allowPanning(e) {\n    return true;\n  }\n\n  createMiniMap() {\n    const _a = this.options.minimap,\n          {\n      enabled\n    } = _a,\n          options = __rest(_a, [\"enabled\"]);\n\n    if (enabled) {\n      return new MiniMap(Object.assign({\n        graph: this.graph\n      }, options));\n    }\n\n    return null;\n  }\n\n  createMiniMapManager() {\n    return new MiniMapManager(this.graph);\n  }\n\n  createKeyboard() {\n    return new Keyboard(Object.assign({\n      graph: this.graph\n    }, this.options.keyboard));\n  }\n\n  createMouseWheel() {\n    return new MouseWheel(Object.assign({\n      graph: this.graph\n    }, this.options.mousewheel));\n  }\n\n  createPrintManager() {\n    return new PrintManager(this.graph);\n  }\n\n  createFormatManager() {\n    return new FormatManager(this.graph);\n  }\n\n  createPanningManager() {\n    return new PanningManager(this.graph);\n  }\n\n  createSizeManager() {\n    return new SizeManager(this.graph);\n  }\n\n  allowConnectToBlank(edge) {\n    const options = this.options.connecting;\n    const allowBlank = options.allowBlank != null ? options.allowBlank : options.dangling;\n\n    if (typeof allowBlank !== 'function') {\n      return !!allowBlank;\n    }\n\n    const edgeView = this.graph.findViewByCell(edge);\n    const sourceCell = edge.getSourceCell();\n    const targetCell = edge.getTargetCell();\n    const sourceView = this.graph.findViewByCell(sourceCell);\n    const targetView = this.graph.findViewByCell(targetCell);\n    return FunctionExt.call(allowBlank, this.graph, {\n      edge,\n      edgeView,\n      sourceCell,\n      targetCell,\n      sourceView,\n      targetView,\n      sourcePort: edge.getSourcePortId(),\n      targetPort: edge.getTargetPortId(),\n      sourceMagnet: edgeView.sourceMagnet,\n      targetMagnet: edgeView.targetMagnet\n    });\n  }\n\n  validateEdge(edge, type, initialTerminal) {\n    if (!this.allowConnectToBlank(edge)) {\n      const sourceId = edge.getSourceCellId();\n      const targetId = edge.getTargetCellId();\n\n      if (!(sourceId && targetId)) {\n        return false;\n      }\n    }\n\n    const validate = this.options.connecting.validateEdge;\n\n    if (validate) {\n      return FunctionExt.call(validate, this.graph, {\n        edge,\n        type,\n        previous: initialTerminal\n      });\n    }\n\n    return true;\n  }\n\n  validateMagnet(cellView, magnet, e) {\n    if (magnet.getAttribute('magnet') !== 'passive') {\n      const validate = this.options.connecting.validateMagnet;\n\n      if (validate) {\n        return FunctionExt.call(validate, this.graph, {\n          e,\n          magnet,\n          view: cellView,\n          cell: cellView.cell\n        });\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  getDefaultEdge(sourceView, sourceMagnet) {\n    let edge;\n    const create = this.options.connecting.createEdge;\n\n    if (create) {\n      edge = FunctionExt.call(create, this.graph, {\n        sourceMagnet,\n        sourceView,\n        sourceCell: sourceView.cell\n      });\n    }\n\n    if (edge == null) {\n      edge = new StandardEdge();\n    }\n\n    return edge;\n  }\n\n  validateConnection(sourceView, sourceMagnet, targetView, targetMagnet, terminalType, edgeView, candidateTerminal) {\n    const options = this.options.connecting;\n    const allowLoop = options.allowLoop;\n    const allowNode = options.allowNode;\n    const allowEdge = options.allowEdge;\n    const allowPort = options.allowPort;\n    const allowMulti = options.allowMulti != null ? options.allowMulti : options.multi;\n    const validate = options.validateConnection;\n    const edge = edgeView ? edgeView.cell : null;\n    const terminalView = terminalType === 'target' ? targetView : sourceView;\n    const terminalMagnet = terminalType === 'target' ? targetMagnet : sourceMagnet;\n    let valid = true;\n\n    const doValidate = validate => {\n      const sourcePort = terminalType === 'source' ? candidateTerminal ? candidateTerminal.port : null : edge ? edge.getSourcePortId() : null;\n      const targetPort = terminalType === 'target' ? candidateTerminal ? candidateTerminal.port : null : edge ? edge.getTargetPortId() : null;\n      return FunctionExt.call(validate, this.graph, {\n        edge,\n        edgeView,\n        sourceView,\n        targetView,\n        sourcePort,\n        targetPort,\n        sourceMagnet,\n        targetMagnet,\n        sourceCell: sourceView ? sourceView.cell : null,\n        targetCell: targetView ? targetView.cell : null,\n        type: terminalType\n      });\n    };\n\n    if (allowLoop != null) {\n      if (typeof allowLoop === 'boolean') {\n        if (!allowLoop && sourceView === targetView) {\n          valid = false;\n        }\n      } else {\n        valid = doValidate(allowLoop);\n      }\n    }\n\n    if (valid && allowPort != null) {\n      if (typeof allowPort === 'boolean') {\n        if (!allowPort && terminalMagnet) {\n          valid = false;\n        }\n      } else {\n        valid = doValidate(allowPort);\n      }\n    }\n\n    if (valid && allowEdge != null) {\n      if (typeof allowEdge === 'boolean') {\n        if (!allowEdge && EdgeView.isEdgeView(terminalView)) {\n          valid = false;\n        }\n      } else {\n        valid = doValidate(allowEdge);\n      }\n    } // When judging nodes, the influence of the ports should be excluded,\n    // because the ports and nodes have the same terminalView\n\n\n    if (valid && allowNode != null && terminalMagnet == null) {\n      if (typeof allowNode === 'boolean') {\n        if (!allowNode && NodeView.isNodeView(terminalView)) {\n          valid = false;\n        }\n      } else {\n        valid = doValidate(allowNode);\n      }\n    }\n\n    if (valid && allowMulti != null && edgeView) {\n      const edge = edgeView.cell;\n      const source = terminalType === 'source' ? candidateTerminal : edge.getSource();\n      const target = terminalType === 'target' ? candidateTerminal : edge.getTarget();\n      const terminalCell = candidateTerminal ? this.graph.getCellById(candidateTerminal.cell) : null;\n\n      if (source && target && source.cell && target.cell && terminalCell) {\n        if (typeof allowMulti === 'function') {\n          valid = doValidate(allowMulti);\n        } else {\n          const connectedEdges = this.model.getConnectedEdges(terminalCell, {\n            outgoing: terminalType === 'source',\n            incoming: terminalType === 'target'\n          });\n\n          if (connectedEdges.length) {\n            if (allowMulti === 'withPort') {\n              const exist = connectedEdges.some(link => {\n                const s = link.getSource();\n                const t = link.getTarget();\n                return s && t && s.cell === source.cell && t.cell === target.cell && s.port != null && s.port === source.port && t.port != null && t.port === target.port;\n              });\n\n              if (exist) {\n                valid = false;\n              }\n            } else if (!allowMulti) {\n              const exist = connectedEdges.some(link => {\n                const s = link.getSource();\n                const t = link.getTarget();\n                return s && t && s.cell === source.cell && t.cell === target.cell;\n              });\n\n              if (exist) {\n                valid = false;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (valid && validate != null) {\n      valid = doValidate(validate);\n    }\n\n    return valid;\n  }\n\n  getRestrictArea(view) {\n    const restrict = this.options.translating.restrict;\n    const area = typeof restrict === 'function' ? FunctionExt.call(restrict, this.graph, view) : restrict;\n\n    if (typeof area === 'number') {\n      return this.graph.transform.getGraphArea().inflate(area);\n    }\n\n    if (area === true) {\n      return this.graph.transform.getGraphArea();\n    }\n\n    return area || null;\n  }\n\n  onViewUpdated(view, flag, options) {\n    if (flag & Renderer.FLAG_INSERT || options.mounting) {\n      return;\n    }\n\n    this.graph.renderer.requestConnectedEdgesUpdate(view, options);\n  }\n\n  onViewPostponed(view, flag, options) {\n    return this.graph.renderer.forcePostponedViewUpdate(view, flag);\n  }\n\n  getCellView(cell) {\n    return null;\n  }\n\n  createCellView(cell) {\n    const options = {\n      graph: this.graph\n    };\n    const ctor = this.getCellView(cell);\n\n    if (ctor) {\n      return new ctor(cell, options); // eslint-disable-line new-cap\n    }\n\n    const view = cell.view;\n\n    if (view != null && typeof view === 'string') {\n      const def = CellView.registry.get(view);\n\n      if (def) {\n        return new def(cell, options); // eslint-disable-line new-cap\n      }\n\n      return CellView.registry.onNotFound(view);\n    }\n\n    if (cell.isNode()) {\n      return new NodeView(cell, options);\n    }\n\n    if (cell.isEdge()) {\n      return new EdgeView(cell, options);\n    }\n\n    return null;\n  }\n\n  getHTMLComponent(node) {\n    let ret = node.getHTML();\n\n    if (typeof ret === 'string') {\n      ret = HTML.componentRegistry.get(ret) || ret;\n    }\n\n    if (ObjectExt.isPlainObject(ret)) {\n      ret = ret.render;\n    }\n\n    if (typeof ret === 'function') {\n      return FunctionExt.call(ret, this.graph, node);\n    }\n\n    return ret;\n  }\n\n  shouldUpdateHTMLComponent(node) {\n    let html = node.getHTML();\n\n    if (typeof html === 'string') {\n      html = HTML.componentRegistry.get(html) || html;\n    }\n\n    if (ObjectExt.isPlainObject(html)) {\n      const shouldUpdate = html.shouldComponentUpdate;\n\n      if (typeof shouldUpdate === 'function') {\n        return FunctionExt.call(shouldUpdate, this.graph, node);\n      }\n\n      return !!shouldUpdate;\n    }\n\n    return false;\n  }\n\n  onEdgeLabelRendered(args) {} // eslint-disable-line\n\n\n  onPortRendered(args) {} // eslint-disable-line\n\n\n  onToolItemCreated(args) {} // eslint-disable-line\n\n\n}\n\n__decorate([Decorator.hook()], Hook.prototype, \"createModel\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createView\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createRenderer\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createDefsManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createGridManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createCoordManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createKnobManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createTransform\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createKnob\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createTransformManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createHighlightManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createBackgroundManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createClipboard\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createClipboardManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createSnapline\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createSnaplineManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createSelection\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createSelectionManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"allowRubberband\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createHistoryManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createScroller\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createScrollerManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"allowPanning\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createMiniMap\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createMiniMapManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createKeyboard\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createMouseWheel\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createPrintManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createFormatManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createPanningManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createSizeManager\", null);\n\n__decorate([Decorator.after()], Hook.prototype, \"onViewUpdated\", null);\n\n__decorate([Decorator.after()], Hook.prototype, \"onViewPostponed\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"getCellView\", null);\n\n__decorate([Decorator.hook(true)], Hook.prototype, \"createCellView\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"getHTMLComponent\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"shouldUpdateHTMLComponent\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"onEdgeLabelRendered\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"onPortRendered\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"onToolItemCreated\", null);","map":{"version":3,"mappings":"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","names":["FunctionExt","ObjectExt","Model","CellView","NodeView","EdgeView","Knob","MiniMap","Snapline","Scroller","Selection","Clipboard","Transform","HTML","Edge","StandardEdge","Base","Options","Renderer","GraphView","DefsManager","GridManager","CoordManager","SnaplineManager","ScrollerManager","ClipboardManager","HighlightManager","TransformManager","SelectionManager","BackgroundManager","HistoryManager","MiniMapManager","Keyboard","MouseWheel","PrintManager","FormatManager","KnobManager","PanningManager","SizeManager","Decorator","hook","nullable","hookName","target","methodName","descriptor","raw","value","name","args","options","getNativeValue","bind","ret","call","graph","after","Hook","createModel","model","createView","createRenderer","createDefsManager","createGridManager","createCoordManager","createKnobManager","createTransform","node","widgetOptions","getTransformOptions","resizable","rotatable","Object","clearAll","removeInstances","createKnob","parseOptionGroup","knob","localOptions","prop","widgets","meta","Array","isArray","forEach","index","enabled","push","resizing","rotating","transforming","minWidth","maxWidth","minHeight","maxHeight","orthogonalResizing","orthogonal","restrictedResizing","restrict","restricted","autoScrollOnResizing","autoScroll","preserveAspectRatio","allowReverse","rotateGrid","grid","createTransformManager","createHighlightManager","createBackgroundManager","createClipboard","createClipboardManager","createSnapline","snapline","createSnaplineManager","createSelection","selecting","createSelectionManager","allowRubberband","e","createHistoryManager","history","createScroller","scroller","createScrollerManager","allowPanning","createMiniMap","_a","minimap","createMiniMapManager","createKeyboard","keyboard","createMouseWheel","mousewheel","createPrintManager","createFormatManager","createPanningManager","createSizeManager","allowConnectToBlank","edge","connecting","allowBlank","dangling","edgeView","findViewByCell","sourceCell","getSourceCell","targetCell","getTargetCell","sourceView","targetView","sourcePort","getSourcePortId","targetPort","getTargetPortId","sourceMagnet","targetMagnet","validateEdge","type","initialTerminal","sourceId","getSourceCellId","targetId","getTargetCellId","validate","previous","validateMagnet","cellView","magnet","getAttribute","view","cell","getDefaultEdge","create","createEdge","validateConnection","terminalType","candidateTerminal","allowLoop","allowNode","allowEdge","allowPort","allowMulti","multi","terminalView","terminalMagnet","valid","doValidate","port","isEdgeView","isNodeView","source","getSource","getTarget","terminalCell","getCellById","connectedEdges","getConnectedEdges","outgoing","incoming","length","exist","some","link","s","t","getRestrictArea","translating","area","transform","getGraphArea","inflate","onViewUpdated","flag","FLAG_INSERT","mounting","renderer","requestConnectedEdgesUpdate","onViewPostponed","forcePostponedViewUpdate","getCellView","createCellView","ctor","def","registry","get","onNotFound","isNode","isEdge","getHTMLComponent","getHTML","componentRegistry","isPlainObject","render","shouldUpdateHTMLComponent","html","shouldUpdate","shouldComponentUpdate","onEdgeLabelRendered","onPortRendered","onToolItemCreated","__decorate"],"sourceRoot":"","sources":["../../src/graph/hook.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}