{"ast":null,"code":"import { NumberExt } from '../../util';\n/**\n * Routes the edge always to/from a certain side\n */\n\nexport const oneSide = function (vertices, options, edgeView) {\n  const side = options.side || 'bottom';\n  const padding = NumberExt.normalizeSides(options.padding || 40);\n  const sourceBBox = edgeView.sourceBBox;\n  const targetBBox = edgeView.targetBBox;\n  const sourcePoint = sourceBBox.getCenter();\n  const targetPoint = targetBBox.getCenter();\n  let coord;\n  let dim;\n  let factor;\n\n  switch (side) {\n    case 'top':\n      factor = -1;\n      coord = 'y';\n      dim = 'height';\n      break;\n\n    case 'left':\n      factor = -1;\n      coord = 'x';\n      dim = 'width';\n      break;\n\n    case 'right':\n      factor = 1;\n      coord = 'x';\n      dim = 'width';\n      break;\n\n    case 'bottom':\n    default:\n      factor = 1;\n      coord = 'y';\n      dim = 'height';\n      break;\n  } // Move the points from the center of the element to outside of it.\n\n\n  sourcePoint[coord] += factor * (sourceBBox[dim] / 2 + padding[side]);\n  targetPoint[coord] += factor * (targetBBox[dim] / 2 + padding[side]); // Make edge orthogonal (at least the first and last vertex).\n\n  if (factor * (sourcePoint[coord] - targetPoint[coord]) > 0) {\n    targetPoint[coord] = sourcePoint[coord];\n  } else {\n    sourcePoint[coord] = targetPoint[coord];\n  }\n\n  return [sourcePoint.toJSON(), ...vertices, targetPoint.toJSON()];\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AAQA;;;;AAGA,OAAO,MAAMC,OAAO,GAA4C,UAC9DC,QAD8D,EAE9DC,OAF8D,EAG9DC,QAH8D,EAGtD;EAER,MAAMC,IAAI,GAAGF,OAAO,CAACE,IAAR,IAAgB,QAA7B;EACA,MAAMC,OAAO,GAAGN,SAAS,CAACO,cAAV,CAAyBJ,OAAO,CAACG,OAAR,IAAmB,EAA5C,CAAhB;EACA,MAAME,UAAU,GAAGJ,QAAQ,CAACI,UAA5B;EACA,MAAMC,UAAU,GAAGL,QAAQ,CAACK,UAA5B;EACA,MAAMC,WAAW,GAAGF,UAAU,CAACG,SAAX,EAApB;EACA,MAAMC,WAAW,GAAGH,UAAU,CAACE,SAAX,EAApB;EAEA,IAAIE,KAAJ;EACA,IAAIC,GAAJ;EACA,IAAIC,MAAJ;;EAEA,QAAQV,IAAR;IACE,KAAK,KAAL;MACEU,MAAM,GAAG,CAAC,CAAV;MACAF,KAAK,GAAG,GAAR;MACAC,GAAG,GAAG,QAAN;MACA;;IACF,KAAK,MAAL;MACEC,MAAM,GAAG,CAAC,CAAV;MACAF,KAAK,GAAG,GAAR;MACAC,GAAG,GAAG,OAAN;MACA;;IACF,KAAK,OAAL;MACEC,MAAM,GAAG,CAAT;MACAF,KAAK,GAAG,GAAR;MACAC,GAAG,GAAG,OAAN;MACA;;IACF,KAAK,QAAL;IACA;MACEC,MAAM,GAAG,CAAT;MACAF,KAAK,GAAG,GAAR;MACAC,GAAG,GAAG,QAAN;MACA;EArBJ,CAbQ,CAqCR;;;EACAJ,WAAW,CAACG,KAAD,CAAX,IAAsBE,MAAM,IAAIP,UAAU,CAACM,GAAD,CAAV,GAAkB,CAAlB,GAAsBR,OAAO,CAACD,IAAD,CAAjC,CAA5B;EACAO,WAAW,CAACC,KAAD,CAAX,IAAsBE,MAAM,IAAIN,UAAU,CAACK,GAAD,CAAV,GAAkB,CAAlB,GAAsBR,OAAO,CAACD,IAAD,CAAjC,CAA5B,CAvCQ,CAyCR;;EACA,IAAIU,MAAM,IAAIL,WAAW,CAACG,KAAD,CAAX,GAAqBD,WAAW,CAACC,KAAD,CAApC,CAAN,GAAqD,CAAzD,EAA4D;IAC1DD,WAAW,CAACC,KAAD,CAAX,GAAqBH,WAAW,CAACG,KAAD,CAAhC;EACD,CAFD,MAEO;IACLH,WAAW,CAACG,KAAD,CAAX,GAAqBD,WAAW,CAACC,KAAD,CAAhC;EACD;;EAED,OAAO,CAACH,WAAW,CAACM,MAAZ,EAAD,EAAuB,GAAGd,QAA1B,EAAoCU,WAAW,CAACI,MAAZ,EAApC,CAAP;AACD,CApDM","names":["NumberExt","oneSide","vertices","options","edgeView","side","padding","normalizeSides","sourceBBox","targetBBox","sourcePoint","getCenter","targetPoint","coord","dim","factor","toJSON"],"sourceRoot":"","sources":["../../../src/registry/router/oneside.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}