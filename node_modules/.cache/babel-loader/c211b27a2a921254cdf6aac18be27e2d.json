{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { Line } from '../line';\nimport { LineTo } from './lineto';\nimport { Segment } from './segment';\nexport class Close extends Segment {\n  get end() {\n    if (!this.subpathStartSegment) {\n      throw new Error('Missing subpath start segment. (This segment needs a subpath ' + 'start segment (e.g. MoveTo), or segment has not yet been added' + ' to a path.)');\n    }\n\n    return this.subpathStartSegment.end;\n  }\n\n  get type() {\n    return 'Z';\n  }\n\n  get line() {\n    return new Line(this.start, this.end);\n  }\n\n  bbox() {\n    return this.line.bbox();\n  }\n\n  closestPoint(p) {\n    return this.line.closestPoint(p);\n  }\n\n  closestPointLength(p) {\n    return this.line.closestPointLength(p);\n  }\n\n  closestPointNormalizedLength(p) {\n    return this.line.closestPointNormalizedLength(p);\n  }\n\n  closestPointTangent(p) {\n    return this.line.closestPointTangent(p);\n  }\n\n  length() {\n    return this.line.length();\n  }\n\n  divideAt(ratio) {\n    const divided = this.line.divideAt(ratio);\n    return [// do not actually cut into the segment, first divided part can stay as Z\n    divided[1].isDifferentiable() ? new LineTo(divided[0]) : this.clone(), new LineTo(divided[1])];\n  }\n\n  divideAtLength(length) {\n    const divided = this.line.divideAtLength(length);\n    return [divided[1].isDifferentiable() ? new LineTo(divided[0]) : this.clone(), new LineTo(divided[1])];\n  }\n\n  getSubdivisions() {\n    return [];\n  }\n\n  pointAt(ratio) {\n    return this.line.pointAt(ratio);\n  }\n\n  pointAtLength(length) {\n    return this.line.pointAtLength(length);\n  }\n\n  tangentAt(ratio) {\n    return this.line.tangentAt(ratio);\n  }\n\n  tangentAtLength(length) {\n    return this.line.tangentAtLength(length);\n  }\n\n  isDifferentiable() {\n    if (!this.previousSegment || !this.subpathStartSegment) {\n      return false;\n    }\n\n    return !this.start.equals(this.end);\n  }\n\n  scale() {\n    return this;\n  }\n\n  rotate() {\n    return this;\n  }\n\n  translate() {\n    return this;\n  }\n\n  equals(s) {\n    return this.type === s.type && this.start.equals(s.start) && this.end.equals(s.end);\n  }\n\n  clone() {\n    return new Close();\n  }\n\n  toJSON() {\n    return {\n      type: this.type,\n      start: this.start.toJSON(),\n      end: this.end.toJSON()\n    };\n  }\n\n  serialize() {\n    return this.type;\n  }\n\n}\n\n(function (Close) {\n  function create() {\n    return new Close();\n  }\n\n  Close.create = create;\n})(Close || (Close = {}));","map":{"version":3,"mappings":"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","names":["Line","LineTo","Segment","Close","end","subpathStartSegment","Error","type","line","start","bbox","closestPoint","p","closestPointLength","closestPointNormalizedLength","closestPointTangent","length","divideAt","ratio","divided","isDifferentiable","clone","divideAtLength","getSubdivisions","pointAt","pointAtLength","tangentAt","tangentAtLength","previousSegment","equals","scale","rotate","translate","s","toJSON","serialize","create"],"sourceRoot":"","sources":["../../../src/geometry/path/close.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}