{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _class2, _descriptor, _temp;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport { inject, injectable } from 'inversify';\nimport { IDENTIFIER } from '../../identifier';\nimport { FrameGraphHandle } from './FrameGraphHandle';\nimport { FrameGraphPass } from './FrameGraphPass';\nimport { PassNode } from './PassNode';\nimport { ResourceEntry } from './ResourceEntry';\nimport { ResourceNode } from './ResourceNode';\n/**\n * ported from FrameGraph implemented by SakuraRender\n * @see https://zhuanlan.zhihu.com/p/98572442\n * @see https://github.com/SaeruHikari/Sakura/blob/RenderGraph/SakuraCore/Source/Framework/GraphicTypes/FrameGraph/SakuraFrameGraph.cpp\n */\n\nexport var FrameGraphSystem = (_dec = injectable(), _dec2 = inject(IDENTIFIER.RenderEngine), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function () {\n  function FrameGraphSystem() {\n    _classCallCheck(this, FrameGraphSystem);\n\n    this.passNodes = [];\n    this.resourceNodes = [];\n    this.frameGraphPasses = [];\n\n    _initializerDefineProperty(this, \"engine\", _descriptor, this);\n  }\n\n  _createClass(FrameGraphSystem, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(views) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // this.engine.beginFrame();\n                this.compile();\n                _context.next = 3;\n                return this.executePassNodes(views);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function execute(_x) {\n        return _execute.apply(this, arguments);\n      }\n\n      return execute;\n    }()\n  }, {\n    key: \"tearDown\",\n    value: function tearDown() {\n      this.frameGraphPasses.forEach(function (pass) {\n        if (pass.tearDown) {\n          pass.tearDown();\n        }\n      });\n      this.reset();\n    }\n  }, {\n    key: \"addPass\",\n    value: function addPass(name, setup, execute, tearDown) {\n      var frameGraphPass = new FrameGraphPass();\n      frameGraphPass.execute = execute;\n\n      if (tearDown) {\n        frameGraphPass.tearDown = tearDown;\n      }\n\n      frameGraphPass.name = name;\n      var passNode = new PassNode();\n      passNode.name = name;\n      this.passNodes.push(passNode);\n      this.frameGraphPasses.push(frameGraphPass);\n      setup(this, passNode, frameGraphPass);\n      return frameGraphPass;\n    }\n  }, {\n    key: \"getPass\",\n    value: function getPass(name) {\n      return this.frameGraphPasses.find(function (p) {\n        return p.name === name;\n      });\n    }\n  }, {\n    key: \"compile\",\n    value: function compile() {\n      var _this = this;\n\n      var _iterator = _createForOfIteratorHelper(this.passNodes),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _pass = _step.value;\n          _pass.refCount = _pass.writes.length + (_pass.hasSideEffect ? 1 : 0);\n\n          _pass.reads.forEach(function (handle) {\n            _this.resourceNodes[handle.index].readerCount++;\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var stack = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.resourceNodes),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var node = _step2.value;\n\n          if (node.readerCount === 0) {\n            stack.push(node);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      while (stack.length) {\n        var pNode = stack.pop();\n        var writer = pNode && pNode.writer;\n\n        if (writer) {\n          if (--writer.refCount === 0) {\n            // this pass is culled\n            // assert(!writer->hasSideEffect);\n            var _iterator3 = _createForOfIteratorHelper(writer.reads),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var resource = _step3.value;\n                var r = this.resourceNodes[resource.index];\n\n                if (--r.readerCount === 0) {\n                  stack.push(r);\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n        }\n      } // update the final reference counts\n\n\n      this.resourceNodes.forEach(function (node) {\n        node.resource.refs += node.readerCount;\n      });\n\n      var _iterator4 = _createForOfIteratorHelper(this.passNodes),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _pass2 = _step4.value;\n\n          if (!_pass2.refCount) {\n            continue;\n          }\n\n          var _iterator6 = _createForOfIteratorHelper(_pass2.reads),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var _resource2 = _step6.value;\n              var pResource = this.resourceNodes[_resource2.index].resource;\n              pResource.first = pResource.first ? pResource.first : _pass2;\n              pResource.last = _pass2;\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          var _iterator7 = _createForOfIteratorHelper(_pass2.writes),\n              _step7;\n\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var _resource3 = _step7.value;\n              var _pResource = this.resourceNodes[_resource3.index].resource;\n              _pResource.first = _pResource.first ? _pResource.first : _pass2;\n              _pResource.last = _pass2;\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      for (var priority = 0; priority < 2; priority++) {\n        var _iterator5 = _createForOfIteratorHelper(this.resourceNodes),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var resoureNode = _step5.value;\n            var _resource = resoureNode.resource;\n\n            if (_resource.priority === priority && _resource.refs) {\n              var pFirst = _resource.first;\n              var pLast = _resource.last;\n\n              if (pFirst && pLast) {\n                pFirst.devirtualize.push(_resource);\n                pLast.destroy.push(_resource);\n              }\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    }\n  }, {\n    key: \"executePassNodes\",\n    value: function () {\n      var _executePassNodes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(views) {\n        var _iterator8, _step8, _step8$value, index, node, _iterator9, _step9, resource, _iterator10, _step10, _resource4, _iterator11, _step11, _resource5, _iterator12, _step12, _resource6;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _iterator8 = _createForOfIteratorHelper(this.passNodes.entries());\n                _context2.prev = 1;\n\n                _iterator8.s();\n\n              case 3:\n                if ((_step8 = _iterator8.n()).done) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                _step8$value = _slicedToArray(_step8.value, 2), index = _step8$value[0], node = _step8$value[1];\n\n                if (!node.refCount) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                _iterator9 = _createForOfIteratorHelper(node.devirtualize);\n\n                try {\n                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                    resource = _step9.value;\n                    resource.preExecuteDevirtualize(this.engine);\n                  }\n                } catch (err) {\n                  _iterator9.e(err);\n                } finally {\n                  _iterator9.f();\n                }\n\n                _iterator10 = _createForOfIteratorHelper(node.destroy);\n\n                try {\n                  for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                    _resource4 = _step10.value;\n\n                    _resource4.preExecuteDestroy(this.engine);\n                  }\n                } catch (err) {\n                  _iterator10.e(err);\n                } finally {\n                  _iterator10.f();\n                }\n\n                _context2.next = 12;\n                return this.frameGraphPasses[index].execute(this, this.frameGraphPasses[index], views);\n\n              case 12:\n                _iterator11 = _createForOfIteratorHelper(node.devirtualize);\n\n                try {\n                  for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                    _resource5 = _step11.value;\n\n                    _resource5.postExecuteDevirtualize(this.engine);\n                  }\n                } catch (err) {\n                  _iterator11.e(err);\n                } finally {\n                  _iterator11.f();\n                }\n\n                _iterator12 = _createForOfIteratorHelper(node.destroy);\n\n                try {\n                  for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                    _resource6 = _step12.value;\n\n                    _resource6.postExecuteDestroy(this.engine);\n                  }\n                } catch (err) {\n                  _iterator12.e(err);\n                } finally {\n                  _iterator12.f();\n                }\n\n              case 16:\n                _context2.next = 3;\n                break;\n\n              case 18:\n                _context2.next = 23;\n                break;\n\n              case 20:\n                _context2.prev = 20;\n                _context2.t0 = _context2[\"catch\"](1);\n\n                _iterator8.e(_context2.t0);\n\n              case 23:\n                _context2.prev = 23;\n\n                _iterator8.f();\n\n                return _context2.finish(23);\n\n              case 26:\n                this.reset();\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 20, 23, 26]]);\n      }));\n\n      function executePassNodes(_x2) {\n        return _executePassNodes.apply(this, arguments);\n      }\n\n      return executePassNodes;\n    }()\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.passNodes = [];\n      this.resourceNodes = [];\n      this.frameGraphPasses = [];\n    }\n  }, {\n    key: \"getResourceNode\",\n    value: function getResourceNode(r) {\n      return this.resourceNodes[r.index];\n    }\n  }, {\n    key: \"createResourceNode\",\n    value: function createResourceNode(resourceEntry) {\n      var resourceNode = new ResourceNode();\n      resourceNode.resource = resourceEntry;\n      resourceNode.version = resourceEntry.version;\n      this.resourceNodes.push(resourceNode);\n      var fgh = new FrameGraphHandle();\n      fgh.index = this.resourceNodes.length - 1;\n      return fgh;\n    }\n  }, {\n    key: \"createTexture\",\n    value: function createTexture(passNode, name, descriptor) {\n      var resource = new ResourceEntry();\n      resource.name = name;\n      resource.descriptor = descriptor;\n      return this.createResourceNode(resource);\n    }\n  }, {\n    key: \"createRenderTarget\",\n    value: function createRenderTarget(passNode, name, descriptor) {\n      var resource = new ResourceEntry();\n      resource.name = name;\n      resource.descriptor = descriptor;\n      return this.createResourceNode(resource);\n    }\n  }, {\n    key: \"present\",\n    value: function present(input) {\n      this.addPass('Present', function (fg, passNode) {\n        passNode.read(input);\n        passNode.hasSideEffect = true;\n      }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })));\n    }\n  }]);\n\n  return FrameGraphSystem;\n}(), _temp), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"engine\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);","map":{"version":3,"mappings":"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","names":["inject","injectable","IDENTIFIER","FrameGraphHandle","FrameGraphPass","PassNode","ResourceEntry","ResourceNode","FrameGraphSystem","RenderEngine","_classCallCheck","passNodes","resourceNodes","frameGraphPasses","_initializerDefineProperty","_createClass","key","value","views","compile","_context","executePassNodes","forEach","pass","tearDown","reset","name","setup","execute","frameGraphPass","passNode","push","find","p","refCount","writes","length","hasSideEffect","reads","handle","_this","index","readerCount","_iterator","stack","node","_iterator2","pNode","pop","writer","resource","r","_iterator3","refs","pResource","first","last","_iterator6","_iterator7","_iterator4","priority","resoureNode","pFirst","pLast","devirtualize","destroy","_iterator5","_iterator8","entries","_context2","_step8$value","_iterator9","preExecuteDevirtualize","engine","_iterator10","preExecuteDestroy","_iterator11","postExecuteDevirtualize","_iterator12","postExecuteDestroy","resourceEntry","resourceNode","version","fgh","descriptor","createResourceNode","input","addPass","fg","read","configurable","enumerable","writable","initializer"],"sources":["../../../src/components/framegraph/System.ts"],"sourcesContent":["import { inject, injectable } from 'inversify';\nimport { ISystem, IView } from '../..';\nimport { IDENTIFIER } from '../../identifier';\nimport { IRendererService } from '../renderer/IRendererService';\nimport { FrameGraphHandle, TextureDescriptor } from './FrameGraphHandle';\nimport { FrameGraphPass } from './FrameGraphPass';\nimport { PassNode } from './PassNode';\nimport { ResourceEntry } from './ResourceEntry';\nimport { ResourceNode } from './ResourceNode';\n\n/**\n * ported from FrameGraph implemented by SakuraRender\n * @see https://zhuanlan.zhihu.com/p/98572442\n * @see https://github.com/SaeruHikari/Sakura/blob/RenderGraph/SakuraCore/Source/Framework/GraphicTypes/FrameGraph/SakuraFrameGraph.cpp\n */\n@injectable()\nexport class FrameGraphSystem implements ISystem {\n  public passNodes: PassNode[] = [];\n\n  public resourceNodes: ResourceNode[] = [];\n\n  public frameGraphPasses: Array<FrameGraphPass<any>> = [];\n\n  @inject(IDENTIFIER.RenderEngine)\n  private readonly engine: IRendererService;\n\n  public async execute(views: IView[]) {\n    // this.engine.beginFrame();\n    this.compile();\n    await this.executePassNodes(views);\n    // this.engine.endFrame();\n  }\n\n  public tearDown() {\n    this.frameGraphPasses.forEach((pass) => {\n      if (pass.tearDown) {\n        pass.tearDown();\n      }\n    });\n    this.reset();\n  }\n\n  public addPass<PassData>(\n    name: string,\n    setup: (\n      fg: FrameGraphSystem,\n      passNode: PassNode,\n      pass: FrameGraphPass<PassData>,\n    ) => void,\n    execute: (\n      fg: FrameGraphSystem,\n      pass: FrameGraphPass<PassData>,\n      views: IView[],\n    ) => Promise<void>,\n    tearDown?: () => void,\n  ) {\n    const frameGraphPass = new FrameGraphPass<PassData>();\n    frameGraphPass.execute = execute;\n    if (tearDown) {\n      frameGraphPass.tearDown = tearDown;\n    }\n    frameGraphPass.name = name;\n\n    const passNode = new PassNode();\n    passNode.name = name;\n    this.passNodes.push(passNode);\n\n    this.frameGraphPasses.push(frameGraphPass);\n\n    setup(this, passNode, frameGraphPass);\n\n    return frameGraphPass;\n  }\n\n  public getPass<T>(name: string): FrameGraphPass<T> | undefined {\n    return this.frameGraphPasses.find((p) => p.name === name);\n  }\n\n  public compile() {\n    for (const pass of this.passNodes) {\n      pass.refCount = pass.writes.length + (pass.hasSideEffect ? 1 : 0);\n\n      pass.reads.forEach((handle) => {\n        this.resourceNodes[handle.index].readerCount++;\n      });\n    }\n\n    const stack: ResourceNode[] = [];\n    for (const node of this.resourceNodes) {\n      if (node.readerCount === 0) {\n        stack.push(node);\n      }\n    }\n    while (stack.length) {\n      const pNode = stack.pop();\n      const writer = pNode && pNode.writer;\n      if (writer) {\n        if (--writer.refCount === 0) {\n          // this pass is culled\n          // assert(!writer->hasSideEffect);\n          for (const resource of writer.reads) {\n            const r = this.resourceNodes[resource.index];\n            if (--r.readerCount === 0) {\n              stack.push(r);\n            }\n          }\n        }\n      }\n    }\n\n    // update the final reference counts\n    this.resourceNodes.forEach((node) => {\n      node.resource.refs += node.readerCount;\n    });\n\n    for (const pass of this.passNodes) {\n      if (!pass.refCount) {\n        continue;\n      }\n      for (const resource of pass.reads) {\n        const pResource = this.resourceNodes[resource.index].resource;\n        pResource.first = pResource.first ? pResource.first : pass;\n        pResource.last = pass;\n      }\n      for (const resource of pass.writes) {\n        const pResource = this.resourceNodes[resource.index].resource;\n        pResource.first = pResource.first ? pResource.first : pass;\n        pResource.last = pass;\n      }\n    }\n\n    for (let priority = 0; priority < 2; priority++) {\n      for (const resoureNode of this.resourceNodes) {\n        const resource = resoureNode.resource;\n        if (resource.priority === priority && resource.refs) {\n          const pFirst = resource.first;\n          const pLast = resource.last;\n          if (pFirst && pLast) {\n            pFirst.devirtualize.push(resource);\n            pLast.destroy.push(resource);\n          }\n        }\n      }\n    }\n  }\n\n  public async executePassNodes(views: IView[]) {\n    for (const [index, node] of this.passNodes.entries()) {\n      if (node.refCount) {\n        for (const resource of node.devirtualize) {\n          resource.preExecuteDevirtualize(this.engine);\n        }\n\n        for (const resource of node.destroy) {\n          resource.preExecuteDestroy(this.engine);\n        }\n\n        await this.frameGraphPasses[index].execute(\n          this,\n          this.frameGraphPasses[index],\n          views,\n        );\n\n        for (const resource of node.devirtualize) {\n          resource.postExecuteDevirtualize(this.engine);\n        }\n\n        for (const resource of node.destroy) {\n          resource.postExecuteDestroy(this.engine);\n        }\n      }\n    }\n    this.reset();\n  }\n\n  public reset() {\n    this.passNodes = [];\n    this.resourceNodes = [];\n    this.frameGraphPasses = [];\n  }\n\n  public getResourceNode(r: FrameGraphHandle) {\n    return this.resourceNodes[r.index];\n  }\n\n  public createResourceNode(resourceEntry: ResourceEntry) {\n    const resourceNode = new ResourceNode();\n    resourceNode.resource = resourceEntry;\n    resourceNode.version = resourceEntry.version;\n\n    this.resourceNodes.push(resourceNode);\n\n    const fgh = new FrameGraphHandle();\n    fgh.index = this.resourceNodes.length - 1;\n\n    return fgh;\n  }\n\n  public createTexture(\n    passNode: PassNode,\n    name: string,\n    descriptor: TextureDescriptor,\n  ) {\n    const resource = new ResourceEntry();\n    resource.name = name;\n    resource.descriptor = descriptor;\n    return this.createResourceNode(resource);\n  }\n\n  public createRenderTarget(\n    passNode: PassNode,\n    name: string,\n    descriptor: TextureDescriptor,\n  ) {\n    const resource = new ResourceEntry();\n    resource.name = name;\n    resource.descriptor = descriptor;\n    return this.createResourceNode(resource);\n  }\n\n  public present(input: FrameGraphHandle) {\n    this.addPass<{}>(\n      'Present',\n      (fg, passNode) => {\n        passNode.read(input);\n        passNode.hasSideEffect = true;\n      },\n      async () => {\n        // 不需要执行\n      },\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}