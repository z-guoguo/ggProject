{"ast":null,"code":"import { isObject } from './is-object';\nimport { isTypedArray } from './is-typedarray';\n/**\n * 考虑结构体命名, eg:\n * a: { b: 1 }  ->  'a.b'\n * a: [ { b: 1 } ] -> 'a[0].b'\n */\n\nexport function extractUniforms(uniforms) {\n  var extractedUniforms = {};\n  Object.keys(uniforms).forEach(function (uniformName) {\n    extractUniformsRecursively(uniformName, uniforms[uniformName], extractedUniforms, '');\n  });\n  return extractedUniforms;\n}\n\nfunction extractUniformsRecursively(uniformName, uniformValue, uniforms, prefix) {\n  if (uniformValue === null || typeof uniformValue === 'number' || // u_A: 1\n  typeof uniformValue === 'boolean' || // u_A: false\n  Array.isArray(uniformValue) && typeof uniformValue[0] === 'number' || // u_A: [1, 2, 3]\n  isTypedArray(uniformValue) || // u_A: Float32Array\n  // @ts-ignore\n  uniformValue === '' || // @ts-ignore\n  uniformValue.resize !== undefined) {\n    uniforms[\"\".concat(prefix && prefix + '.').concat(uniformName)] = uniformValue;\n    return;\n  } // u_Struct.a.b.c\n\n\n  if (isObject(uniformValue)) {\n    Object.keys(uniformValue).forEach(function (childName) {\n      extractUniformsRecursively(childName, // @ts-ignore\n      uniformValue[childName], uniforms, \"\".concat(prefix && prefix + '.').concat(uniformName));\n    });\n  } // u_Struct[0].a\n\n\n  if (Array.isArray(uniformValue)) {\n    // @ts-ignore\n    uniformValue.forEach(function (child, idx) {\n      Object.keys(child).forEach(function (childName) {\n        extractUniformsRecursively(childName, // @ts-ignore\n        child[childName], uniforms, \"\".concat(prefix && prefix + '.').concat(uniformName, \"[\").concat(idx, \"]\"));\n      });\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,QAAzB,EAIL;EACA,IAAMC,iBAAiB,GAAG,EAA1B;EACAC,MAAM,CAACC,IAAPD,CAAYF,QAAZE,EAAsBE,OAAtBF,CAA8B,UAACG,WAAD,EAAiB;IAC7CC,0BAA0B,CACxBD,WADwB,EAExBL,QAAQ,CAACK,WAAD,CAFgB,EAGxBJ,iBAHwB,EAIxB,EAJwB,CAA1BK;EADF;EASA,OAAOL,iBAAP;AACD;;AAED,SAASK,0BAAT,CACED,WADF,EAEEE,YAFF,EAGEP,QAHF,EAMEQ,MANF,EAOE;EACA,IACED,YAAY,KAAK,IAAjBA,IACA,OAAOA,YAAP,KAAwB,QADxBA,IACoC;EACpC,OAAOA,YAAP,KAAwB,SAFxBA,IAEqC;EACpCE,KAAK,CAACC,OAAND,CAAcF,YAAdE,KAA+B,OAAOF,YAAY,CAAC,CAAD,CAAnB,KAA2B,QAH3DA,IAGwE;EACxET,YAAY,CAACS,YAAD,CAJZA,IAI8B;EAC9B;EACAA,YAAY,KAAK,EANjBA,IAOA;EACAA,YAAY,CAACI,MAAbJ,KAAwBK,SAT1B,EAUE;IACAZ,QAAQ,WAAIQ,MAAM,IAAIA,MAAM,GAAG,GAAvB,SAA6BH,WAA7B,EAARL,GAAsDO,YAAtDP;IACA;EAbF,EAgBA;;;EACA,IAAIH,QAAQ,CAACU,YAAD,CAAZ,EAA4B;IAC1BL,MAAM,CAACC,IAAPD,CAAYK,YAAZL,EAA0BE,OAA1BF,CAAkC,UAACW,SAAD,EAAe;MAC/CP,0BAA0B,CACxBO,SADwB,EAExB;MACAN,YAAY,CAACM,SAAD,CAHY,EAIxBb,QAJwB,YAKrBQ,MAAM,IAAIA,MAAM,GAAG,GALE,SAKIH,WALJ,EAA1BC;IADF;EAlBF,EA6BA;;;EACA,IAAIG,KAAK,CAACC,OAAND,CAAcF,YAAdE,CAAJ,EAAiC;IAC/B;IACAF,YAAY,CAACH,OAAbG,CAAqB,UAACO,KAAD,EAAQC,GAAR,EAAgB;MACnCb,MAAM,CAACC,IAAPD,CAAYY,KAAZZ,EAAmBE,OAAnBF,CAA2B,UAACW,SAAD,EAAe;QACxCP,0BAA0B,CACxBO,SADwB,EAExB;QACAC,KAAK,CAACD,SAAD,CAHmB,EAIxBb,QAJwB,YAKrBQ,MAAM,IAAIA,MAAM,GAAG,GALE,SAKIH,WALJ,cAKmBU,GALnB,OAA1BT;MADF;IADF;EAWD;AACF","names":["isObject","isTypedArray","extractUniforms","uniforms","extractedUniforms","Object","keys","forEach","uniformName","extractUniformsRecursively","uniformValue","prefix","Array","isArray","resize","undefined","childName","child","idx"],"sources":["../../src/utils/uniform.ts"],"sourcesContent":["import { IUniform } from '@antv/g-webgpu-core';\nimport { isObject } from './is-object';\nimport { isTypedArray } from './is-typedarray';\n\n/**\n * 考虑结构体命名, eg:\n * a: { b: 1 }  ->  'a.b'\n * a: [ { b: 1 } ] -> 'a[0].b'\n */\nexport function extractUniforms(uniforms: {\n  [key: string]: IUniform;\n}): {\n  [key: string]: IUniform;\n} {\n  const extractedUniforms = {};\n  Object.keys(uniforms).forEach((uniformName) => {\n    extractUniformsRecursively(\n      uniformName,\n      uniforms[uniformName],\n      extractedUniforms,\n      '',\n    );\n  });\n\n  return extractedUniforms;\n}\n\nfunction extractUniformsRecursively(\n  uniformName: string,\n  uniformValue: IUniform,\n  uniforms: {\n    [key: string]: IUniform;\n  },\n  prefix: string,\n) {\n  if (\n    uniformValue === null ||\n    typeof uniformValue === 'number' || // u_A: 1\n    typeof uniformValue === 'boolean' || // u_A: false\n    (Array.isArray(uniformValue) && typeof uniformValue[0] === 'number') || // u_A: [1, 2, 3]\n    isTypedArray(uniformValue) || // u_A: Float32Array\n    // @ts-ignore\n    uniformValue === '' ||\n    // @ts-ignore\n    uniformValue.resize !== undefined\n  ) {\n    uniforms[`${prefix && prefix + '.'}${uniformName}`] = uniformValue;\n    return;\n  }\n\n  // u_Struct.a.b.c\n  if (isObject(uniformValue)) {\n    Object.keys(uniformValue).forEach((childName) => {\n      extractUniformsRecursively(\n        childName,\n        // @ts-ignore\n        uniformValue[childName],\n        uniforms,\n        `${prefix && prefix + '.'}${uniformName}`,\n      );\n    });\n  }\n\n  // u_Struct[0].a\n  if (Array.isArray(uniformValue)) {\n    // @ts-ignore\n    uniformValue.forEach((child, idx) => {\n      Object.keys(child).forEach((childName) => {\n        extractUniformsRecursively(\n          childName,\n          // @ts-ignore\n          child[childName],\n          uniforms,\n          `${prefix && prefix + '.'}${uniformName}[${idx}]`,\n        );\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}