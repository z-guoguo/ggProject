{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar adjMatrix = function adjMatrix(graphData, directed) {\n  var nodes = graphData.nodes,\n      edges = graphData.edges;\n  var matrix = []; // map node with index in data.nodes\n\n  var nodeMap = {};\n\n  if (!nodes) {\n    throw new Error(\"invalid nodes data!\");\n  }\n\n  if (nodes) {\n    nodes.forEach(function (node, i) {\n      nodeMap[node.id] = i;\n      var row = [];\n      matrix.push(row);\n    });\n  }\n\n  if (edges) {\n    edges.forEach(function (edge) {\n      var source = edge.source,\n          target = edge.target;\n      var sIndex = nodeMap[source];\n      var tIndex = nodeMap[target];\n      if (!sIndex && sIndex !== 0 || !tIndex && tIndex !== 0) return;\n      matrix[sIndex][tIndex] = 1;\n\n      if (!directed) {\n        matrix[tIndex][sIndex] = 1;\n      }\n    });\n  }\n\n  return matrix;\n};\n\nexport default adjMatrix;","map":{"version":3,"names":["adjMatrix","graphData","directed","nodes","edges","matrix","nodeMap","Error","forEach","node","i","id","row","push","edge","source","target","sIndex","tIndex"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/algorithm/es/adjacent-matrix.js"],"sourcesContent":["var adjMatrix = function adjMatrix(graphData, directed) {\n  var nodes = graphData.nodes,\n      edges = graphData.edges;\n  var matrix = []; // map node with index in data.nodes\n\n  var nodeMap = {};\n\n  if (!nodes) {\n    throw new Error(\"invalid nodes data!\");\n  }\n\n  if (nodes) {\n    nodes.forEach(function (node, i) {\n      nodeMap[node.id] = i;\n      var row = [];\n      matrix.push(row);\n    });\n  }\n\n  if (edges) {\n    edges.forEach(function (edge) {\n      var source = edge.source,\n          target = edge.target;\n      var sIndex = nodeMap[source];\n      var tIndex = nodeMap[target];\n      if (!sIndex && sIndex !== 0 || !tIndex && tIndex !== 0) return;\n      matrix[sIndex][tIndex] = 1;\n\n      if (!directed) {\n        matrix[tIndex][sIndex] = 1;\n      }\n    });\n  }\n\n  return matrix;\n};\n\nexport default adjMatrix;"],"mappings":";;AAAA,IAAIA,SAAS,GAAG,SAASA,SAAT,CAAmBC,SAAnB,EAA8BC,QAA9B,EAAwC;EACtD,IAAIC,KAAK,GAAGF,SAAS,CAACE,KAAtB;EAAA,IACIC,KAAK,GAAGH,SAAS,CAACG,KADtB;EAEA,IAAIC,MAAM,GAAG,EAAb,CAHsD,CAGrC;;EAEjB,IAAIC,OAAO,GAAG,EAAd;;EAEA,IAAI,CAACH,KAAL,EAAY;IACV,MAAM,IAAII,KAAJ,CAAU,qBAAV,CAAN;EACD;;EAED,IAAIJ,KAAJ,EAAW;IACTA,KAAK,CAACK,OAAN,CAAc,UAAUC,IAAV,EAAgBC,CAAhB,EAAmB;MAC/BJ,OAAO,CAACG,IAAI,CAACE,EAAN,CAAP,GAAmBD,CAAnB;MACA,IAAIE,GAAG,GAAG,EAAV;MACAP,MAAM,CAACQ,IAAP,CAAYD,GAAZ;IACD,CAJD;EAKD;;EAED,IAAIR,KAAJ,EAAW;IACTA,KAAK,CAACI,OAAN,CAAc,UAAUM,IAAV,EAAgB;MAC5B,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;MAAA,IACIC,MAAM,GAAGF,IAAI,CAACE,MADlB;MAEA,IAAIC,MAAM,GAAGX,OAAO,CAACS,MAAD,CAApB;MACA,IAAIG,MAAM,GAAGZ,OAAO,CAACU,MAAD,CAApB;MACA,IAAI,CAACC,MAAD,IAAWA,MAAM,KAAK,CAAtB,IAA2B,CAACC,MAAD,IAAWA,MAAM,KAAK,CAArD,EAAwD;MACxDb,MAAM,CAACY,MAAD,CAAN,CAAeC,MAAf,IAAyB,CAAzB;;MAEA,IAAI,CAAChB,QAAL,EAAe;QACbG,MAAM,CAACa,MAAD,CAAN,CAAeD,MAAf,IAAyB,CAAzB;MACD;IACF,CAXD;EAYD;;EAED,OAAOZ,MAAP;AACD,CAnCD;;AAqCA,eAAeL,SAAf"},"metadata":{},"sourceType":"module"}