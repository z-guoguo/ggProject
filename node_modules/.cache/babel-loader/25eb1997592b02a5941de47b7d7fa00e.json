{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nconst rclass = /[\\t\\r\\n\\f]/g;\nconst rnotwhite = /\\S+/g;\n\nconst fillSpaces = str => ` ${str} `;\n\nexport function getClass(elem) {\n  return elem && elem.getAttribute && elem.getAttribute('class') || '';\n}\nexport function hasClass(elem, selector) {\n  if (elem == null || selector == null) {\n    return false;\n  }\n\n  const classNames = fillSpaces(getClass(elem));\n  const className = fillSpaces(selector);\n  return elem.nodeType === 1 ? classNames.replace(rclass, ' ').includes(className) : false;\n}\nexport function addClass(elem, selector) {\n  if (elem == null || selector == null) {\n    return;\n  }\n\n  if (typeof selector === 'function') {\n    return addClass(elem, selector(getClass(elem)));\n  }\n\n  if (typeof selector === 'string' && elem.nodeType === 1) {\n    const classes = selector.match(rnotwhite) || [];\n    const oldValue = fillSpaces(getClass(elem)).replace(rclass, ' ');\n    let newValue = classes.reduce((memo, cls) => {\n      if (memo.indexOf(fillSpaces(cls)) < 0) {\n        return `${memo}${cls} `;\n      }\n\n      return memo;\n    }, oldValue);\n    newValue = newValue.trim();\n\n    if (oldValue !== newValue) {\n      elem.setAttribute('class', newValue);\n    }\n  }\n}\nexport function removeClass(elem, selector) {\n  if (elem == null) {\n    return;\n  }\n\n  if (typeof selector === 'function') {\n    return removeClass(elem, selector(getClass(elem)));\n  }\n\n  if ((!selector || typeof selector === 'string') && elem.nodeType === 1) {\n    const classes = (selector || '').match(rnotwhite) || [];\n    const oldValue = fillSpaces(getClass(elem)).replace(rclass, ' ');\n    let newValue = classes.reduce((memo, cls) => {\n      const className = fillSpaces(cls);\n\n      if (memo.indexOf(className) > -1) {\n        return memo.replace(className, ' ');\n      }\n\n      return memo;\n    }, oldValue);\n    newValue = selector ? newValue.trim() : '';\n\n    if (oldValue !== newValue) {\n      elem.setAttribute('class', newValue);\n    }\n  }\n}\nexport function toggleClass(elem, selector, stateVal) {\n  if (elem == null || selector == null) {\n    return;\n  }\n\n  if (stateVal != null && typeof selector === 'string') {\n    stateVal ? addClass(elem, selector) : removeClass(elem, selector);\n    return;\n  }\n\n  if (typeof selector === 'function') {\n    return toggleClass(elem, selector(getClass(elem), stateVal), stateVal);\n  }\n\n  if (typeof selector === 'string') {\n    const metches = selector.match(rnotwhite) || [];\n    metches.forEach(cls => {\n      hasClass(elem, cls) ? removeClass(elem, cls) : addClass(elem, cls);\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["rclass","rnotwhite","fillSpaces","str","getClass","elem","getAttribute","hasClass","selector","classNames","className","nodeType","replace","includes","addClass","classes","match","oldValue","newValue","reduce","memo","cls","indexOf","trim","setAttribute","removeClass","toggleClass","stateVal","metches","forEach"],"sourceRoot":"","sources":["../../../src/util/dom/class.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}