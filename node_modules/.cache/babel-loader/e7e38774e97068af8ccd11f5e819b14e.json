{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Util } from '../../global';\nimport { FunctionExt } from '../../util';\nimport { Rectangle } from '../../geometry';\nimport { View } from '../../view/view';\nimport { Graph } from '../../graph/graph';\nexport class Dnd extends View {\n  constructor(options) {\n    super();\n    this.options = Object.assign(Object.assign({}, Dnd.defaults), options);\n    this.container = document.createElement('div');\n    this.$container = this.$(this.container).addClass(this.prefixClassName('widget-dnd'));\n    this.draggingGraph = new Graph(Object.assign(Object.assign({}, this.options.delegateGraphOptions), {\n      container: document.createElement('div'),\n      width: 1,\n      height: 1\n    }));\n    this.$container.append(this.draggingGraph.container);\n  }\n\n  get targetScroller() {\n    const target = this.options.target;\n    return Graph.isGraph(target) ? target.scroller.widget : target;\n  }\n\n  get targetGraph() {\n    const target = this.options.target;\n    return Graph.isGraph(target) ? target : target.graph;\n  }\n\n  get targetModel() {\n    return this.targetGraph.model;\n  }\n\n  get snapline() {\n    return this.targetGraph.snapline.widget;\n  }\n\n  start(node, evt) {\n    const e = evt;\n    e.preventDefault();\n    this.targetModel.startBatch('dnd');\n    this.$container.addClass('dragging').appendTo(this.options.containerParent || document.body);\n    this.sourceNode = node;\n    this.prepareDragging(node, e.clientX, e.clientY);\n    const local = this.updateNodePosition(e.clientX, e.clientY);\n\n    if (this.isSnaplineEnabled()) {\n      this.snapline.captureCursorOffset({\n        e,\n        node,\n        cell: node,\n        view: this.draggingView,\n        x: local.x,\n        y: local.y\n      });\n      this.draggingNode.on('change:position', this.snap, this);\n    }\n\n    this.delegateDocumentEvents(Dnd.documentEvents, e.data);\n  }\n\n  isSnaplineEnabled() {\n    return this.snapline && !this.snapline.disabled;\n  }\n\n  prepareDragging(sourceNode, clientX, clientY) {\n    const draggingGraph = this.draggingGraph;\n    const draggingModel = draggingGraph.model;\n    const draggingNode = this.options.getDragNode(sourceNode, {\n      sourceNode,\n      draggingGraph,\n      targetGraph: this.targetGraph\n    });\n    draggingNode.position(0, 0);\n    let padding = 5;\n\n    if (this.isSnaplineEnabled()) {\n      padding += this.snapline.options.tolerance || 0;\n    }\n\n    if (this.isSnaplineEnabled() || this.options.scaled) {\n      const scale = this.targetGraph.transform.getScale();\n      draggingGraph.scale(scale.sx, scale.sy);\n      padding *= Math.max(scale.sx, scale.sy);\n    } else {\n      draggingGraph.scale(1, 1);\n    }\n\n    this.clearDragging();\n\n    if (this.options.animation) {\n      this.$container.stop(true, true);\n    }\n\n    draggingModel.resetCells([draggingNode]);\n    const delegateView = draggingGraph.findViewByCell(draggingNode);\n    delegateView.undelegateEvents();\n    delegateView.cell.off('changed');\n    draggingGraph.fitToContent({\n      padding,\n      allowNewOrigin: 'any'\n    });\n    const bbox = delegateView.getBBox();\n    this.geometryBBox = delegateView.getBBox({\n      useCellGeometry: true\n    });\n    this.delta = this.geometryBBox.getTopLeft().diff(bbox.getTopLeft());\n    this.draggingNode = draggingNode;\n    this.draggingView = delegateView;\n    this.draggingBBox = draggingNode.getBBox();\n    this.padding = padding;\n    this.originOffset = this.updateGraphPosition(clientX, clientY);\n  }\n\n  updateGraphPosition(clientX, clientY) {\n    const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n    const delta = this.delta;\n    const nodeBBox = this.geometryBBox;\n    const padding = this.padding || 5;\n    const offset = {\n      left: clientX - delta.x - nodeBBox.width / 2 - padding,\n      top: clientY - delta.y - nodeBBox.height / 2 - padding + scrollTop\n    };\n\n    if (this.draggingGraph) {\n      this.$container.offset(offset);\n    }\n\n    return offset;\n  }\n\n  updateNodePosition(x, y) {\n    const local = this.targetGraph.clientToLocal(x, y);\n    const bbox = this.draggingBBox;\n    local.x -= bbox.width / 2;\n    local.y -= bbox.height / 2;\n    this.draggingNode.position(local.x, local.y);\n    return local;\n  }\n\n  snap({\n    cell,\n    current,\n    options\n  }) {\n    const node = cell;\n\n    if (options.snapped) {\n      const bbox = this.draggingBBox;\n      node.position(bbox.x + options.tx, bbox.y + options.ty, {\n        silent: true\n      });\n      this.draggingView.translate();\n      node.position(current.x, current.y, {\n        silent: true\n      });\n      this.snapOffset = {\n        x: options.tx,\n        y: options.ty\n      };\n    } else {\n      this.snapOffset = null;\n    }\n  }\n\n  onDragging(evt) {\n    const draggingView = this.draggingView;\n\n    if (draggingView) {\n      evt.preventDefault();\n      const e = this.normalizeEvent(evt);\n      const clientX = e.clientX;\n      const clientY = e.clientY;\n      this.updateGraphPosition(clientX, clientY);\n      const local = this.updateNodePosition(clientX, clientY);\n      const embeddingMode = this.targetGraph.options.embedding.enabled;\n      const isValidArea = (embeddingMode || this.isSnaplineEnabled()) && this.isInsideValidArea({\n        x: clientX,\n        y: clientY\n      });\n\n      if (embeddingMode) {\n        draggingView.setEventData(e, {\n          graph: this.targetGraph,\n          candidateEmbedView: this.candidateEmbedView\n        });\n        const data = draggingView.getEventData(e);\n\n        if (isValidArea) {\n          draggingView.processEmbedding(e, data);\n        } else {\n          draggingView.clearEmbedding(data);\n        }\n\n        this.candidateEmbedView = data.candidateEmbedView;\n      } // update snapline\n\n\n      if (this.isSnaplineEnabled()) {\n        if (isValidArea) {\n          this.snapline.snapOnMoving({\n            e,\n            view: draggingView,\n            x: local.x,\n            y: local.y\n          });\n        } else {\n          this.snapline.hide();\n        }\n      }\n    }\n  }\n\n  onDragEnd(evt) {\n    const draggingNode = this.draggingNode;\n\n    if (draggingNode) {\n      const e = this.normalizeEvent(evt);\n      const draggingView = this.draggingView;\n      const draggingBBox = this.draggingBBox;\n      const snapOffset = this.snapOffset;\n      let x = draggingBBox.x;\n      let y = draggingBBox.y;\n\n      if (snapOffset) {\n        x += snapOffset.x;\n        y += snapOffset.y;\n      }\n\n      draggingNode.position(x, y, {\n        silent: true\n      });\n      const ret = this.drop(draggingNode, {\n        x: e.clientX,\n        y: e.clientY\n      });\n\n      const callback = node => {\n        if (node) {\n          this.onDropped(draggingNode);\n\n          if (this.targetGraph.options.embedding.enabled && draggingView) {\n            draggingView.setEventData(e, {\n              cell: node,\n              graph: this.targetGraph,\n              candidateEmbedView: this.candidateEmbedView\n            });\n            draggingView.finalizeEmbedding(e, draggingView.getEventData(e));\n          }\n        } else {\n          this.onDropInvalid();\n        }\n\n        this.candidateEmbedView = null;\n        this.targetModel.stopBatch('dnd');\n      };\n\n      if (FunctionExt.isAsync(ret)) {\n        // stop dragging\n        this.undelegateDocumentEvents();\n        ret.then(callback); // eslint-disable-line\n      } else {\n        callback(ret);\n      }\n    }\n  }\n\n  clearDragging() {\n    if (this.draggingNode) {\n      this.sourceNode = null;\n      this.draggingNode.remove();\n      this.draggingNode = null;\n      this.draggingView = null;\n      this.delta = null;\n      this.padding = null;\n      this.snapOffset = null;\n      this.originOffset = null;\n      this.undelegateDocumentEvents();\n    }\n  }\n\n  onDropped(draggingNode) {\n    if (this.draggingNode === draggingNode) {\n      this.clearDragging();\n      this.$container.removeClass('dragging').remove();\n    }\n  }\n\n  onDropInvalid() {\n    const draggingNode = this.draggingNode;\n\n    if (draggingNode) {\n      const anim = this.options.animation;\n\n      if (anim) {\n        const duration = typeof anim === 'object' && anim.duration || 150;\n        const easing = typeof anim === 'object' && anim.easing || 'swing';\n        this.draggingView = null;\n        this.$container.animate(this.originOffset, duration, easing, () => this.onDropped(draggingNode));\n      } else {\n        this.onDropped(draggingNode);\n      }\n    }\n  }\n\n  isInsideValidArea(p) {\n    let targetRect;\n    const targetGraph = this.targetGraph;\n    const targetScroller = this.targetScroller;\n\n    if (targetScroller) {\n      if (targetScroller.options.autoResize) {\n        targetRect = this.getDropArea(targetScroller.container);\n      } else {\n        const outter = this.getDropArea(targetScroller.container);\n        targetRect = this.getDropArea(targetGraph.container).intersectsWithRect(outter);\n      }\n    } else {\n      targetRect = this.getDropArea(targetGraph.container);\n    }\n\n    return targetRect && targetRect.containsPoint(p);\n  }\n\n  getDropArea(elem) {\n    const $elem = this.$(elem);\n    const offset = $elem.offset();\n    const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n    const scrollLeft = document.body.scrollLeft || document.documentElement.scrollLeft;\n    return Rectangle.create({\n      x: offset.left + parseInt($elem.css('border-left-width'), 10) - scrollLeft,\n      y: offset.top + parseInt($elem.css('border-top-width'), 10) - scrollTop,\n      width: $elem.innerWidth(),\n      height: $elem.innerHeight()\n    });\n  }\n\n  drop(draggingNode, pos) {\n    if (this.isInsideValidArea(pos)) {\n      const targetGraph = this.targetGraph;\n      const targetModel = targetGraph.model;\n      const local = targetGraph.clientToLocal(pos);\n      const sourceNode = this.sourceNode;\n      const droppingNode = this.options.getDropNode(draggingNode, {\n        sourceNode,\n        draggingNode,\n        targetGraph: this.targetGraph,\n        draggingGraph: this.draggingGraph\n      });\n      const bbox = droppingNode.getBBox();\n      local.x += bbox.x - bbox.width / 2;\n      local.y += bbox.y - bbox.height / 2;\n      const gridSize = this.snapOffset ? 1 : targetGraph.getGridSize();\n      droppingNode.position(Util.snapToGrid(local.x, gridSize), Util.snapToGrid(local.y, gridSize));\n      droppingNode.removeZIndex();\n      const validateNode = this.options.validateNode;\n      const ret = validateNode ? validateNode(droppingNode, {\n        sourceNode,\n        draggingNode,\n        droppingNode,\n        targetGraph,\n        draggingGraph: this.draggingGraph\n      }) : true;\n\n      if (typeof ret === 'boolean') {\n        if (ret) {\n          targetModel.addCell(droppingNode, {\n            stencil: this.cid\n          });\n          return droppingNode;\n        }\n\n        return null;\n      }\n\n      return FunctionExt.toDeferredBoolean(ret).then(valid => {\n        if (valid) {\n          targetModel.addCell(droppingNode, {\n            stencil: this.cid\n          });\n          return droppingNode;\n        }\n\n        return null;\n      });\n    }\n\n    return null;\n  }\n\n  onRemove() {\n    if (this.draggingGraph) {\n      this.draggingGraph.view.remove();\n      this.draggingGraph.dispose();\n    }\n  }\n\n  dispose() {\n    this.remove();\n  }\n\n}\n\n__decorate([View.dispose()], Dnd.prototype, \"dispose\", null);\n\n(function (Dnd) {\n  Dnd.defaults = {\n    animation: false,\n    getDragNode: sourceNode => sourceNode.clone(),\n    getDropNode: draggingNode => draggingNode.clone()\n  };\n  Dnd.documentEvents = {\n    mousemove: 'onDragging',\n    touchmove: 'onDragging',\n    mouseup: 'onDragEnd',\n    touchend: 'onDragEnd',\n    touchcancel: 'onDragEnd'\n  };\n})(Dnd || (Dnd = {}));","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,IAAT,QAAqB,cAArB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,SAAT,QAAiC,gBAAjC;AAGA,SAASC,IAAT,QAAqB,iBAArB;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AAIA,OAAM,MAAOC,GAAP,SAAmBF,IAAnB,CAAuB;EAiC3BG,YAAYC,OAAZ,EAAwE;IACtE;IAEA,KAAKA,OAAL,GAAeC,gCACVH,GAAG,CAACI,QADM,GAEVF,OAFU,CAAf;IAKA,KAAKG,SAAL,GAAiBC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;IACA,KAAKC,UAAL,GAAkB,KAAKC,CAAL,CAAO,KAAKJ,SAAZ,EAAuBK,QAAvB,CAChB,KAAKC,eAAL,CAAqB,YAArB,CADgB,CAAlB;IAIA,KAAKC,aAAL,GAAqB,IAAIb,KAAJ,CAASI,gCACzB,KAAKD,OAAL,CAAaW,oBADY,GACQ;MACpCR,SAAS,EAAEC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CADyB;MAEpCO,KAAK,EAAE,CAF6B;MAGpCC,MAAM,EAAE;IAH4B,CADR,CAAT,CAArB;IAOA,KAAKP,UAAL,CAAgBQ,MAAhB,CAAuB,KAAKJ,aAAL,CAAmBP,SAA1C;EACD;;EAvC2B,IAAdY,cAAc;IAC1B,MAAMC,MAAM,GAAG,KAAKhB,OAAL,CAAagB,MAA5B;IACA,OAAOnB,KAAK,CAACoB,OAAN,CAAcD,MAAd,IAAwBA,MAAM,CAACE,QAAP,CAAgBC,MAAxC,GAAiDH,MAAxD;EACD;;EAEwB,IAAXI,WAAW;IACvB,MAAMJ,MAAM,GAAG,KAAKhB,OAAL,CAAagB,MAA5B;IACA,OAAOnB,KAAK,CAACoB,OAAN,CAAcD,MAAd,IAAwBA,MAAxB,GAAiCA,MAAM,CAACK,KAA/C;EACD;;EAEwB,IAAXC,WAAW;IACvB,OAAO,KAAKF,WAAL,CAAiBG,KAAxB;EACD;;EAEqB,IAARC,QAAQ;IACpB,OAAO,KAAKJ,WAAL,CAAiBI,QAAjB,CAA0BL,MAAjC;EACD;;EAyBDM,KAAK,CAACC,IAAD,EAAaC,GAAb,EAAoD;IACvD,MAAMC,CAAC,GAAGD,GAAV;IAEAC,CAAC,CAACC,cAAF;IAEA,KAAKP,WAAL,CAAiBQ,UAAjB,CAA4B,KAA5B;IACA,KAAKxB,UAAL,CACGE,QADH,CACY,UADZ,EAEGuB,QAFH,CAEY,KAAK/B,OAAL,CAAagC,eAAb,IAAgC5B,QAAQ,CAAC6B,IAFrD;IAIA,KAAKC,UAAL,GAAkBR,IAAlB;IACA,KAAKS,eAAL,CAAqBT,IAArB,EAA2BE,CAAC,CAACQ,OAA7B,EAAsCR,CAAC,CAACS,OAAxC;IAEA,MAAMC,KAAK,GAAG,KAAKC,kBAAL,CAAwBX,CAAC,CAACQ,OAA1B,EAAmCR,CAAC,CAACS,OAArC,CAAd;;IAEA,IAAI,KAAKG,iBAAL,EAAJ,EAA8B;MAC5B,KAAKhB,QAAL,CAAciB,mBAAd,CAAkC;QAChCb,CADgC;QAEhCF,IAFgC;QAGhCgB,IAAI,EAAEhB,IAH0B;QAIhCiB,IAAI,EAAE,KAAKC,YAJqB;QAKhCC,CAAC,EAAEP,KAAK,CAACO,CALuB;QAMhCC,CAAC,EAAER,KAAK,CAACQ;MANuB,CAAlC;MAQA,KAAKC,YAAL,CAAmBC,EAAnB,CAAsB,iBAAtB,EAAyC,KAAKC,IAA9C,EAAoD,IAApD;IACD;;IAED,KAAKC,sBAAL,CAA4BpD,GAAG,CAACqD,cAAhC,EAAgDvB,CAAC,CAACwB,IAAlD;EACD;;EAESZ,iBAAiB;IACzB,OAAO,KAAKhB,QAAL,IAAiB,CAAC,KAAKA,QAAL,CAAc6B,QAAvC;EACD;;EAESlB,eAAe,CACvBD,UADuB,EAEvBE,OAFuB,EAGvBC,OAHuB,EAGR;IAEf,MAAM3B,aAAa,GAAG,KAAKA,aAA3B;IACA,MAAM4C,aAAa,GAAG5C,aAAa,CAACa,KAApC;IACA,MAAMwB,YAAY,GAAG,KAAK/C,OAAL,CAAauD,WAAb,CAAyBrB,UAAzB,EAAqC;MACxDA,UADwD;MAExDxB,aAFwD;MAGxDU,WAAW,EAAE,KAAKA;IAHsC,CAArC,CAArB;IAMA2B,YAAY,CAACS,QAAb,CAAsB,CAAtB,EAAyB,CAAzB;IAEA,IAAIC,OAAO,GAAG,CAAd;;IACA,IAAI,KAAKjB,iBAAL,EAAJ,EAA8B;MAC5BiB,OAAO,IAAI,KAAKjC,QAAL,CAAcxB,OAAd,CAAsB0D,SAAtB,IAAmC,CAA9C;IACD;;IAED,IAAI,KAAKlB,iBAAL,MAA4B,KAAKxC,OAAL,CAAa2D,MAA7C,EAAqD;MACnD,MAAMC,KAAK,GAAG,KAAKxC,WAAL,CAAiByC,SAAjB,CAA2BC,QAA3B,EAAd;MACApD,aAAa,CAACkD,KAAd,CAAoBA,KAAK,CAACG,EAA1B,EAA8BH,KAAK,CAACI,EAApC;MACAP,OAAO,IAAIQ,IAAI,CAACC,GAAL,CAASN,KAAK,CAACG,EAAf,EAAmBH,KAAK,CAACI,EAAzB,CAAX;IACD,CAJD,MAIO;MACLtD,aAAa,CAACkD,KAAd,CAAoB,CAApB,EAAuB,CAAvB;IACD;;IAED,KAAKO,aAAL;;IAEA,IAAI,KAAKnE,OAAL,CAAaoE,SAAjB,EAA4B;MAC1B,KAAK9D,UAAL,CAAgB+D,IAAhB,CAAqB,IAArB,EAA2B,IAA3B;IACD;;IAEDf,aAAa,CAACgB,UAAd,CAAyB,CAACvB,YAAD,CAAzB;IAEA,MAAMwB,YAAY,GAAG7D,aAAa,CAAC8D,cAAd,CAA6BzB,YAA7B,CAArB;IACAwB,YAAY,CAACE,gBAAb;IACAF,YAAY,CAAC7B,IAAb,CAAkBgC,GAAlB,CAAsB,SAAtB;IACAhE,aAAa,CAACiE,YAAd,CAA2B;MACzBlB,OADyB;MAEzBmB,cAAc,EAAE;IAFS,CAA3B;IAKA,MAAMC,IAAI,GAAGN,YAAY,CAACO,OAAb,EAAb;IACA,KAAKC,YAAL,GAAoBR,YAAY,CAACO,OAAb,CAAqB;MAAEE,eAAe,EAAE;IAAnB,CAArB,CAApB;IACA,KAAKC,KAAL,GAAa,KAAKF,YAAL,CAAkBG,UAAlB,GAA+BC,IAA/B,CAAoCN,IAAI,CAACK,UAAL,EAApC,CAAb;IACA,KAAKnC,YAAL,GAAoBA,YAApB;IACA,KAAKH,YAAL,GAAoB2B,YAApB;IACA,KAAKa,YAAL,GAAoBrC,YAAY,CAAC+B,OAAb,EAApB;IACA,KAAKrB,OAAL,GAAeA,OAAf;IACA,KAAK4B,YAAL,GAAoB,KAAKC,mBAAL,CAAyBlD,OAAzB,EAAkCC,OAAlC,CAApB;EACD;;EAESiD,mBAAmB,CAAClD,OAAD,EAAkBC,OAAlB,EAAiC;IAC5D,MAAMkD,SAAS,GACbnF,QAAQ,CAAC6B,IAAT,CAAcsD,SAAd,IAA2BnF,QAAQ,CAACoF,eAAT,CAAyBD,SADtD;IAEA,MAAMN,KAAK,GAAG,KAAKA,KAAnB;IACA,MAAMQ,QAAQ,GAAG,KAAKV,YAAtB;IACA,MAAMtB,OAAO,GAAG,KAAKA,OAAL,IAAgB,CAAhC;IACA,MAAMiC,MAAM,GAAG;MACbC,IAAI,EAAEvD,OAAO,GAAG6C,KAAK,CAACpC,CAAhB,GAAoB4C,QAAQ,CAAC7E,KAAT,GAAiB,CAArC,GAAyC6C,OADlC;MAEbmC,GAAG,EAAEvD,OAAO,GAAG4C,KAAK,CAACnC,CAAhB,GAAoB2C,QAAQ,CAAC5E,MAAT,GAAkB,CAAtC,GAA0C4C,OAA1C,GAAoD8B;IAF5C,CAAf;;IAKA,IAAI,KAAK7E,aAAT,EAAwB;MACtB,KAAKJ,UAAL,CAAgBoF,MAAhB,CAAuBA,MAAvB;IACD;;IAED,OAAOA,MAAP;EACD;;EAESnD,kBAAkB,CAACM,CAAD,EAAYC,CAAZ,EAAqB;IAC/C,MAAMR,KAAK,GAAG,KAAKlB,WAAL,CAAiByE,aAAjB,CAA+BhD,CAA/B,EAAkCC,CAAlC,CAAd;IACA,MAAM+B,IAAI,GAAG,KAAKO,YAAlB;IACA9C,KAAK,CAACO,CAAN,IAAWgC,IAAI,CAACjE,KAAL,GAAa,CAAxB;IACA0B,KAAK,CAACQ,CAAN,IAAW+B,IAAI,CAAChE,MAAL,GAAc,CAAzB;IACA,KAAKkC,YAAL,CAAmBS,QAAnB,CAA4BlB,KAAK,CAACO,CAAlC,EAAqCP,KAAK,CAACQ,CAA3C;IACA,OAAOR,KAAP;EACD;;EAESW,IAAI,CAAC;IACbP,IADa;IAEboD,OAFa;IAGb9F;EAHa,CAAD,EAIsB;IAClC,MAAM0B,IAAI,GAAGgB,IAAb;;IACA,IAAI1C,OAAO,CAAC+F,OAAZ,EAAqB;MACnB,MAAMlB,IAAI,GAAG,KAAKO,YAAlB;MACA1D,IAAI,CAAC8B,QAAL,CAAcqB,IAAI,CAAChC,CAAL,GAAS7C,OAAO,CAACgG,EAA/B,EAAmCnB,IAAI,CAAC/B,CAAL,GAAS9C,OAAO,CAACiG,EAApD,EAAwD;QAAEC,MAAM,EAAE;MAAV,CAAxD;MACA,KAAKtD,YAAL,CAAmBuD,SAAnB;MACAzE,IAAI,CAAC8B,QAAL,CAAcsC,OAAQ,CAACjD,CAAvB,EAA0BiD,OAAQ,CAAChD,CAAnC,EAAsC;QAAEoD,MAAM,EAAE;MAAV,CAAtC;MAEA,KAAKE,UAAL,GAAkB;QAChBvD,CAAC,EAAE7C,OAAO,CAACgG,EADK;QAEhBlD,CAAC,EAAE9C,OAAO,CAACiG;MAFK,CAAlB;IAID,CAVD,MAUO;MACL,KAAKG,UAAL,GAAkB,IAAlB;IACD;EACF;;EAESC,UAAU,CAAC1E,GAAD,EAA2B;IAC7C,MAAMiB,YAAY,GAAG,KAAKA,YAA1B;;IACA,IAAIA,YAAJ,EAAkB;MAChBjB,GAAG,CAACE,cAAJ;MACA,MAAMD,CAAC,GAAG,KAAK0E,cAAL,CAAoB3E,GAApB,CAAV;MACA,MAAMS,OAAO,GAAGR,CAAC,CAACQ,OAAlB;MACA,MAAMC,OAAO,GAAGT,CAAC,CAACS,OAAlB;MAEA,KAAKiD,mBAAL,CAAyBlD,OAAzB,EAAkCC,OAAlC;MACA,MAAMC,KAAK,GAAG,KAAKC,kBAAL,CAAwBH,OAAxB,EAAiCC,OAAjC,CAAd;MACA,MAAMkE,aAAa,GAAG,KAAKnF,WAAL,CAAiBpB,OAAjB,CAAyBwG,SAAzB,CAAmCC,OAAzD;MACA,MAAMC,WAAW,GACf,CAACH,aAAa,IAAI,KAAK/D,iBAAL,EAAlB,KACA,KAAKmE,iBAAL,CAAuB;QACrB9D,CAAC,EAAET,OADkB;QAErBU,CAAC,EAAET;MAFkB,CAAvB,CAFF;;MAOA,IAAIkE,aAAJ,EAAmB;QACjB3D,YAAY,CAACgE,YAAb,CAA0BhF,CAA1B,EAA6B;UAC3BP,KAAK,EAAE,KAAKD,WADe;UAE3ByF,kBAAkB,EAAE,KAAKA;QAFE,CAA7B;QAIA,MAAMzD,IAAI,GAAGR,YAAY,CAACkE,YAAb,CAA+BlF,CAA/B,CAAb;;QACA,IAAI8E,WAAJ,EAAiB;UACf9D,YAAY,CAACmE,gBAAb,CAA8BnF,CAA9B,EAAiCwB,IAAjC;QACD,CAFD,MAEO;UACLR,YAAY,CAACoE,cAAb,CAA4B5D,IAA5B;QACD;;QACD,KAAKyD,kBAAL,GAA0BzD,IAAI,CAACyD,kBAA/B;MACD,CA5Be,CA8BhB;;;MACA,IAAI,KAAKrE,iBAAL,EAAJ,EAA8B;QAC5B,IAAIkE,WAAJ,EAAiB;UACf,KAAKlF,QAAL,CAAcyF,YAAd,CAA2B;YACzBrF,CADyB;YAEzBe,IAAI,EAAEC,YAFmB;YAGzBC,CAAC,EAAEP,KAAK,CAACO,CAHgB;YAIzBC,CAAC,EAAER,KAAK,CAACQ;UAJgB,CAA3B;QAMD,CAPD,MAOO;UACL,KAAKtB,QAAL,CAAc0F,IAAd;QACD;MACF;IACF;EACF;;EAESC,SAAS,CAACxF,GAAD,EAAyB;IAC1C,MAAMoB,YAAY,GAAG,KAAKA,YAA1B;;IACA,IAAIA,YAAJ,EAAkB;MAChB,MAAMnB,CAAC,GAAG,KAAK0E,cAAL,CAAoB3E,GAApB,CAAV;MACA,MAAMiB,YAAY,GAAG,KAAKA,YAA1B;MACA,MAAMwC,YAAY,GAAG,KAAKA,YAA1B;MACA,MAAMgB,UAAU,GAAG,KAAKA,UAAxB;MACA,IAAIvD,CAAC,GAAGuC,YAAY,CAACvC,CAArB;MACA,IAAIC,CAAC,GAAGsC,YAAY,CAACtC,CAArB;;MAEA,IAAIsD,UAAJ,EAAgB;QACdvD,CAAC,IAAIuD,UAAU,CAACvD,CAAhB;QACAC,CAAC,IAAIsD,UAAU,CAACtD,CAAhB;MACD;;MAEDC,YAAY,CAACS,QAAb,CAAsBX,CAAtB,EAAyBC,CAAzB,EAA4B;QAAEoD,MAAM,EAAE;MAAV,CAA5B;MAEA,MAAMkB,GAAG,GAAG,KAAKC,IAAL,CAAUtE,YAAV,EAAwB;QAAEF,CAAC,EAAEjB,CAAC,CAACQ,OAAP;QAAgBU,CAAC,EAAElB,CAAC,CAACS;MAArB,CAAxB,CAAZ;;MACA,MAAMiF,QAAQ,GAAI5F,IAAD,IAAsB;QACrC,IAAIA,IAAJ,EAAU;UACR,KAAK6F,SAAL,CAAexE,YAAf;;UACA,IAAI,KAAK3B,WAAL,CAAiBpB,OAAjB,CAAyBwG,SAAzB,CAAmCC,OAAnC,IAA8C7D,YAAlD,EAAgE;YAC9DA,YAAY,CAACgE,YAAb,CAA0BhF,CAA1B,EAA6B;cAC3Bc,IAAI,EAAEhB,IADqB;cAE3BL,KAAK,EAAE,KAAKD,WAFe;cAG3ByF,kBAAkB,EAAE,KAAKA;YAHE,CAA7B;YAKAjE,YAAY,CAAC4E,iBAAb,CAA+B5F,CAA/B,EAAkCgB,YAAY,CAACkE,YAAb,CAA+BlF,CAA/B,CAAlC;UACD;QACF,CAVD,MAUO;UACL,KAAK6F,aAAL;QACD;;QAED,KAAKZ,kBAAL,GAA0B,IAA1B;QACA,KAAKvF,WAAL,CAAiBoG,SAAjB,CAA2B,KAA3B;MACD,CAjBD;;MAmBA,IAAIhI,WAAW,CAACiI,OAAZ,CAAoBP,GAApB,CAAJ,EAA8B;QAC5B;QACA,KAAKQ,wBAAL;QACAR,GAAG,CAACS,IAAJ,CAASP,QAAT,EAH4B,CAGT;MACpB,CAJD,MAIO;QACLA,QAAQ,CAACF,GAAD,CAAR;MACD;IACF;EACF;;EAESjD,aAAa;IACrB,IAAI,KAAKpB,YAAT,EAAuB;MACrB,KAAKb,UAAL,GAAkB,IAAlB;MACA,KAAKa,YAAL,CAAkB+E,MAAlB;MACA,KAAK/E,YAAL,GAAoB,IAApB;MACA,KAAKH,YAAL,GAAoB,IAApB;MACA,KAAKqC,KAAL,GAAa,IAAb;MACA,KAAKxB,OAAL,GAAe,IAAf;MACA,KAAK2C,UAAL,GAAkB,IAAlB;MACA,KAAKf,YAAL,GAAoB,IAApB;MACA,KAAKuC,wBAAL;IACD;EACF;;EAESL,SAAS,CAACxE,YAAD,EAAmB;IACpC,IAAI,KAAKA,YAAL,KAAsBA,YAA1B,EAAwC;MACtC,KAAKoB,aAAL;MACA,KAAK7D,UAAL,CAAgByH,WAAhB,CAA4B,UAA5B,EAAwCD,MAAxC;IACD;EACF;;EAESL,aAAa;IACrB,MAAM1E,YAAY,GAAG,KAAKA,YAA1B;;IACA,IAAIA,YAAJ,EAAkB;MAChB,MAAMiF,IAAI,GAAG,KAAKhI,OAAL,CAAaoE,SAA1B;;MACA,IAAI4D,IAAJ,EAAU;QACR,MAAMC,QAAQ,GAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACC,QAAlC,IAA+C,GAAhE;QACA,MAAMC,MAAM,GAAI,OAAOF,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACE,MAAlC,IAA6C,OAA5D;QAEA,KAAKtF,YAAL,GAAoB,IAApB;QAEA,KAAKtC,UAAL,CAAgB6H,OAAhB,CAAwB,KAAK9C,YAA7B,EAA4C4C,QAA5C,EAAsDC,MAAtD,EAA8D,MAC5D,KAAKX,SAAL,CAAexE,YAAf,CADF;MAGD,CATD,MASO;QACL,KAAKwE,SAAL,CAAexE,YAAf;MACD;IACF;EACF;;EAES4D,iBAAiB,CAACyB,CAAD,EAAmB;IAC5C,IAAIC,UAAJ;IACA,MAAMjH,WAAW,GAAG,KAAKA,WAAzB;IACA,MAAML,cAAc,GAAG,KAAKA,cAA5B;;IAEA,IAAIA,cAAJ,EAAoB;MAClB,IAAIA,cAAc,CAACf,OAAf,CAAuBsI,UAA3B,EAAuC;QACrCD,UAAU,GAAG,KAAKE,WAAL,CAAiBxH,cAAc,CAACZ,SAAhC,CAAb;MACD,CAFD,MAEO;QACL,MAAMqI,MAAM,GAAG,KAAKD,WAAL,CAAiBxH,cAAc,CAACZ,SAAhC,CAAf;QACAkI,UAAU,GAAG,KAAKE,WAAL,CAAiBnH,WAAW,CAACjB,SAA7B,EAAwCsI,kBAAxC,CACXD,MADW,CAAb;MAGD;IACF,CATD,MASO;MACLH,UAAU,GAAG,KAAKE,WAAL,CAAiBnH,WAAW,CAACjB,SAA7B,CAAb;IACD;;IAED,OAAOkI,UAAU,IAAIA,UAAU,CAACK,aAAX,CAAyBN,CAAzB,CAArB;EACD;;EAESG,WAAW,CAACI,IAAD,EAAc;IACjC,MAAMC,KAAK,GAAG,KAAKrI,CAAL,CAAOoI,IAAP,CAAd;IACA,MAAMjD,MAAM,GAAGkD,KAAK,CAAClD,MAAN,EAAf;IACA,MAAMH,SAAS,GACbnF,QAAQ,CAAC6B,IAAT,CAAcsD,SAAd,IAA2BnF,QAAQ,CAACoF,eAAT,CAAyBD,SADtD;IAEA,MAAMsD,UAAU,GACdzI,QAAQ,CAAC6B,IAAT,CAAc4G,UAAd,IAA4BzI,QAAQ,CAACoF,eAAT,CAAyBqD,UADvD;IAGA,OAAOlJ,SAAS,CAACmJ,MAAV,CAAiB;MACtBjG,CAAC,EACC6C,MAAM,CAACC,IAAP,GAAcoD,QAAQ,CAACH,KAAK,CAACI,GAAN,CAAU,mBAAV,CAAD,EAAiC,EAAjC,CAAtB,GAA6DH,UAFzC;MAGtB/F,CAAC,EAAE4C,MAAM,CAACE,GAAP,GAAamD,QAAQ,CAACH,KAAK,CAACI,GAAN,CAAU,kBAAV,CAAD,EAAgC,EAAhC,CAArB,GAA2DzD,SAHxC;MAItB3E,KAAK,EAAEgI,KAAK,CAACK,UAAN,EAJe;MAKtBpI,MAAM,EAAE+H,KAAK,CAACM,WAAN;IALc,CAAjB,CAAP;EAOD;;EAES7B,IAAI,CAACtE,YAAD,EAAqBoG,GAArB,EAAyC;IACrD,IAAI,KAAKxC,iBAAL,CAAuBwC,GAAvB,CAAJ,EAAiC;MAC/B,MAAM/H,WAAW,GAAG,KAAKA,WAAzB;MACA,MAAME,WAAW,GAAGF,WAAW,CAACG,KAAhC;MACA,MAAMe,KAAK,GAAGlB,WAAW,CAACyE,aAAZ,CAA0BsD,GAA1B,CAAd;MACA,MAAMjH,UAAU,GAAG,KAAKA,UAAxB;MACA,MAAMkH,YAAY,GAAG,KAAKpJ,OAAL,CAAaqJ,WAAb,CAAyBtG,YAAzB,EAAuC;QAC1Db,UAD0D;QAE1Da,YAF0D;QAG1D3B,WAAW,EAAE,KAAKA,WAHwC;QAI1DV,aAAa,EAAE,KAAKA;MAJsC,CAAvC,CAArB;MAMA,MAAMmE,IAAI,GAAGuE,YAAY,CAACtE,OAAb,EAAb;MACAxC,KAAK,CAACO,CAAN,IAAWgC,IAAI,CAAChC,CAAL,GAASgC,IAAI,CAACjE,KAAL,GAAa,CAAjC;MACA0B,KAAK,CAACQ,CAAN,IAAW+B,IAAI,CAAC/B,CAAL,GAAS+B,IAAI,CAAChE,MAAL,GAAc,CAAlC;MACA,MAAMyI,QAAQ,GAAG,KAAKlD,UAAL,GAAkB,CAAlB,GAAsBhF,WAAW,CAACmI,WAAZ,EAAvC;MAEAH,YAAY,CAAC5F,QAAb,CACE/D,IAAI,CAAC+J,UAAL,CAAgBlH,KAAK,CAACO,CAAtB,EAAyByG,QAAzB,CADF,EAEE7J,IAAI,CAAC+J,UAAL,CAAgBlH,KAAK,CAACQ,CAAtB,EAAyBwG,QAAzB,CAFF;MAKAF,YAAY,CAACK,YAAb;MAEA,MAAMC,YAAY,GAAG,KAAK1J,OAAL,CAAa0J,YAAlC;MACA,MAAMtC,GAAG,GAAGsC,YAAY,GACpBA,YAAY,CAACN,YAAD,EAAe;QACzBlH,UADyB;QAEzBa,YAFyB;QAGzBqG,YAHyB;QAIzBhI,WAJyB;QAKzBV,aAAa,EAAE,KAAKA;MALK,CAAf,CADQ,GAQpB,IARJ;;MAUA,IAAI,OAAO0G,GAAP,KAAe,SAAnB,EAA8B;QAC5B,IAAIA,GAAJ,EAAS;UACP9F,WAAW,CAACqI,OAAZ,CAAoBP,YAApB,EAAkC;YAAEQ,OAAO,EAAE,KAAKC;UAAhB,CAAlC;UACA,OAAOT,YAAP;QACD;;QACD,OAAO,IAAP;MACD;;MAED,OAAO1J,WAAW,CAACoK,iBAAZ,CAA8B1C,GAA9B,EAAmCS,IAAnC,CAAyCkC,KAAD,IAAU;QACvD,IAAIA,KAAJ,EAAW;UACTzI,WAAW,CAACqI,OAAZ,CAAoBP,YAApB,EAAkC;YAAEQ,OAAO,EAAE,KAAKC;UAAhB,CAAlC;UACA,OAAOT,YAAP;QACD;;QACD,OAAO,IAAP;MACD,CANM,CAAP;IAOD;;IAED,OAAO,IAAP;EACD;;EAESY,QAAQ;IAChB,IAAI,KAAKtJ,aAAT,EAAwB;MACtB,KAAKA,aAAL,CAAmBiC,IAAnB,CAAwBmF,MAAxB;MACA,KAAKpH,aAAL,CAAmBuJ,OAAnB;IACD;EACF;;EAGDA,OAAO;IACL,KAAKnC,MAAL;EACD;;AA9a0B;;AA4a3BoC,YADCtK,IAAI,CAACqK,OAAL,EACD;;AAKF,WAAiBnK,GAAjB,EAAoB;EAqCLA,eAA6B;IACxCsE,SAAS,EAAE,KAD6B;IAExCb,WAAW,EAAGrB,UAAD,IAAgBA,UAAU,CAACiI,KAAX,EAFW;IAGxCd,WAAW,EAAGtG,YAAD,IAAkBA,YAAY,CAACoH,KAAb;EAHS,CAA7B;EAMArK,qBAAiB;IAC5BsK,SAAS,EAAE,YADiB;IAE5BC,SAAS,EAAE,YAFiB;IAG5BC,OAAO,EAAE,WAHmB;IAI5BC,QAAQ,EAAE,WAJkB;IAK5BC,WAAW,EAAE;EALe,CAAjB;AAOd,CAlDD,EAAiB1K,GAAG,KAAHA,GAAG,MAApB","names":["Util","FunctionExt","Rectangle","View","Graph","Dnd","constructor","options","Object","defaults","container","document","createElement","$container","$","addClass","prefixClassName","draggingGraph","delegateGraphOptions","width","height","append","targetScroller","target","isGraph","scroller","widget","targetGraph","graph","targetModel","model","snapline","start","node","evt","e","preventDefault","startBatch","appendTo","containerParent","body","sourceNode","prepareDragging","clientX","clientY","local","updateNodePosition","isSnaplineEnabled","captureCursorOffset","cell","view","draggingView","x","y","draggingNode","on","snap","delegateDocumentEvents","documentEvents","data","disabled","draggingModel","getDragNode","position","padding","tolerance","scaled","scale","transform","getScale","sx","sy","Math","max","clearDragging","animation","stop","resetCells","delegateView","findViewByCell","undelegateEvents","off","fitToContent","allowNewOrigin","bbox","getBBox","geometryBBox","useCellGeometry","delta","getTopLeft","diff","draggingBBox","originOffset","updateGraphPosition","scrollTop","documentElement","nodeBBox","offset","left","top","clientToLocal","current","snapped","tx","ty","silent","translate","snapOffset","onDragging","normalizeEvent","embeddingMode","embedding","enabled","isValidArea","isInsideValidArea","setEventData","candidateEmbedView","getEventData","processEmbedding","clearEmbedding","snapOnMoving","hide","onDragEnd","ret","drop","callback","onDropped","finalizeEmbedding","onDropInvalid","stopBatch","isAsync","undelegateDocumentEvents","then","remove","removeClass","anim","duration","easing","animate","p","targetRect","autoResize","getDropArea","outter","intersectsWithRect","containsPoint","elem","$elem","scrollLeft","create","parseInt","css","innerWidth","innerHeight","pos","droppingNode","getDropNode","gridSize","getGridSize","snapToGrid","removeZIndex","validateNode","addCell","stencil","cid","toDeferredBoolean","valid","onRemove","dispose","__decorate","clone","mousemove","touchmove","mouseup","touchend","touchcancel"],"sourceRoot":"","sources":["../../../src/addon/dnd/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}