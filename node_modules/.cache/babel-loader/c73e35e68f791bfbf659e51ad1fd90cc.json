{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { isAnyArray } from 'is-any-array';\nimport Matrix from './matrix';\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n\n  if (typeof yMatrix === 'object' && !Matrix.isMatrix(yMatrix) && !isAnyArray(yMatrix)) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n\n  const {\n    center = true\n  } = options;\n\n  if (center) {\n    xMatrix = xMatrix.center('column');\n\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n\n  const cov = xMatrix.transpose().mmul(yMatrix);\n\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n\n  return cov;\n}","map":{"version":3,"names":["isAnyArray","Matrix","covariance","xMatrix","yMatrix","options","yIsSame","isMatrix","rows","TypeError","center","cov","transpose","mmul","i","j","columns","set","get"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/ml-matrix/src/covariance.js"],"sourcesContent":["import { isAnyArray } from 'is-any-array';\n\nimport Matrix from './matrix';\n\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !isAnyArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n  const { center = true } = options;\n  if (center) {\n    xMatrix = xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n  const cov = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n  return cov;\n}\n"],"mappings":";AAAA,SAASA,UAAT,QAA2B,cAA3B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,OAAO,GAAGD,OAAvC,EAAgDE,OAAO,GAAG,EAA1D,EAA8D;EACnEF,OAAO,GAAG,IAAIF,MAAJ,CAAWE,OAAX,CAAV;EACA,IAAIG,OAAO,GAAG,KAAd;;EACA,IACE,OAAOF,OAAP,KAAmB,QAAnB,IACA,CAACH,MAAM,CAACM,QAAP,CAAgBH,OAAhB,CADD,IAEA,CAACJ,UAAU,CAACI,OAAD,CAHb,EAIE;IACAC,OAAO,GAAGD,OAAV;IACAA,OAAO,GAAGD,OAAV;IACAG,OAAO,GAAG,IAAV;EACD,CARD,MAQO;IACLF,OAAO,GAAG,IAAIH,MAAJ,CAAWG,OAAX,CAAV;EACD;;EACD,IAAID,OAAO,CAACK,IAAR,KAAiBJ,OAAO,CAACI,IAA7B,EAAmC;IACjC,MAAM,IAAIC,SAAJ,CAAc,iDAAd,CAAN;EACD;;EACD,MAAM;IAAEC,MAAM,GAAG;EAAX,IAAoBL,OAA1B;;EACA,IAAIK,MAAJ,EAAY;IACVP,OAAO,GAAGA,OAAO,CAACO,MAAR,CAAe,QAAf,CAAV;;IACA,IAAI,CAACJ,OAAL,EAAc;MACZF,OAAO,GAAGA,OAAO,CAACM,MAAR,CAAe,QAAf,CAAV;IACD;EACF;;EACD,MAAMC,GAAG,GAAGR,OAAO,CAACS,SAAR,GAAoBC,IAApB,CAAyBT,OAAzB,CAAZ;;EACA,KAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACH,IAAxB,EAA8BM,CAAC,EAA/B,EAAmC;IACjC,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACK,OAAxB,EAAiCD,CAAC,EAAlC,EAAsC;MACpCJ,GAAG,CAACM,GAAJ,CAAQH,CAAR,EAAWC,CAAX,EAAcJ,GAAG,CAACO,GAAJ,CAAQJ,CAAR,EAAWC,CAAX,KAAiB,KAAKZ,OAAO,CAACK,IAAR,GAAe,CAApB,CAAjB,CAAd;IACD;EACF;;EACD,OAAOG,GAAP;AACD"},"metadata":{},"sourceType":"module"}