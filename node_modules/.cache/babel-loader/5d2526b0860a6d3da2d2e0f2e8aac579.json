{"ast":null,"code":"import { Angle, Point, Line, Rectangle, Polyline } from '../../geometry';\nimport { createSvgElement } from './elem';\nconst svgDocument = createSvgElement('svg');\nconst transformRegex = /(\\w+)\\(([^,)]+),?([^)]+)?\\)/gi;\nconst transformSeparatorRegex = /[ ,]+/;\nconst transformationListRegex = /^(\\w+)\\((.*)\\)/;\n/**\n * Returns a SVG point object initialized with the `x` and `y` coordinates.\n * @see https://developer.mozilla.org/en/docs/Web/API/SVGPoint\n */\n\nexport function createSVGPoint(x, y) {\n  const p = svgDocument.createSVGPoint();\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/**\n * Returns the SVG transformation matrix initialized with the given matrix.\n *\n * The given matrix is an object of the form:\n * {\n *   a: number\n *   b: number\n *   c: number\n *   d: number\n *   e: number\n *   f: number\n * }\n *\n * @see https://developer.mozilla.org/en/docs/Web/API/SVGMatrix\n */\n\nexport function createSVGMatrix(matrix) {\n  const mat = svgDocument.createSVGMatrix();\n\n  if (matrix != null) {\n    const source = matrix;\n    const target = mat; // eslint-disable-next-line\n\n    for (const key in source) {\n      target[key] = source[key];\n    }\n  }\n\n  return mat;\n}\n/**\n * Returns a SVG transform object.\n * @see https://developer.mozilla.org/en/docs/Web/API/SVGTransform\n */\n\nexport function createSVGTransform(matrix) {\n  if (matrix != null) {\n    if (!(matrix instanceof DOMMatrix)) {\n      matrix = createSVGMatrix(matrix); // eslint-disable-line\n    }\n\n    return svgDocument.createSVGTransformFromMatrix(matrix);\n  }\n\n  return svgDocument.createSVGTransform();\n}\n/**\n * Returns the SVG transformation matrix built from the `transformString`.\n *\n * E.g. 'translate(10,10) scale(2,2)' will result in matrix:\n * `{ a: 2, b: 0, c: 0, d: 2, e: 10, f: 10}`\n */\n\nexport function transformStringToMatrix(transform) {\n  let mat = createSVGMatrix();\n  const matches = transform != null && transform.match(transformRegex);\n\n  if (!matches) {\n    return mat;\n  }\n\n  for (let i = 0, n = matches.length; i < n; i += 1) {\n    const transformationString = matches[i];\n    const transformationMatch = transformationString.match(transformationListRegex);\n\n    if (transformationMatch) {\n      let sx;\n      let sy;\n      let tx;\n      let ty;\n      let angle;\n      let ctm = createSVGMatrix();\n      const args = transformationMatch[2].split(transformSeparatorRegex);\n\n      switch (transformationMatch[1].toLowerCase()) {\n        case 'scale':\n          sx = parseFloat(args[0]);\n          sy = args[1] === undefined ? sx : parseFloat(args[1]);\n          ctm = ctm.scaleNonUniform(sx, sy);\n          break;\n\n        case 'translate':\n          tx = parseFloat(args[0]);\n          ty = parseFloat(args[1]);\n          ctm = ctm.translate(tx, ty);\n          break;\n\n        case 'rotate':\n          angle = parseFloat(args[0]);\n          tx = parseFloat(args[1]) || 0;\n          ty = parseFloat(args[2]) || 0;\n\n          if (tx !== 0 || ty !== 0) {\n            ctm = ctm.translate(tx, ty).rotate(angle).translate(-tx, -ty);\n          } else {\n            ctm = ctm.rotate(angle);\n          }\n\n          break;\n\n        case 'skewx':\n          angle = parseFloat(args[0]);\n          ctm = ctm.skewX(angle);\n          break;\n\n        case 'skewy':\n          angle = parseFloat(args[0]);\n          ctm = ctm.skewY(angle);\n          break;\n\n        case 'matrix':\n          ctm.a = parseFloat(args[0]);\n          ctm.b = parseFloat(args[1]);\n          ctm.c = parseFloat(args[2]);\n          ctm.d = parseFloat(args[3]);\n          ctm.e = parseFloat(args[4]);\n          ctm.f = parseFloat(args[5]);\n          break;\n\n        default:\n          continue;\n      }\n\n      mat = mat.multiply(ctm);\n    }\n  }\n\n  return mat;\n}\nexport function matrixToTransformString(matrix) {\n  const m = matrix || {};\n  const a = m.a != null ? m.a : 1;\n  const b = m.b != null ? m.b : 0;\n  const c = m.c != null ? m.c : 0;\n  const d = m.d != null ? m.d : 1;\n  const e = m.e != null ? m.e : 0;\n  const f = m.f != null ? m.f : 0;\n  return `matrix(${a},${b},${c},${d},${e},${f})`;\n}\nexport function parseTransformString(transform) {\n  let translation;\n  let rotation;\n  let scale;\n\n  if (transform) {\n    const separator = transformSeparatorRegex; // Allow reading transform string with a single matrix\n\n    if (transform.trim().indexOf('matrix') >= 0) {\n      const matrix = transformStringToMatrix(transform);\n      const decomposedMatrix = decomposeMatrix(matrix);\n      translation = [decomposedMatrix.translateX, decomposedMatrix.translateY];\n      rotation = [decomposedMatrix.rotation];\n      scale = [decomposedMatrix.scaleX, decomposedMatrix.scaleY];\n      const transformations = [];\n\n      if (translation[0] !== 0 || translation[1] !== 0) {\n        transformations.push(`translate(${translation.join(',')})`);\n      }\n\n      if (scale[0] !== 1 || scale[1] !== 1) {\n        transformations.push(`scale(${scale.join(',')})`);\n      }\n\n      if (rotation[0] !== 0) {\n        transformations.push(`rotate(${rotation[0]})`);\n      }\n\n      transform = transformations.join(' '); // eslint-disable-line\n    } else {\n      const translateMatch = transform.match(/translate\\((.*?)\\)/);\n\n      if (translateMatch) {\n        translation = translateMatch[1].split(separator);\n      }\n\n      const rotateMatch = transform.match(/rotate\\((.*?)\\)/);\n\n      if (rotateMatch) {\n        rotation = rotateMatch[1].split(separator);\n      }\n\n      const scaleMatch = transform.match(/scale\\((.*?)\\)/);\n\n      if (scaleMatch) {\n        scale = scaleMatch[1].split(separator);\n      }\n    }\n  }\n\n  const sx = scale && scale[0] ? parseFloat(scale[0]) : 1;\n  return {\n    raw: transform || '',\n    translation: {\n      tx: translation && translation[0] ? parseInt(translation[0], 10) : 0,\n      ty: translation && translation[1] ? parseInt(translation[1], 10) : 0\n    },\n    rotation: {\n      angle: rotation && rotation[0] ? parseInt(rotation[0], 10) : 0,\n      cx: rotation && rotation[1] ? parseInt(rotation[1], 10) : undefined,\n      cy: rotation && rotation[2] ? parseInt(rotation[2], 10) : undefined\n    },\n    scale: {\n      sx,\n      sy: scale && scale[1] ? parseFloat(scale[1]) : sx\n    }\n  };\n}\n\nfunction deltaTransformPoint(matrix, point) {\n  const dx = point.x * matrix.a + point.y * matrix.c + 0;\n  const dy = point.x * matrix.b + point.y * matrix.d + 0;\n  return {\n    x: dx,\n    y: dy\n  };\n}\n/**\n * Decomposes the SVG transformation matrix into separate transformations.\n *\n * Returns an object of the form:\n * {\n *   translateX: number\n *   translateY: number\n *   scaleX: number\n *   scaleY: number\n *   skewX: number\n *   skewY: number\n *   rotation: number\n * }\n *\n * @see https://developer.mozilla.org/en/docs/Web/API/SVGMatrix\n */\n\n\nexport function decomposeMatrix(matrix) {\n  // @see https://gist.github.com/2052247\n  const px = deltaTransformPoint(matrix, {\n    x: 0,\n    y: 1\n  });\n  const py = deltaTransformPoint(matrix, {\n    x: 1,\n    y: 0\n  });\n  const skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90;\n  const skewY = 180 / Math.PI * Math.atan2(py.y, py.x);\n  return {\n    skewX,\n    skewY,\n    translateX: matrix.e,\n    translateY: matrix.f,\n    scaleX: Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b),\n    scaleY: Math.sqrt(matrix.c * matrix.c + matrix.d * matrix.d),\n    rotation: skewX\n  };\n}\nexport function matrixToScale(matrix) {\n  let a;\n  let b;\n  let c;\n  let d;\n\n  if (matrix) {\n    a = matrix.a == null ? 1 : matrix.a;\n    d = matrix.d == null ? 1 : matrix.d;\n    b = matrix.b;\n    c = matrix.c;\n  } else {\n    a = d = 1;\n  }\n\n  return {\n    sx: b ? Math.sqrt(a * a + b * b) : a,\n    sy: c ? Math.sqrt(c * c + d * d) : d\n  };\n}\nexport function matrixToRotation(matrix) {\n  let p = {\n    x: 0,\n    y: 1\n  };\n\n  if (matrix) {\n    p = deltaTransformPoint(matrix, p);\n  }\n\n  return {\n    angle: Angle.normalize(Angle.toDeg(Math.atan2(p.y, p.x)) - 90)\n  };\n}\nexport function matrixToTranslation(matrix) {\n  return {\n    tx: matrix && matrix.e || 0,\n    ty: matrix && matrix.f || 0\n  };\n}\n/**\n * Transforms point by an SVG transformation represented by `matrix`.\n */\n\nexport function transformPoint(point, matrix) {\n  const ret = createSVGPoint(point.x, point.y).matrixTransform(matrix);\n  return new Point(ret.x, ret.y);\n}\n/**\n * Transforms line by an SVG transformation represented by `matrix`.\n */\n\nexport function transformLine(line, matrix) {\n  return new Line(transformPoint(line.start, matrix), transformPoint(line.end, matrix));\n}\n/**\n * Transforms polyline by an SVG transformation represented by `matrix`.\n */\n\nexport function transformPolyline(polyline, matrix) {\n  let points = polyline instanceof Polyline ? polyline.points : polyline;\n\n  if (!Array.isArray(points)) {\n    points = [];\n  }\n\n  return new Polyline(points.map(p => transformPoint(p, matrix)));\n}\nexport function transformRectangle(rect, matrix) {\n  const p = svgDocument.createSVGPoint();\n  p.x = rect.x;\n  p.y = rect.y;\n  const corner1 = p.matrixTransform(matrix);\n  p.x = rect.x + rect.width;\n  p.y = rect.y;\n  const corner2 = p.matrixTransform(matrix);\n  p.x = rect.x + rect.width;\n  p.y = rect.y + rect.height;\n  const corner3 = p.matrixTransform(matrix);\n  p.x = rect.x;\n  p.y = rect.y + rect.height;\n  const corner4 = p.matrixTransform(matrix);\n  const minX = Math.min(corner1.x, corner2.x, corner3.x, corner4.x);\n  const maxX = Math.max(corner1.x, corner2.x, corner3.x, corner4.x);\n  const minY = Math.min(corner1.y, corner2.y, corner3.y, corner4.y);\n  const maxY = Math.max(corner1.y, corner2.y, corner3.y, corner4.y);\n  return new Rectangle(minX, minY, maxX - minX, maxY - minY);\n}","map":{"version":3,"mappings":"AAAA,SAASA,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,gBAAxD;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAEA,MAAMC,WAAW,GAAGD,gBAAgB,CAAC,KAAD,CAApC;AACA,MAAME,cAAc,GAAG,+BAAvB;AACA,MAAMC,uBAAuB,GAAG,OAAhC;AACA,MAAMC,uBAAuB,GAAG,gBAAhC;AA2BA;;;;;AAIA,OAAM,SAAUC,cAAV,CAAyBC,CAAzB,EAAoCC,CAApC,EAA6C;EACjD,MAAMC,CAAC,GAAGP,WAAW,CAACI,cAAZ,EAAV;EACAG,CAAC,CAACF,CAAF,GAAMA,CAAN;EACAE,CAAC,CAACD,CAAF,GAAMA,CAAN;EACA,OAAOC,CAAP;AACD;AAED;;;;;;;;;;;;;;;;AAeA,OAAM,SAAUC,eAAV,CAA0BC,MAA1B,EAAgE;EACpE,MAAMC,GAAG,GAAGV,WAAW,CAACQ,eAAZ,EAAZ;;EACA,IAAIC,MAAM,IAAI,IAAd,EAAoB;IAClB,MAAME,MAAM,GAAGF,MAAf;IACA,MAAMG,MAAM,GAAGF,GAAf,CAFkB,CAGlB;;IACA,KAAK,MAAMG,GAAX,IAAkBF,MAAlB,EAA0B;MACxBC,MAAM,CAACC,GAAD,CAAN,GAAcF,MAAM,CAACE,GAAD,CAApB;IACD;EACF;;EACD,OAAOH,GAAP;AACD;AAED;;;;;AAIA,OAAM,SAAUI,kBAAV,CAA6BL,MAA7B,EAA4D;EAChE,IAAIA,MAAM,IAAI,IAAd,EAAoB;IAClB,IAAI,EAAEA,MAAM,YAAYM,SAApB,CAAJ,EAAoC;MAClCN,MAAM,GAAGD,eAAe,CAACC,MAAD,CAAxB,CADkC,CACD;IAClC;;IAED,OAAOT,WAAW,CAACgB,4BAAZ,CAAyCP,MAAzC,CAAP;EACD;;EAED,OAAOT,WAAW,CAACc,kBAAZ,EAAP;AACD;AAED;;;;;;;AAMA,OAAM,SAAUG,uBAAV,CAAkCC,SAAlC,EAA2D;EAC/D,IAAIR,GAAG,GAAGF,eAAe,EAAzB;EACA,MAAMW,OAAO,GAAGD,SAAS,IAAI,IAAb,IAAqBA,SAAS,CAACE,KAAV,CAAgBnB,cAAhB,CAArC;;EACA,IAAI,CAACkB,OAAL,EAAc;IACZ,OAAOT,GAAP;EACD;;EAED,KAAK,IAAIW,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,IAAI,CAAhD,EAAmD;IACjD,MAAMG,oBAAoB,GAAGL,OAAO,CAACE,CAAD,CAApC;IAEA,MAAMI,mBAAmB,GAAGD,oBAAoB,CAACJ,KAArB,CAC1BjB,uBAD0B,CAA5B;;IAIA,IAAIsB,mBAAJ,EAAyB;MACvB,IAAIC,EAAJ;MACA,IAAIC,EAAJ;MACA,IAAIC,EAAJ;MACA,IAAIC,EAAJ;MACA,IAAIC,KAAJ;MACA,IAAIC,GAAG,GAAGvB,eAAe,EAAzB;MACA,MAAMwB,IAAI,GAAGP,mBAAmB,CAAC,CAAD,CAAnB,CAAuBQ,KAAvB,CAA6B/B,uBAA7B,CAAb;;MACA,QAAQuB,mBAAmB,CAAC,CAAD,CAAnB,CAAuBS,WAAvB,EAAR;QACE,KAAK,OAAL;UACER,EAAE,GAAGS,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAf;UACAL,EAAE,GAAGK,IAAI,CAAC,CAAD,CAAJ,KAAYI,SAAZ,GAAwBV,EAAxB,GAA6BS,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAA5C;UACAD,GAAG,GAAGA,GAAG,CAACM,eAAJ,CAAoBX,EAApB,EAAwBC,EAAxB,CAAN;UACA;;QACF,KAAK,WAAL;UACEC,EAAE,GAAGO,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAf;UACAH,EAAE,GAAGM,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAf;UACAD,GAAG,GAAGA,GAAG,CAACO,SAAJ,CAAcV,EAAd,EAAkBC,EAAlB,CAAN;UACA;;QACF,KAAK,QAAL;UACEC,KAAK,GAAGK,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAlB;UACAJ,EAAE,GAAGO,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAV,IAAuB,CAA5B;UACAH,EAAE,GAAGM,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAV,IAAuB,CAA5B;;UACA,IAAIJ,EAAE,KAAK,CAAP,IAAYC,EAAE,KAAK,CAAvB,EAA0B;YACxBE,GAAG,GAAGA,GAAG,CAACO,SAAJ,CAAcV,EAAd,EAAkBC,EAAlB,EAAsBU,MAAtB,CAA6BT,KAA7B,EAAoCQ,SAApC,CAA8C,CAACV,EAA/C,EAAmD,CAACC,EAApD,CAAN;UACD,CAFD,MAEO;YACLE,GAAG,GAAGA,GAAG,CAACQ,MAAJ,CAAWT,KAAX,CAAN;UACD;;UACD;;QACF,KAAK,OAAL;UACEA,KAAK,GAAGK,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAlB;UACAD,GAAG,GAAGA,GAAG,CAACS,KAAJ,CAAUV,KAAV,CAAN;UACA;;QACF,KAAK,OAAL;UACEA,KAAK,GAAGK,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAlB;UACAD,GAAG,GAAGA,GAAG,CAACU,KAAJ,CAAUX,KAAV,CAAN;UACA;;QACF,KAAK,QAAL;UACEC,GAAG,CAACW,CAAJ,GAAQP,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAlB;UACAD,GAAG,CAACY,CAAJ,GAAQR,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAlB;UACAD,GAAG,CAACa,CAAJ,GAAQT,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAlB;UACAD,GAAG,CAACc,CAAJ,GAAQV,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAlB;UACAD,GAAG,CAACe,CAAJ,GAAQX,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAlB;UACAD,GAAG,CAACgB,CAAJ,GAAQZ,UAAU,CAACH,IAAI,CAAC,CAAD,CAAL,CAAlB;UACA;;QACF;UACE;MAtCJ;;MAyCAtB,GAAG,GAAGA,GAAG,CAACsC,QAAJ,CAAajB,GAAb,CAAN;IACD;EACF;;EACD,OAAOrB,GAAP;AACD;AAED,OAAM,SAAUuC,uBAAV,CACJxC,MADI,EACoC;EAExC,MAAMyC,CAAC,GAAGzC,MAAM,IAAK,EAArB;EACA,MAAMiC,CAAC,GAAGQ,CAAC,CAACR,CAAF,IAAO,IAAP,GAAcQ,CAAC,CAACR,CAAhB,GAAoB,CAA9B;EACA,MAAMC,CAAC,GAAGO,CAAC,CAACP,CAAF,IAAO,IAAP,GAAcO,CAAC,CAACP,CAAhB,GAAoB,CAA9B;EACA,MAAMC,CAAC,GAAGM,CAAC,CAACN,CAAF,IAAO,IAAP,GAAcM,CAAC,CAACN,CAAhB,GAAoB,CAA9B;EACA,MAAMC,CAAC,GAAGK,CAAC,CAACL,CAAF,IAAO,IAAP,GAAcK,CAAC,CAACL,CAAhB,GAAoB,CAA9B;EACA,MAAMC,CAAC,GAAGI,CAAC,CAACJ,CAAF,IAAO,IAAP,GAAcI,CAAC,CAACJ,CAAhB,GAAoB,CAA9B;EACA,MAAMC,CAAC,GAAGG,CAAC,CAACH,CAAF,IAAO,IAAP,GAAcG,CAAC,CAACH,CAAhB,GAAoB,CAA9B;EACA,OAAO,UAAUL,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,GAA3C;AACD;AAED,OAAM,SAAUI,oBAAV,CAA+BjC,SAA/B,EAAgD;EACpD,IAAIkC,WAAJ;EACA,IAAIC,QAAJ;EACA,IAAIC,KAAJ;;EAEA,IAAIpC,SAAJ,EAAe;IACb,MAAMqC,SAAS,GAAGrD,uBAAlB,CADa,CAGb;;IACA,IAAIgB,SAAS,CAACsC,IAAV,GAAiBC,OAAjB,CAAyB,QAAzB,KAAsC,CAA1C,EAA6C;MAC3C,MAAMhD,MAAM,GAAGQ,uBAAuB,CAACC,SAAD,CAAtC;MACA,MAAMwC,gBAAgB,GAAGC,eAAe,CAAClD,MAAD,CAAxC;MAEA2C,WAAW,GAAG,CAACM,gBAAgB,CAACE,UAAlB,EAA8BF,gBAAgB,CAACG,UAA/C,CAAd;MACAR,QAAQ,GAAG,CAACK,gBAAgB,CAACL,QAAlB,CAAX;MACAC,KAAK,GAAG,CAACI,gBAAgB,CAACI,MAAlB,EAA0BJ,gBAAgB,CAACK,MAA3C,CAAR;MAEA,MAAMC,eAAe,GAAG,EAAxB;;MACA,IAAIZ,WAAW,CAAC,CAAD,CAAX,KAAmB,CAAnB,IAAwBA,WAAW,CAAC,CAAD,CAAX,KAAmB,CAA/C,EAAkD;QAChDY,eAAe,CAACC,IAAhB,CAAqB,aAAab,WAAW,CAACc,IAAZ,CAAiB,GAAjB,CAAqB,GAAvD;MACD;;MAED,IAAIZ,KAAK,CAAC,CAAD,CAAL,KAAa,CAAb,IAAkBA,KAAK,CAAC,CAAD,CAAL,KAAa,CAAnC,EAAsC;QACpCU,eAAe,CAACC,IAAhB,CAAqB,SAASX,KAAK,CAACY,IAAN,CAAW,GAAX,CAAe,GAA7C;MACD;;MAED,IAAIb,QAAQ,CAAC,CAAD,CAAR,KAAgB,CAApB,EAAuB;QACrBW,eAAe,CAACC,IAAhB,CAAqB,UAAUZ,QAAQ,CAAC,CAAD,CAAG,GAA1C;MACD;;MAEDnC,SAAS,GAAG8C,eAAe,CAACE,IAAhB,CAAqB,GAArB,CAAZ,CArB2C,CAqBL;IACvC,CAtBD,MAsBO;MACL,MAAMC,cAAc,GAAGjD,SAAS,CAACE,KAAV,CAAgB,oBAAhB,CAAvB;;MACA,IAAI+C,cAAJ,EAAoB;QAClBf,WAAW,GAAGe,cAAc,CAAC,CAAD,CAAd,CAAkBlC,KAAlB,CAAwBsB,SAAxB,CAAd;MACD;;MACD,MAAMa,WAAW,GAAGlD,SAAS,CAACE,KAAV,CAAgB,iBAAhB,CAApB;;MACA,IAAIgD,WAAJ,EAAiB;QACff,QAAQ,GAAGe,WAAW,CAAC,CAAD,CAAX,CAAenC,KAAf,CAAqBsB,SAArB,CAAX;MACD;;MACD,MAAMc,UAAU,GAAGnD,SAAS,CAACE,KAAV,CAAgB,gBAAhB,CAAnB;;MACA,IAAIiD,UAAJ,EAAgB;QACdf,KAAK,GAAGe,UAAU,CAAC,CAAD,CAAV,CAAcpC,KAAd,CAAoBsB,SAApB,CAAR;MACD;IACF;EACF;;EAED,MAAM7B,EAAE,GAAG4B,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAd,GAAoBnB,UAAU,CAACmB,KAAK,CAAC,CAAD,CAAN,CAA9B,GAAqD,CAAhE;EAEA,OAAO;IACLgB,GAAG,EAAEpD,SAAS,IAAI,EADb;IAELkC,WAAW,EAAE;MACXxB,EAAE,EACAwB,WAAW,IAAIA,WAAW,CAAC,CAAD,CAA1B,GACImB,QAAQ,CAACnB,WAAW,CAAC,CAAD,CAAZ,EAA2B,EAA3B,CADZ,GAEI,CAJK;MAKXvB,EAAE,EACAuB,WAAW,IAAIA,WAAW,CAAC,CAAD,CAA1B,GACImB,QAAQ,CAACnB,WAAW,CAAC,CAAD,CAAZ,EAA2B,EAA3B,CADZ,GAEI;IARK,CAFR;IAaLC,QAAQ,EAAE;MACRvB,KAAK,EAAEuB,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAApB,GAA0BkB,QAAQ,CAAClB,QAAQ,CAAC,CAAD,CAAT,EAAwB,EAAxB,CAAlC,GAAgE,CAD/D;MAERmB,EAAE,EACAnB,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAApB,GACIkB,QAAQ,CAAClB,QAAQ,CAAC,CAAD,CAAT,EAAwB,EAAxB,CADZ,GAEIjB,SALE;MAMRqC,EAAE,EACApB,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAApB,GACIkB,QAAQ,CAAClB,QAAQ,CAAC,CAAD,CAAT,EAAwB,EAAxB,CADZ,GAEIjB;IATE,CAbL;IAyBLkB,KAAK,EAAE;MACL5B,EADK;MAELC,EAAE,EAAE2B,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAd,GAAoBnB,UAAU,CAACmB,KAAK,CAAC,CAAD,CAAN,CAA9B,GAAqD5B;IAFpD;EAzBF,CAAP;AA8BD;;AAED,SAASgD,mBAAT,CACEjE,MADF,EAEEkE,KAFF,EAEgC;EAE9B,MAAMC,EAAE,GAAGD,KAAK,CAACtE,CAAN,GAAUI,MAAM,CAACiC,CAAjB,GAAqBiC,KAAK,CAACrE,CAAN,GAAUG,MAAM,CAACmC,CAAtC,GAA0C,CAArD;EACA,MAAMiC,EAAE,GAAGF,KAAK,CAACtE,CAAN,GAAUI,MAAM,CAACkC,CAAjB,GAAqBgC,KAAK,CAACrE,CAAN,GAAUG,MAAM,CAACoC,CAAtC,GAA0C,CAArD;EACA,OAAO;IAAExC,CAAC,EAAEuE,EAAL;IAAStE,CAAC,EAAEuE;EAAZ,CAAP;AACD;AAED;;;;;;;;;;;;;;;;;;AAgBA,OAAM,SAAUlB,eAAV,CAA0BlD,MAA1B,EAAwD;EAC5D;EAEA,MAAMqE,EAAE,GAAGJ,mBAAmB,CAACjE,MAAD,EAAS;IAAEJ,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE;EAAX,CAAT,CAA9B;EACA,MAAMyE,EAAE,GAAGL,mBAAmB,CAACjE,MAAD,EAAS;IAAEJ,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE;EAAX,CAAT,CAA9B;EAEA,MAAMkC,KAAK,GAAI,MAAMwC,IAAI,CAACC,EAAZ,GAAkBD,IAAI,CAACE,KAAL,CAAWJ,EAAE,CAACxE,CAAd,EAAiBwE,EAAE,CAACzE,CAApB,CAAlB,GAA2C,EAAzD;EACA,MAAMoC,KAAK,GAAI,MAAMuC,IAAI,CAACC,EAAZ,GAAkBD,IAAI,CAACE,KAAL,CAAWH,EAAE,CAACzE,CAAd,EAAiByE,EAAE,CAAC1E,CAApB,CAAhC;EAEA,OAAO;IACLmC,KADK;IAELC,KAFK;IAGLmB,UAAU,EAAEnD,MAAM,CAACqC,CAHd;IAILe,UAAU,EAAEpD,MAAM,CAACsC,CAJd;IAKLe,MAAM,EAAEkB,IAAI,CAACG,IAAL,CAAU1E,MAAM,CAACiC,CAAP,GAAWjC,MAAM,CAACiC,CAAlB,GAAsBjC,MAAM,CAACkC,CAAP,GAAWlC,MAAM,CAACkC,CAAlD,CALH;IAMLoB,MAAM,EAAEiB,IAAI,CAACG,IAAL,CAAU1E,MAAM,CAACmC,CAAP,GAAWnC,MAAM,CAACmC,CAAlB,GAAsBnC,MAAM,CAACoC,CAAP,GAAWpC,MAAM,CAACoC,CAAlD,CANH;IAOLQ,QAAQ,EAAEb;EAPL,CAAP;AASD;AAED,OAAM,SAAU4C,aAAV,CAAwB3E,MAAxB,EAAsD;EAC1D,IAAIiC,CAAJ;EACA,IAAIC,CAAJ;EACA,IAAIC,CAAJ;EACA,IAAIC,CAAJ;;EAEA,IAAIpC,MAAJ,EAAY;IACViC,CAAC,GAAGjC,MAAM,CAACiC,CAAP,IAAY,IAAZ,GAAmB,CAAnB,GAAuBjC,MAAM,CAACiC,CAAlC;IACAG,CAAC,GAAGpC,MAAM,CAACoC,CAAP,IAAY,IAAZ,GAAmB,CAAnB,GAAuBpC,MAAM,CAACoC,CAAlC;IACAF,CAAC,GAAGlC,MAAM,CAACkC,CAAX;IACAC,CAAC,GAAGnC,MAAM,CAACmC,CAAX;EACD,CALD,MAKO;IACLF,CAAC,GAAGG,CAAC,GAAG,CAAR;EACD;;EACD,OAAO;IACLnB,EAAE,EAAEiB,CAAC,GAAGqC,IAAI,CAACG,IAAL,CAAUzC,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAH,GAA8BD,CAD9B;IAELf,EAAE,EAAEiB,CAAC,GAAGoC,IAAI,CAACG,IAAL,CAAUvC,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAH,GAA8BA;EAF9B,CAAP;AAID;AAED,OAAM,SAAUwC,gBAAV,CAA2B5E,MAA3B,EAAyD;EAC7D,IAAIF,CAAC,GAAG;IAAEF,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE;EAAX,CAAR;;EACA,IAAIG,MAAJ,EAAY;IACVF,CAAC,GAAGmE,mBAAmB,CAACjE,MAAD,EAASF,CAAT,CAAvB;EACD;;EAED,OAAO;IACLuB,KAAK,EAAEpC,KAAK,CAAC4F,SAAN,CAAgB5F,KAAK,CAAC6F,KAAN,CAAYP,IAAI,CAACE,KAAL,CAAW3E,CAAC,CAACD,CAAb,EAAgBC,CAAC,CAACF,CAAlB,CAAZ,IAAoC,EAApD;EADF,CAAP;AAGD;AAED,OAAM,SAAUmF,mBAAV,CACJ/E,MADI,EAC0B;EAE9B,OAAO;IACLmB,EAAE,EAAGnB,MAAM,IAAIA,MAAM,CAACqC,CAAlB,IAAwB,CADvB;IAELjB,EAAE,EAAGpB,MAAM,IAAIA,MAAM,CAACsC,CAAlB,IAAwB;EAFvB,CAAP;AAID;AAED;;;;AAGA,OAAM,SAAU0C,cAAV,CAAyBd,KAAzB,EAAiDlE,MAAjD,EAAkE;EACtE,MAAMiF,GAAG,GAAGtF,cAAc,CAACuE,KAAK,CAACtE,CAAP,EAAUsE,KAAK,CAACrE,CAAhB,CAAd,CAAiCqF,eAAjC,CAAiDlF,MAAjD,CAAZ;EACA,OAAO,IAAId,KAAJ,CAAU+F,GAAG,CAACrF,CAAd,EAAiBqF,GAAG,CAACpF,CAArB,CAAP;AACD;AAED;;;;AAGA,OAAM,SAAUsF,aAAV,CAAwBC,IAAxB,EAAoCpF,MAApC,EAAqD;EACzD,OAAO,IAAIb,IAAJ,CACL6F,cAAc,CAACI,IAAI,CAACC,KAAN,EAAarF,MAAb,CADT,EAELgF,cAAc,CAACI,IAAI,CAACE,GAAN,EAAWtF,MAAX,CAFT,CAAP;AAID;AAED;;;;AAGA,OAAM,SAAUuF,iBAAV,CAA4BC,QAA5B,EAAgDxF,MAAhD,EAAiE;EACrE,IAAIyF,MAAM,GAAGD,QAAQ,YAAYnG,QAApB,GAA+BmG,QAAQ,CAACC,MAAxC,GAAiDD,QAA9D;;EACA,IAAI,CAACE,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAL,EAA4B;IAC1BA,MAAM,GAAG,EAAT;EACD;;EAED,OAAO,IAAIpG,QAAJ,CAAaoG,MAAM,CAACG,GAAP,CAAY9F,CAAD,IAAOkF,cAAc,CAAClF,CAAD,EAAIE,MAAJ,CAAhC,CAAb,CAAP;AACD;AAED,OAAM,SAAU6F,kBAAV,CACJC,IADI,EAEJ9F,MAFI,EAEa;EAEjB,MAAMF,CAAC,GAAGP,WAAW,CAACI,cAAZ,EAAV;EAEAG,CAAC,CAACF,CAAF,GAAMkG,IAAI,CAAClG,CAAX;EACAE,CAAC,CAACD,CAAF,GAAMiG,IAAI,CAACjG,CAAX;EACA,MAAMkG,OAAO,GAAGjG,CAAC,CAACoF,eAAF,CAAkBlF,MAAlB,CAAhB;EAEAF,CAAC,CAACF,CAAF,GAAMkG,IAAI,CAAClG,CAAL,GAASkG,IAAI,CAACE,KAApB;EACAlG,CAAC,CAACD,CAAF,GAAMiG,IAAI,CAACjG,CAAX;EACA,MAAMoG,OAAO,GAAGnG,CAAC,CAACoF,eAAF,CAAkBlF,MAAlB,CAAhB;EAEAF,CAAC,CAACF,CAAF,GAAMkG,IAAI,CAAClG,CAAL,GAASkG,IAAI,CAACE,KAApB;EACAlG,CAAC,CAACD,CAAF,GAAMiG,IAAI,CAACjG,CAAL,GAASiG,IAAI,CAACI,MAApB;EACA,MAAMC,OAAO,GAAGrG,CAAC,CAACoF,eAAF,CAAkBlF,MAAlB,CAAhB;EAEAF,CAAC,CAACF,CAAF,GAAMkG,IAAI,CAAClG,CAAX;EACAE,CAAC,CAACD,CAAF,GAAMiG,IAAI,CAACjG,CAAL,GAASiG,IAAI,CAACI,MAApB;EACA,MAAME,OAAO,GAAGtG,CAAC,CAACoF,eAAF,CAAkBlF,MAAlB,CAAhB;EAEA,MAAMqG,IAAI,GAAG9B,IAAI,CAAC+B,GAAL,CAASP,OAAO,CAACnG,CAAjB,EAAoBqG,OAAO,CAACrG,CAA5B,EAA+BuG,OAAO,CAACvG,CAAvC,EAA0CwG,OAAO,CAACxG,CAAlD,CAAb;EACA,MAAM2G,IAAI,GAAGhC,IAAI,CAACiC,GAAL,CAAST,OAAO,CAACnG,CAAjB,EAAoBqG,OAAO,CAACrG,CAA5B,EAA+BuG,OAAO,CAACvG,CAAvC,EAA0CwG,OAAO,CAACxG,CAAlD,CAAb;EACA,MAAM6G,IAAI,GAAGlC,IAAI,CAAC+B,GAAL,CAASP,OAAO,CAAClG,CAAjB,EAAoBoG,OAAO,CAACpG,CAA5B,EAA+BsG,OAAO,CAACtG,CAAvC,EAA0CuG,OAAO,CAACvG,CAAlD,CAAb;EACA,MAAM6G,IAAI,GAAGnC,IAAI,CAACiC,GAAL,CAAST,OAAO,CAAClG,CAAjB,EAAoBoG,OAAO,CAACpG,CAA5B,EAA+BsG,OAAO,CAACtG,CAAvC,EAA0CuG,OAAO,CAACvG,CAAlD,CAAb;EAEA,OAAO,IAAIT,SAAJ,CAAciH,IAAd,EAAoBI,IAApB,EAA0BF,IAAI,GAAGF,IAAjC,EAAuCK,IAAI,GAAGD,IAA9C,CAAP;AACD","names":["Angle","Point","Line","Rectangle","Polyline","createSvgElement","svgDocument","transformRegex","transformSeparatorRegex","transformationListRegex","createSVGPoint","x","y","p","createSVGMatrix","matrix","mat","source","target","key","createSVGTransform","DOMMatrix","createSVGTransformFromMatrix","transformStringToMatrix","transform","matches","match","i","n","length","transformationString","transformationMatch","sx","sy","tx","ty","angle","ctm","args","split","toLowerCase","parseFloat","undefined","scaleNonUniform","translate","rotate","skewX","skewY","a","b","c","d","e","f","multiply","matrixToTransformString","m","parseTransformString","translation","rotation","scale","separator","trim","indexOf","decomposedMatrix","decomposeMatrix","translateX","translateY","scaleX","scaleY","transformations","push","join","translateMatch","rotateMatch","scaleMatch","raw","parseInt","cx","cy","deltaTransformPoint","point","dx","dy","px","py","Math","PI","atan2","sqrt","matrixToScale","matrixToRotation","normalize","toDeg","matrixToTranslation","transformPoint","ret","matrixTransform","transformLine","line","start","end","transformPolyline","polyline","points","Array","isArray","map","transformRectangle","rect","corner1","width","corner2","height","corner3","corner4","minX","min","maxX","max","minY","maxY"],"sourceRoot":"","sources":["../../../src/util/dom/matrix.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}