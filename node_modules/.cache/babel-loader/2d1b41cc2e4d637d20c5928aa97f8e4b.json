{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { isAnyArray } from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isAnyArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport { rescale as default };","map":{"version":3,"names":["isAnyArray","max","min","rescale","input","options","arguments","length","undefined","TypeError","output","Array","currentMin","currentMax","RangeError","_options$min","minValue","autoMinMax","_options$max","maxValue","factor","i","default"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/ml-array-rescale/lib-es6/index.js"],"sourcesContent":["import { isAnyArray } from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isAnyArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport { rescale as default };\n"],"mappings":";AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EACtB,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;;EAEA,IAAI,CAACN,UAAU,CAACI,KAAD,CAAf,EAAwB;IACtB,MAAM,IAAIK,SAAJ,CAAc,wBAAd,CAAN;EACD,CAFD,MAEO,IAAIL,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;IAC7B,MAAM,IAAIE,SAAJ,CAAc,yBAAd,CAAN;EACD;;EAED,IAAIC,MAAJ;;EAEA,IAAIL,OAAO,CAACK,MAAR,KAAmBF,SAAvB,EAAkC;IAChC,IAAI,CAACR,UAAU,CAACK,OAAO,CAACK,MAAT,CAAf,EAAiC;MAC/B,MAAM,IAAID,SAAJ,CAAc,6CAAd,CAAN;IACD;;IAEDC,MAAM,GAAGL,OAAO,CAACK,MAAjB;EACD,CAND,MAMO;IACLA,MAAM,GAAG,IAAIC,KAAJ,CAAUP,KAAK,CAACG,MAAhB,CAAT;EACD;;EAED,IAAIK,UAAU,GAAGV,GAAG,CAACE,KAAD,CAApB;EACA,IAAIS,UAAU,GAAGZ,GAAG,CAACG,KAAD,CAApB;;EAEA,IAAIQ,UAAU,KAAKC,UAAnB,EAA+B;IAC7B,MAAM,IAAIC,UAAJ,CAAe,6EAAf,CAAN;EACD;;EAED,IAAIC,YAAY,GAAGV,OAAO,CAACH,GAA3B;EAAA,IACIc,QAAQ,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0BV,OAAO,CAACY,UAAR,GAAqBL,UAArB,GAAkC,CAA5D,GAAgEG,YAD/E;EAAA,IAEIG,YAAY,GAAGb,OAAO,CAACJ,GAF3B;EAAA,IAGIkB,QAAQ,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0Bb,OAAO,CAACY,UAAR,GAAqBJ,UAArB,GAAkC,CAA5D,GAAgEK,YAH/E;;EAKA,IAAIF,QAAQ,IAAIG,QAAhB,EAA0B;IACxB,MAAM,IAAIL,UAAJ,CAAe,4CAAf,CAAN;EACD;;EAED,IAAIM,MAAM,GAAG,CAACD,QAAQ,GAAGH,QAAZ,KAAyBH,UAAU,GAAGD,UAAtC,CAAb;;EAEA,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,KAAK,CAACG,MAA1B,EAAkCc,CAAC,EAAnC,EAAuC;IACrCX,MAAM,CAACW,CAAD,CAAN,GAAY,CAACjB,KAAK,CAACiB,CAAD,CAAL,GAAWT,UAAZ,IAA0BQ,MAA1B,GAAmCJ,QAA/C;EACD;;EAED,OAAON,MAAP;AACD;;AAED,SAASP,OAAO,IAAImB,OAApB"},"metadata":{},"sourceType":"module"}