{"ast":null,"code":"var DEFAULT_WEIGHT_FUNC = function DEFAULT_WEIGHT_FUNC() {\n  return 1;\n};\n\nexport function floydWarshall(graph, weightFn, edgeFn) {\n  return runFloydWarshall(graph, weightFn || DEFAULT_WEIGHT_FUNC, edgeFn || function (v) {\n    return graph.outEdges(v);\n  });\n}\n\nfunction runFloydWarshall(graph, weightFn, edgeFn) {\n  var results = {};\n  var nodes = graph.nodes();\n  nodes.forEach(function (node) {\n    var v = String(node);\n    results[v] = {};\n    results[v][v] = {\n      distance: 0\n    };\n    nodes.forEach(function (w) {\n      if (node !== w) {\n        results[v][String(w)] = {\n          distance: Number.POSITIVE_INFINITY\n        };\n      }\n    });\n    edgeFn(node).forEach(function (edge) {\n      var w = edge.v === node ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][String(w)] = {\n        distance: d,\n        predecessor: node\n      };\n    });\n  });\n  nodes.forEach(function (nodek) {\n    var k = String(nodek);\n    var rowK = results[k];\n    nodes.forEach(function (nodei) {\n      var i = String(nodei);\n      var rowI = results[i];\n      nodes.forEach(function (nodej) {\n        var j = String(nodej);\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n  return results;\n}\n\nexport default floydWarshall;","map":{"version":3,"names":["DEFAULT_WEIGHT_FUNC","floydWarshall","graph","weightFn","edgeFn","runFloydWarshall","v","outEdges","results","nodes","forEach","node","String","distance","w","Number","POSITIVE_INFINITY","edge","d","predecessor","nodek","k","rowK","nodei","i","rowI","nodej","j","ik","kj","ij","altDistance"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/graphlib/es/algorithm/floyd-warshall.js"],"sourcesContent":["var DEFAULT_WEIGHT_FUNC = function DEFAULT_WEIGHT_FUNC() {\n  return 1;\n};\n\nexport function floydWarshall(graph, weightFn, edgeFn) {\n  return runFloydWarshall(graph, weightFn || DEFAULT_WEIGHT_FUNC, edgeFn || function (v) {\n    return graph.outEdges(v);\n  });\n}\n\nfunction runFloydWarshall(graph, weightFn, edgeFn) {\n  var results = {};\n  var nodes = graph.nodes();\n  nodes.forEach(function (node) {\n    var v = String(node);\n    results[v] = {};\n    results[v][v] = {\n      distance: 0\n    };\n    nodes.forEach(function (w) {\n      if (node !== w) {\n        results[v][String(w)] = {\n          distance: Number.POSITIVE_INFINITY\n        };\n      }\n    });\n    edgeFn(node).forEach(function (edge) {\n      var w = edge.v === node ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][String(w)] = {\n        distance: d,\n        predecessor: node\n      };\n    });\n  });\n  nodes.forEach(function (nodek) {\n    var k = String(nodek);\n    var rowK = results[k];\n    nodes.forEach(function (nodei) {\n      var i = String(nodei);\n      var rowI = results[i];\n      nodes.forEach(function (nodej) {\n        var j = String(nodej);\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n  return results;\n}\n\nexport default floydWarshall;"],"mappings":"AAAA,IAAIA,mBAAmB,GAAG,SAASA,mBAAT,GAA+B;EACvD,OAAO,CAAP;AACD,CAFD;;AAIA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,MAAxC,EAAgD;EACrD,OAAOC,gBAAgB,CAACH,KAAD,EAAQC,QAAQ,IAAIH,mBAApB,EAAyCI,MAAM,IAAI,UAAUE,CAAV,EAAa;IACrF,OAAOJ,KAAK,CAACK,QAAN,CAAeD,CAAf,CAAP;EACD,CAFsB,CAAvB;AAGD;;AAED,SAASD,gBAAT,CAA0BH,KAA1B,EAAiCC,QAAjC,EAA2CC,MAA3C,EAAmD;EACjD,IAAII,OAAO,GAAG,EAAd;EACA,IAAIC,KAAK,GAAGP,KAAK,CAACO,KAAN,EAAZ;EACAA,KAAK,CAACC,OAAN,CAAc,UAAUC,IAAV,EAAgB;IAC5B,IAAIL,CAAC,GAAGM,MAAM,CAACD,IAAD,CAAd;IACAH,OAAO,CAACF,CAAD,CAAP,GAAa,EAAb;IACAE,OAAO,CAACF,CAAD,CAAP,CAAWA,CAAX,IAAgB;MACdO,QAAQ,EAAE;IADI,CAAhB;IAGAJ,KAAK,CAACC,OAAN,CAAc,UAAUI,CAAV,EAAa;MACzB,IAAIH,IAAI,KAAKG,CAAb,EAAgB;QACdN,OAAO,CAACF,CAAD,CAAP,CAAWM,MAAM,CAACE,CAAD,CAAjB,IAAwB;UACtBD,QAAQ,EAAEE,MAAM,CAACC;QADK,CAAxB;MAGD;IACF,CAND;IAOAZ,MAAM,CAACO,IAAD,CAAN,CAAaD,OAAb,CAAqB,UAAUO,IAAV,EAAgB;MACnC,IAAIH,CAAC,GAAGG,IAAI,CAACX,CAAL,KAAWK,IAAX,GAAkBM,IAAI,CAACH,CAAvB,GAA2BG,IAAI,CAACX,CAAxC;MACA,IAAIY,CAAC,GAAGf,QAAQ,CAACc,IAAD,CAAhB;MACAT,OAAO,CAACF,CAAD,CAAP,CAAWM,MAAM,CAACE,CAAD,CAAjB,IAAwB;QACtBD,QAAQ,EAAEK,CADY;QAEtBC,WAAW,EAAER;MAFS,CAAxB;IAID,CAPD;EAQD,CArBD;EAsBAF,KAAK,CAACC,OAAN,CAAc,UAAUU,KAAV,EAAiB;IAC7B,IAAIC,CAAC,GAAGT,MAAM,CAACQ,KAAD,CAAd;IACA,IAAIE,IAAI,GAAGd,OAAO,CAACa,CAAD,CAAlB;IACAZ,KAAK,CAACC,OAAN,CAAc,UAAUa,KAAV,EAAiB;MAC7B,IAAIC,CAAC,GAAGZ,MAAM,CAACW,KAAD,CAAd;MACA,IAAIE,IAAI,GAAGjB,OAAO,CAACgB,CAAD,CAAlB;MACAf,KAAK,CAACC,OAAN,CAAc,UAAUgB,KAAV,EAAiB;QAC7B,IAAIC,CAAC,GAAGf,MAAM,CAACc,KAAD,CAAd;QACA,IAAIE,EAAE,GAAGH,IAAI,CAACJ,CAAD,CAAb;QACA,IAAIQ,EAAE,GAAGP,IAAI,CAACK,CAAD,CAAb;QACA,IAAIG,EAAE,GAAGL,IAAI,CAACE,CAAD,CAAb;QACA,IAAII,WAAW,GAAGH,EAAE,CAACf,QAAH,GAAcgB,EAAE,CAAChB,QAAnC;;QAEA,IAAIkB,WAAW,GAAGD,EAAE,CAACjB,QAArB,EAA+B;UAC7BiB,EAAE,CAACjB,QAAH,GAAckB,WAAd;UACAD,EAAE,CAACX,WAAH,GAAiBU,EAAE,CAACV,WAApB;QACD;MACF,CAXD;IAYD,CAfD;EAgBD,CAnBD;EAoBA,OAAOX,OAAP;AACD;;AAED,eAAeP,aAAf"},"metadata":{},"sourceType":"module"}