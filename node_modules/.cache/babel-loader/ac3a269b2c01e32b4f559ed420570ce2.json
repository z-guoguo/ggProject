{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { gl } from '@antv/g-webgpu-core';\nimport { extractUniforms } from '../utils/uniform';\nimport { blendEquationMap, blendFuncMap, cullFaceMap, depthFuncMap, primitiveMap, stencilFuncMap, stencilOpMap } from './constants';\n/**\n * adaptor for regl.DrawCommand\n */\n\nvar ReglModel = /*#__PURE__*/function () {\n  function ReglModel(reGl, options) {\n    _classCallCheck(this, ReglModel);\n\n    this.reGl = void 0;\n    this.drawCommand = void 0;\n    this.uniforms = {};\n    this.reGl = reGl;\n    var vs = options.vs,\n        fs = options.fs,\n        defines = options.defines,\n        attributes = options.attributes,\n        uniforms = options.uniforms,\n        primitive = options.primitive,\n        count = options.count,\n        elements = options.elements,\n        depth = options.depth,\n        blend = options.blend,\n        stencil = options.stencil,\n        cull = options.cull,\n        instances = options.instances,\n        scissor = options.scissor,\n        viewport = options.viewport;\n    var reglUniforms = {};\n\n    if (uniforms) {\n      this.uniforms = extractUniforms(uniforms);\n      Object.keys(uniforms).forEach(function (uniformName) {\n        // use regl prop API\n        // @ts-ignore\n        reglUniforms[uniformName] = reGl.prop(uniformName);\n      });\n    }\n\n    var reglAttributes = {};\n    Object.keys(attributes).forEach(function (name) {\n      reglAttributes[name] = attributes[name].get();\n    });\n    var defineStmts = defines && this.generateDefines(defines) || '';\n    var drawParams = {\n      attributes: reglAttributes,\n      frag: \"#ifdef GL_FRAGMENT_PRECISION_HIGH\\n  precision highp float;\\n#else\\n  precision mediump float;\\n#endif\\n\".concat(defineStmts, \"\\n\").concat(fs),\n      uniforms: reglUniforms,\n      vert: \"\\n\".concat(defineStmts, \"\\n\").concat(vs),\n      primitive: primitiveMap[primitive === undefined ? gl.TRIANGLES : primitive]\n    };\n\n    if (instances) {\n      drawParams.instances = instances;\n    } // elements 中可能包含 count，此时不应传入\n\n\n    if (count) {\n      drawParams.count = count;\n    }\n\n    if (elements) {\n      drawParams.elements = elements.get();\n    }\n\n    if (scissor) {\n      drawParams.scissor = scissor;\n    }\n\n    if (viewport) {\n      drawParams.viewport = viewport;\n    }\n\n    this.initDepthDrawParams({\n      depth: depth\n    }, drawParams);\n    this.initBlendDrawParams({\n      blend: blend\n    }, drawParams);\n    this.initStencilDrawParams({\n      stencil: stencil\n    }, drawParams);\n    this.initCullDrawParams({\n      cull: cull\n    }, drawParams);\n    this.drawCommand = reGl(drawParams);\n  }\n\n  _createClass(ReglModel, [{\n    key: \"addUniforms\",\n    value: function addUniforms(uniforms) {\n      this.uniforms = _objectSpread(_objectSpread({}, this.uniforms), extractUniforms(uniforms));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(options) {\n      var uniforms = _objectSpread(_objectSpread({}, this.uniforms), extractUniforms(options.uniforms || {}));\n\n      var reglDrawProps = {};\n      Object.keys(uniforms).forEach(function (uniformName) {\n        var type = _typeof(uniforms[uniformName]);\n\n        if (type === 'boolean' || type === 'number' || Array.isArray(uniforms[uniformName]) || // @ts-ignore\n        uniforms[uniformName].BYTES_PER_ELEMENT) {\n          reglDrawProps[uniformName] = uniforms[uniformName];\n        } else if (type === 'string') {// TODO: image url\n        } else {\n          reglDrawProps[uniformName] = uniforms[uniformName].get();\n        }\n      });\n      this.drawCommand(reglDrawProps);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {// don't need do anything since we will call `rendererService.cleanup()`\n    }\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer\n     */\n\n  }, {\n    key: \"initDepthDrawParams\",\n    value: function initDepthDrawParams(_ref, drawParams) {\n      var depth = _ref.depth;\n\n      if (depth) {\n        drawParams.depth = {\n          enable: depth.enable === undefined ? true : !!depth.enable,\n          mask: depth.mask === undefined ? true : !!depth.mask,\n          func: depthFuncMap[depth.func || gl.LESS],\n          range: depth.range || [0, 1]\n        };\n      }\n    }\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#blending\n     */\n\n  }, {\n    key: \"initBlendDrawParams\",\n    value: function initBlendDrawParams(_ref2, drawParams) {\n      var blend = _ref2.blend;\n\n      if (blend) {\n        var enable = blend.enable,\n            func = blend.func,\n            equation = blend.equation,\n            _blend$color = blend.color,\n            color = _blend$color === void 0 ? [0, 0, 0, 0] : _blend$color; // @ts-ignore\n\n        drawParams.blend = {\n          enable: !!enable,\n          func: {\n            srcRGB: blendFuncMap[func && func.srcRGB || gl.SRC_ALPHA],\n            srcAlpha: blendFuncMap[func && func.srcAlpha || gl.SRC_ALPHA],\n            dstRGB: blendFuncMap[func && func.dstRGB || gl.ONE_MINUS_SRC_ALPHA],\n            dstAlpha: blendFuncMap[func && func.dstAlpha || gl.ONE_MINUS_SRC_ALPHA]\n          },\n          equation: {\n            rgb: blendEquationMap[equation && equation.rgb || gl.FUNC_ADD],\n            alpha: blendEquationMap[equation && equation.alpha || gl.FUNC_ADD]\n          },\n          color: color\n        };\n      }\n    }\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n     */\n\n  }, {\n    key: \"initStencilDrawParams\",\n    value: function initStencilDrawParams(_ref3, drawParams) {\n      var stencil = _ref3.stencil;\n\n      if (stencil) {\n        var enable = stencil.enable,\n            _stencil$mask = stencil.mask,\n            mask = _stencil$mask === void 0 ? -1 : _stencil$mask,\n            _stencil$func = stencil.func,\n            func = _stencil$func === void 0 ? {\n          cmp: gl.ALWAYS,\n          ref: 0,\n          mask: -1\n        } : _stencil$func,\n            _stencil$opFront = stencil.opFront,\n            opFront = _stencil$opFront === void 0 ? {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP\n        } : _stencil$opFront,\n            _stencil$opBack = stencil.opBack,\n            opBack = _stencil$opBack === void 0 ? {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP\n        } : _stencil$opBack;\n        drawParams.stencil = {\n          enable: !!enable,\n          mask: mask,\n          func: _objectSpread(_objectSpread({}, func), {}, {\n            cmp: stencilFuncMap[func.cmp]\n          }),\n          opFront: {\n            fail: stencilOpMap[opFront.fail],\n            zfail: stencilOpMap[opFront.zfail],\n            zpass: stencilOpMap[opFront.zpass]\n          },\n          opBack: {\n            fail: stencilOpMap[opBack.fail],\n            zfail: stencilOpMap[opBack.zfail],\n            zpass: stencilOpMap[opBack.zpass]\n          }\n        };\n      }\n    }\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n     */\n\n  }, {\n    key: \"initCullDrawParams\",\n    value: function initCullDrawParams(_ref4, drawParams) {\n      var cull = _ref4.cull;\n\n      if (cull) {\n        var enable = cull.enable,\n            _cull$face = cull.face,\n            face = _cull$face === void 0 ? gl.BACK : _cull$face;\n        drawParams.cull = {\n          enable: !!enable,\n          face: cullFaceMap[face]\n        };\n      }\n    }\n  }, {\n    key: \"generateDefines\",\n    value: function generateDefines(defines) {\n      return Object.keys(defines).map(function (name) {\n        return \"#define \".concat(name, \" \").concat(Number(defines[name]));\n      }).join('\\n');\n    }\n  }]);\n\n  return ReglModel;\n}();\n\nexport { ReglModel as default };","map":{"version":3,"mappings":"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","names":["gl","extractUniforms","blendEquationMap","blendFuncMap","cullFaceMap","depthFuncMap","primitiveMap","stencilFuncMap","stencilOpMap","ReglModel","reGl","options","_classCallCheck","drawCommand","uniforms","vs","fs","defines","attributes","primitive","count","elements","depth","blend","stencil","cull","instances","scissor","viewport","reglUniforms","Object","keys","forEach","uniformName","prop","reglAttributes","name","get","defineStmts","generateDefines","drawParams","frag","vert","undefined","TRIANGLES","initDepthDrawParams","initBlendDrawParams","initStencilDrawParams","initCullDrawParams","reglDrawProps","type","Array","isArray","BYTES_PER_ELEMENT","enable","mask","func","LESS","range","equation","color","srcRGB","SRC_ALPHA","srcAlpha","dstRGB","ONE_MINUS_SRC_ALPHA","dstAlpha","rgb","FUNC_ADD","alpha","cmp","ALWAYS","ref","opFront","fail","KEEP","zfail","zpass","opBack","face","BACK","map","Number","join"],"sources":["../../src/webgl/ReglModel.ts"],"sourcesContent":["import {\n  gl,\n  IModel,\n  IModelDrawOptions,\n  IModelInitializationOptions,\n  IUniform,\n} from '@antv/g-webgpu-core';\nimport regl from 'regl';\nimport { extractUniforms } from '../utils/uniform';\nimport {\n  blendEquationMap,\n  blendFuncMap,\n  cullFaceMap,\n  depthFuncMap,\n  primitiveMap,\n  stencilFuncMap,\n  stencilOpMap,\n} from './constants';\nimport ReglAttribute from './ReglAttribute';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglTexture2D from './ReglTexture2D';\n\n/**\n * adaptor for regl.DrawCommand\n */\nexport default class ReglModel implements IModel {\n  private reGl: regl.Regl;\n  private drawCommand: regl.DrawCommand;\n  private uniforms: {\n    [key: string]: IUniform;\n  } = {};\n\n  constructor(reGl: regl.Regl, options: IModelInitializationOptions) {\n    this.reGl = reGl;\n    const {\n      vs,\n      fs,\n      defines,\n      attributes,\n      uniforms,\n      primitive,\n      count,\n      elements,\n      depth,\n      blend,\n      stencil,\n      cull,\n      instances,\n      scissor,\n      // @ts-ignore\n      viewport,\n    } = options;\n    const reglUniforms: { [key: string]: IUniform } = {};\n    if (uniforms) {\n      this.uniforms = extractUniforms(uniforms);\n      Object.keys(uniforms).forEach((uniformName) => {\n        // use regl prop API\n        // @ts-ignore\n        reglUniforms[uniformName] = reGl.prop(uniformName);\n      });\n    }\n\n    const reglAttributes: { [key: string]: regl.Attribute } = {};\n    Object.keys(attributes).forEach((name: string) => {\n      reglAttributes[name] = (attributes[name] as ReglAttribute).get();\n    });\n\n    const defineStmts = (defines && this.generateDefines(defines)) || '';\n    const drawParams: regl.DrawConfig = {\n      attributes: reglAttributes,\n      frag: `#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n${defineStmts}\n${fs}`,\n      uniforms: reglUniforms,\n      vert: `\n${defineStmts}\n${vs}`,\n      primitive:\n        primitiveMap[primitive === undefined ? gl.TRIANGLES : primitive],\n    };\n    if (instances) {\n      drawParams.instances = instances;\n    }\n\n    // elements 中可能包含 count，此时不应传入\n    if (count) {\n      drawParams.count = count;\n    }\n\n    if (elements) {\n      drawParams.elements = (elements as ReglElements).get();\n    }\n\n    if (scissor) {\n      drawParams.scissor = scissor;\n    }\n\n    if (viewport) {\n      drawParams.viewport = viewport;\n    }\n\n    this.initDepthDrawParams({ depth }, drawParams);\n    this.initBlendDrawParams({ blend }, drawParams);\n    this.initStencilDrawParams({ stencil }, drawParams);\n    this.initCullDrawParams({ cull }, drawParams);\n\n    this.drawCommand = reGl(drawParams);\n  }\n\n  public addUniforms(uniforms: { [key: string]: IUniform }) {\n    this.uniforms = {\n      ...this.uniforms,\n      ...extractUniforms(uniforms),\n    };\n  }\n\n  public draw(options: IModelDrawOptions) {\n    const uniforms: {\n      [key: string]: IUniform;\n    } = {\n      ...this.uniforms,\n      ...extractUniforms(options.uniforms || {}),\n    };\n\n    const reglDrawProps: {\n      [key: string]:\n        | regl.Framebuffer\n        | regl.Texture2D\n        | number\n        | number[]\n        | boolean;\n    } = {};\n\n    Object.keys(uniforms).forEach((uniformName: string) => {\n      const type = typeof uniforms[uniformName];\n      if (\n        type === 'boolean' ||\n        type === 'number' ||\n        Array.isArray(uniforms[uniformName]) ||\n        // @ts-ignore\n        uniforms[uniformName].BYTES_PER_ELEMENT\n      ) {\n        reglDrawProps[uniformName] = uniforms[uniformName] as\n          | number\n          | number[]\n          | boolean;\n      } else if (type === 'string') {\n        // TODO: image url\n      } else {\n        reglDrawProps[uniformName] = (uniforms[uniformName] as\n          | ReglFramebuffer\n          | ReglTexture2D).get();\n      }\n    });\n    this.drawCommand(reglDrawProps);\n  }\n\n  public destroy() {\n    // don't need do anything since we will call `rendererService.cleanup()`\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer\n   */\n  private initDepthDrawParams(\n    { depth }: Pick<IModelInitializationOptions, 'depth'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (depth) {\n      drawParams.depth = {\n        enable: depth.enable === undefined ? true : !!depth.enable,\n        mask: depth.mask === undefined ? true : !!depth.mask,\n        func: depthFuncMap[depth.func || gl.LESS],\n        range: depth.range || [0, 1],\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#blending\n   */\n  private initBlendDrawParams(\n    { blend }: Pick<IModelInitializationOptions, 'blend'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (blend) {\n      const { enable, func, equation, color = [0, 0, 0, 0] } = blend;\n      // @ts-ignore\n      drawParams.blend = {\n        enable: !!enable,\n        func: {\n          srcRGB: blendFuncMap[(func && func.srcRGB) || gl.SRC_ALPHA],\n          srcAlpha: blendFuncMap[(func && func.srcAlpha) || gl.SRC_ALPHA],\n          dstRGB: blendFuncMap[(func && func.dstRGB) || gl.ONE_MINUS_SRC_ALPHA],\n          dstAlpha:\n            blendFuncMap[(func && func.dstAlpha) || gl.ONE_MINUS_SRC_ALPHA],\n        },\n        equation: {\n          rgb: blendEquationMap[(equation && equation.rgb) || gl.FUNC_ADD],\n          alpha: blendEquationMap[(equation && equation.alpha) || gl.FUNC_ADD],\n        },\n        color,\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n   */\n  private initStencilDrawParams(\n    { stencil }: Pick<IModelInitializationOptions, 'stencil'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (stencil) {\n      const {\n        enable,\n        mask = -1,\n        func = {\n          cmp: gl.ALWAYS,\n          ref: 0,\n          mask: -1,\n        },\n        opFront = {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP,\n        },\n        opBack = {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP,\n        },\n      } = stencil;\n      drawParams.stencil = {\n        enable: !!enable,\n        mask,\n        func: {\n          ...func,\n          cmp: stencilFuncMap[func.cmp],\n        },\n        opFront: {\n          fail: stencilOpMap[opFront.fail],\n          zfail: stencilOpMap[opFront.zfail],\n          zpass: stencilOpMap[opFront.zpass],\n        },\n        opBack: {\n          fail: stencilOpMap[opBack.fail],\n          zfail: stencilOpMap[opBack.zfail],\n          zpass: stencilOpMap[opBack.zpass],\n        },\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n   */\n  private initCullDrawParams(\n    { cull }: Pick<IModelInitializationOptions, 'cull'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (cull) {\n      const { enable, face = gl.BACK } = cull;\n      drawParams.cull = {\n        enable: !!enable,\n        face: cullFaceMap[face],\n      };\n    }\n  }\n\n  private generateDefines(defines: Record<string, number | boolean>) {\n    return Object.keys(defines)\n      .map((name) => `#define ${name} ${Number(defines[name])}`)\n      .join('\\n');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}