{"ast":null,"code":"import { distance } from './util';\nvar EPSILON = 0.0001;\n/**\n * 使用牛顿切割法求最近的点\n * @param {number[]} xArr      点的 x 数组\n * @param {number[]} yArr      点的 y 数组\n * @param {number}   x         指定的点 x\n * @param {number}   y         指定的点 y\n * @param {Function} tCallback 差值函数\n */\n\nexport function nearestPoint(xArr, yArr, x, y, tCallback, length) {\n  var t;\n  var d = Infinity;\n  var v0 = [x, y];\n  var segNum = 20;\n\n  if (length && length > 200) {\n    segNum = length / 10;\n  }\n\n  var increaseRate = 1 / segNum;\n  var interval = increaseRate / 10;\n\n  for (var i = 0; i <= segNum; i++) {\n    var _t = i * increaseRate;\n\n    var v1 = [tCallback.apply(null, xArr.concat([_t])), tCallback.apply(null, yArr.concat([_t]))];\n    var d1 = distance(v0[0], v0[1], v1[0], v1[1]);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  } // 提前终止\n\n\n  if (t === 0) {\n    return {\n      x: xArr[0],\n      y: yArr[0]\n    };\n  }\n\n  if (t === 1) {\n    var count = xArr.length;\n    return {\n      x: xArr[count - 1],\n      y: yArr[count - 1]\n    };\n  }\n\n  d = Infinity;\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval;\n    var v1 = [tCallback.apply(null, xArr.concat([prev])), tCallback.apply(null, yArr.concat([prev]))];\n    var d1 = distance(v0[0], v0[1], v1[0], v1[1]);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      var v2 = [tCallback.apply(null, xArr.concat([next])), tCallback.apply(null, yArr.concat([next]))];\n      var d2 = distance(v0[0], v0[1], v2[0], v2[1]);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  }\n\n  return {\n    x: tCallback.apply(null, xArr.concat([t])),\n    y: tCallback.apply(null, yArr.concat([t]))\n  };\n} // 近似求解 https://community.khronos.org/t/3d-cubic-bezier-segment-length/62363/2\n\nexport function snapLength(xArr, yArr) {\n  var totalLength = 0;\n  var count = xArr.length;\n\n  for (var i = 0; i < count; i++) {\n    var x = xArr[i];\n    var y = yArr[i];\n    var nextX = xArr[(i + 1) % count];\n    var nextY = yArr[(i + 1) % count];\n    totalLength += distance(x, y, nextX, nextY);\n  }\n\n  return totalLength / 2;\n}","map":{"version":3,"mappings":"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","names":["distance","EPSILON","nearestPoint","xArr","yArr","x","y","tCallback","length","t","d","Infinity","v0","segNum","increaseRate","interval","i","_t","v1","apply","concat","d1","count","prev","next","v2","d2","snapLength","totalLength","nextX","nextY"],"sourceRoot":"","sources":["../src/bezier.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}