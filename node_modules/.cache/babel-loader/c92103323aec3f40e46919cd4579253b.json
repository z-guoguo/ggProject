{"ast":null,"code":"import { Platform, StringExt, ObjectExt, Dom } from '../../util';\nimport { Node } from '../../model';\nimport { NodeView } from '../../view';\nimport { getName } from './util';\nconst contentSelector = '.text-block-content';\nconst registryName = getName('text-block');\nexport class TextBlock extends Node {\n  get content() {\n    return this.getContent();\n  }\n\n  set content(val) {\n    this.setContent(val);\n  }\n\n  getContent() {\n    return this.store.get('content', '');\n  }\n\n  setContent(content, options = {}) {\n    this.store.set('content', content, options);\n  }\n\n  setup() {\n    super.setup();\n    this.store.on('change:*', metadata => {\n      const key = metadata.key;\n\n      if (key === 'content') {\n        this.updateContent(this.getContent());\n      } else if (key === 'size') {\n        this.updateSize(this.getSize());\n      }\n    });\n    this.updateSize(this.getSize());\n    this.updateContent(this.getContent());\n  }\n\n  updateSize(size) {\n    if (Platform.SUPPORT_FOREIGNOBJECT) {\n      this.setAttrs({\n        foreignObject: Object.assign({}, size),\n        [contentSelector]: {\n          style: Object.assign({}, size)\n        }\n      });\n    }\n  }\n\n  updateContent(content) {\n    if (Platform.SUPPORT_FOREIGNOBJECT) {\n      this.setAttrs({\n        [contentSelector]: {\n          html: content ? StringExt.sanitizeHTML(content) : ''\n        }\n      });\n    } else {\n      this.setAttrs({\n        [contentSelector]: {\n          text: content\n        }\n      });\n    }\n  }\n\n}\n\n(function (TextBlock) {\n  TextBlock.config({\n    type: registryName,\n    view: registryName,\n    markup: ['<g class=\"rotatable\">', '<g class=\"scalable\"><rect/></g>', Platform.SUPPORT_FOREIGNOBJECT ? [`<foreignObject>`, `<body xmlns=\"http://www.w3.org/1999/xhtml\">`, `<div class=\"${contentSelector.substr(1)}\" />`, `</body>`, `</foreignObject>`].join('') : `<text class=\"${contentSelector.substr(1)}\"/>`, '</g>'].join(''),\n    attrs: {\n      '.': {\n        fill: '#ffffff',\n        stroke: 'none'\n      },\n      rect: {\n        fill: '#ffffff',\n        stroke: '#000000',\n        width: 80,\n        height: 100\n      },\n      text: {\n        fill: '#000000',\n        fontSize: 14,\n        fontFamily: 'Arial, helvetica, sans-serif'\n      },\n      body: {\n        style: {\n          background: 'transparent',\n          position: 'static',\n          margin: 0,\n          padding: 0\n        }\n      },\n      foreignObject: {\n        style: {\n          overflow: 'hidden'\n        }\n      },\n      [contentSelector]: {\n        refX: 0.5,\n        refY: 0.5,\n        yAlign: 'middle',\n        xAlign: 'middle',\n        style: {\n          textAlign: 'center',\n          verticalAlign: 'middle',\n          display: 'table-cell',\n          padding: '0 5px',\n          margin: 0\n        }\n      }\n    }\n  });\n  Node.registry.register(registryName, TextBlock);\n})(TextBlock || (TextBlock = {}));\n\n(function (TextBlock) {\n  const contentAction = 'content';\n\n  class View extends NodeView {\n    confirmUpdate(flag, options = {}) {\n      let ret = super.confirmUpdate(flag, options);\n\n      if (this.hasAction(ret, contentAction)) {\n        this.updateContent();\n        ret = this.removeAction(ret, contentAction);\n      }\n\n      return ret;\n    }\n\n    update(partialAttrs) {\n      if (Platform.SUPPORT_FOREIGNOBJECT) {\n        super.update(partialAttrs);\n      } else {\n        const node = this.cell;\n        const attrs = Object.assign({}, partialAttrs || node.getAttrs());\n        delete attrs[contentSelector];\n        super.update(attrs);\n\n        if (!partialAttrs || ObjectExt.has(partialAttrs, contentSelector)) {\n          this.updateContent(partialAttrs);\n        }\n      }\n    }\n\n    updateContent(partialAttrs) {\n      if (Platform.SUPPORT_FOREIGNOBJECT) {\n        super.update(partialAttrs);\n      } else {\n        const node = this.cell;\n        const textAttrs = (partialAttrs || node.getAttrs())[contentSelector]; // Break the text to fit the node size taking into\n        // account the attributes set on the node.\n\n        const text = Dom.breakText(node.getContent(), node.getSize(), textAttrs, {\n          svgDocument: this.graph.view.svg\n        });\n        const attrs = {\n          [contentSelector]: ObjectExt.merge({}, textAttrs, {\n            text\n          })\n        };\n        super.update(attrs);\n      }\n    }\n\n  }\n\n  TextBlock.View = View;\n\n  (function (View) {\n    View.config({\n      bootstrap: ['render', contentAction],\n      actions: Platform.SUPPORT_FOREIGNOBJECT ? {} : {\n        size: contentAction,\n        content: contentAction\n      }\n    });\n    NodeView.registry.register(registryName, View);\n  })(View = TextBlock.View || (TextBlock.View = {}));\n})(TextBlock || (TextBlock = {}));","map":{"version":3,"mappings":"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","names":["Platform","StringExt","ObjectExt","Dom","Node","NodeView","getName","contentSelector","registryName","TextBlock","content","getContent","val","setContent","store","get","options","set","setup","on","metadata","key","updateContent","updateSize","getSize","size","SUPPORT_FOREIGNOBJECT","setAttrs","foreignObject","style","html","sanitizeHTML","text","config","type","view","markup","substr","join","attrs","fill","stroke","rect","width","height","fontSize","fontFamily","body","background","position","margin","padding","overflow","refX","refY","yAlign","xAlign","textAlign","verticalAlign","display","registry","register","contentAction","View","confirmUpdate","flag","ret","hasAction","removeAction","update","partialAttrs","node","cell","getAttrs","has","textAttrs","breakText","svgDocument","graph","svg","merge","bootstrap","actions"],"sourceRoot":"","sources":["../../../src/shape/basic/text-block.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}