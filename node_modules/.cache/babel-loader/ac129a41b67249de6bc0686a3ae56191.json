{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar WebGPUAttribute = /*#__PURE__*/function () {\n  function WebGPUAttribute(engine, options) {\n    _classCallCheck(this, WebGPUAttribute);\n\n    this.engine = engine;\n    this.options = options;\n    this.attribute = void 0;\n    this.buffer = void 0;\n    var _options = options,\n        buffer = _options.buffer,\n        offset = _options.offset,\n        stride = _options.stride,\n        normalized = _options.normalized,\n        size = _options.size,\n        divisor = _options.divisor,\n        arrayStride = _options.arrayStride,\n        attributes = _options.attributes,\n        stepMode = _options.stepMode;\n    this.buffer = buffer;\n    this.attribute = {\n      buffer: buffer.get(),\n      offset: offset || 0,\n      stride: stride || 0,\n      normalized: normalized || false,\n      divisor: divisor || 0,\n      arrayStride: arrayStride || 0,\n      // @ts-ignore\n      attributes: attributes,\n      stepMode: stepMode || 'vertex'\n    };\n\n    if (size) {\n      this.attribute.size = size;\n    }\n  }\n\n  _createClass(WebGPUAttribute, [{\n    key: \"get\",\n    value: function get() {\n      return this.attribute;\n    }\n  }, {\n    key: \"updateBuffer\",\n    value: function updateBuffer(options) {\n      this.buffer.subData(options);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.buffer.destroy();\n    }\n  }]);\n\n  return WebGPUAttribute;\n}();\n\nexport { WebGPUAttribute as default };","map":{"version":3,"mappings":";;;IASqBA,e;EAcnB,yBACUC,MADV,EAEUC,OAFV,EAGE;IAAAC;;IAAA,KAFQF,MAER,GAFQA,MAER;IAAA,KADQC,OACR,GADQA,OACR;IAAA,KAhBME,SAgBN;IAAA,KALMC,MAKN;IAAA,eAWIH,OAXJ;IAAA,IAEEG,MAFF,YAEEA,MAFF;IAAA,IAGEC,MAHF,YAGEA,MAHF;IAAA,IAIEC,MAJF,YAIEA,MAJF;IAAA,IAKEC,UALF,YAKEA,UALF;IAAA,IAMEC,IANF,YAMEA,IANF;IAAA,IAOEC,OAPF,YAOEA,OAPF;IAAA,IAQEC,WARF,YAQEA,WARF;IAAA,IASEC,UATF,YASEA,UATF;IAAA,IAUEC,QAVF,YAUEA,QAVF;IAYA,KAAKR,MAAL,GAAcA,MAAd;IACA,KAAKD,SAAL,GAAiB;MACfC,MAAM,EAAGA,MAAD,CAAyBS,GAAxBT,EADM;MAEfC,MAAM,EAAEA,MAAM,IAAI,CAFH;MAGfC,MAAM,EAAEA,MAAM,IAAI,CAHH;MAIfC,UAAU,EAAEA,UAAU,IAAI,KAJX;MAKfE,OAAO,EAAEA,OAAO,IAAI,CALL;MAMfC,WAAW,EAAEA,WAAW,IAAI,CANb;MAOf;MACAC,UAAU,EAAVA,UARe;MASfC,QAAQ,EAAEA,QAAQ,IAAI;IATP,CAAjB;;IAYA,IAAIJ,IAAJ,EAAU;MACR,KAAKL,SAAL,CAAeK,IAAf,GAAsBA,IAAtB;IACD;EACF;;;;0BAEY;MACX,OAAO,KAAKL,SAAZ;IACD;;;iCAEmBF,SAKjB;MACD,KAAKG,MAAL,CAAYU,OAAZ,CAAoBb,OAApB;IACD;;;8BAEgB;MACf,KAAKG,MAAL,CAAYW,OAAZ;IACD;;;;;;SA9DkBhB,e","names":["WebGPUAttribute","engine","options","_classCallCheck","attribute","buffer","offset","stride","normalized","size","divisor","arrayStride","attributes","stepMode","get","subData","destroy"],"sources":["../../src/webgpu/WebGPUAttribute.ts"],"sourcesContent":["import {\n  BufferData,\n  IAttribute,\n  IAttributeInitializationOptions,\n  IBuffer,\n} from '@antv/g-webgpu-core';\nimport { WebGPUEngine } from '.';\nimport WebGPUBuffer from './WebGPUBuffer';\n\nexport default class WebGPUAttribute implements IAttribute {\n  private attribute: {\n    buffer: GPUBuffer;\n    offset: number;\n    stride: number;\n    normalized: boolean;\n    divisor: number;\n    size?: number;\n    arrayStride: number;\n    stepMode: GPUInputStepMode;\n    attributes: Iterable<GPUVertexAttributeDescriptor>;\n  };\n  private buffer: IBuffer;\n\n  constructor(\n    private engine: WebGPUEngine,\n    private options: IAttributeInitializationOptions,\n  ) {\n    const {\n      buffer,\n      offset,\n      stride,\n      normalized,\n      size,\n      divisor,\n      arrayStride,\n      attributes,\n      stepMode,\n    } = options;\n    this.buffer = buffer;\n    this.attribute = {\n      buffer: (buffer as WebGPUBuffer).get(),\n      offset: offset || 0,\n      stride: stride || 0,\n      normalized: normalized || false,\n      divisor: divisor || 0,\n      arrayStride: arrayStride || 0,\n      // @ts-ignore\n      attributes,\n      stepMode: stepMode || 'vertex',\n    };\n\n    if (size) {\n      this.attribute.size = size;\n    }\n  }\n\n  public get() {\n    return this.attribute;\n  }\n\n  public updateBuffer(options: {\n    // 用于替换的数据\n    data: BufferData;\n    // 原 Buffer 替换位置，单位为 byte\n    offset: number;\n  }) {\n    this.buffer.subData(options);\n  }\n\n  public destroy() {\n    this.buffer.destroy();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}