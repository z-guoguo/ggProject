{"ast":null,"code":"export default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      // 可选 mouseenter || click\n      // 选择 click 会监听 touch，mouseenter 不会监听\n      trigger: 'mouseenter',\n      activeState: 'active',\n      inactiveState: 'inactive',\n      resetSelected: false,\n      shouldUpdate: function shouldUpdate() {\n        return true;\n      }\n    };\n  },\n  getEvents: function getEvents() {\n    if (this.get('trigger') === 'mouseenter') {\n      return {\n        'node:mouseenter': 'setAllItemStates',\n        'combo:mouseenter': 'setAllItemStates',\n        'node:mouseleave': 'clearActiveState',\n        'combo:mouseleave': 'clearActiveState'\n      };\n    }\n\n    return {\n      'node:click': 'setAllItemStates',\n      'combo:click': 'setAllItemStates',\n      'canvas:click': 'clearActiveState',\n      'node:touchstart': 'setOnTouchStart',\n      'combo:touchstart': 'setOnTouchStart',\n      'canvas:touchstart': 'clearOnTouchStart'\n    };\n  },\n  setOnTouchStart: function setOnTouchStart(e) {\n    var self = this;\n\n    try {\n      var touches = e.originalEvent.touches;\n      var event1 = touches[0];\n      var event2 = touches[1];\n\n      if (event1 && event2) {\n        return;\n      }\n\n      e.preventDefault();\n    } catch (e) {\n      console.warn('Touch original event not exist!');\n    }\n\n    self.setAllItemStates(e);\n  },\n  clearOnTouchStart: function clearOnTouchStart(e) {\n    var self = this;\n\n    try {\n      var touches = e.originalEvent.touches;\n      var event1 = touches[0];\n      var event2 = touches[1];\n\n      if (event1 && event2) {\n        return;\n      }\n\n      e.preventDefault();\n    } catch (e) {\n      console.warn('Touch original event not exist!');\n    }\n\n    self.clearActiveState(e);\n  },\n  setAllItemStates: function setAllItemStates(e) {\n    var item = e.item;\n    var graph = this.graph;\n    this.item = item;\n\n    if (!this.shouldUpdate(e.item, {\n      event: e,\n      action: 'activate'\n    })) {\n      return;\n    }\n\n    var self = this;\n    var activeState = this.activeState;\n    var inactiveState = this.inactiveState;\n    var nodes = graph.getNodes();\n    var combos = graph.getCombos();\n    var edges = graph.getEdges();\n    var vEdges = graph.get('vedges');\n    var nodeLength = nodes.length;\n    var comboLength = combos.length;\n    var edgeLength = edges.length;\n    var vEdgeLength = vEdges.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      var hasSelected = node.hasState('selected');\n\n      if (self.resetSelected) {\n        if (hasSelected) {\n          graph.setItemState(node, 'selected', false);\n        }\n      }\n\n      graph.setItemState(node, activeState, false);\n\n      if (inactiveState) {\n        graph.setItemState(node, inactiveState, true);\n      }\n    }\n\n    for (var i = 0; i < comboLength; i++) {\n      var combo = combos[i];\n      var hasSelected = combo.hasState('selected');\n\n      if (self.resetSelected) {\n        if (hasSelected) {\n          graph.setItemState(combo, 'selected', false);\n        }\n      }\n\n      graph.setItemState(combo, activeState, false);\n\n      if (inactiveState) {\n        graph.setItemState(combo, inactiveState, true);\n      }\n    }\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edges[i];\n      graph.setItemState(edge, activeState, false);\n\n      if (inactiveState) {\n        graph.setItemState(edge, inactiveState, true);\n      }\n    }\n\n    for (var i = 0; i < vEdgeLength; i++) {\n      var vEdge = vEdges[i];\n      graph.setItemState(vEdge, activeState, false);\n\n      if (inactiveState) {\n        graph.setItemState(vEdge, inactiveState, true);\n      }\n    }\n\n    if (inactiveState) {\n      graph.setItemState(item, inactiveState, false);\n    }\n\n    graph.setItemState(item, activeState, true);\n    var rEdges = item.getEdges();\n    var rEdgeLegnth = rEdges.length;\n\n    for (var i = 0; i < rEdgeLegnth; i++) {\n      var edge = rEdges[i];\n      var otherEnd = void 0;\n\n      if (edge.getSource() === item) {\n        otherEnd = edge.getTarget();\n      } else {\n        otherEnd = edge.getSource();\n      }\n\n      if (inactiveState) {\n        graph.setItemState(otherEnd, inactiveState, false);\n      }\n\n      graph.setItemState(otherEnd, activeState, true);\n      graph.setItemState(edge, inactiveState, false);\n      graph.setItemState(edge, activeState, true);\n      edge.toFront();\n    }\n\n    graph.emit('afteractivaterelations', {\n      item: e.item,\n      action: 'activate'\n    });\n  },\n  clearActiveState: function clearActiveState(e) {\n    var self = this;\n    var graph = self.get('graph');\n\n    if (!self.shouldUpdate(e.item, {\n      event: e,\n      action: 'deactivate'\n    })) {\n      return;\n    }\n\n    var activeState = this.activeState;\n    var inactiveState = this.inactiveState;\n    var autoPaint = graph.get('autoPaint');\n    graph.setAutoPaint(false);\n    var nodes = graph.getNodes() || [];\n    var combos = graph.getCombos() || [];\n    var edges = graph.getEdges() || [];\n    var vEdges = graph.get('vedges') || [];\n    var nodeLength = nodes.length;\n    var comboLength = combos.length;\n    var edgeLength = edges.length;\n    var vEdgeLength = vEdges.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      graph.clearItemStates(node, [activeState, inactiveState]);\n    }\n\n    for (var i = 0; i < comboLength; i++) {\n      var combo = combos[i];\n      graph.clearItemStates(combo, [activeState, inactiveState]);\n    }\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edges[i];\n      graph.clearItemStates(edge, [activeState, inactiveState, 'deactivate']);\n    }\n\n    for (var i = 0; i < vEdgeLength; i++) {\n      var vEdge = vEdges[i];\n      graph.clearItemStates(vEdge, [activeState, inactiveState, 'deactivate']);\n    }\n\n    graph.paint();\n    graph.setAutoPaint(autoPaint);\n    graph.emit('afteractivaterelations', {\n      item: e.item || self.get('item'),\n      action: 'deactivate'\n    });\n  }\n};","map":{"version":3,"names":["getDefaultCfg","trigger","activeState","inactiveState","resetSelected","shouldUpdate","getEvents","get","setOnTouchStart","e","self","touches","originalEvent","event1","event2","preventDefault","console","warn","setAllItemStates","clearOnTouchStart","clearActiveState","item","graph","event","action","nodes","getNodes","combos","getCombos","edges","getEdges","vEdges","nodeLength","length","comboLength","edgeLength","vEdgeLength","i","node","hasSelected","hasState","setItemState","combo","edge","vEdge","rEdges","rEdgeLegnth","otherEnd","getSource","getTarget","toFront","emit","autoPaint","setAutoPaint","clearItemStates","paint"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-pc/es/behavior/activate-relations.js"],"sourcesContent":["export default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      // 可选 mouseenter || click\n      // 选择 click 会监听 touch，mouseenter 不会监听\n      trigger: 'mouseenter',\n      activeState: 'active',\n      inactiveState: 'inactive',\n      resetSelected: false,\n      shouldUpdate: function shouldUpdate() {\n        return true;\n      }\n    };\n  },\n  getEvents: function getEvents() {\n    if (this.get('trigger') === 'mouseenter') {\n      return {\n        'node:mouseenter': 'setAllItemStates',\n        'combo:mouseenter': 'setAllItemStates',\n        'node:mouseleave': 'clearActiveState',\n        'combo:mouseleave': 'clearActiveState'\n      };\n    }\n\n    return {\n      'node:click': 'setAllItemStates',\n      'combo:click': 'setAllItemStates',\n      'canvas:click': 'clearActiveState',\n      'node:touchstart': 'setOnTouchStart',\n      'combo:touchstart': 'setOnTouchStart',\n      'canvas:touchstart': 'clearOnTouchStart'\n    };\n  },\n  setOnTouchStart: function setOnTouchStart(e) {\n    var self = this;\n\n    try {\n      var touches = e.originalEvent.touches;\n      var event1 = touches[0];\n      var event2 = touches[1];\n\n      if (event1 && event2) {\n        return;\n      }\n\n      e.preventDefault();\n    } catch (e) {\n      console.warn('Touch original event not exist!');\n    }\n\n    self.setAllItemStates(e);\n  },\n  clearOnTouchStart: function clearOnTouchStart(e) {\n    var self = this;\n\n    try {\n      var touches = e.originalEvent.touches;\n      var event1 = touches[0];\n      var event2 = touches[1];\n\n      if (event1 && event2) {\n        return;\n      }\n\n      e.preventDefault();\n    } catch (e) {\n      console.warn('Touch original event not exist!');\n    }\n\n    self.clearActiveState(e);\n  },\n  setAllItemStates: function setAllItemStates(e) {\n    var item = e.item;\n    var graph = this.graph;\n    this.item = item;\n\n    if (!this.shouldUpdate(e.item, {\n      event: e,\n      action: 'activate'\n    })) {\n      return;\n    }\n\n    var self = this;\n    var activeState = this.activeState;\n    var inactiveState = this.inactiveState;\n    var nodes = graph.getNodes();\n    var combos = graph.getCombos();\n    var edges = graph.getEdges();\n    var vEdges = graph.get('vedges');\n    var nodeLength = nodes.length;\n    var comboLength = combos.length;\n    var edgeLength = edges.length;\n    var vEdgeLength = vEdges.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      var hasSelected = node.hasState('selected');\n\n      if (self.resetSelected) {\n        if (hasSelected) {\n          graph.setItemState(node, 'selected', false);\n        }\n      }\n\n      graph.setItemState(node, activeState, false);\n\n      if (inactiveState) {\n        graph.setItemState(node, inactiveState, true);\n      }\n    }\n\n    for (var i = 0; i < comboLength; i++) {\n      var combo = combos[i];\n      var hasSelected = combo.hasState('selected');\n\n      if (self.resetSelected) {\n        if (hasSelected) {\n          graph.setItemState(combo, 'selected', false);\n        }\n      }\n\n      graph.setItemState(combo, activeState, false);\n\n      if (inactiveState) {\n        graph.setItemState(combo, inactiveState, true);\n      }\n    }\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edges[i];\n      graph.setItemState(edge, activeState, false);\n\n      if (inactiveState) {\n        graph.setItemState(edge, inactiveState, true);\n      }\n    }\n\n    for (var i = 0; i < vEdgeLength; i++) {\n      var vEdge = vEdges[i];\n      graph.setItemState(vEdge, activeState, false);\n\n      if (inactiveState) {\n        graph.setItemState(vEdge, inactiveState, true);\n      }\n    }\n\n    if (inactiveState) {\n      graph.setItemState(item, inactiveState, false);\n    }\n\n    graph.setItemState(item, activeState, true);\n    var rEdges = item.getEdges();\n    var rEdgeLegnth = rEdges.length;\n\n    for (var i = 0; i < rEdgeLegnth; i++) {\n      var edge = rEdges[i];\n      var otherEnd = void 0;\n\n      if (edge.getSource() === item) {\n        otherEnd = edge.getTarget();\n      } else {\n        otherEnd = edge.getSource();\n      }\n\n      if (inactiveState) {\n        graph.setItemState(otherEnd, inactiveState, false);\n      }\n\n      graph.setItemState(otherEnd, activeState, true);\n      graph.setItemState(edge, inactiveState, false);\n      graph.setItemState(edge, activeState, true);\n      edge.toFront();\n    }\n\n    graph.emit('afteractivaterelations', {\n      item: e.item,\n      action: 'activate'\n    });\n  },\n  clearActiveState: function clearActiveState(e) {\n    var self = this;\n    var graph = self.get('graph');\n\n    if (!self.shouldUpdate(e.item, {\n      event: e,\n      action: 'deactivate'\n    })) {\n      return;\n    }\n\n    var activeState = this.activeState;\n    var inactiveState = this.inactiveState;\n    var autoPaint = graph.get('autoPaint');\n    graph.setAutoPaint(false);\n    var nodes = graph.getNodes() || [];\n    var combos = graph.getCombos() || [];\n    var edges = graph.getEdges() || [];\n    var vEdges = graph.get('vedges') || [];\n    var nodeLength = nodes.length;\n    var comboLength = combos.length;\n    var edgeLength = edges.length;\n    var vEdgeLength = vEdges.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      graph.clearItemStates(node, [activeState, inactiveState]);\n    }\n\n    for (var i = 0; i < comboLength; i++) {\n      var combo = combos[i];\n      graph.clearItemStates(combo, [activeState, inactiveState]);\n    }\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edge = edges[i];\n      graph.clearItemStates(edge, [activeState, inactiveState, 'deactivate']);\n    }\n\n    for (var i = 0; i < vEdgeLength; i++) {\n      var vEdge = vEdges[i];\n      graph.clearItemStates(vEdge, [activeState, inactiveState, 'deactivate']);\n    }\n\n    graph.paint();\n    graph.setAutoPaint(autoPaint);\n    graph.emit('afteractivaterelations', {\n      item: e.item || self.get('item'),\n      action: 'deactivate'\n    });\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}