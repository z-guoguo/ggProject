{"ast":null,"code":"import Graph from '.';\n/**\n * @description Convert a graph's node to JSON.\n * @description.zh-CN 转换图的节点为 JSON。\n * @param graph\n * @returns\n */\n\nvar nodeToJSON = function nodeToJSON(graph) {\n  return graph.nodes().map(function (n) {\n    var value = graph.node(n);\n    var parent = graph.parent(n);\n    var node = {\n      id: n,\n      value: value,\n      parent: parent\n    };\n\n    if (node.value === undefined) {\n      delete node.value;\n    }\n\n    if (node.parent === undefined) {\n      delete node.parent;\n    }\n\n    return node;\n  });\n};\n/**\n * @description Convert all graph's edges to JSON.\n * @description.zh-CN 转换图的所有边为 JSON。\n * @param graph\n * @returns\n */\n\n\nvar edgeToJSON = function edgeToJSON(graph) {\n  return graph.edges().map(function (edge) {\n    var value = graph.edge(edge);\n    var e = {\n      v: edge.v,\n      w: edge.w,\n      value: value,\n      name: edge.name\n    };\n\n    if (e.name === undefined) {\n      delete e.name;\n    }\n\n    if (e.value === undefined) {\n      delete e.value;\n    }\n\n    return e;\n  });\n};\n/**\n * @description Convert a graph to JSON.\n * @description.zh-CN 转换图为 JSON。\n * @param graph\n * @returns\n */\n\n\nexport var write = function write(graph) {\n  var json = {\n    options: {\n      directed: graph.isDirected(),\n      multigraph: graph.isMultigraph(),\n      compound: graph.isCompound()\n    },\n    nodes: nodeToJSON(graph),\n    edges: edgeToJSON(graph),\n    value: graph.graph()\n  };\n\n  if (json.value === undefined) {\n    delete json.value;\n  }\n\n  return json;\n};\n/**\n * @description read a graph from JSON.\n * @description.zh-CN 从 JSON 读取图。\n * @param json\n * @returns\n */\n\nexport var read = function read(json) {\n  var graph = new Graph(json.options);\n\n  if (json.value !== undefined) {\n    graph.setGraph(json.value);\n  }\n\n  json.nodes.forEach(function (entry) {\n    graph.setNode(entry.id, entry.value);\n\n    if (entry.parent) {\n      graph.setParent(entry.id, entry.parent);\n    }\n  });\n  json.edges.forEach(function (entry) {\n    graph.setEdge(entry.v, entry.w, entry.value, entry.name);\n  });\n  return graph;\n};","map":{"version":3,"names":["Graph","nodeToJSON","graph","nodes","map","n","value","node","parent","id","undefined","edgeToJSON","edges","edge","e","v","w","name","write","json","options","directed","isDirected","multigraph","isMultigraph","compound","isCompound","read","setGraph","forEach","entry","setNode","setParent","setEdge"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/graphlib/es/Graph/toJSON.js"],"sourcesContent":["import Graph from '.';\n/**\n * @description Convert a graph's node to JSON.\n * @description.zh-CN 转换图的节点为 JSON。\n * @param graph\n * @returns\n */\n\nvar nodeToJSON = function nodeToJSON(graph) {\n  return graph.nodes().map(function (n) {\n    var value = graph.node(n);\n    var parent = graph.parent(n);\n    var node = {\n      id: n,\n      value: value,\n      parent: parent\n    };\n\n    if (node.value === undefined) {\n      delete node.value;\n    }\n\n    if (node.parent === undefined) {\n      delete node.parent;\n    }\n\n    return node;\n  });\n};\n/**\n * @description Convert all graph's edges to JSON.\n * @description.zh-CN 转换图的所有边为 JSON。\n * @param graph\n * @returns\n */\n\n\nvar edgeToJSON = function edgeToJSON(graph) {\n  return graph.edges().map(function (edge) {\n    var value = graph.edge(edge);\n    var e = {\n      v: edge.v,\n      w: edge.w,\n      value: value,\n      name: edge.name\n    };\n\n    if (e.name === undefined) {\n      delete e.name;\n    }\n\n    if (e.value === undefined) {\n      delete e.value;\n    }\n\n    return e;\n  });\n};\n/**\n * @description Convert a graph to JSON.\n * @description.zh-CN 转换图为 JSON。\n * @param graph\n * @returns\n */\n\n\nexport var write = function write(graph) {\n  var json = {\n    options: {\n      directed: graph.isDirected(),\n      multigraph: graph.isMultigraph(),\n      compound: graph.isCompound()\n    },\n    nodes: nodeToJSON(graph),\n    edges: edgeToJSON(graph),\n    value: graph.graph()\n  };\n\n  if (json.value === undefined) {\n    delete json.value;\n  }\n\n  return json;\n};\n/**\n * @description read a graph from JSON.\n * @description.zh-CN 从 JSON 读取图。\n * @param json\n * @returns\n */\n\nexport var read = function read(json) {\n  var graph = new Graph(json.options);\n\n  if (json.value !== undefined) {\n    graph.setGraph(json.value);\n  }\n\n  json.nodes.forEach(function (entry) {\n    graph.setNode(entry.id, entry.value);\n\n    if (entry.parent) {\n      graph.setParent(entry.id, entry.parent);\n    }\n  });\n  json.edges.forEach(function (entry) {\n    graph.setEdge(entry.v, entry.w, entry.value, entry.name);\n  });\n  return graph;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}