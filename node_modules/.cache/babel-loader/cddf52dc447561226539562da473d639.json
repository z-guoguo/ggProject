{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { Config } from '../global/config';\nimport { StringExt, FunctionExt } from '../util';\nexport var LocalStorage;\n\n(function (LocalStorage) {\n  const prefix = `${Config.prefixCls}.storage`;\n\n  function insert(collection, doc, cb) {\n    const id = doc.id || StringExt.uniqueId('doc-');\n    const index = loadIndex(collection);\n    index.keys.push(id);\n    setItem(docKey(collection, id), doc);\n    setItem(indexKey(collection), index);\n    callback(cb, null, Object.assign(Object.assign({}, doc), {\n      id\n    }));\n  }\n\n  LocalStorage.insert = insert;\n\n  function find(collection, query, cb) {\n    const index = loadIndex(collection);\n    const docs = [];\n\n    if (query == null) {\n      index.keys.forEach(id => {\n        const doc = getItem(docKey(collection, id));\n\n        if (!doc) {\n          callback(cb, new Error(`No document found for an ID '${id}' from index.`));\n        } else {\n          docs.push(doc);\n        }\n      });\n      callback(cb, null, docs);\n    } else if (query.id) {\n      const doc = getItem(docKey(collection, query.id));\n      callback(cb, null, doc ? [doc] : []);\n    } else {\n      callback(cb, null, []);\n    }\n  }\n\n  LocalStorage.find = find;\n\n  function remove(collection, query, cb) {\n    const index = loadIndex(collection);\n\n    if (query == null) {\n      index.keys.forEach(id => {\n        localStorage.removeItem(docKey(collection, id));\n      });\n      localStorage.removeItem(indexKey(collection));\n      callback(cb, null);\n    } else if (query.id) {\n      const idx = index.keys.indexOf(query.id);\n\n      if (idx >= 0) {\n        index.keys.splice(idx, 1);\n      }\n\n      localStorage.removeItem(docKey(collection, query.id));\n      setItem(indexKey(collection), index);\n      callback(cb, null);\n    }\n  }\n\n  LocalStorage.remove = remove; // util\n  // ----\n\n  function callback(cb, err, ret) {\n    if (cb) {\n      FunctionExt.defer(() => {\n        cb(err, ret);\n      });\n    }\n  }\n\n  function setItem(key, item) {\n    localStorage.setItem(key, JSON.stringify(item));\n  }\n\n  function getItem(key) {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : null;\n  }\n\n  function loadIndex(collection) {\n    const index = getItem(indexKey(collection));\n\n    if (index) {\n      if (index.keys == null) {\n        index.keys = [];\n      }\n\n      return index;\n    }\n\n    return {\n      keys: []\n    };\n  }\n\n  function docKey(collection, id) {\n    return `${prefix}.${collection}.docs.${id}`;\n  }\n\n  function indexKey(collection) {\n    return `${prefix}.${collection}.index`;\n  }\n})(LocalStorage || (LocalStorage = {}));","map":{"version":3,"mappings":"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","names":["Config","StringExt","FunctionExt","LocalStorage","prefix","prefixCls","insert","collection","doc","cb","id","uniqueId","index","loadIndex","keys","push","setItem","docKey","indexKey","callback","Object","find","query","docs","forEach","getItem","Error","remove","localStorage","removeItem","idx","indexOf","splice","err","ret","defer","key","item","JSON","stringify","parse"],"sourceRoot":"","sources":["../../src/common/localstorage.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}