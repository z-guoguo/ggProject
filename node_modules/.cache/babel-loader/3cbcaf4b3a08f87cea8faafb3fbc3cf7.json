{"ast":null,"code":"import { wrapBehavior, each, deepMix } from '@antv/util';\n\nvar PluginBase =\n/** @class */\nfunction () {\n  /**\n   * 插件基类的构造函数\n   * @param cfgs 插件的配置项\n   */\n  function PluginBase(cfgs) {\n    this._cfgs = deepMix(this.getDefaultCfgs(), cfgs);\n    this._events = {};\n    this.destroyed = false;\n  }\n  /**\n   * 获取默认的插件配置\n   */\n\n\n  PluginBase.prototype.getDefaultCfgs = function () {\n    return {};\n  };\n  /**\n   * 初始化插件\n   * @param graph IGraph 实例\n   */\n\n\n  PluginBase.prototype.initPlugin = function (graph) {\n    var self = this;\n    self.set('graph', graph);\n    var events = self.getEvents();\n    var bindEvents = {};\n    each(events, function (v, k) {\n      var event = wrapBehavior(self, v);\n      bindEvents[k] = event;\n      graph.on(k, event);\n    });\n    this._events = bindEvents;\n    this.init();\n  };\n  /**\n   * 获取插件中的事件和事件处理方法，供子类实现\n   */\n\n\n  PluginBase.prototype.getEvents = function () {\n    return {};\n  };\n  /**\n   * 获取配置项中的某个值\n   * @param key 键值\n   */\n\n\n  PluginBase.prototype.get = function (key) {\n    var _a;\n\n    return (_a = this._cfgs) === null || _a === void 0 ? void 0 : _a[key];\n  };\n  /**\n   * 将指定的值存储到 cfgs 中\n   * @param key 键值\n   * @param val 设置的值\n   */\n\n\n  PluginBase.prototype.set = function (key, val) {\n    this._cfgs[key] = val;\n  };\n  /**\n   * 销毁方法，供子类复写\n   */\n\n\n  PluginBase.prototype.destroy = function () {};\n  /**\n   * 销毁插件\n   */\n\n\n  PluginBase.prototype.destroyPlugin = function () {\n    this.destroy();\n    var graph = this.get('graph');\n    var events = this._events;\n    each(events, function (v, k) {\n      graph.off(k, v);\n    });\n    this._events = null;\n    this._cfgs = null;\n    this.destroyed = true;\n  };\n\n  return PluginBase;\n}();\n\nexport default PluginBase;","map":{"version":3,"names":["wrapBehavior","each","deepMix","PluginBase","cfgs","_cfgs","getDefaultCfgs","_events","destroyed","prototype","initPlugin","graph","self","set","events","getEvents","bindEvents","v","k","event","on","init","get","key","_a","val","destroy","destroyPlugin","off"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-plugin/es/base.js"],"sourcesContent":["import { wrapBehavior, each, deepMix } from '@antv/util';\n\nvar PluginBase =\n/** @class */\nfunction () {\n  /**\n   * 插件基类的构造函数\n   * @param cfgs 插件的配置项\n   */\n  function PluginBase(cfgs) {\n    this._cfgs = deepMix(this.getDefaultCfgs(), cfgs);\n    this._events = {};\n    this.destroyed = false;\n  }\n  /**\n   * 获取默认的插件配置\n   */\n\n\n  PluginBase.prototype.getDefaultCfgs = function () {\n    return {};\n  };\n  /**\n   * 初始化插件\n   * @param graph IGraph 实例\n   */\n\n\n  PluginBase.prototype.initPlugin = function (graph) {\n    var self = this;\n    self.set('graph', graph);\n    var events = self.getEvents();\n    var bindEvents = {};\n    each(events, function (v, k) {\n      var event = wrapBehavior(self, v);\n      bindEvents[k] = event;\n      graph.on(k, event);\n    });\n    this._events = bindEvents;\n    this.init();\n  };\n  /**\n   * 获取插件中的事件和事件处理方法，供子类实现\n   */\n\n\n  PluginBase.prototype.getEvents = function () {\n    return {};\n  };\n  /**\n   * 获取配置项中的某个值\n   * @param key 键值\n   */\n\n\n  PluginBase.prototype.get = function (key) {\n    var _a;\n\n    return (_a = this._cfgs) === null || _a === void 0 ? void 0 : _a[key];\n  };\n  /**\n   * 将指定的值存储到 cfgs 中\n   * @param key 键值\n   * @param val 设置的值\n   */\n\n\n  PluginBase.prototype.set = function (key, val) {\n    this._cfgs[key] = val;\n  };\n  /**\n   * 销毁方法，供子类复写\n   */\n\n\n  PluginBase.prototype.destroy = function () {};\n  /**\n   * 销毁插件\n   */\n\n\n  PluginBase.prototype.destroyPlugin = function () {\n    this.destroy();\n    var graph = this.get('graph');\n    var events = this._events;\n    each(events, function (v, k) {\n      graph.off(k, v);\n    });\n    this._events = null;\n    this._cfgs = null;\n    this.destroyed = true;\n  };\n\n  return PluginBase;\n}();\n\nexport default PluginBase;"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,IAAvB,EAA6BC,OAA7B,QAA4C,YAA5C;;AAEA,IAAIC,UAAU;AACd;AACA,YAAY;EACV;AACF;AACA;AACA;EACE,SAASA,UAAT,CAAoBC,IAApB,EAA0B;IACxB,KAAKC,KAAL,GAAaH,OAAO,CAAC,KAAKI,cAAL,EAAD,EAAwBF,IAAxB,CAApB;IACA,KAAKG,OAAL,GAAe,EAAf;IACA,KAAKC,SAAL,GAAiB,KAAjB;EACD;EACD;AACF;AACA;;;EAGEL,UAAU,CAACM,SAAX,CAAqBH,cAArB,GAAsC,YAAY;IAChD,OAAO,EAAP;EACD,CAFD;EAGA;AACF;AACA;AACA;;;EAGEH,UAAU,CAACM,SAAX,CAAqBC,UAArB,GAAkC,UAAUC,KAAV,EAAiB;IACjD,IAAIC,IAAI,GAAG,IAAX;IACAA,IAAI,CAACC,GAAL,CAAS,OAAT,EAAkBF,KAAlB;IACA,IAAIG,MAAM,GAAGF,IAAI,CAACG,SAAL,EAAb;IACA,IAAIC,UAAU,GAAG,EAAjB;IACAf,IAAI,CAACa,MAAD,EAAS,UAAUG,CAAV,EAAaC,CAAb,EAAgB;MAC3B,IAAIC,KAAK,GAAGnB,YAAY,CAACY,IAAD,EAAOK,CAAP,CAAxB;MACAD,UAAU,CAACE,CAAD,CAAV,GAAgBC,KAAhB;MACAR,KAAK,CAACS,EAAN,CAASF,CAAT,EAAYC,KAAZ;IACD,CAJG,CAAJ;IAKA,KAAKZ,OAAL,GAAeS,UAAf;IACA,KAAKK,IAAL;EACD,CAZD;EAaA;AACF;AACA;;;EAGElB,UAAU,CAACM,SAAX,CAAqBM,SAArB,GAAiC,YAAY;IAC3C,OAAO,EAAP;EACD,CAFD;EAGA;AACF;AACA;AACA;;;EAGEZ,UAAU,CAACM,SAAX,CAAqBa,GAArB,GAA2B,UAAUC,GAAV,EAAe;IACxC,IAAIC,EAAJ;;IAEA,OAAO,CAACA,EAAE,GAAG,KAAKnB,KAAX,MAAsB,IAAtB,IAA8BmB,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACD,GAAD,CAAhE;EACD,CAJD;EAKA;AACF;AACA;AACA;AACA;;;EAGEpB,UAAU,CAACM,SAAX,CAAqBI,GAArB,GAA2B,UAAUU,GAAV,EAAeE,GAAf,EAAoB;IAC7C,KAAKpB,KAAL,CAAWkB,GAAX,IAAkBE,GAAlB;EACD,CAFD;EAGA;AACF;AACA;;;EAGEtB,UAAU,CAACM,SAAX,CAAqBiB,OAArB,GAA+B,YAAY,CAAE,CAA7C;EACA;AACF;AACA;;;EAGEvB,UAAU,CAACM,SAAX,CAAqBkB,aAArB,GAAqC,YAAY;IAC/C,KAAKD,OAAL;IACA,IAAIf,KAAK,GAAG,KAAKW,GAAL,CAAS,OAAT,CAAZ;IACA,IAAIR,MAAM,GAAG,KAAKP,OAAlB;IACAN,IAAI,CAACa,MAAD,EAAS,UAAUG,CAAV,EAAaC,CAAb,EAAgB;MAC3BP,KAAK,CAACiB,GAAN,CAAUV,CAAV,EAAaD,CAAb;IACD,CAFG,CAAJ;IAGA,KAAKV,OAAL,GAAe,IAAf;IACA,KAAKF,KAAL,GAAa,IAAb;IACA,KAAKG,SAAL,GAAiB,IAAjB;EACD,CAVD;;EAYA,OAAOL,UAAP;AACD,CA1FD,EAFA;;AA8FA,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}