{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\n/**\n * @fileoverview line\n * @author dengfuping_develop@163.com\n */\n\nimport { Line as LineUtil } from '@antv/g-math';\nimport { each, isObject } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nvar Line =\n/** @class */\nfunction (_super) {\n  __extends(Line, _super);\n\n  function Line() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'line';\n    _this.canFill = false;\n    _this.canStroke = true;\n    return _this;\n  }\n\n  Line.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return __assign(__assign({}, attrs), {\n      x1: 0,\n      y1: 0,\n      x2: 0,\n      y2: 0,\n      startArrow: false,\n      endArrow: false\n    });\n  };\n\n  Line.prototype.createPath = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'startArrow' || attr === 'endArrow') {\n        if (value) {\n          var id = isObject(value) ? context.addArrow(attrs, SVG_ATTR_MAP[attr]) : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);\n          el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n        } else {\n          el.removeAttribute(SVG_ATTR_MAP[attr]);\n        }\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n  /**\n   * Use math calculation to get length of line\n   * @return {number} length\n   */\n\n\n  Line.prototype.getTotalLength = function () {\n    var _a = this.attr(),\n        x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n\n    return LineUtil.length(x1, y1, x2, y2);\n  };\n  /**\n   * Use math calculation to get point according to ratio as same sa Canvas version\n   * @param {number} ratio\n   * @return {Point} point\n   */\n\n\n  Line.prototype.getPoint = function (ratio) {\n    var _a = this.attr(),\n        x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n\n    return LineUtil.pointAt(x1, y1, x2, y2, ratio);\n  };\n\n  return Line;\n}(ShapeBase);\n\nexport default Line;","map":{"version":3,"mappings":";AAAA;;;;;AAIA,SAASA,IAAI,IAAIC,QAAjB,QAAiC,cAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,YAA/B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,SAAP,MAAsB,QAAtB;;AAEA;AAAA;AAAA;EAAmBC;;EAAnB;IAAA;;IACEC,aAAe,MAAf;IACAA,gBAAmB,KAAnB;IACAA,kBAAqB,IAArB;;EAoDD;;EAlDCP;IACE,IAAMQ,KAAK,GAAGC,iBAAMC,eAAN,CAAqBC,IAArB,CAAqB,IAArB,CAAd;;IACA,6BACKH,KADL,GACU;MACRI,EAAE,EAAE,CADI;MAERC,EAAE,EAAE,CAFI;MAGRC,EAAE,EAAE,CAHI;MAIRC,EAAE,EAAE,CAJI;MAKRC,UAAU,EAAE,KALJ;MAMRC,QAAQ,EAAE;IANF,CADV;EASD,CAXD;;EAaAjB,sCAAWkB,OAAX,EAAoBC,WAApB,EAA+B;IAC7B,IAAMX,KAAK,GAAG,KAAKY,IAAL,EAAd;IACA,IAAMC,EAAE,GAAG,KAAKC,GAAL,CAAS,IAAT,CAAX;IACApB,IAAI,CAACiB,WAAW,IAAIX,KAAhB,EAAuB,UAACe,KAAD,EAAQH,IAAR,EAAY;MACrC,IAAIA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK,UAAtC,EAAkD;QAChD,IAAIG,KAAJ,EAAW;UACT,IAAMC,EAAE,GAAGrB,QAAQ,CAACoB,KAAD,CAAR,GACPL,OAAO,CAACO,QAAR,CAAiBjB,KAAjB,EAAwBJ,YAAY,CAACgB,IAAD,CAApC,CADO,GAEPF,OAAO,CAACQ,eAAR,CAAwBlB,KAAxB,EAA+BJ,YAAY,CAACgB,IAAD,CAA3C,CAFJ;UAGAC,EAAE,CAACM,YAAH,CAAgBvB,YAAY,CAACgB,IAAD,CAA5B,EAAoC,UAAQI,EAAR,GAAU,GAA9C;QACD,CALD,MAKO;UACLH,EAAE,CAACO,eAAH,CAAmBxB,YAAY,CAACgB,IAAD,CAA/B;QACD;MACF,CATD,MASO,IAAIhB,YAAY,CAACgB,IAAD,CAAhB,EAAwB;QAC7BC,EAAE,CAACM,YAAH,CAAgBvB,YAAY,CAACgB,IAAD,CAA5B,EAAoCG,KAApC;MACD;IACF,CAbG,CAAJ;EAcD,CAjBD;EAmBA;;;;;;EAIAvB;IACQ,SAAqB,KAAKoB,IAAL,EAArB;IAAA,IAAER,EAAE,QAAJ;IAAA,IAAMC,EAAE,QAAR;IAAA,IAAUC,EAAE,QAAZ;IAAA,IAAcC,EAAE,QAAhB;;IACN,OAAOd,QAAQ,CAAC4B,MAAT,CAAgBjB,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,CAAP;EACD,CAHD;EAKA;;;;;;;EAKAf,oCAAS8B,KAAT,EAAsB;IACd,SAAqB,KAAKV,IAAL,EAArB;IAAA,IAAER,EAAE,QAAJ;IAAA,IAAMC,EAAE,QAAR;IAAA,IAAUC,EAAE,QAAZ;IAAA,IAAcC,EAAE,QAAhB;;IACN,OAAOd,QAAQ,CAAC8B,OAAT,CAAiBnB,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCe,KAAjC,CAAP;EACD,CAHD;;EAIF;AAAC,CAvDD,CAAmBzB,SAAnB;;AAyDA,eAAeL,IAAf","names":["Line","LineUtil","each","isObject","SVG_ATTR_MAP","ShapeBase","__extends","_this","attrs","_super","getDefaultAttrs","call","x1","y1","x2","y2","startArrow","endArrow","context","targetAttrs","attr","el","get","value","id","addArrow","getDefaultArrow","setAttribute","removeAttribute","length","ratio","pointAt"],"sourceRoot":"","sources":["../../src/shape/line.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}