{"ast":null,"code":"import { secondReg, dateReg } from '../constants/time'; // 获取所有属性并排序\n\nexport var getAllSortProperties = function getAllSortProperties(nodes, n) {\n  if (nodes === void 0) {\n    nodes = [];\n  }\n\n  if (n === void 0) {\n    n = 100;\n  }\n\n  var propertyKeyInfo = {};\n  nodes.forEach(function (node) {\n    if (!node.properties) {\n      return;\n    }\n\n    Object.keys(node.properties).forEach(function (propertyKey) {\n      // 目前过滤只保留可以转成数值型的或日期型的, todo: 统一转成one-hot特征向量或者embedding\n      if (propertyKey === 'id' || !\"\".concat(node.properties[propertyKey]).match(secondReg) && !\"\".concat(node.properties[propertyKey]).match(dateReg) && isNaN(Number(node.properties[propertyKey]))) {\n        if (propertyKeyInfo.hasOwnProperty(propertyKey)) {\n          delete propertyKeyInfo[propertyKey];\n        }\n\n        return;\n      }\n\n      if (propertyKeyInfo.hasOwnProperty(propertyKey)) {\n        propertyKeyInfo[propertyKey] += 1;\n      } else {\n        propertyKeyInfo[propertyKey] = 1;\n      }\n    });\n  }); // 取top50的属性\n\n  var sortKeys = Object.keys(propertyKeyInfo).sort(function (a, b) {\n    return propertyKeyInfo[b] - propertyKeyInfo[a];\n  });\n  return sortKeys.length < n ? sortKeys : sortKeys.slice(0, n);\n};\n\nvar processProperty = function processProperty(properties, propertyKeys) {\n  return propertyKeys.map(function (key) {\n    if (properties.hasOwnProperty(key)) {\n      // 可以转成数值的直接转成数值\n      if (!isNaN(Number(properties[key]))) {\n        return Number(properties[key]);\n      } // 时间型的转成时间戳\n\n\n      if (properties[key].match(secondReg) || properties[key].match(dateReg)) {\n        // @ts-ignore\n        return Number(Date.parse(new Date(properties[key]))) / 1000;\n      }\n    }\n\n    return 0;\n  });\n}; // 获取属性特征权重\n\n\nexport var getPropertyWeight = function getPropertyWeight(nodes) {\n  var propertyKeys = getAllSortProperties(nodes);\n  var allPropertiesWeight = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    allPropertiesWeight[i] = processProperty(nodes[i].properties, propertyKeys);\n  }\n\n  return allPropertiesWeight;\n}; // 获取所有节点的属性集合\n\nexport var getAllProperties = function getAllProperties(nodes, key) {\n  if (key === void 0) {\n    key = undefined;\n  }\n\n  var allProperties = [];\n  nodes.forEach(function (node) {\n    if (key === undefined) {\n      allProperties.push(node);\n    }\n\n    if (node[key] !== undefined) {\n      allProperties.push(node[key]);\n    }\n  });\n  return allProperties;\n};\nexport default {\n  getAllSortProperties: getAllSortProperties,\n  getPropertyWeight: getPropertyWeight,\n  getAllProperties: getAllProperties\n};","map":{"version":3,"names":["secondReg","dateReg","getAllSortProperties","nodes","n","propertyKeyInfo","forEach","node","properties","Object","keys","propertyKey","concat","match","isNaN","Number","hasOwnProperty","sortKeys","sort","a","b","length","slice","processProperty","propertyKeys","map","key","Date","parse","getPropertyWeight","allPropertiesWeight","i","getAllProperties","undefined","allProperties","push"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/algorithm/es/utils/node-properties.js"],"sourcesContent":["import { secondReg, dateReg } from '../constants/time'; // 获取所有属性并排序\n\nexport var getAllSortProperties = function getAllSortProperties(nodes, n) {\n  if (nodes === void 0) {\n    nodes = [];\n  }\n\n  if (n === void 0) {\n    n = 100;\n  }\n\n  var propertyKeyInfo = {};\n  nodes.forEach(function (node) {\n    if (!node.properties) {\n      return;\n    }\n\n    Object.keys(node.properties).forEach(function (propertyKey) {\n      // 目前过滤只保留可以转成数值型的或日期型的, todo: 统一转成one-hot特征向量或者embedding\n      if (propertyKey === 'id' || !\"\".concat(node.properties[propertyKey]).match(secondReg) && !\"\".concat(node.properties[propertyKey]).match(dateReg) && isNaN(Number(node.properties[propertyKey]))) {\n        if (propertyKeyInfo.hasOwnProperty(propertyKey)) {\n          delete propertyKeyInfo[propertyKey];\n        }\n\n        return;\n      }\n\n      if (propertyKeyInfo.hasOwnProperty(propertyKey)) {\n        propertyKeyInfo[propertyKey] += 1;\n      } else {\n        propertyKeyInfo[propertyKey] = 1;\n      }\n    });\n  }); // 取top50的属性\n\n  var sortKeys = Object.keys(propertyKeyInfo).sort(function (a, b) {\n    return propertyKeyInfo[b] - propertyKeyInfo[a];\n  });\n  return sortKeys.length < n ? sortKeys : sortKeys.slice(0, n);\n};\n\nvar processProperty = function processProperty(properties, propertyKeys) {\n  return propertyKeys.map(function (key) {\n    if (properties.hasOwnProperty(key)) {\n      // 可以转成数值的直接转成数值\n      if (!isNaN(Number(properties[key]))) {\n        return Number(properties[key]);\n      } // 时间型的转成时间戳\n\n\n      if (properties[key].match(secondReg) || properties[key].match(dateReg)) {\n        // @ts-ignore\n        return Number(Date.parse(new Date(properties[key]))) / 1000;\n      }\n    }\n\n    return 0;\n  });\n}; // 获取属性特征权重\n\n\nexport var getPropertyWeight = function getPropertyWeight(nodes) {\n  var propertyKeys = getAllSortProperties(nodes);\n  var allPropertiesWeight = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    allPropertiesWeight[i] = processProperty(nodes[i].properties, propertyKeys);\n  }\n\n  return allPropertiesWeight;\n}; // 获取所有节点的属性集合\n\nexport var getAllProperties = function getAllProperties(nodes, key) {\n  if (key === void 0) {\n    key = undefined;\n  }\n\n  var allProperties = [];\n  nodes.forEach(function (node) {\n    if (key === undefined) {\n      allProperties.push(node);\n    }\n\n    if (node[key] !== undefined) {\n      allProperties.push(node[key]);\n    }\n  });\n  return allProperties;\n};\nexport default {\n  getAllSortProperties: getAllSortProperties,\n  getPropertyWeight: getPropertyWeight,\n  getAllProperties: getAllProperties\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}