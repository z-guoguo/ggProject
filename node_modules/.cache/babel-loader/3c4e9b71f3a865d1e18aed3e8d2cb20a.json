{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nimport { __awaiter, __extends, __generator } from \"tslib\";\nimport { AbstractLayout } from '@antv/g6-core';\nimport { Layout } from '../../layout';\nimport { LayoutWorker } from '../../layout/worker/layout.worker';\nimport { LAYOUT_MESSAGE } from '../../layout/worker/layoutConst';\nimport { gpuDetector } from '../../util/gpu';\nimport { mix, clone } from '@antv/util'; // eslint-disable-next-line @typescript-eslint/no-implied-eval\n\nvar mockRaf = function mockRaf(cb) {\n  return setTimeout(cb, 16);\n};\n\nvar mockCaf = function mockCaf(reqId) {\n  return clearTimeout(reqId);\n};\n\nvar helper = {\n  // pollyfill\n  requestAnimationFrame: function requestAnimationFrame(callback) {\n    var fn = typeof window !== 'undefined' ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || mockRaf : mockRaf;\n    return fn(callback);\n  },\n  cancelAnimationFrame: function cancelAnimationFrame(requestId) {\n    var fn = typeof window !== 'undefined' ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || mockCaf : mockCaf;\n    return fn(requestId);\n  }\n};\nvar GPU_LAYOUT_NAMES = ['fruchterman', 'gForce'];\nvar LAYOUT_PIPES_ADJUST_NAMES = ['force', 'grid', 'circular'];\n\nvar LayoutController =\n/** @class */\nfunction (_super) {\n  __extends(LayoutController, _super); // the configurations of the layout\n  // private layoutCfg: any; // LayoutOptions\n  // the type name of the layout\n  // private layoutType: string;\n  // private data: GraphData;\n  // private layoutMethods: typeof Layout;\n\n\n  function LayoutController(graph) {\n    var _this = _super.call(this, graph) || this;\n\n    _this.graph = graph;\n    _this.layoutCfg = graph.get('layout') || {};\n    _this.layoutType = _this.getLayoutType();\n    _this.worker = null;\n    _this.workerData = {};\n\n    _this.initLayout();\n\n    return _this;\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.initLayout = function () {// no data before rendering\n  }; // get layout worker and create one if not exists\n\n\n  LayoutController.prototype.getWorker = function () {\n    if (this.worker) {\n      return this.worker;\n    }\n\n    if (typeof Worker === 'undefined') {\n      // 如果当前浏览器不支持 web worker，则不使用 web worker\n      console.warn('Web worker is not supported in current browser.');\n      this.worker = null;\n    } else {\n      this.worker = LayoutWorker(this.layoutCfg.workerScriptURL);\n    }\n\n    return this.worker;\n  }; // stop layout worker\n\n\n  LayoutController.prototype.stopWorker = function () {\n    var workerData = this.workerData;\n\n    if (!this.worker) {\n      return;\n    }\n\n    this.worker.terminate();\n    this.worker = null; // 重新开始新的布局之前，先取消之前布局的requestAnimationFrame。\n\n    if (workerData.requestId) {\n      helper.cancelAnimationFrame(workerData.requestId);\n      workerData.requestId = null;\n    }\n\n    if (workerData.requestId2) {\n      helper.cancelAnimationFrame(workerData.requestId2);\n      workerData.requestId2 = null;\n    }\n  };\n\n  LayoutController.prototype.execLayoutMethod = function (layoutCfg, order) {\n    var _this = this;\n\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, isForce, onTick_1, tick, enableTick, layoutMethod, onTick_2, tick, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              if (!graph || graph.get('destroyed')) return [2\n              /*return*/\n              ];\n              layoutType = layoutCfg.type; // 每个布局方法都需要注册\n\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              }; // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n\n\n              if (layoutType && this.isGPU) {\n                if (!this.hasGPUVersion(layoutType)) {\n                  console.warn(\"The '\".concat(layoutType, \"' layout does not support GPU calculation for now, it will run in CPU.\"));\n                } else {\n                  layoutType = \"\".concat(layoutType, \"-gpu\");\n                }\n              }\n\n              isForce = layoutType === 'force' || layoutType === 'g6force' || layoutType === 'gForce';\n\n              if (isForce) {\n                onTick_1 = layoutCfg.onTick;\n\n                tick = function tick() {\n                  if (onTick_1) {\n                    onTick_1();\n                  }\n\n                  graph.refreshPositions();\n                };\n\n                layoutCfg.tick = tick;\n              } else if (layoutType === 'comboForce' || layoutType === 'comboCombined') {\n                layoutCfg.comboTrees = graph.get('comboTrees');\n              }\n\n              enableTick = false;\n\n              try {\n                layoutMethod = new Layout[layoutType](layoutCfg);\n              } catch (e) {\n                console.warn(\"The layout method: '\".concat(layoutType, \"' does not exist! Please specify it first.\"));\n                reject();\n              } // 是否需要迭代的方式完成布局。这里是来自布局对象的实例属性，是由布局的定义者在布局类定义的。\n\n\n              enableTick = layoutMethod.enableTick;\n\n              if (enableTick) {\n                onTick_2 = layoutCfg.onTick;\n\n                tick = function tick() {\n                  if (onTick_2) {\n                    onTick_2();\n                  }\n\n                  graph.refreshPositions();\n                };\n\n                layoutMethod.tick = tick;\n              }\n\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              addLayoutOrder(layoutData, order);\n              layoutMethod.init(layoutData); // 若存在节点没有位置信息，且没有设置 layout，在 initPositions 中 random 给出了所有节点的位置，不需要再次执行 random 布局\n              // 所有节点都有位置信息，且指定了 layout，则执行布局（代表不是第一次进行布局）\n\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4\n              /*yield*/\n              , layoutMethod.execute()];\n\n            case 1:\n              _a.sent();\n\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              this.layoutMethods[order] = layoutMethod;\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  LayoutController.prototype.updateLayoutMethod = function (layoutMethod, layoutCfg) {\n    var _this = this;\n\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              layoutType = layoutCfg === null || layoutCfg === void 0 ? void 0 : layoutCfg.type; // 每个布局方法都需要注册\n\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              };\n\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              layoutMethod.init(layoutData);\n              layoutMethod.updateCfg(layoutCfg);\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4\n              /*yield*/\n              , layoutMethod.execute()];\n\n            case 1:\n              _a.sent();\n\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n  /**\n   * @param {function} success callback\n   * @return {boolean} 是否使用web worker布局\n   */\n\n\n  LayoutController.prototype.layout = function (success) {\n    var _this = this;\n\n    var graph = this.graph;\n    this.data = this.setDataFromGraph();\n    var _a = this.data,\n        nodes = _a.nodes,\n        hiddenNodes = _a.hiddenNodes;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var layoutCfg = {};\n    Object.assign(layoutCfg, {\n      width: width,\n      height: height,\n      center: [width / 2, height / 2]\n    }, this.layoutCfg);\n    this.layoutCfg = layoutCfg;\n    this.destoryLayoutMethods();\n    graph.emit('beforelayout');\n    this.initPositions(layoutCfg.center, nodes); // init hidden nodes\n\n    this.initPositions(layoutCfg.center, hiddenNodes); // 防止用户直接用 -gpu 结尾指定布局\n\n    var layoutType = layoutCfg.type;\n\n    if (layoutType && layoutType.split('-')[1] === 'gpu') {\n      layoutType = layoutType.split('-')[0];\n      layoutCfg.gpuEnabled = true;\n    } // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n\n\n    var enableGPU = false;\n\n    if (layoutCfg.gpuEnabled) {\n      enableGPU = true; // 打开下面语句将会导致 webworker 报找不到 window\n\n      if (!gpuDetector().webgl) {\n        console.warn(\"Your browser does not support webGL or GPGPU. The layout will run in CPU.\");\n        enableGPU = false;\n      }\n    }\n\n    this.isGPU = enableGPU; // 在 onAllLayoutEnd 中执行用户自定义 onLayoutEnd，触发 afterlayout、更新节点位置、fitView/fitCenter、触发 afterrender\n\n    var onLayoutEnd = layoutCfg.onLayoutEnd,\n        layoutEndFormatted = layoutCfg.layoutEndFormatted,\n        adjust = layoutCfg.adjust;\n\n    if (!layoutEndFormatted) {\n      layoutCfg.layoutEndFormatted = true;\n\n      layoutCfg.onAllLayoutEnd = function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                // 执行用户自定义 onLayoutEnd\n                if (onLayoutEnd) {\n                  onLayoutEnd();\n                } // 更新节点位置\n\n\n                this.refreshLayout();\n                if (!(adjust && layoutCfg.pipes)) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , this.adjustPipesBox(this.data, adjust)];\n\n              case 1:\n                _a.sent();\n\n                this.refreshLayout();\n                _a.label = 2;\n\n              case 2:\n                // 触发 afterlayout\n                graph.emit('afterlayout');\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      };\n    }\n\n    this.stopWorker();\n\n    if (layoutCfg.workerEnabled && this.layoutWithWorker(this.data)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return true;\n    }\n\n    var start = Promise.resolve();\n    var hasLayout = false;\n\n    if (layoutCfg.type) {\n      hasLayout = true;\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.execLayoutMethod(layoutCfg, 0)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _a.sent()];\n            }\n          });\n        });\n      });\n    } else if (layoutCfg.pipes) {\n      hasLayout = true;\n      layoutCfg.pipes.forEach(function (cfg, index) {\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.execLayoutMethod(cfg, index)];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    }\n\n    if (hasLayout) {\n      // 最后统一在外部调用onAllLayoutEnd\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd(); // 在执行 execute 后立即执行 success，且在 timeBar 中有 throttle，可以防止 timeBar 监听 afterrender 进行 changeData 后 layout，从而死循环\n        // 对于 force 一类布局完成后的 fitView 需要用户自己在 onLayoutEnd 中配置\n\n        if (success) success();\n      }).catch(function (error) {\n        console.warn('graph layout failed,', error);\n      });\n    } else {\n      // 无布局配置\n      graph.refreshPositions();\n      success === null || success === void 0 ? void 0 : success();\n    }\n\n    return false;\n  };\n  /**\n   * layout with web worker\n   * @param {object} data graph data\n   * @return {boolean} 是否支持web worker\n   */\n\n\n  LayoutController.prototype.layoutWithWorker = function (data) {\n    var _this = this;\n\n    var _a = this,\n        layoutCfg = _a.layoutCfg,\n        graph = _a.graph;\n\n    var worker = this.getWorker(); // 每次worker message event handler调用之间的共享数据，会被修改。\n\n    var workerData = this.workerData;\n\n    if (!worker) {\n      return false;\n    }\n\n    workerData.requestId = null;\n    workerData.requestId2 = null;\n    workerData.currentTick = null;\n    workerData.currentTickData = null;\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    var hasLayout = false;\n\n    if (layoutCfg.type) {\n      hasLayout = true;\n      start = start.then(function () {\n        return _this.runWebworker(worker, data, layoutCfg);\n      });\n    } else if (layoutCfg.pipes) {\n      hasLayout = true;\n\n      var _loop_1 = function _loop_1(cfg) {\n        start = start.then(function () {\n          return _this.runWebworker(worker, data, cfg);\n        });\n      };\n\n      for (var _i = 0, _b = layoutCfg.pipes; _i < _b.length; _i++) {\n        var cfg = _b[_i];\n\n        _loop_1(cfg);\n      }\n    }\n\n    if (hasLayout) {\n      // 最后统一在外部调用onAllLayoutEnd\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n      }).catch(function (error) {\n        console.error('layout failed', error);\n      });\n    }\n\n    return true;\n  };\n\n  LayoutController.prototype.runWebworker = function (worker, allData, layoutCfg) {\n    var _this = this;\n\n    var isGPU = this.isGPU;\n    var data = this.filterLayoutData(allData, layoutCfg);\n    var nodes = data.nodes,\n        edges = data.edges;\n    var offScreenCanvas = document.createElement('canvas');\n    var gpuWorkerAbility = isGPU && typeof window !== 'undefined' && // eslint-disable-next-line @typescript-eslint/dot-notation\n    window.navigator && !navigator[\"gpu\"] && // WebGPU 还不支持 OffscreenCanvas\n    'OffscreenCanvas' in window && 'transferControlToOffscreen' in offScreenCanvas; // NOTE: postMessage的message参数里面不能包含函数，否则postMessage会报错，\n    // 例如：'function could not be cloned'。\n    // 详情参考：https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    // 所以这里需要把过滤layoutCfg里的函数字段过滤掉。\n\n    var filteredLayoutCfg = filterObject(layoutCfg, function (value) {\n      return typeof value !== 'function';\n    });\n\n    if (!gpuWorkerAbility) {\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.RUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg\n      });\n    } else {\n      var offscreen = offScreenCanvas.transferControlToOffscreen(); // filteredLayoutCfg.canvas = offscreen;\n\n      filteredLayoutCfg.type = \"\".concat(filteredLayoutCfg.type, \"-gpu\");\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.GPURUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg,\n        canvas: offscreen\n      }, [offscreen]);\n    }\n\n    return new Promise(function (reslove, reject) {\n      worker.onmessage = function (event) {\n        _this.handleWorkerMessage(reslove, reject, event, data, layoutCfg);\n      };\n    });\n  }; // success callback will be called when updating graph positions for the first time.\n\n\n  LayoutController.prototype.handleWorkerMessage = function (reslove, reject, event, data, layoutCfg) {\n    var _a = this,\n        graph = _a.graph,\n        workerData = _a.workerData;\n\n    var eventData = event.data;\n    var type = eventData.type;\n\n    var onTick = function onTick() {\n      if (layoutCfg.onTick) {\n        layoutCfg.onTick();\n      }\n    };\n\n    switch (type) {\n      case LAYOUT_MESSAGE.TICK:\n        workerData.currentTick = eventData.currentTick;\n        workerData.currentTickData = eventData;\n\n        if (!workerData.requestId) {\n          workerData.requestId = helper.requestAnimationFrame(function requestId() {\n            updateLayoutPosition(data, eventData);\n            graph.refreshPositions();\n            onTick();\n\n            if (eventData.currentTick === eventData.totalTicks) {\n              // 如果是最后一次tick\n              reslove();\n            } else if (workerData.currentTick === eventData.totalTicks) {\n              // 注意这里workerData.currentTick可能已经不再是前面赋值时候的值了，\n              // 因为在requestAnimationFrame等待时间里，可能产生新的tick。\n              // 如果当前tick不是最后一次tick，并且所有的tick消息都已发出来了，那么需要用最后一次tick的数据再刷新一次。\n              workerData.requestId2 = helper.requestAnimationFrame(function requestId2() {\n                updateLayoutPosition(data, workerData.currentTickData);\n                graph.refreshPositions();\n                workerData.requestId2 = null;\n                onTick();\n                reslove();\n              });\n            }\n\n            workerData.requestId = null;\n          });\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.END:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateLayoutPosition(data, eventData);\n          reslove();\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.GPUEND:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateGPUWorkerLayoutPosition(data, eventData);\n          reslove();\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.ERROR:\n        console.warn('Web-Worker layout error!', eventData.message);\n        reject();\n        break;\n\n      default:\n        reject();\n        break;\n    }\n  }; // 更新布局参数\n\n\n  LayoutController.prototype.updateLayoutCfg = function (cfg) {\n    var _this = this;\n\n    var _a = this,\n        graph = _a.graph,\n        layoutMethods = _a.layoutMethods;\n\n    var layoutCfg = mix({}, this.layoutCfg, cfg);\n    this.layoutCfg = layoutCfg;\n\n    if (!(layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length)) {\n      this.layout();\n      return;\n    }\n\n    this.data = this.setDataFromGraph();\n    this.stopWorker();\n\n    if (cfg.workerEnabled && this.layoutWithWorker(this.data)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return;\n    }\n\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    var hasLayout = false;\n\n    if ((layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length) === 1) {\n      hasLayout = true;\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.updateLayoutMethod(layoutMethods[0], layoutCfg)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _a.sent()];\n            }\n          });\n        });\n      });\n    } else {\n      hasLayout = true;\n      layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.forEach(function (layoutMethod, index) {\n        var currentCfg = layoutCfg.pipes[index];\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.updateLayoutMethod(layoutMethod, currentCfg)];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    }\n\n    if (hasLayout) {\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n      }).catch(function (error) {\n        console.warn('layout failed', error);\n      });\n    }\n  };\n\n  LayoutController.prototype.adjustPipesBox = function (data, adjust) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var nodes = data.nodes;\n\n      if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) {\n        resolve();\n      }\n\n      if (!LAYOUT_PIPES_ADJUST_NAMES.includes(adjust)) {\n        console.warn(\"The adjust type \".concat(adjust, \" is not supported yet, please assign it with 'force', 'grid', or 'circular'.\"));\n        resolve();\n      }\n\n      var layoutCfg = {\n        center: _this.layoutCfg.center,\n        nodeSize: function nodeSize(d) {\n          return Math.max(d.height, d.width);\n        },\n        preventOverlap: true,\n        onLayoutEnd: function onLayoutEnd() {}\n      }; // 计算出大单元\n\n      var _a = _this.getLayoutBBox(nodes),\n          groupNodes = _a.groupNodes,\n          layoutNodes = _a.layoutNodes;\n\n      var preNodes = clone(layoutNodes); // 根据大单元坐标的变化，调整这里面每个小单元nodes\n\n      layoutCfg.onLayoutEnd = function () {\n        layoutNodes === null || layoutNodes === void 0 ? void 0 : layoutNodes.forEach(function (ele, index) {\n          var _a, _b, _c;\n\n          var dx = ele.x - ((_a = preNodes[index]) === null || _a === void 0 ? void 0 : _a.x);\n          var dy = ele.y - ((_b = preNodes[index]) === null || _b === void 0 ? void 0 : _b.y);\n          (_c = groupNodes[index]) === null || _c === void 0 ? void 0 : _c.forEach(function (n) {\n            n.x += dx;\n            n.y += dy;\n          });\n        });\n        resolve();\n      };\n\n      var layoutMethod = new Layout[adjust](layoutCfg);\n      layoutMethod.layout({\n        nodes: layoutNodes\n      });\n    });\n  };\n\n  LayoutController.prototype.hasGPUVersion = function (layoutName) {\n    return GPU_LAYOUT_NAMES.includes(layoutName);\n  };\n\n  LayoutController.prototype.destroy = function () {\n    this.destoryLayoutMethods();\n    var worker = this.worker;\n\n    if (worker) {\n      worker.terminate();\n      this.worker = null;\n    }\n\n    this.destroyed = true;\n    this.graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethods = undefined;\n    this.graph = null;\n  };\n\n  return LayoutController;\n}(AbstractLayout);\n\nexport default LayoutController;\n\nfunction updateLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var layoutNodes = layoutData.nodes;\n  var nodeLength = nodes.length;\n\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    node.x = layoutNodes[i].x;\n    node.y = layoutNodes[i].y;\n  }\n}\n\nfunction filterObject(collection, callback) {\n  var result = {};\n\n  if (collection && _typeof(collection) === 'object') {\n    Object.keys(collection).forEach(function (key) {\n      if (collection.hasOwnProperty(key) && callback(collection[key])) {\n        result[key] = collection[key];\n      }\n    });\n    return result;\n  }\n\n  return collection;\n}\n\nfunction updateGPUWorkerLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var vertexEdgeData = layoutData.vertexEdgeData;\n  var nodeLength = nodes.length;\n\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    var x = vertexEdgeData[4 * i];\n    var y = vertexEdgeData[4 * i + 1];\n    node.x = x;\n    node.y = y;\n  }\n}\n\nfunction addLayoutOrder(data, order) {\n  var _a;\n\n  if (!((_a = data === null || data === void 0 ? void 0 : data.nodes) === null || _a === void 0 ? void 0 : _a.length)) {\n    return;\n  }\n\n  var nodes = data.nodes;\n  nodes.forEach(function (node) {\n    node.layoutOrder = order;\n  });\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","__awaiter","__extends","__generator","AbstractLayout","Layout","LayoutWorker","LAYOUT_MESSAGE","gpuDetector","mix","clone","mockRaf","cb","setTimeout","mockCaf","reqId","clearTimeout","helper","requestAnimationFrame","callback","fn","window","webkitRequestAnimationFrame","cancelAnimationFrame","requestId","webkitCancelAnimationFrame","GPU_LAYOUT_NAMES","LAYOUT_PIPES_ADJUST_NAMES","LayoutController","_super","graph","_this","call","layoutCfg","get","layoutType","getLayoutType","worker","workerData","initLayout","getWorker","Worker","console","warn","workerScriptURL","stopWorker","terminate","requestId2","execLayoutMethod","order","Promise","reslove","reject","isForce","onTick_1","tick","enableTick","layoutMethod","onTick_2","layoutData","_a","label","type","onLayoutEnd","emit","isGPU","hasGPUVersion","concat","onTick","refreshPositions","comboTrees","e","filterLayoutData","data","addLayoutOrder","init","execute","sent","isCustomLayout","layoutMethods","updateLayoutMethod","updateCfg","layout","success","setDataFromGraph","nodes","hiddenNodes","width","height","Object","assign","center","destoryLayoutMethods","initPositions","split","gpuEnabled","enableGPU","webgl","layoutEndFormatted","adjust","onAllLayoutEnd","refreshLayout","pipes","adjustPipesBox","workerEnabled","layoutWithWorker","start","resolve","hasLayout","then","forEach","cfg","index","catch","error","currentTick","currentTickData","runWebworker","_loop_1","_i","_b","length","allData","edges","offScreenCanvas","document","createElement","gpuWorkerAbility","navigator","filteredLayoutCfg","filterObject","value","postMessage","RUN","offscreen","transferControlToOffscreen","GPURUN","canvas","onmessage","event","handleWorkerMessage","eventData","TICK","updateLayoutPosition","totalTicks","END","GPUEND","updateGPUWorkerLayoutPosition","ERROR","message","updateLayoutCfg","currentCfg","includes","nodeSize","d","Math","max","preventOverlap","getLayoutBBox","groupNodes","layoutNodes","preNodes","ele","_c","dx","x","dy","y","n","layoutName","destroy","destroyed","set","undefined","nodeLength","i","node","collection","result","keys","key","hasOwnProperty","vertexEdgeData","layoutOrder"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-pc/es/graph/controller/layout.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport { __awaiter, __extends, __generator } from \"tslib\";\nimport { AbstractLayout } from '@antv/g6-core';\nimport { Layout } from '../../layout';\nimport { LayoutWorker } from '../../layout/worker/layout.worker';\nimport { LAYOUT_MESSAGE } from '../../layout/worker/layoutConst';\nimport { gpuDetector } from '../../util/gpu';\nimport { mix, clone } from '@antv/util'; // eslint-disable-next-line @typescript-eslint/no-implied-eval\n\nvar mockRaf = function mockRaf(cb) {\n  return setTimeout(cb, 16);\n};\n\nvar mockCaf = function mockCaf(reqId) {\n  return clearTimeout(reqId);\n};\n\nvar helper = {\n  // pollyfill\n  requestAnimationFrame: function requestAnimationFrame(callback) {\n    var fn = typeof window !== 'undefined' ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || mockRaf : mockRaf;\n    return fn(callback);\n  },\n  cancelAnimationFrame: function cancelAnimationFrame(requestId) {\n    var fn = typeof window !== 'undefined' ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || mockCaf : mockCaf;\n    return fn(requestId);\n  }\n};\nvar GPU_LAYOUT_NAMES = ['fruchterman', 'gForce'];\nvar LAYOUT_PIPES_ADJUST_NAMES = ['force', 'grid', 'circular'];\n\nvar LayoutController =\n/** @class */\nfunction (_super) {\n  __extends(LayoutController, _super); // the configurations of the layout\n  // private layoutCfg: any; // LayoutOptions\n  // the type name of the layout\n  // private layoutType: string;\n  // private data: GraphData;\n  // private layoutMethods: typeof Layout;\n\n\n  function LayoutController(graph) {\n    var _this = _super.call(this, graph) || this;\n\n    _this.graph = graph;\n    _this.layoutCfg = graph.get('layout') || {};\n    _this.layoutType = _this.getLayoutType();\n    _this.worker = null;\n    _this.workerData = {};\n\n    _this.initLayout();\n\n    return _this;\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.initLayout = function () {// no data before rendering\n  }; // get layout worker and create one if not exists\n\n\n  LayoutController.prototype.getWorker = function () {\n    if (this.worker) {\n      return this.worker;\n    }\n\n    if (typeof Worker === 'undefined') {\n      // 如果当前浏览器不支持 web worker，则不使用 web worker\n      console.warn('Web worker is not supported in current browser.');\n      this.worker = null;\n    } else {\n      this.worker = LayoutWorker(this.layoutCfg.workerScriptURL);\n    }\n\n    return this.worker;\n  }; // stop layout worker\n\n\n  LayoutController.prototype.stopWorker = function () {\n    var workerData = this.workerData;\n\n    if (!this.worker) {\n      return;\n    }\n\n    this.worker.terminate();\n    this.worker = null; // 重新开始新的布局之前，先取消之前布局的requestAnimationFrame。\n\n    if (workerData.requestId) {\n      helper.cancelAnimationFrame(workerData.requestId);\n      workerData.requestId = null;\n    }\n\n    if (workerData.requestId2) {\n      helper.cancelAnimationFrame(workerData.requestId2);\n      workerData.requestId2 = null;\n    }\n  };\n\n  LayoutController.prototype.execLayoutMethod = function (layoutCfg, order) {\n    var _this = this;\n\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, isForce, onTick_1, tick, enableTick, layoutMethod, onTick_2, tick, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              if (!graph || graph.get('destroyed')) return [2\n              /*return*/\n              ];\n              layoutType = layoutCfg.type; // 每个布局方法都需要注册\n\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              }; // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n\n\n              if (layoutType && this.isGPU) {\n                if (!this.hasGPUVersion(layoutType)) {\n                  console.warn(\"The '\".concat(layoutType, \"' layout does not support GPU calculation for now, it will run in CPU.\"));\n                } else {\n                  layoutType = \"\".concat(layoutType, \"-gpu\");\n                }\n              }\n\n              isForce = layoutType === 'force' || layoutType === 'g6force' || layoutType === 'gForce';\n\n              if (isForce) {\n                onTick_1 = layoutCfg.onTick;\n\n                tick = function tick() {\n                  if (onTick_1) {\n                    onTick_1();\n                  }\n\n                  graph.refreshPositions();\n                };\n\n                layoutCfg.tick = tick;\n              } else if (layoutType === 'comboForce' || layoutType === 'comboCombined') {\n                layoutCfg.comboTrees = graph.get('comboTrees');\n              }\n\n              enableTick = false;\n\n              try {\n                layoutMethod = new Layout[layoutType](layoutCfg);\n              } catch (e) {\n                console.warn(\"The layout method: '\".concat(layoutType, \"' does not exist! Please specify it first.\"));\n                reject();\n              } // 是否需要迭代的方式完成布局。这里是来自布局对象的实例属性，是由布局的定义者在布局类定义的。\n\n\n              enableTick = layoutMethod.enableTick;\n\n              if (enableTick) {\n                onTick_2 = layoutCfg.onTick;\n\n                tick = function tick() {\n                  if (onTick_2) {\n                    onTick_2();\n                  }\n\n                  graph.refreshPositions();\n                };\n\n                layoutMethod.tick = tick;\n              }\n\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              addLayoutOrder(layoutData, order);\n              layoutMethod.init(layoutData); // 若存在节点没有位置信息，且没有设置 layout，在 initPositions 中 random 给出了所有节点的位置，不需要再次执行 random 布局\n              // 所有节点都有位置信息，且指定了 layout，则执行布局（代表不是第一次进行布局）\n\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4\n              /*yield*/\n              , layoutMethod.execute()];\n\n            case 1:\n              _a.sent();\n\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              this.layoutMethods[order] = layoutMethod;\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  LayoutController.prototype.updateLayoutMethod = function (layoutMethod, layoutCfg) {\n    var _this = this;\n\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              layoutType = layoutCfg === null || layoutCfg === void 0 ? void 0 : layoutCfg.type; // 每个布局方法都需要注册\n\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              };\n\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              layoutMethod.init(layoutData);\n              layoutMethod.updateCfg(layoutCfg);\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4\n              /*yield*/\n              , layoutMethod.execute()];\n\n            case 1:\n              _a.sent();\n\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n  /**\n   * @param {function} success callback\n   * @return {boolean} 是否使用web worker布局\n   */\n\n\n  LayoutController.prototype.layout = function (success) {\n    var _this = this;\n\n    var graph = this.graph;\n    this.data = this.setDataFromGraph();\n    var _a = this.data,\n        nodes = _a.nodes,\n        hiddenNodes = _a.hiddenNodes;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var layoutCfg = {};\n    Object.assign(layoutCfg, {\n      width: width,\n      height: height,\n      center: [width / 2, height / 2]\n    }, this.layoutCfg);\n    this.layoutCfg = layoutCfg;\n    this.destoryLayoutMethods();\n    graph.emit('beforelayout');\n    this.initPositions(layoutCfg.center, nodes); // init hidden nodes\n\n    this.initPositions(layoutCfg.center, hiddenNodes); // 防止用户直接用 -gpu 结尾指定布局\n\n    var layoutType = layoutCfg.type;\n\n    if (layoutType && layoutType.split('-')[1] === 'gpu') {\n      layoutType = layoutType.split('-')[0];\n      layoutCfg.gpuEnabled = true;\n    } // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n\n\n    var enableGPU = false;\n\n    if (layoutCfg.gpuEnabled) {\n      enableGPU = true; // 打开下面语句将会导致 webworker 报找不到 window\n\n      if (!gpuDetector().webgl) {\n        console.warn(\"Your browser does not support webGL or GPGPU. The layout will run in CPU.\");\n        enableGPU = false;\n      }\n    }\n\n    this.isGPU = enableGPU; // 在 onAllLayoutEnd 中执行用户自定义 onLayoutEnd，触发 afterlayout、更新节点位置、fitView/fitCenter、触发 afterrender\n\n    var onLayoutEnd = layoutCfg.onLayoutEnd,\n        layoutEndFormatted = layoutCfg.layoutEndFormatted,\n        adjust = layoutCfg.adjust;\n\n    if (!layoutEndFormatted) {\n      layoutCfg.layoutEndFormatted = true;\n\n      layoutCfg.onAllLayoutEnd = function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                // 执行用户自定义 onLayoutEnd\n                if (onLayoutEnd) {\n                  onLayoutEnd();\n                } // 更新节点位置\n\n\n                this.refreshLayout();\n                if (!(adjust && layoutCfg.pipes)) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , this.adjustPipesBox(this.data, adjust)];\n\n              case 1:\n                _a.sent();\n\n                this.refreshLayout();\n                _a.label = 2;\n\n              case 2:\n                // 触发 afterlayout\n                graph.emit('afterlayout');\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      };\n    }\n\n    this.stopWorker();\n\n    if (layoutCfg.workerEnabled && this.layoutWithWorker(this.data)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return true;\n    }\n\n    var start = Promise.resolve();\n    var hasLayout = false;\n\n    if (layoutCfg.type) {\n      hasLayout = true;\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.execLayoutMethod(layoutCfg, 0)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _a.sent()];\n            }\n          });\n        });\n      });\n    } else if (layoutCfg.pipes) {\n      hasLayout = true;\n      layoutCfg.pipes.forEach(function (cfg, index) {\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.execLayoutMethod(cfg, index)];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    }\n\n    if (hasLayout) {\n      // 最后统一在外部调用onAllLayoutEnd\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd(); // 在执行 execute 后立即执行 success，且在 timeBar 中有 throttle，可以防止 timeBar 监听 afterrender 进行 changeData 后 layout，从而死循环\n        // 对于 force 一类布局完成后的 fitView 需要用户自己在 onLayoutEnd 中配置\n\n        if (success) success();\n      }).catch(function (error) {\n        console.warn('graph layout failed,', error);\n      });\n    } else {\n      // 无布局配置\n      graph.refreshPositions();\n      success === null || success === void 0 ? void 0 : success();\n    }\n\n    return false;\n  };\n  /**\n   * layout with web worker\n   * @param {object} data graph data\n   * @return {boolean} 是否支持web worker\n   */\n\n\n  LayoutController.prototype.layoutWithWorker = function (data) {\n    var _this = this;\n\n    var _a = this,\n        layoutCfg = _a.layoutCfg,\n        graph = _a.graph;\n\n    var worker = this.getWorker(); // 每次worker message event handler调用之间的共享数据，会被修改。\n\n    var workerData = this.workerData;\n\n    if (!worker) {\n      return false;\n    }\n\n    workerData.requestId = null;\n    workerData.requestId2 = null;\n    workerData.currentTick = null;\n    workerData.currentTickData = null;\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    var hasLayout = false;\n\n    if (layoutCfg.type) {\n      hasLayout = true;\n      start = start.then(function () {\n        return _this.runWebworker(worker, data, layoutCfg);\n      });\n    } else if (layoutCfg.pipes) {\n      hasLayout = true;\n\n      var _loop_1 = function _loop_1(cfg) {\n        start = start.then(function () {\n          return _this.runWebworker(worker, data, cfg);\n        });\n      };\n\n      for (var _i = 0, _b = layoutCfg.pipes; _i < _b.length; _i++) {\n        var cfg = _b[_i];\n\n        _loop_1(cfg);\n      }\n    }\n\n    if (hasLayout) {\n      // 最后统一在外部调用onAllLayoutEnd\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n      }).catch(function (error) {\n        console.error('layout failed', error);\n      });\n    }\n\n    return true;\n  };\n\n  LayoutController.prototype.runWebworker = function (worker, allData, layoutCfg) {\n    var _this = this;\n\n    var isGPU = this.isGPU;\n    var data = this.filterLayoutData(allData, layoutCfg);\n    var nodes = data.nodes,\n        edges = data.edges;\n    var offScreenCanvas = document.createElement('canvas');\n    var gpuWorkerAbility = isGPU && typeof window !== 'undefined' && // eslint-disable-next-line @typescript-eslint/dot-notation\n    window.navigator && !navigator[\"gpu\"] && // WebGPU 还不支持 OffscreenCanvas\n    'OffscreenCanvas' in window && 'transferControlToOffscreen' in offScreenCanvas; // NOTE: postMessage的message参数里面不能包含函数，否则postMessage会报错，\n    // 例如：'function could not be cloned'。\n    // 详情参考：https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    // 所以这里需要把过滤layoutCfg里的函数字段过滤掉。\n\n    var filteredLayoutCfg = filterObject(layoutCfg, function (value) {\n      return typeof value !== 'function';\n    });\n\n    if (!gpuWorkerAbility) {\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.RUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg\n      });\n    } else {\n      var offscreen = offScreenCanvas.transferControlToOffscreen(); // filteredLayoutCfg.canvas = offscreen;\n\n      filteredLayoutCfg.type = \"\".concat(filteredLayoutCfg.type, \"-gpu\");\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.GPURUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg,\n        canvas: offscreen\n      }, [offscreen]);\n    }\n\n    return new Promise(function (reslove, reject) {\n      worker.onmessage = function (event) {\n        _this.handleWorkerMessage(reslove, reject, event, data, layoutCfg);\n      };\n    });\n  }; // success callback will be called when updating graph positions for the first time.\n\n\n  LayoutController.prototype.handleWorkerMessage = function (reslove, reject, event, data, layoutCfg) {\n    var _a = this,\n        graph = _a.graph,\n        workerData = _a.workerData;\n\n    var eventData = event.data;\n    var type = eventData.type;\n\n    var onTick = function onTick() {\n      if (layoutCfg.onTick) {\n        layoutCfg.onTick();\n      }\n    };\n\n    switch (type) {\n      case LAYOUT_MESSAGE.TICK:\n        workerData.currentTick = eventData.currentTick;\n        workerData.currentTickData = eventData;\n\n        if (!workerData.requestId) {\n          workerData.requestId = helper.requestAnimationFrame(function requestId() {\n            updateLayoutPosition(data, eventData);\n            graph.refreshPositions();\n            onTick();\n\n            if (eventData.currentTick === eventData.totalTicks) {\n              // 如果是最后一次tick\n              reslove();\n            } else if (workerData.currentTick === eventData.totalTicks) {\n              // 注意这里workerData.currentTick可能已经不再是前面赋值时候的值了，\n              // 因为在requestAnimationFrame等待时间里，可能产生新的tick。\n              // 如果当前tick不是最后一次tick，并且所有的tick消息都已发出来了，那么需要用最后一次tick的数据再刷新一次。\n              workerData.requestId2 = helper.requestAnimationFrame(function requestId2() {\n                updateLayoutPosition(data, workerData.currentTickData);\n                graph.refreshPositions();\n                workerData.requestId2 = null;\n                onTick();\n                reslove();\n              });\n            }\n\n            workerData.requestId = null;\n          });\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.END:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateLayoutPosition(data, eventData);\n          reslove();\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.GPUEND:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateGPUWorkerLayoutPosition(data, eventData);\n          reslove();\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.ERROR:\n        console.warn('Web-Worker layout error!', eventData.message);\n        reject();\n        break;\n\n      default:\n        reject();\n        break;\n    }\n  }; // 更新布局参数\n\n\n  LayoutController.prototype.updateLayoutCfg = function (cfg) {\n    var _this = this;\n\n    var _a = this,\n        graph = _a.graph,\n        layoutMethods = _a.layoutMethods;\n\n    var layoutCfg = mix({}, this.layoutCfg, cfg);\n    this.layoutCfg = layoutCfg;\n\n    if (!(layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length)) {\n      this.layout();\n      return;\n    }\n\n    this.data = this.setDataFromGraph();\n    this.stopWorker();\n\n    if (cfg.workerEnabled && this.layoutWithWorker(this.data)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return;\n    }\n\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    var hasLayout = false;\n\n    if ((layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length) === 1) {\n      hasLayout = true;\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.updateLayoutMethod(layoutMethods[0], layoutCfg)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _a.sent()];\n            }\n          });\n        });\n      });\n    } else {\n      hasLayout = true;\n      layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.forEach(function (layoutMethod, index) {\n        var currentCfg = layoutCfg.pipes[index];\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.updateLayoutMethod(layoutMethod, currentCfg)];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    }\n\n    if (hasLayout) {\n      start.then(function () {\n        if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n      }).catch(function (error) {\n        console.warn('layout failed', error);\n      });\n    }\n  };\n\n  LayoutController.prototype.adjustPipesBox = function (data, adjust) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var nodes = data.nodes;\n\n      if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) {\n        resolve();\n      }\n\n      if (!LAYOUT_PIPES_ADJUST_NAMES.includes(adjust)) {\n        console.warn(\"The adjust type \".concat(adjust, \" is not supported yet, please assign it with 'force', 'grid', or 'circular'.\"));\n        resolve();\n      }\n\n      var layoutCfg = {\n        center: _this.layoutCfg.center,\n        nodeSize: function nodeSize(d) {\n          return Math.max(d.height, d.width);\n        },\n        preventOverlap: true,\n        onLayoutEnd: function onLayoutEnd() {}\n      }; // 计算出大单元\n\n      var _a = _this.getLayoutBBox(nodes),\n          groupNodes = _a.groupNodes,\n          layoutNodes = _a.layoutNodes;\n\n      var preNodes = clone(layoutNodes); // 根据大单元坐标的变化，调整这里面每个小单元nodes\n\n      layoutCfg.onLayoutEnd = function () {\n        layoutNodes === null || layoutNodes === void 0 ? void 0 : layoutNodes.forEach(function (ele, index) {\n          var _a, _b, _c;\n\n          var dx = ele.x - ((_a = preNodes[index]) === null || _a === void 0 ? void 0 : _a.x);\n          var dy = ele.y - ((_b = preNodes[index]) === null || _b === void 0 ? void 0 : _b.y);\n          (_c = groupNodes[index]) === null || _c === void 0 ? void 0 : _c.forEach(function (n) {\n            n.x += dx;\n            n.y += dy;\n          });\n        });\n        resolve();\n      };\n\n      var layoutMethod = new Layout[adjust](layoutCfg);\n      layoutMethod.layout({\n        nodes: layoutNodes\n      });\n    });\n  };\n\n  LayoutController.prototype.hasGPUVersion = function (layoutName) {\n    return GPU_LAYOUT_NAMES.includes(layoutName);\n  };\n\n  LayoutController.prototype.destroy = function () {\n    this.destoryLayoutMethods();\n    var worker = this.worker;\n\n    if (worker) {\n      worker.terminate();\n      this.worker = null;\n    }\n\n    this.destroyed = true;\n    this.graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethods = undefined;\n    this.graph = null;\n  };\n\n  return LayoutController;\n}(AbstractLayout);\n\nexport default LayoutController;\n\nfunction updateLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var layoutNodes = layoutData.nodes;\n  var nodeLength = nodes.length;\n\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    node.x = layoutNodes[i].x;\n    node.y = layoutNodes[i].y;\n  }\n}\n\nfunction filterObject(collection, callback) {\n  var result = {};\n\n  if (collection && _typeof(collection) === 'object') {\n    Object.keys(collection).forEach(function (key) {\n      if (collection.hasOwnProperty(key) && callback(collection[key])) {\n        result[key] = collection[key];\n      }\n    });\n    return result;\n  }\n\n  return collection;\n}\n\nfunction updateGPUWorkerLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var vertexEdgeData = layoutData.vertexEdgeData;\n  var nodeLength = nodes.length;\n\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    var x = vertexEdgeData[4 * i];\n    var y = vertexEdgeData[4 * i + 1];\n    node.x = x;\n    node.y = y;\n  }\n}\n\nfunction addLayoutOrder(data, order) {\n  var _a;\n\n  if (!((_a = data === null || data === void 0 ? void 0 : data.nodes) === null || _a === void 0 ? void 0 : _a.length)) {\n    return;\n  }\n\n  var nodes = data.nodes;\n  nodes.forEach(function (node) {\n    node.layoutOrder = order;\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}