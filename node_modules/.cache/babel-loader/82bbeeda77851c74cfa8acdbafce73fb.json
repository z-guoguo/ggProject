{"ast":null,"code":"var defaultCompare = function defaultCompare(a, b) {\n  return a - b;\n};\n\nvar MinBinaryHeap =\n/** @class */\nfunction () {\n  function MinBinaryHeap(compareFn) {\n    if (compareFn === void 0) {\n      compareFn = defaultCompare;\n    }\n\n    this.compareFn = compareFn;\n    this.list = [];\n  }\n\n  MinBinaryHeap.prototype.getLeft = function (index) {\n    return 2 * index + 1;\n  };\n\n  MinBinaryHeap.prototype.getRight = function (index) {\n    return 2 * index + 2;\n  };\n\n  MinBinaryHeap.prototype.getParent = function (index) {\n    if (index === 0) {\n      return null;\n    }\n\n    return Math.floor((index - 1) / 2);\n  };\n\n  MinBinaryHeap.prototype.isEmpty = function () {\n    return this.list.length <= 0;\n  };\n\n  MinBinaryHeap.prototype.top = function () {\n    return this.isEmpty() ? undefined : this.list[0];\n  };\n\n  MinBinaryHeap.prototype.delMin = function () {\n    var top = this.top();\n    var bottom = this.list.pop();\n\n    if (this.list.length > 0) {\n      this.list[0] = bottom;\n      this.moveDown(0);\n    }\n\n    return top;\n  };\n\n  MinBinaryHeap.prototype.insert = function (value) {\n    if (value !== null) {\n      this.list.push(value);\n      var index = this.list.length - 1;\n      this.moveUp(index);\n      return true;\n    }\n\n    return false;\n  };\n\n  MinBinaryHeap.prototype.moveUp = function (index) {\n    var parent = this.getParent(index);\n\n    while (index && index > 0 && this.compareFn(this.list[parent], this.list[index]) > 0) {\n      // swap\n      var tmp = this.list[parent];\n      this.list[parent] = this.list[index];\n      this.list[index] = tmp; // [this.list[index], this.list[parent]] = [this.list[parent], this.list[index]]\n\n      index = parent;\n      parent = this.getParent(index);\n    }\n  };\n\n  MinBinaryHeap.prototype.moveDown = function (index) {\n    var _a;\n\n    var element = index;\n    var left = this.getLeft(index);\n    var right = this.getRight(index);\n    var size = this.list.length;\n\n    if (left !== null && left < size && this.compareFn(this.list[element], this.list[left]) > 0) {\n      element = left;\n    } else if (right !== null && right < size && this.compareFn(this.list[element], this.list[right]) > 0) {\n      element = right;\n    }\n\n    if (index !== element) {\n      _a = [this.list[element], this.list[index]], this.list[index] = _a[0], this.list[element] = _a[1];\n      this.moveDown(element);\n    }\n  };\n\n  return MinBinaryHeap;\n}();\n\nexport default MinBinaryHeap;","map":{"version":3,"names":["defaultCompare","a","b","MinBinaryHeap","compareFn","list","prototype","getLeft","index","getRight","getParent","Math","floor","isEmpty","length","top","undefined","delMin","bottom","pop","moveDown","insert","value","push","moveUp","parent","tmp","_a","element","left","right","size"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/algorithm/es/structs/binary-heap.js"],"sourcesContent":["var defaultCompare = function defaultCompare(a, b) {\n  return a - b;\n};\n\nvar MinBinaryHeap =\n/** @class */\nfunction () {\n  function MinBinaryHeap(compareFn) {\n    if (compareFn === void 0) {\n      compareFn = defaultCompare;\n    }\n\n    this.compareFn = compareFn;\n    this.list = [];\n  }\n\n  MinBinaryHeap.prototype.getLeft = function (index) {\n    return 2 * index + 1;\n  };\n\n  MinBinaryHeap.prototype.getRight = function (index) {\n    return 2 * index + 2;\n  };\n\n  MinBinaryHeap.prototype.getParent = function (index) {\n    if (index === 0) {\n      return null;\n    }\n\n    return Math.floor((index - 1) / 2);\n  };\n\n  MinBinaryHeap.prototype.isEmpty = function () {\n    return this.list.length <= 0;\n  };\n\n  MinBinaryHeap.prototype.top = function () {\n    return this.isEmpty() ? undefined : this.list[0];\n  };\n\n  MinBinaryHeap.prototype.delMin = function () {\n    var top = this.top();\n    var bottom = this.list.pop();\n\n    if (this.list.length > 0) {\n      this.list[0] = bottom;\n      this.moveDown(0);\n    }\n\n    return top;\n  };\n\n  MinBinaryHeap.prototype.insert = function (value) {\n    if (value !== null) {\n      this.list.push(value);\n      var index = this.list.length - 1;\n      this.moveUp(index);\n      return true;\n    }\n\n    return false;\n  };\n\n  MinBinaryHeap.prototype.moveUp = function (index) {\n    var parent = this.getParent(index);\n\n    while (index && index > 0 && this.compareFn(this.list[parent], this.list[index]) > 0) {\n      // swap\n      var tmp = this.list[parent];\n      this.list[parent] = this.list[index];\n      this.list[index] = tmp; // [this.list[index], this.list[parent]] = [this.list[parent], this.list[index]]\n\n      index = parent;\n      parent = this.getParent(index);\n    }\n  };\n\n  MinBinaryHeap.prototype.moveDown = function (index) {\n    var _a;\n\n    var element = index;\n    var left = this.getLeft(index);\n    var right = this.getRight(index);\n    var size = this.list.length;\n\n    if (left !== null && left < size && this.compareFn(this.list[element], this.list[left]) > 0) {\n      element = left;\n    } else if (right !== null && right < size && this.compareFn(this.list[element], this.list[right]) > 0) {\n      element = right;\n    }\n\n    if (index !== element) {\n      _a = [this.list[element], this.list[index]], this.list[index] = _a[0], this.list[element] = _a[1];\n      this.moveDown(element);\n    }\n  };\n\n  return MinBinaryHeap;\n}();\n\nexport default MinBinaryHeap;"],"mappings":"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"},"metadata":{},"sourceType":"module"}