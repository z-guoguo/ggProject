{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport { EMPTY } from './Entity';\nexport var Component = function Component(data) {\n  //\n  _classCallCheck(this, Component);\n};\n/**\n * 管理某一类 Component，尽可能做到 AoS 而非 SoA\n * @see https://wickedengine.net/2019/09/29/entity-component-system/\n * @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h\n */\n// tslint:disable-next-line:max-classes-per-file\n\nexport var ComponentManager = /*#__PURE__*/function () {\n  /**\n   * 不在 Entity 中维护拥有的 Component 列表，反之亦然\n   */\n  function ComponentManager(clazz) {\n    _classCallCheck(this, ComponentManager);\n\n    this.clazz = void 0;\n    this.components = [];\n    this.entities = [];\n    this.lookup = {};\n    this.clazz = clazz;\n  }\n\n  _createClass(ComponentManager, [{\n    key: \"clear\",\n    value: function clear() {\n      this.components = [];\n      this.entities = [];\n      this.lookup = {};\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(entity) {\n      return this.lookup[entity] > -1;\n    }\n  }, {\n    key: \"create\",\n    value: function create(entity, data) {\n      this.lookup[entity] = this.components.length;\n      var component = new this.clazz(data || {});\n      this.components.push(component);\n      this.entities.push(entity);\n      return component;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(entity) {\n      var componentIndex = this.lookup[entity];\n\n      if (componentIndex > -1) {\n        if (componentIndex < this.components.length - 1) {\n          // 将待删除元素和最后一个元素交换\n          // C++ 中有 std::move 这样的操作，避免数据的拷贝\n          // @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h#L169\n          this.components[componentIndex] = this.components[this.components.length - 1];\n          this.entities[componentIndex] = this.entities[this.entities.length - 1];\n          this.lookup[this.entities[componentIndex]] = componentIndex;\n        }\n      } // 待删除元素已经移动到了最后一个\n\n\n      this.components.pop();\n      this.entities.pop();\n      delete this.lookup[entity];\n    }\n  }, {\n    key: \"removeKeepSorted\",\n    value: function removeKeepSorted(entity) {\n      var componentIndex = this.lookup[entity];\n\n      if (componentIndex > -1) {\n        var entity2 = this.entities[componentIndex];\n\n        if (componentIndex < this.components.length - 1) {\n          // Move every component left by one that is after this element:\n          for (var _i = componentIndex + 1; _i < this.components.length; ++_i) {\n            this.components[_i - 1] = this.components[_i];\n          } // Move every entity left by one that is after this element and update lut:\n\n\n          for (var _i2 = componentIndex + 1; _i2 < this.entities.length; ++_i2) {\n            this.entities[_i2 - 1] = this.entities[_i2];\n            this.lookup[this.entities[_i2 - 1]] = _i2 - 1;\n          }\n        }\n\n        this.components.pop();\n        this.entities.pop();\n        delete this.lookup[entity2];\n      }\n    }\n  }, {\n    key: \"moveItem\",\n    value: function moveItem(srcIndex, destIndex) {\n      if (srcIndex === destIndex) {\n        return;\n      } // Save the moved component and entity:\n\n\n      var srcComponent = this.components[srcIndex];\n      var srcEntity = this.entities[srcIndex]; // Every other entity-component that's in the way gets moved by one and lut is kept updated:\n\n      var direction = srcIndex < destIndex ? 1 : -1;\n\n      for (var _i3 = srcIndex; _i3 !== destIndex; _i3 += direction) {\n        var next = _i3 + direction;\n        this.components[_i3] = this.components[next];\n        this.entities[_i3] = this.entities[next];\n        this.lookup[this.entities[_i3]] = _i3;\n      } // Saved entity-component moved to the required position:\n\n\n      this.components[destIndex] = srcComponent;\n      this.entities[destIndex] = srcEntity;\n      this.lookup[srcEntity] = destIndex;\n    }\n  }, {\n    key: \"getEntity\",\n    value: function getEntity(index) {\n      return this.entities[index];\n    }\n    /**\n     * 由于缺少类似 C++ 的重载操作符，没法通过 [下标] 直接访问。因此只能增加该方法用于遍历。\n     */\n\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(index) {\n      return this.components[index];\n    }\n  }, {\n    key: \"getComponentByEntity\",\n    value: function getComponentByEntity(entity) {\n      var componentIndex = this.lookup[entity];\n\n      if (componentIndex > -1) {\n        return this.components[componentIndex];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getCount\",\n    value: function getCount() {\n      return this.components.length;\n    }\n  }, {\n    key: \"getEntityByComponentIndex\",\n    value: function getEntityByComponentIndex(componentIdx) {\n      for (var _i4 = 0, _Object$keys = Object.keys(this.lookup); _i4 < _Object$keys.length; _i4++) {\n        var _entity = _Object$keys[_i4];\n        var entityInNum = Number(_entity);\n\n        if (this.lookup[entityInNum] === componentIdx) {\n          return entityInNum;\n        }\n      }\n\n      return EMPTY;\n    }\n  }, {\n    key: \"find\",\n    value: function find(callback) {\n      for (var _i5 = 0; _i5 < this.getCount(); _i5++) {\n        var _component = this.getComponent(_i5);\n\n        if (callback(_component, _i5)) {\n          return _component;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"findIndex\",\n    value: function findIndex(callback) {\n      for (var _i6 = 0; _i6 < this.getCount(); _i6++) {\n        var _component2 = this.getComponent(_i6);\n\n        if (callback(_component2, _i6)) {\n          return _i6;\n        }\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      for (var _i7 = 0, _Object$keys2 = Object.keys(this.lookup); _i7 < _Object$keys2.length; _i7++) {\n        var _entity2 = _Object$keys2[_i7];\n        var entityInNum = Number(_entity2);\n        var componentIndex = this.lookup[entityInNum];\n        callback(entityInNum, this.getComponent(componentIndex));\n      }\n    }\n  }, {\n    key: \"forEachAsync\",\n    value: function () {\n      var _forEachAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(callback) {\n        var _i8, _Object$keys3, _entity3, entityInNum, componentIndex;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _i8 = 0, _Object$keys3 = Object.keys(this.lookup);\n\n              case 1:\n                if (!(_i8 < _Object$keys3.length)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _entity3 = _Object$keys3[_i8];\n                entityInNum = Number(_entity3);\n                componentIndex = this.lookup[entityInNum];\n                _context.next = 7;\n                return callback(entityInNum, this.getComponent(componentIndex));\n\n              case 7:\n                _i8++;\n                _context.next = 1;\n                break;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function forEachAsync(_x) {\n        return _forEachAsync.apply(this, arguments);\n      }\n\n      return forEachAsync;\n    }()\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      var result = [];\n\n      for (var _i9 = 0, _Object$keys4 = Object.keys(this.lookup); _i9 < _Object$keys4.length; _i9++) {\n        var _entity4 = _Object$keys4[_i9];\n        var entityInNum = Number(_entity4);\n        var componentIndex = this.lookup[entityInNum];\n        result.push(callback(entityInNum, this.getComponent(componentIndex)));\n      }\n\n      return result;\n    }\n  }]);\n\n  return ComponentManager;\n}();","map":{"version":3,"mappings":"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","names":["EMPTY","Component","data","_classCallCheck","ComponentManager","clazz","components","entities","lookup","_createClass","key","value","entity","length","component","push","componentIndex","pop","entity2","i","srcIndex","destIndex","srcComponent","srcEntity","direction","next","index","componentIdx","Object","keys","entityInNum","Number","callback","getCount","getComponent","_i8","_context","result"],"sources":["../src/ComponentManager.ts"],"sourcesContent":["import { Entity } from '.';\nimport { EMPTY } from './Entity';\n\ntype NonFunctionPropertyNames<T> = {\n  [K in keyof T]: T[K] extends (args: unknown) => void ? never : K;\n}[keyof T];\nexport type NonFunctionProperties<T> = Pick<T, NonFunctionPropertyNames<T>>;\n\nexport type ComponentClassType<P> = new (\n  data: Partial<NonFunctionProperties<P>>,\n) => Component<P> & P;\n\nexport abstract class Component<P> {\n  constructor(data?: Partial<NonFunctionProperties<P>>) {\n    //\n  }\n}\n\n/**\n * 管理某一类 Component，尽可能做到 AoS 而非 SoA\n * @see https://wickedengine.net/2019/09/29/entity-component-system/\n * @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class ComponentManager<P> {\n  private clazz: ComponentClassType<P>;\n  private components: Array<Component<P> & P> = [];\n  private entities: Entity[] = [];\n\n  /**\n   * 不在 Entity 中维护拥有的 Component 列表，反之亦然\n   */\n  private lookup: Record<Entity, number> = {};\n\n  constructor(clazz: ComponentClassType<P>) {\n    this.clazz = clazz;\n  }\n\n  public clear() {\n    this.components = [];\n    this.entities = [];\n    this.lookup = {};\n  }\n\n  public contains(entity: Entity) {\n    return this.lookup[entity] > -1;\n  }\n\n  public create(entity: Entity, data?: Partial<NonFunctionProperties<P>>) {\n    this.lookup[entity] = this.components.length;\n    const component = new this.clazz(data || {});\n    this.components.push(component);\n    this.entities.push(entity);\n    return component;\n  }\n\n  public remove(entity: Entity) {\n    const componentIndex = this.lookup[entity];\n    if (componentIndex > -1) {\n      if (componentIndex < this.components.length - 1) {\n        // 将待删除元素和最后一个元素交换\n        // C++ 中有 std::move 这样的操作，避免数据的拷贝\n        // @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h#L169\n        this.components[componentIndex] = this.components[\n          this.components.length - 1\n        ];\n        this.entities[componentIndex] = this.entities[this.entities.length - 1];\n        this.lookup[this.entities[componentIndex]] = componentIndex;\n      }\n    }\n\n    // 待删除元素已经移动到了最后一个\n    this.components.pop();\n    this.entities.pop();\n    delete this.lookup[entity];\n  }\n\n  public removeKeepSorted(entity: Entity) {\n    const componentIndex = this.lookup[entity];\n    if (componentIndex > -1) {\n      const entity2 = this.entities[componentIndex];\n\n      if (componentIndex < this.components.length - 1) {\n        // Move every component left by one that is after this element:\n        for (let i = componentIndex + 1; i < this.components.length; ++i) {\n          this.components[i - 1] = this.components[i];\n        }\n        // Move every entity left by one that is after this element and update lut:\n        for (let i = componentIndex + 1; i < this.entities.length; ++i) {\n          this.entities[i - 1] = this.entities[i];\n          this.lookup[this.entities[i - 1]] = i - 1;\n        }\n      }\n\n      this.components.pop();\n      this.entities.pop();\n      delete this.lookup[entity2];\n    }\n  }\n\n  public moveItem(srcIndex: number, destIndex: number) {\n    if (srcIndex === destIndex) {\n      return;\n    }\n\n    // Save the moved component and entity:\n    const srcComponent = this.components[srcIndex];\n    const srcEntity = this.entities[srcIndex];\n\n    // Every other entity-component that's in the way gets moved by one and lut is kept updated:\n    const direction = srcIndex < destIndex ? 1 : -1;\n    for (let i = srcIndex; i !== destIndex; i += direction) {\n      const next = i + direction;\n      this.components[i] = this.components[next];\n      this.entities[i] = this.entities[next];\n      this.lookup[this.entities[i]] = i;\n    }\n\n    // Saved entity-component moved to the required position:\n    this.components[destIndex] = srcComponent;\n    this.entities[destIndex] = srcEntity;\n    this.lookup[srcEntity] = destIndex;\n  }\n\n  public getEntity(index: number) {\n    return this.entities[index];\n  }\n\n  /**\n   * 由于缺少类似 C++ 的重载操作符，没法通过 [下标] 直接访问。因此只能增加该方法用于遍历。\n   */\n  public getComponent(index: number) {\n    return this.components[index];\n  }\n\n  public getComponentByEntity(entity: Entity) {\n    const componentIndex = this.lookup[entity];\n    if (componentIndex > -1) {\n      return this.components[componentIndex];\n    }\n    return null;\n  }\n\n  public getCount() {\n    return this.components.length;\n  }\n\n  public getEntityByComponentIndex(componentIdx: number) {\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      if (this.lookup[entityInNum] === componentIdx) {\n        return entityInNum;\n      }\n    }\n    return EMPTY;\n  }\n\n  public find(callback: (component: Component<P> & P, i: number) => boolean) {\n    for (let i = 0; i < this.getCount(); i++) {\n      const component = this.getComponent(i);\n      if (callback(component, i)) {\n        return component;\n      }\n    }\n    return null;\n  }\n\n  public findIndex(\n    callback: (component: Component<P> & P, i: number) => boolean,\n  ) {\n    for (let i = 0; i < this.getCount(); i++) {\n      const component = this.getComponent(i);\n      if (callback(component, i)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  public forEach(\n    callback: (entity: Entity, component: Component<P> & P) => void,\n  ) {\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      const componentIndex = this.lookup[entityInNum];\n      callback(entityInNum, this.getComponent(componentIndex));\n    }\n  }\n\n  public async forEachAsync(\n    callback: (entity: Entity, component: Component<P> & P) => Promise<void>,\n  ) {\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      const componentIndex = this.lookup[entityInNum];\n      await callback(entityInNum, this.getComponent(componentIndex));\n    }\n  }\n\n  public map(callback: (entity: Entity, component: Component<P> & P) => void) {\n    const result = [];\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      const componentIndex = this.lookup[entityInNum];\n      result.push(callback(entityInNum, this.getComponent(componentIndex)));\n    }\n    return result;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}