{"ast":null,"code":"import { PriorityQueue } from './priorityqueue';\nexport var Dijkstra;\n\n(function (Dijkstra) {\n  function run(adjacencyList, source, weight = (u, v) => 1) {\n    const dist = {};\n    const previous = {};\n    const scanned = {};\n    const queue = new PriorityQueue();\n    dist[source] = 0;\n    Object.keys(adjacencyList).forEach(v => {\n      if (v !== source) {\n        dist[v] = Infinity;\n      }\n\n      queue.insert(dist[v], v, v);\n    });\n\n    while (!queue.isEmpty()) {\n      const u = queue.remove();\n      scanned[u] = true;\n      const neighbours = adjacencyList[u] || [];\n\n      for (let i = 0; i < neighbours.length; i += 1) {\n        const v = neighbours[i];\n\n        if (!scanned[v]) {\n          const alt = dist[u] + weight(u, v);\n\n          if (alt < dist[v]) {\n            dist[v] = alt;\n            previous[v] = u;\n            queue.updatePriority(v, alt);\n          }\n        }\n      }\n    }\n\n    return previous;\n  }\n\n  Dijkstra.run = run;\n})(Dijkstra || (Dijkstra = {}));","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,iBAA9B;AAEA,OAAM,IAAWC,QAAX;;AAAN,WAAiBA,QAAjB,EAAyB;EAIvB,SAAgBC,GAAhB,CACEC,aADF,EAEEC,MAFF,EAGEC,SAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAH7B,EAG8B;IAE5B,MAAMC,IAAI,GAA8B,EAAxC;IACA,MAAMC,QAAQ,GAA8B,EAA5C;IACA,MAAMC,OAAO,GAA+B,EAA5C;IACA,MAAMC,KAAK,GAAG,IAAIX,aAAJ,EAAd;IAEAQ,IAAI,CAACJ,MAAD,CAAJ,GAAe,CAAf;IAEAQ,MAAM,CAACC,IAAP,CAAYV,aAAZ,EAA2BW,OAA3B,CAAoCP,CAAD,IAAM;MACvC,IAAIA,CAAC,KAAKH,MAAV,EAAkB;QAChBI,IAAI,CAACD,CAAD,CAAJ,GAAUQ,QAAV;MACD;;MACDJ,KAAK,CAACK,MAAN,CAAaR,IAAI,CAACD,CAAD,CAAjB,EAAsBA,CAAtB,EAAyBA,CAAzB;IACD,CALD;;IAOA,OAAO,CAACI,KAAK,CAACM,OAAN,EAAR,EAAyB;MACvB,MAAMX,CAAC,GAAGK,KAAK,CAACO,MAAN,EAAV;MACAR,OAAO,CAACJ,CAAD,CAAP,GAAa,IAAb;MAEA,MAAMa,UAAU,GAAGhB,aAAa,CAACG,CAAD,CAAb,IAAoB,EAAvC;;MACA,KAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;QAC7C,MAAMb,CAAC,GAAGY,UAAU,CAACC,CAAD,CAApB;;QACA,IAAI,CAACV,OAAO,CAACH,CAAD,CAAZ,EAAiB;UACf,MAAMe,GAAG,GAAGd,IAAI,CAACF,CAAD,CAAJ,GAAUD,MAAM,CAACC,CAAD,EAAIC,CAAJ,CAA5B;;UACA,IAAIe,GAAG,GAAGd,IAAI,CAACD,CAAD,CAAd,EAAmB;YACjBC,IAAI,CAACD,CAAD,CAAJ,GAAUe,GAAV;YACAb,QAAQ,CAACF,CAAD,CAAR,GAAcD,CAAd;YACAK,KAAK,CAACY,cAAN,CAAqBhB,CAArB,EAAwBe,GAAxB;UACD;QACF;MACF;IACF;;IAED,OAAOb,QAAP;EACD;;EAtCeR,eAAGC,GAAH;AAuCjB,CA3CD,EAAiBD,QAAQ,KAARA,QAAQ,MAAzB","names":["PriorityQueue","Dijkstra","run","adjacencyList","source","weight","u","v","dist","previous","scanned","queue","Object","keys","forEach","Infinity","insert","isEmpty","remove","neighbours","i","length","alt","updatePriority"],"sourceRoot":"","sources":["../../../src/common/algorithm/dijkstra.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}