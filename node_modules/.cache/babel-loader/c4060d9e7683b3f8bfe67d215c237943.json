{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util';\n/**\n * 基本的椭圆，可以添加文本，默认文本居中\n */\n\nregisterNode('ellipse', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 40],\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'ellipse',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n        icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('ellipse', {\n      attrs: style,\n      className: 'ellipse-keyShape',\n      name: 'ellipse-keyShape',\n      draggable: true\n    });\n    group['shapeMap']['ellipse-keyShape'] = keyShape;\n    var width = icon.width,\n        height = icon.height,\n        show = icon.show,\n        text = icon.text;\n\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n\n    var styles = __assign({\n      x: 0,\n      y: 0,\n      rx: rx,\n      ry: ry\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var strokeStyle = {\n      stroke: cfg.color,\n      rx: size[0] / 2,\n      ry: size[1] / 2\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');","map":{"version":3,"names":["__assign","__rest","registerNode","BaseGlobal","Global","mix","options","size","style","x","y","stroke","defaultNode","fill","lineWidth","labelCfg","nodeLabel","fontSize","fontFamily","windowFontFamily","linkPoints","top","right","bottom","left","icon","show","img","width","height","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","_a","mergeStyle","getOptions","getShapeStyle","keyShape","addShape","attrs","className","name","draggable","text","concat","type","textBaseline","textAlign","drawLinkPoints","markSize","markR","r","markStyle","getSize","rx","ry","isAnchorPoint","defaultStyle","strokeStyle","color","styles","update","item","updateType","getContainer","get","attr","updateShape","updateLinkPoints"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-element/es/nodes/ellipse.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util';\n/**\n * 基本的椭圆，可以添加文本，默认文本居中\n */\n\nregisterNode('ellipse', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 40],\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'ellipse',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n        icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('ellipse', {\n      attrs: style,\n      className: 'ellipse-keyShape',\n      name: 'ellipse-keyShape',\n      draggable: true\n    });\n    group['shapeMap']['ellipse-keyShape'] = keyShape;\n    var width = icon.width,\n        height = icon.height,\n        show = icon.show,\n        text = icon.text;\n\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n\n    var styles = __assign({\n      x: 0,\n      y: 0,\n      rx: rx,\n      ry: ry\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var strokeStyle = {\n      stroke: cfg.color,\n      rx: size[0] / 2,\n      ry: size[1] / 2\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');"],"mappings":"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"},"metadata":{},"sourceType":"module"}