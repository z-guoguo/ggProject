{"ast":null,"code":"import { defineComponent, h, reactive, isVue3, Vue } from 'vue-demi';\nimport { NodeView } from '@antv/x6';\nimport { VueShapeView } from './view';\nexport function useTeleport(uniqViewId) {\n  if (isVue3) {\n    const {\n      Teleport,\n      markRaw,\n      Fragment,\n      VNode,\n      VNodeData\n    } = Vue;\n    const action = 'vue';\n    const items = reactive({});\n    const TeleportContainer = defineComponent({\n      setup() {\n        return () => h(Fragment, {}, Object.keys(items).map(id => h(items[id])));\n      }\n\n    });\n\n    const connect = (id, node, graph, component, getContainer) => {\n      items[id] = markRaw(defineComponent({\n        render: () => getContainer() ? h(Teleport, {\n          to: getContainer()\n        }, [h(component)]) : null,\n        provide: () => ({\n          getGraph: () => graph,\n          getNode: () => node\n        })\n      }));\n    };\n\n    const disconnect = id => {\n      delete items[id];\n    };\n\n    class VuePortalShapeView extends NodeView {\n      init() {\n        super.init();\n        const targetId = `${this.graph.view.cid}:${this.cell.id}`;\n        this.cell.on('removed', () => {\n          disconnect(targetId);\n        });\n        const component = this.graph.hook.getVueComponent(this.cell); // 这里需要将当前View的cell以及graph还有component等对象存储起来给TeleportContainer使用\n\n        connect(targetId, this.cell, this.graph, component, this.getComponentContainer.bind(this));\n      }\n\n      getComponentContainer() {\n        return this.cell.prop('useForeignObject') === false ? this.selectors.content : this.selectors.foContent;\n      }\n\n      confirmUpdate(flag) {\n        const ret = super.confirmUpdate(flag);\n        return this.handleAction(ret, action, () => {// 这里无需做任何处理，但是，没有这个函数的时候，会卡死...\n        });\n      }\n\n    }\n\n    VuePortalShapeView.config({\n      bootstrap: [action],\n      actions: {\n        component: action\n      }\n    });\n    NodeView.registry.register(uniqViewId, VuePortalShapeView, true);\n    return TeleportContainer;\n  } // 如果是vue2就默认输出一个警告信息\n\n\n  console.warn('useTeleport should run in vue3'); // 或者拿默认的view注册一个，保证这个api是可用状态，不至于用户使用了，但是报错\n\n  NodeView.registry.register(uniqViewId, VueShapeView, true);\n  return defineComponent(() => null);\n}\nexport default useTeleport;","map":{"version":3,"mappings":"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","names":["defineComponent","h","reactive","isVue3","Vue","NodeView","VueShapeView","useTeleport","uniqViewId","Teleport","markRaw","Fragment","VNode","VNodeData","action","items","TeleportContainer","setup","Object","keys","map","id","connect","node","graph","component","getContainer","render","to","provide","getGraph","getNode","disconnect","VuePortalShapeView","init","targetId","view","cid","cell","on","hook","getVueComponent","getComponentContainer","bind","prop","selectors","content","foContent","confirmUpdate","flag","ret","handleAction","config","bootstrap","actions","registry","register","console","warn"],"sourceRoot":"","sources":["../src/teleport.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}