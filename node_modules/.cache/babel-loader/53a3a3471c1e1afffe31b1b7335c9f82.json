{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { __extends } from \"tslib\";\nimport { addEventListener } from '@antv/dom-util';\nimport { each, isNil, wrapBehavior } from '@antv/util';\nimport { AbstractEvent, Util } from '@antv/g6-core';\nvar cloneEvent = Util.cloneEvent,\n    isViewportChanged = Util.isViewportChanged;\n\nvar EventController =\n/** @class */\nfunction (_super) {\n  __extends(EventController, _super);\n\n  function EventController(graph) {\n    var _this = _super.call(this, graph) || this;\n\n    _this.extendEvents = [];\n    _this.dragging = false;\n    _this.preItem = null;\n    _this.graph = graph;\n    _this.destroyed = false;\n\n    _this.initEvents();\n\n    return _this;\n  } // 初始化 G6 中的事件\n\n\n  EventController.prototype.initEvents = function () {\n    var _a = this,\n        graph = _a.graph,\n        _b = _a.extendEvents,\n        extendEvents = _b === void 0 ? [] : _b;\n\n    var canvas = graph.get('canvas'); // canvas.set('draggable', true);\n\n    var el = canvas.get('el');\n    var canvasHandler = wrapBehavior(this, 'onCanvasEvents');\n    var originHandler = wrapBehavior(this, 'onExtendEvents');\n    var wheelHandler = wrapBehavior(this, 'onWheelEvent'); // each(EVENTS, event => {\n    //   canvas.off(event).on(event, canvasHandler);\n    // });\n\n    canvas.off('*').on('*', canvasHandler);\n    this.canvasHandler = canvasHandler;\n    extendEvents.push(addEventListener(el, 'DOMMouseScroll', wheelHandler));\n    extendEvents.push(addEventListener(el, 'mousewheel', wheelHandler));\n\n    if (typeof window !== 'undefined') {\n      extendEvents.push(addEventListener(window, 'keydown', originHandler));\n      extendEvents.push(addEventListener(window, 'keyup', originHandler));\n      extendEvents.push(addEventListener(window, 'focus', originHandler));\n    }\n  }; // 获取 shape 的 item 对象\n\n\n  EventController.getItemRoot = function (shape) {\n    while (shape && !shape.get('item')) {\n      shape = shape.get('parent');\n    }\n\n    return shape;\n  };\n  /**\n   * 处理 canvas 事件\n   * @param evt 事件句柄\n   */\n\n\n  EventController.prototype.onCanvasEvents = function (evt) {\n    var graph = this.graph;\n    var canvas = graph.get('canvas');\n    var target = evt.target;\n    var eventType = evt.type;\n    /**\n     * (clientX, clientY): 相对于页面的坐标；\n     * (canvasX, canvasY): 相对于 <canvas> 左上角的坐标；\n     * (x, y): 相对于整个画布的坐标, 与 model 的 x, y 是同一维度的。\n     */\n\n    evt.canvasX = evt.x;\n    evt.canvasY = evt.y;\n    var point = {\n      x: evt.canvasX,\n      y: evt.canvasY\n    };\n    var group = graph.get('group');\n    var matrix = group.getMatrix();\n\n    if (!matrix) {\n      matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    }\n\n    if (isViewportChanged(matrix)) {\n      point = graph.getPointByClient(evt.clientX, evt.clientY);\n    }\n\n    evt.x = point.x;\n    evt.y = point.y;\n    evt.currentTarget = graph;\n\n    if (target === canvas) {\n      if (eventType === 'mousemove' || eventType === 'mouseleave') {\n        this.handleMouseMove(evt, 'canvas');\n      }\n\n      evt.target = canvas;\n      evt.item = null;\n      graph.emit(eventType, evt);\n      graph.emit(\"canvas:\".concat(eventType), evt);\n      return;\n    }\n\n    var itemShape = EventController.getItemRoot(target);\n\n    if (!itemShape) {\n      graph.emit(eventType, evt);\n      return;\n    }\n\n    var item = itemShape.get('item');\n\n    if (item.destroyed) {\n      return;\n    }\n\n    var type = item.getType(); // 事件target是触发事件的Shape实例，item是触发事件的item实例\n\n    evt.target = target;\n    evt.item = item;\n\n    if (evt.canvasX === evt.x && evt.canvasY === evt.y) {\n      var canvasPoint = graph.getCanvasByPoint(evt.x, evt.y);\n      evt.canvasX = canvasPoint.x;\n      evt.canvasY = canvasPoint.y;\n    } // emit('click', evt);\n\n\n    graph.emit(eventType, evt);\n    if (evt.name && !evt.name.includes(':')) graph.emit(\"\".concat(type, \":\").concat(eventType), evt); // emit('node:click', evt)\n    else graph.emit(evt.name, evt); // emit('text-shape:click', evt)\n\n    if (eventType === 'dragstart') {\n      this.dragging = true;\n    }\n\n    if (eventType === 'dragend') {\n      this.dragging = false;\n    }\n\n    if (eventType === 'mousemove') {\n      this.handleMouseMove(evt, type);\n    }\n  };\n  /**\n   * 处理扩展事件\n   * @param evt 事件句柄\n   */\n\n\n  EventController.prototype.onExtendEvents = function (evt) {\n    this.graph.emit(evt.type, evt);\n  };\n  /**\n   * 处理滚轮事件\n   * @param evt 事件句柄\n   */\n\n\n  EventController.prototype.onWheelEvent = function (evt) {\n    if (isNil(evt.wheelDelta)) {\n      evt.wheelDelta = -evt.detail;\n    }\n\n    this.graph.emit('wheel', evt);\n  };\n  /**\n   * 处理鼠标移动的事件\n   * @param evt 事件句柄\n   * @param type item 类型\n   */\n\n\n  EventController.prototype.handleMouseMove = function (evt, type) {\n    var _a = this,\n        graph = _a.graph,\n        preItem = _a.preItem;\n\n    var canvas = graph.get('canvas');\n    var item = evt.target === canvas ? null : evt.item;\n    evt = cloneEvent(evt); // 从前一个item直接移动到当前item，触发前一个item的leave事件\n\n    if (preItem && preItem !== item && !preItem.destroyed) {\n      evt.item = preItem;\n      this.emitCustomEvent(preItem.getType(), 'mouseleave', evt);\n\n      if (this.dragging) {\n        this.emitCustomEvent(preItem.getType(), 'dragleave', evt);\n      }\n    } // 从一个item或canvas移动到当前item，触发当前item的enter事件\n\n\n    if (item && preItem !== item) {\n      evt.item = item;\n      this.emitCustomEvent(type, 'mouseenter', evt);\n\n      if (this.dragging) {\n        this.emitCustomEvent(type, 'dragenter', evt);\n      }\n    }\n\n    this.preItem = item;\n  };\n  /**\n   * 在 graph 上面 emit 事件\n   * @param itemType item 类型\n   * @param eventType 事件类型\n   * @param evt 事件句柄\n   */\n\n\n  EventController.prototype.emitCustomEvent = function (itemType, eventType, evt) {\n    evt.type = eventType;\n    this.graph.emit(\"\".concat(itemType, \":\").concat(eventType), evt);\n  };\n\n  EventController.prototype.destroy = function () {\n    var _a = this,\n        graph = _a.graph,\n        canvasHandler = _a.canvasHandler,\n        extendEvents = _a.extendEvents;\n\n    var canvas = graph.get('canvas'); // each(EVENTS, event => {\n    //   canvas.off(event, canvasHandler);\n    // });\n\n    canvas.off('*', canvasHandler);\n    each(extendEvents, function (event) {\n      event.remove();\n    });\n    this.dragging = false;\n    this.preItem = null;\n    this.extendEvents.length = 0;\n    this.canvasHandler = null;\n    this.destroyed = true;\n  };\n\n  return EventController;\n}(AbstractEvent);\n\nexport default EventController;","map":{"version":3,"names":["__extends","addEventListener","each","isNil","wrapBehavior","AbstractEvent","Util","cloneEvent","isViewportChanged","EventController","_super","graph","_this","call","extendEvents","dragging","preItem","destroyed","initEvents","prototype","_a","_b","canvas","get","el","canvasHandler","originHandler","wheelHandler","off","on","push","window","getItemRoot","shape","onCanvasEvents","evt","target","eventType","type","canvasX","x","canvasY","y","point","group","matrix","getMatrix","getPointByClient","clientX","clientY","currentTarget","handleMouseMove","item","emit","concat","itemShape","getType","canvasPoint","getCanvasByPoint","name","includes","onExtendEvents","onWheelEvent","wheelDelta","detail","emitCustomEvent","itemType","destroy","event","remove","length"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-pc/es/graph/controller/event.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { addEventListener } from '@antv/dom-util';\nimport { each, isNil, wrapBehavior } from '@antv/util';\nimport { AbstractEvent, Util } from '@antv/g6-core';\nvar cloneEvent = Util.cloneEvent,\n    isViewportChanged = Util.isViewportChanged;\n\nvar EventController =\n/** @class */\nfunction (_super) {\n  __extends(EventController, _super);\n\n  function EventController(graph) {\n    var _this = _super.call(this, graph) || this;\n\n    _this.extendEvents = [];\n    _this.dragging = false;\n    _this.preItem = null;\n    _this.graph = graph;\n    _this.destroyed = false;\n\n    _this.initEvents();\n\n    return _this;\n  } // 初始化 G6 中的事件\n\n\n  EventController.prototype.initEvents = function () {\n    var _a = this,\n        graph = _a.graph,\n        _b = _a.extendEvents,\n        extendEvents = _b === void 0 ? [] : _b;\n\n    var canvas = graph.get('canvas'); // canvas.set('draggable', true);\n\n    var el = canvas.get('el');\n    var canvasHandler = wrapBehavior(this, 'onCanvasEvents');\n    var originHandler = wrapBehavior(this, 'onExtendEvents');\n    var wheelHandler = wrapBehavior(this, 'onWheelEvent'); // each(EVENTS, event => {\n    //   canvas.off(event).on(event, canvasHandler);\n    // });\n\n    canvas.off('*').on('*', canvasHandler);\n    this.canvasHandler = canvasHandler;\n    extendEvents.push(addEventListener(el, 'DOMMouseScroll', wheelHandler));\n    extendEvents.push(addEventListener(el, 'mousewheel', wheelHandler));\n\n    if (typeof window !== 'undefined') {\n      extendEvents.push(addEventListener(window, 'keydown', originHandler));\n      extendEvents.push(addEventListener(window, 'keyup', originHandler));\n      extendEvents.push(addEventListener(window, 'focus', originHandler));\n    }\n  }; // 获取 shape 的 item 对象\n\n\n  EventController.getItemRoot = function (shape) {\n    while (shape && !shape.get('item')) {\n      shape = shape.get('parent');\n    }\n\n    return shape;\n  };\n  /**\n   * 处理 canvas 事件\n   * @param evt 事件句柄\n   */\n\n\n  EventController.prototype.onCanvasEvents = function (evt) {\n    var graph = this.graph;\n    var canvas = graph.get('canvas');\n    var target = evt.target;\n    var eventType = evt.type;\n    /**\n     * (clientX, clientY): 相对于页面的坐标；\n     * (canvasX, canvasY): 相对于 <canvas> 左上角的坐标；\n     * (x, y): 相对于整个画布的坐标, 与 model 的 x, y 是同一维度的。\n     */\n\n    evt.canvasX = evt.x;\n    evt.canvasY = evt.y;\n    var point = {\n      x: evt.canvasX,\n      y: evt.canvasY\n    };\n    var group = graph.get('group');\n    var matrix = group.getMatrix();\n\n    if (!matrix) {\n      matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    }\n\n    if (isViewportChanged(matrix)) {\n      point = graph.getPointByClient(evt.clientX, evt.clientY);\n    }\n\n    evt.x = point.x;\n    evt.y = point.y;\n    evt.currentTarget = graph;\n\n    if (target === canvas) {\n      if (eventType === 'mousemove' || eventType === 'mouseleave') {\n        this.handleMouseMove(evt, 'canvas');\n      }\n\n      evt.target = canvas;\n      evt.item = null;\n      graph.emit(eventType, evt);\n      graph.emit(\"canvas:\".concat(eventType), evt);\n      return;\n    }\n\n    var itemShape = EventController.getItemRoot(target);\n\n    if (!itemShape) {\n      graph.emit(eventType, evt);\n      return;\n    }\n\n    var item = itemShape.get('item');\n\n    if (item.destroyed) {\n      return;\n    }\n\n    var type = item.getType(); // 事件target是触发事件的Shape实例，item是触发事件的item实例\n\n    evt.target = target;\n    evt.item = item;\n\n    if (evt.canvasX === evt.x && evt.canvasY === evt.y) {\n      var canvasPoint = graph.getCanvasByPoint(evt.x, evt.y);\n      evt.canvasX = canvasPoint.x;\n      evt.canvasY = canvasPoint.y;\n    } // emit('click', evt);\n\n\n    graph.emit(eventType, evt);\n    if (evt.name && !evt.name.includes(':')) graph.emit(\"\".concat(type, \":\").concat(eventType), evt); // emit('node:click', evt)\n    else graph.emit(evt.name, evt); // emit('text-shape:click', evt)\n\n    if (eventType === 'dragstart') {\n      this.dragging = true;\n    }\n\n    if (eventType === 'dragend') {\n      this.dragging = false;\n    }\n\n    if (eventType === 'mousemove') {\n      this.handleMouseMove(evt, type);\n    }\n  };\n  /**\n   * 处理扩展事件\n   * @param evt 事件句柄\n   */\n\n\n  EventController.prototype.onExtendEvents = function (evt) {\n    this.graph.emit(evt.type, evt);\n  };\n  /**\n   * 处理滚轮事件\n   * @param evt 事件句柄\n   */\n\n\n  EventController.prototype.onWheelEvent = function (evt) {\n    if (isNil(evt.wheelDelta)) {\n      evt.wheelDelta = -evt.detail;\n    }\n\n    this.graph.emit('wheel', evt);\n  };\n  /**\n   * 处理鼠标移动的事件\n   * @param evt 事件句柄\n   * @param type item 类型\n   */\n\n\n  EventController.prototype.handleMouseMove = function (evt, type) {\n    var _a = this,\n        graph = _a.graph,\n        preItem = _a.preItem;\n\n    var canvas = graph.get('canvas');\n    var item = evt.target === canvas ? null : evt.item;\n    evt = cloneEvent(evt); // 从前一个item直接移动到当前item，触发前一个item的leave事件\n\n    if (preItem && preItem !== item && !preItem.destroyed) {\n      evt.item = preItem;\n      this.emitCustomEvent(preItem.getType(), 'mouseleave', evt);\n\n      if (this.dragging) {\n        this.emitCustomEvent(preItem.getType(), 'dragleave', evt);\n      }\n    } // 从一个item或canvas移动到当前item，触发当前item的enter事件\n\n\n    if (item && preItem !== item) {\n      evt.item = item;\n      this.emitCustomEvent(type, 'mouseenter', evt);\n\n      if (this.dragging) {\n        this.emitCustomEvent(type, 'dragenter', evt);\n      }\n    }\n\n    this.preItem = item;\n  };\n  /**\n   * 在 graph 上面 emit 事件\n   * @param itemType item 类型\n   * @param eventType 事件类型\n   * @param evt 事件句柄\n   */\n\n\n  EventController.prototype.emitCustomEvent = function (itemType, eventType, evt) {\n    evt.type = eventType;\n    this.graph.emit(\"\".concat(itemType, \":\").concat(eventType), evt);\n  };\n\n  EventController.prototype.destroy = function () {\n    var _a = this,\n        graph = _a.graph,\n        canvasHandler = _a.canvasHandler,\n        extendEvents = _a.extendEvents;\n\n    var canvas = graph.get('canvas'); // each(EVENTS, event => {\n    //   canvas.off(event, canvasHandler);\n    // });\n\n    canvas.off('*', canvasHandler);\n    each(extendEvents, function (event) {\n      event.remove();\n    });\n    this.dragging = false;\n    this.preItem = null;\n    this.extendEvents.length = 0;\n    this.canvasHandler = null;\n    this.destroyed = true;\n  };\n\n  return EventController;\n}(AbstractEvent);\n\nexport default EventController;"],"mappings":"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"},"metadata":{},"sourceType":"module"}