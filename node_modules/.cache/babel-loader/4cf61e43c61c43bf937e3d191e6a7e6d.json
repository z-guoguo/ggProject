{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport JQuery from 'jquery';\nimport { Util, Config } from '../global';\nimport { ArrayExt, FunctionExt, Dom, Vector } from '../util';\nimport { Rectangle, Point } from '../geometry';\nimport { Cell } from '../model/cell';\nimport { CellView } from './cell';\nimport { Markup } from './markup';\nexport class NodeView extends CellView {\n  constructor() {\n    super(...arguments);\n    this.scalableNode = null;\n    this.rotatableNode = null;\n    this.scalableSelector = 'scalable';\n    this.rotatableSelector = 'rotatable';\n    this.defaultPortMarkup = Markup.getPortMarkup();\n    this.defaultPortLabelMarkup = Markup.getPortLabelMarkup();\n    this.defaultPortContainerMarkup = Markup.getPortContainerMarkup();\n    this.portsCache = {}; // #endregion\n  }\n\n  get [Symbol.toStringTag]() {\n    return NodeView.toStringTag;\n  }\n\n  getContainerClassName() {\n    const classList = [super.getContainerClassName(), this.prefixClassName('node')];\n\n    if (!this.can('nodeMovable')) {\n      classList.push(this.prefixClassName('node-immovable'));\n    }\n\n    return classList.join(' ');\n  }\n\n  updateClassName(e) {\n    const target = e.target;\n\n    if (target.hasAttribute('magnet')) {\n      // port\n      const className = this.prefixClassName('port-unconnectable');\n\n      if (this.can('magnetConnectable')) {\n        Dom.removeClass(target, className);\n      } else {\n        Dom.addClass(target, className);\n      }\n    } else {\n      // node\n      const className = this.prefixClassName('node-immovable');\n\n      if (this.can('nodeMovable')) {\n        this.removeClass(className);\n      } else {\n        this.addClass(className);\n      }\n    }\n  }\n\n  isNodeView() {\n    return true;\n  }\n\n  confirmUpdate(flag, options = {}) {\n    let ret = flag;\n\n    if (this.hasAction(ret, 'ports')) {\n      this.removePorts();\n      this.cleanPortsCache();\n    }\n\n    if (this.hasAction(ret, 'render')) {\n      this.render();\n      ret = this.removeAction(ret, ['render', 'update', 'resize', 'translate', 'rotate', 'ports', 'tools']);\n    } else {\n      ret = this.handleAction(ret, 'resize', () => this.resize(options), 'update');\n      ret = this.handleAction(ret, 'update', () => this.update(), // `update()` will render ports when useCSSSelectors are enabled\n      Config.useCSSSelector ? 'ports' : null);\n      ret = this.handleAction(ret, 'translate', () => this.translate());\n      ret = this.handleAction(ret, 'rotate', () => this.rotate());\n      ret = this.handleAction(ret, 'ports', () => this.renderPorts());\n      ret = this.handleAction(ret, 'tools', () => this.renderTools());\n    }\n\n    return ret;\n  }\n\n  update(partialAttrs) {\n    this.cleanCache(); // When CSS selector strings are used, make sure no rule matches port nodes.\n\n    if (Config.useCSSSelector) {\n      this.removePorts();\n    }\n\n    const node = this.cell;\n    const size = node.getSize();\n    const attrs = node.getAttrs();\n    this.updateAttrs(this.container, attrs, {\n      attrs: partialAttrs === attrs ? null : partialAttrs,\n      rootBBox: new Rectangle(0, 0, size.width, size.height),\n      selectors: this.selectors,\n      scalableNode: this.scalableNode,\n      rotatableNode: this.rotatableNode\n    });\n\n    if (Config.useCSSSelector) {\n      this.renderPorts();\n    }\n  }\n\n  renderMarkup() {\n    const markup = this.cell.markup;\n\n    if (markup) {\n      if (typeof markup === 'string') {\n        return this.renderStringMarkup(markup);\n      }\n\n      return this.renderJSONMarkup(markup);\n    }\n\n    throw new TypeError('Invalid node markup.');\n  }\n\n  renderJSONMarkup(markup) {\n    const ret = this.parseJSONMarkup(markup, this.container);\n\n    const one = elems => Array.isArray(elems) ? elems[0] : elems;\n\n    this.selectors = ret.selectors;\n    this.rotatableNode = one(this.selectors[this.rotatableSelector]);\n    this.scalableNode = one(this.selectors[this.scalableSelector]);\n    this.container.appendChild(ret.fragment);\n  }\n\n  renderStringMarkup(markup) {\n    Dom.append(this.container, Vector.toNodes(Vector.createVectors(markup)));\n    this.rotatableNode = Dom.findOne(this.container, `.${this.rotatableSelector}`);\n    this.scalableNode = Dom.findOne(this.container, `.${this.scalableSelector}`);\n    this.selectors = {};\n\n    if (this.rootSelector) {\n      this.selectors[this.rootSelector] = this.container;\n    }\n  }\n\n  render() {\n    this.empty();\n    this.renderMarkup();\n\n    if (this.scalableNode) {\n      // Double update is necessary for elements with the scalable group only\n      // Note the `resize()` triggers the other `update`.\n      this.update();\n    }\n\n    this.resize();\n\n    if (this.rotatableNode) {\n      this.rotate();\n      this.translate();\n    } else {\n      this.updateTransform();\n    }\n\n    if (!Config.useCSSSelector) {\n      this.renderPorts();\n    }\n\n    this.renderTools();\n    return this;\n  }\n\n  resize(opt = {}) {\n    if (this.scalableNode) {\n      return this.updateSize(opt);\n    }\n\n    if (this.cell.getAngle()) {\n      this.rotate();\n    }\n\n    this.update();\n  }\n\n  translate() {\n    if (this.rotatableNode) {\n      return this.updateTranslation();\n    }\n\n    this.updateTransform();\n  }\n\n  rotate() {\n    if (this.rotatableNode) {\n      this.updateRotation(); // It's necessary to call the update for the nodes outside\n      // the rotatable group referencing nodes inside the group\n\n      this.update();\n      return;\n    }\n\n    this.updateTransform();\n  }\n\n  getTranslationString() {\n    const position = this.cell.getPosition();\n    return `translate(${position.x},${position.y})`;\n  }\n\n  getRotationString() {\n    const angle = this.cell.getAngle();\n\n    if (angle) {\n      const size = this.cell.getSize();\n      return `rotate(${angle},${size.width / 2},${size.height / 2})`;\n    }\n  }\n\n  updateTransform() {\n    let transform = this.getTranslationString();\n    const rot = this.getRotationString();\n\n    if (rot) {\n      transform += ` ${rot}`;\n    }\n\n    this.container.setAttribute('transform', transform);\n  }\n\n  updateRotation() {\n    if (this.rotatableNode != null) {\n      const transform = this.getRotationString();\n\n      if (transform != null) {\n        this.rotatableNode.setAttribute('transform', transform);\n      } else {\n        this.rotatableNode.removeAttribute('transform');\n      }\n    }\n  }\n\n  updateTranslation() {\n    this.container.setAttribute('transform', this.getTranslationString());\n  }\n\n  updateSize(opt = {}) {\n    const cell = this.cell;\n    const size = cell.getSize();\n    const angle = cell.getAngle();\n    const scalableNode = this.scalableNode; // Getting scalable group's bbox.\n    // Due to a bug in webkit's native SVG .getBBox implementation, the\n    // bbox of groups with path children includes the paths' control points.\n    // To work around the issue, we need to check whether there are any path\n    // elements inside the scalable group.\n\n    let recursive = false;\n\n    if (scalableNode.getElementsByTagName('path').length > 0) {\n      // If scalable has at least one descendant that is a path, we need\n      // toswitch to recursive bbox calculation. Otherwise, group bbox\n      // calculation works and so we can use the (faster) native function.\n      recursive = true;\n    }\n\n    const scalableBBox = Dom.getBBox(scalableNode, {\n      recursive\n    }); // Make sure `scalableBbox.width` and `scalableBbox.height` are not zero\n    // which can happen if the element does not have any content.\n\n    const sx = size.width / (scalableBBox.width || 1);\n    const sy = size.height / (scalableBBox.height || 1);\n    scalableNode.setAttribute('transform', `scale(${sx},${sy})`); // Now the interesting part. The goal is to be able to store the object geometry via just `x`, `y`, `angle`, `width` and `height`\n    // Order of transformations is significant but we want to reconstruct the object always in the order:\n    // resize(), rotate(), translate() no matter of how the object was transformed. For that to work,\n    // we must adjust the `x` and `y` coordinates of the object whenever we resize it (because the origin of the\n    // rotation changes). The new `x` and `y` coordinates are computed by canceling the previous rotation\n    // around the center of the resized object (which is a different origin then the origin of the previous rotation)\n    // and getting the top-left corner of the resulting object. Then we clean up the rotation back to what it originally was.\n    // Cancel the rotation but now around a different origin, which is the center of the scaled object.\n\n    const rotatableNode = this.rotatableNode;\n\n    if (rotatableNode != null) {\n      const transform = rotatableNode.getAttribute('transform');\n\n      if (transform) {\n        rotatableNode.setAttribute('transform', `${transform} rotate(${-angle},${size.width / 2},${size.height / 2})`);\n        const rotatableBBox = Dom.getBBox(scalableNode, {\n          target: this.graph.view.stage\n        }); // Store new x, y and perform rotate() again against the new rotation origin.\n\n        cell.prop('position', {\n          x: rotatableBBox.x,\n          y: rotatableBBox.y\n        }, Object.assign({\n          updated: true\n        }, opt));\n        this.translate();\n        this.rotate();\n      }\n    } // Update must always be called on non-rotated element. Otherwise,\n    // relative positioning would work with wrong (rotated) bounding boxes.\n\n\n    this.update();\n  } // #region ports\n\n\n  findPortElem(portId, selector) {\n    const cache = portId ? this.portsCache[portId] : null;\n\n    if (!cache) {\n      return null;\n    }\n\n    const portRoot = cache.portContentElement;\n    const portSelectors = cache.portContentSelectors || {};\n    return this.findOne(selector, portRoot, portSelectors);\n  }\n\n  initializePorts() {\n    this.cleanPortsCache();\n  }\n\n  refreshPorts() {\n    this.removePorts();\n    this.cleanPortsCache();\n    this.renderPorts();\n  }\n\n  cleanPortsCache() {\n    this.portsCache = {};\n  }\n\n  removePorts() {\n    Object.keys(this.portsCache).forEach(portId => {\n      const cached = this.portsCache[portId];\n      Dom.remove(cached.portElement);\n    });\n  }\n\n  renderPorts() {\n    const container = this.getPortsContainer(); // References to rendered elements without z-index\n\n    const references = [];\n    container.childNodes.forEach(child => {\n      references.push(child);\n    });\n    const portsGropsByZ = ArrayExt.groupBy(this.cell.getParsedPorts(), 'zIndex');\n    const autoZIndexKey = 'auto'; // render non-z first\n\n    if (portsGropsByZ[autoZIndexKey]) {\n      portsGropsByZ[autoZIndexKey].forEach(port => {\n        const portElement = this.getPortElement(port);\n        container.append(portElement);\n        references.push(portElement);\n      });\n    }\n\n    Object.keys(portsGropsByZ).forEach(key => {\n      if (key !== autoZIndexKey) {\n        const zIndex = parseInt(key, 10);\n        this.appendPorts(portsGropsByZ[key], zIndex, references);\n      }\n    });\n    this.updatePorts();\n  }\n\n  getPortsContainer() {\n    return this.rotatableNode || this.container;\n  }\n\n  appendPorts(ports, zIndex, refs) {\n    const elems = ports.map(p => this.getPortElement(p));\n\n    if (refs[zIndex] || zIndex < 0) {\n      Dom.before(refs[Math.max(zIndex, 0)], elems);\n    } else {\n      Dom.append(this.getPortsContainer(), elems);\n    }\n  }\n\n  getPortElement(port) {\n    const cached = this.portsCache[port.id];\n\n    if (cached) {\n      return cached.portElement;\n    }\n\n    return this.createPortElement(port);\n  }\n\n  createPortElement(port) {\n    let renderResult = Markup.renderMarkup(this.getPortContainerMarkup());\n    const portElement = renderResult.elem;\n\n    if (portElement == null) {\n      throw new Error('Invalid port container markup.');\n    }\n\n    renderResult = Markup.renderMarkup(this.getPortMarkup(port));\n    const portContentElement = renderResult.elem;\n    const portContentSelectors = renderResult.selectors;\n\n    if (portContentElement == null) {\n      throw new Error('Invalid port markup.');\n    }\n\n    this.setAttrs({\n      port: port.id,\n      'port-group': port.group\n    }, portContentElement);\n    renderResult = Markup.renderMarkup(this.getPortLabelMarkup(port.label));\n    const portLabelElement = renderResult.elem;\n    const portLabelSelectors = renderResult.selectors;\n\n    if (portLabelElement == null) {\n      throw new Error('Invalid port label markup.');\n    }\n\n    let portSelectors;\n\n    if (portContentSelectors && portLabelSelectors) {\n      // eslint-disable-next-line\n      for (const key in portLabelSelectors) {\n        if (portContentSelectors[key] && key !== this.rootSelector) {\n          throw new Error('Selectors within port must be unique.');\n        }\n      }\n\n      portSelectors = Object.assign(Object.assign({}, portContentSelectors), portLabelSelectors);\n    } else {\n      portSelectors = portContentSelectors || portLabelSelectors;\n    }\n\n    let portClass = 'x6-port';\n\n    if (port.group) {\n      portClass += ` x6-port-${port.group}`;\n    }\n\n    Dom.addClass(portElement, portClass);\n    Dom.addClass(portContentElement, 'x6-port-body');\n    Dom.addClass(portLabelElement, 'x6-port-label');\n    portElement.appendChild(portContentElement);\n    portElement.appendChild(portLabelElement);\n    this.portsCache[port.id] = {\n      portElement,\n      portSelectors,\n      portLabelElement,\n      portLabelSelectors,\n      portContentElement,\n      portContentSelectors\n    };\n    this.graph.hook.onPortRendered({\n      port,\n      node: this.cell,\n      container: portElement,\n      selectors: portSelectors,\n      labelContainer: portLabelElement,\n      labelSelectors: portLabelSelectors,\n      contentContainer: portContentElement,\n      contentSelectors: portContentSelectors\n    });\n    return portElement;\n  }\n\n  updatePorts() {\n    // Layout ports without group\n    this.updatePortGroup(); // Layout ports with explicit group\n\n    const groups = this.cell.getParsedGroups();\n    Object.keys(groups).forEach(groupName => this.updatePortGroup(groupName));\n  }\n\n  updatePortGroup(groupName) {\n    const bbox = Rectangle.fromSize(this.cell.getSize());\n    const metrics = this.cell.getPortsLayoutByGroup(groupName, bbox);\n\n    for (let i = 0, n = metrics.length; i < n; i += 1) {\n      const metric = metrics[i];\n      const portId = metric.portId;\n      const cached = this.portsCache[portId] || {};\n      const portLayout = metric.portLayout;\n      this.applyPortTransform(cached.portElement, portLayout);\n\n      if (metric.portAttrs != null) {\n        const options = {\n          selectors: cached.portSelectors || {}\n        };\n\n        if (metric.portSize) {\n          options.rootBBox = Rectangle.fromSize(metric.portSize);\n        }\n\n        this.updateAttrs(cached.portElement, metric.portAttrs, options);\n      }\n\n      const labelLayout = metric.labelLayout;\n\n      if (labelLayout) {\n        this.applyPortTransform(cached.portLabelElement, labelLayout, -(portLayout.angle || 0));\n\n        if (labelLayout.attrs) {\n          const options = {\n            selectors: cached.portLabelSelectors || {}\n          };\n\n          if (metric.labelSize) {\n            options.rootBBox = Rectangle.fromSize(metric.labelSize);\n          }\n\n          this.updateAttrs(cached.portLabelElement, labelLayout.attrs, options);\n        }\n      }\n    }\n  }\n\n  applyPortTransform(element, layout, initialAngle = 0) {\n    const angle = layout.angle;\n    const position = layout.position;\n    const matrix = Dom.createSVGMatrix().rotate(initialAngle).translate(position.x || 0, position.y || 0).rotate(angle || 0);\n    Dom.transform(element, matrix, {\n      absolute: true\n    });\n  }\n\n  getPortContainerMarkup() {\n    return this.cell.getPortContainerMarkup() || this.defaultPortContainerMarkup;\n  }\n\n  getPortMarkup(port) {\n    return port.markup || this.cell.portMarkup || this.defaultPortMarkup;\n  }\n\n  getPortLabelMarkup(label) {\n    return label.markup || this.cell.portLabelMarkup || this.defaultPortLabelMarkup;\n  }\n\n  getEventArgs(e, x, y) {\n    const view = this; // eslint-disable-line\n\n    const node = view.cell;\n    const cell = node;\n\n    if (x == null || y == null) {\n      return {\n        e,\n        view,\n        node,\n        cell\n      };\n    }\n\n    return {\n      e,\n      x,\n      y,\n      view,\n      node,\n      cell\n    };\n  }\n\n  notifyMouseDown(e, x, y) {\n    super.onMouseDown(e, x, y);\n    this.notify('node:mousedown', this.getEventArgs(e, x, y));\n  }\n\n  notifyMouseMove(e, x, y) {\n    super.onMouseMove(e, x, y);\n    this.notify('node:mousemove', this.getEventArgs(e, x, y));\n  }\n\n  notifyMouseUp(e, x, y) {\n    super.onMouseUp(e, x, y);\n    this.notify('node:mouseup', this.getEventArgs(e, x, y));\n  }\n\n  onClick(e, x, y) {\n    super.onClick(e, x, y);\n    this.notify('node:click', this.getEventArgs(e, x, y));\n  }\n\n  onDblClick(e, x, y) {\n    super.onDblClick(e, x, y);\n    this.notify('node:dblclick', this.getEventArgs(e, x, y));\n  }\n\n  onContextMenu(e, x, y) {\n    super.onContextMenu(e, x, y);\n    this.notify('node:contextmenu', this.getEventArgs(e, x, y));\n  }\n\n  onMouseDown(e, x, y) {\n    if (this.isPropagationStopped(e)) {\n      return;\n    }\n\n    this.notifyMouseDown(e, x, y);\n    this.startNodeDragging(e, x, y);\n  }\n\n  onMouseMove(e, x, y) {\n    const data = this.getEventData(e);\n    const action = data.action;\n\n    if (action === 'magnet') {\n      this.dragMagnet(e, x, y);\n    } else {\n      if (action === 'move') {\n        const meta = data;\n        const view = meta.targetView || this;\n        view.dragNode(e, x, y);\n        view.notify('node:moving', {\n          e,\n          x,\n          y,\n          view,\n          cell: view.cell,\n          node: view.cell\n        });\n      }\n\n      this.notifyMouseMove(e, x, y);\n    }\n\n    this.setEventData(e, data);\n  }\n\n  onMouseUp(e, x, y) {\n    const data = this.getEventData(e);\n    const action = data.action;\n\n    if (action === 'magnet') {\n      this.stopMagnetDragging(e, x, y);\n    } else {\n      this.notifyMouseUp(e, x, y);\n\n      if (action === 'move') {\n        const meta = data;\n        const view = meta.targetView || this;\n        view.stopNodeDragging(e, x, y);\n      }\n    }\n\n    const magnet = data.targetMagnet;\n\n    if (magnet) {\n      this.onMagnetClick(e, magnet, x, y);\n    }\n\n    this.checkMouseleave(e);\n  }\n\n  onMouseOver(e) {\n    super.onMouseOver(e);\n    this.notify('node:mouseover', this.getEventArgs(e));\n  }\n\n  onMouseOut(e) {\n    super.onMouseOut(e);\n    this.notify('node:mouseout', this.getEventArgs(e));\n  }\n\n  onMouseEnter(e) {\n    this.updateClassName(e);\n    super.onMouseEnter(e);\n    this.notify('node:mouseenter', this.getEventArgs(e));\n  }\n\n  onMouseLeave(e) {\n    super.onMouseLeave(e);\n    this.notify('node:mouseleave', this.getEventArgs(e));\n  }\n\n  onMouseWheel(e, x, y, delta) {\n    super.onMouseWheel(e, x, y, delta);\n    this.notify('node:mousewheel', Object.assign({\n      delta\n    }, this.getEventArgs(e, x, y)));\n  }\n\n  onMagnetClick(e, magnet, x, y) {\n    const count = this.graph.view.getMouseMovedCount(e);\n\n    if (count > this.graph.options.clickThreshold) {\n      return;\n    }\n\n    this.notify('node:magnet:click', Object.assign({\n      magnet\n    }, this.getEventArgs(e, x, y)));\n  }\n\n  onMagnetDblClick(e, magnet, x, y) {\n    this.notify('node:magnet:dblclick', Object.assign({\n      magnet\n    }, this.getEventArgs(e, x, y)));\n  }\n\n  onMagnetContextMenu(e, magnet, x, y) {\n    this.notify('node:magnet:contextmenu', Object.assign({\n      magnet\n    }, this.getEventArgs(e, x, y)));\n  }\n\n  onMagnetMouseDown(e, magnet, x, y) {\n    this.startMagnetDragging(e, x, y);\n  }\n\n  onCustomEvent(e, name, x, y) {\n    this.notify('node:customevent', Object.assign({\n      name\n    }, this.getEventArgs(e, x, y)));\n    super.onCustomEvent(e, name, x, y);\n  }\n\n  prepareEmbedding(e) {\n    // const cell = data.cell || this.cell\n    // const graph = data.graph || this.graph\n    // const model = graph.model\n    // model.startBatch('to-front')\n    // // Bring the model to the front with all his embeds.\n    // cell.toFront({ deep: true, ui: true })\n    // const maxZ = model\n    //   .getNodes()\n    //   .reduce((max, cell) => Math.max(max, cell.getZIndex() || 0), 0)\n    // const connectedEdges = model.getConnectedEdges(cell, {\n    //   deep: true,\n    //   enclosed: true,\n    // })\n    // connectedEdges.forEach((edge) => {\n    //   const zIndex = edge.getZIndex() || 0\n    //   if (zIndex <= maxZ) {\n    //     edge.setZIndex(maxZ + 1, { ui: true })\n    //   }\n    // })\n    // model.stopBatch('to-front')\n    // Before we start looking for suitable parent we remove the current one.\n    // const parent = cell.getParent()\n    // if (parent) {\n    //   parent.unembed(cell, { ui: true })\n    // }\n    const data = this.getEventData(e);\n    const node = data.cell || this.cell;\n    const view = this.graph.findViewByCell(node);\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n    this.notify('node:embed', {\n      e,\n      node,\n      view,\n      cell: node,\n      x: localPoint.x,\n      y: localPoint.y,\n      currentParent: node.getParent()\n    });\n  }\n\n  processEmbedding(e, data) {\n    const cell = data.cell || this.cell;\n    const graph = data.graph || this.graph;\n    const options = graph.options.embedding;\n    const findParent = options.findParent;\n    let candidates = typeof findParent === 'function' ? FunctionExt.call(findParent, graph, {\n      view: this,\n      node: this.cell\n    }).filter(c => {\n      return Cell.isCell(c) && this.cell.id !== c.id && !c.isDescendantOf(this.cell);\n    }) : graph.model.getNodesUnderNode(cell, {\n      by: findParent\n    }); // Picks the node with the highest `z` index\n\n    if (options.frontOnly) {\n      if (candidates.length > 0) {\n        const zIndexMap = ArrayExt.groupBy(candidates, 'zIndex');\n        const maxZIndex = ArrayExt.max(Object.keys(zIndexMap));\n\n        if (maxZIndex) {\n          candidates = zIndexMap[maxZIndex];\n        }\n      }\n    } // Filter the nodes which is invisiable\n\n\n    candidates = candidates.filter(candidate => candidate.visible);\n    let newCandidateView = null;\n    const prevCandidateView = data.candidateEmbedView;\n    const validateEmbeding = options.validate;\n\n    for (let i = candidates.length - 1; i >= 0; i -= 1) {\n      const candidate = candidates[i];\n\n      if (prevCandidateView && prevCandidateView.cell.id === candidate.id) {\n        // candidate remains the same\n        newCandidateView = prevCandidateView;\n        break;\n      } else {\n        const view = candidate.findView(graph);\n\n        if (FunctionExt.call(validateEmbeding, graph, {\n          child: this.cell,\n          parent: view.cell,\n          childView: this,\n          parentView: view\n        })) {\n          // flip to the new candidate\n          newCandidateView = view;\n          break;\n        }\n      }\n    }\n\n    this.clearEmbedding(data);\n\n    if (newCandidateView) {\n      newCandidateView.highlight(null, {\n        type: 'embedding'\n      });\n    }\n\n    data.candidateEmbedView = newCandidateView;\n    const localPoint = graph.snapToGrid(e.clientX, e.clientY);\n    this.notify('node:embedding', {\n      e,\n      cell,\n      node: cell,\n      view: graph.findViewByCell(cell),\n      x: localPoint.x,\n      y: localPoint.y,\n      currentParent: cell.getParent(),\n      candidateParent: newCandidateView ? newCandidateView.cell : null\n    });\n  }\n\n  clearEmbedding(data) {\n    const candidateView = data.candidateEmbedView;\n\n    if (candidateView) {\n      candidateView.unhighlight(null, {\n        type: 'embedding'\n      });\n      data.candidateEmbedView = null;\n    }\n  }\n\n  finalizeEmbedding(e, data) {\n    const cell = data.cell || this.cell;\n    const graph = data.graph || this.graph;\n    const view = graph.findViewByCell(cell);\n    const parent = cell.getParent();\n    const candidateView = data.candidateEmbedView;\n\n    if (candidateView) {\n      // Candidate view is chosen to become the parent of the node.\n      candidateView.unhighlight(null, {\n        type: 'embedding'\n      });\n      data.candidateEmbedView = null;\n\n      if (parent == null || parent.id !== candidateView.cell.id) {\n        candidateView.cell.insertChild(cell, undefined, {\n          ui: true\n        });\n      }\n    } else if (parent) {\n      parent.unembed(cell, {\n        ui: true\n      });\n    }\n\n    graph.model.getConnectedEdges(cell, {\n      deep: true\n    }).forEach(edge => {\n      edge.updateParent({\n        ui: true\n      });\n    });\n\n    if (view && candidateView) {\n      const localPoint = graph.snapToGrid(e.clientX, e.clientY);\n      view.notify('node:embedded', {\n        e,\n        cell,\n        x: localPoint.x,\n        y: localPoint.y,\n        node: cell,\n        view: graph.findViewByCell(cell),\n        previousParent: parent,\n        currentParent: cell.getParent()\n      });\n    }\n  }\n\n  getDelegatedView() {\n    let cell = this.cell;\n    let view = this; // eslint-disable-line\n\n    while (view) {\n      if (cell.isEdge()) {\n        break;\n      }\n\n      if (!cell.hasParent() || view.can('stopDelegateOnDragging')) {\n        return view;\n      }\n\n      cell = cell.getParent();\n      view = this.graph.renderer.findViewByCell(cell);\n    }\n\n    return null;\n  }\n\n  startMagnetDragging(e, x, y) {\n    if (!this.can('magnetConnectable')) {\n      return;\n    }\n\n    e.stopPropagation();\n    const magnet = e.currentTarget;\n    const graph = this.graph;\n    this.setEventData(e, {\n      targetMagnet: magnet\n    });\n\n    if (graph.hook.validateMagnet(this, magnet, e)) {\n      if (graph.options.magnetThreshold <= 0) {\n        this.startConnectting(e, magnet, x, y);\n      }\n\n      this.setEventData(e, {\n        action: 'magnet'\n      });\n      this.stopPropagation(e);\n    } else {\n      // 只需要阻止port的冒泡 #2258\n      if (Dom.hasClass(magnet, 'x6-port-body') || JQuery(magnet).closest('.x6-port-body').length > 0) {\n        this.stopPropagation(e);\n      }\n\n      this.onMouseDown(e, x, y);\n    }\n\n    graph.view.delegateDragEvents(e, this);\n  }\n\n  startConnectting(e, magnet, x, y) {\n    this.graph.model.startBatch('add-edge');\n    const edgeView = this.createEdgeFromMagnet(magnet, x, y);\n    edgeView.notifyMouseDown(e, x, y); // backwards compatibility events\n\n    edgeView.setEventData(e, edgeView.prepareArrowheadDragging('target', {\n      x,\n      y,\n      isNewEdge: true,\n      fallbackAction: 'remove'\n    }));\n    this.setEventData(e, {\n      edgeView\n    });\n  }\n\n  createEdgeFromMagnet(magnet, x, y) {\n    const graph = this.graph;\n    const model = graph.model;\n    const edge = graph.hook.getDefaultEdge(this, magnet);\n    edge.setSource(Object.assign(Object.assign({}, edge.getSource()), this.getEdgeTerminal(magnet, x, y, edge, 'source')));\n    edge.setTarget(Object.assign(Object.assign({}, edge.getTarget()), {\n      x,\n      y\n    }));\n    edge.addTo(model, {\n      async: false,\n      ui: true\n    });\n    return edge.findView(graph);\n  }\n\n  dragMagnet(e, x, y) {\n    const data = this.getEventData(e);\n    const edgeView = data.edgeView;\n\n    if (edgeView) {\n      edgeView.onMouseMove(e, x, y);\n      this.autoScrollGraph(e.clientX, e.clientY);\n    } else {\n      const graph = this.graph;\n      const magnetThreshold = graph.options.magnetThreshold;\n      const currentTarget = this.getEventTarget(e);\n      const targetMagnet = data.targetMagnet; // magnetThreshold when the pointer leaves the magnet\n\n      if (magnetThreshold === 'onleave') {\n        if (targetMagnet === currentTarget || targetMagnet.contains(currentTarget)) {\n          return;\n        } // eslint-disable-next-line no-lonely-if\n\n      } else {\n        // magnetThreshold defined as a number of movements\n        if (graph.view.getMouseMovedCount(e) <= magnetThreshold) {\n          return;\n        }\n      }\n\n      this.startConnectting(e, targetMagnet, x, y);\n    }\n  }\n\n  stopMagnetDragging(e, x, y) {\n    const data = this.eventData(e);\n    const edgeView = data.edgeView;\n\n    if (edgeView) {\n      edgeView.onMouseUp(e, x, y);\n      this.graph.model.stopBatch('add-edge');\n    }\n  }\n\n  notifyUnhandledMouseDown(e, x, y) {\n    this.notify('node:unhandled:mousedown', {\n      e,\n      x,\n      y,\n      view: this,\n      cell: this.cell,\n      node: this.cell\n    });\n  }\n\n  notifyNodeMove(name, e, x, y, cell) {\n    let cells = [cell];\n    const selection = this.graph.selection.widget;\n\n    if (selection && selection.options.movable) {\n      const selectedCells = this.graph.getSelectedCells();\n\n      if (selectedCells.includes(cell)) {\n        cells = selectedCells.filter(c => c.isNode());\n      }\n    }\n\n    cells.forEach(c => {\n      this.notify(name, {\n        e,\n        x,\n        y,\n        cell: c,\n        node: c,\n        view: c.findView(this.graph)\n      });\n    });\n  }\n\n  startNodeDragging(e, x, y) {\n    const targetView = this.getDelegatedView();\n\n    if (targetView == null || !targetView.can('nodeMovable')) {\n      return this.notifyUnhandledMouseDown(e, x, y);\n    }\n\n    this.setEventData(e, {\n      targetView,\n      action: 'move'\n    });\n    const position = Point.create(targetView.cell.getPosition());\n    targetView.setEventData(e, {\n      moving: false,\n      offset: position.diff(x, y),\n      restrict: this.graph.hook.getRestrictArea(targetView)\n    });\n  }\n\n  dragNode(e, x, y) {\n    const node = this.cell;\n    const graph = this.graph;\n    const gridSize = graph.getGridSize();\n    const data = this.getEventData(e);\n    const offset = data.offset;\n    const restrict = data.restrict;\n\n    if (!data.moving) {\n      data.moving = true;\n      this.addClass('node-moving');\n      this.notifyNodeMove('node:move', e, x, y, this.cell);\n    }\n\n    this.autoScrollGraph(e.clientX, e.clientY);\n    const posX = Util.snapToGrid(x + offset.x, gridSize);\n    const posY = Util.snapToGrid(y + offset.y, gridSize);\n    node.setPosition(posX, posY, {\n      restrict,\n      deep: true,\n      ui: true\n    });\n\n    if (graph.options.embedding.enabled) {\n      if (!data.embedding) {\n        this.prepareEmbedding(e);\n        data.embedding = true;\n      }\n\n      this.processEmbedding(e, data);\n    }\n  }\n\n  stopNodeDragging(e, x, y) {\n    const data = this.getEventData(e);\n\n    if (data.embedding) {\n      this.finalizeEmbedding(e, data);\n    }\n\n    if (data.moving) {\n      this.removeClass('node-moving');\n      this.notifyNodeMove('node:moved', e, x, y, this.cell);\n    }\n\n    data.moving = false;\n    data.embedding = false;\n  }\n\n  autoScrollGraph(x, y) {\n    const scroller = this.graph.scroller.widget;\n\n    if (scroller) {\n      scroller.autoScroll(x, y);\n    }\n  }\n\n}\n\n(function (NodeView) {\n  NodeView.toStringTag = `X6.${NodeView.name}`;\n\n  function isNodeView(instance) {\n    if (instance == null) {\n      return false;\n    }\n\n    if (instance instanceof NodeView) {\n      return true;\n    }\n\n    const tag = instance[Symbol.toStringTag];\n    const view = instance;\n\n    if ((tag == null || tag === NodeView.toStringTag) && typeof view.isNodeView === 'function' && typeof view.isEdgeView === 'function' && typeof view.confirmUpdate === 'function' && typeof view.update === 'function' && typeof view.findPortElem === 'function' && typeof view.resize === 'function' && typeof view.rotate === 'function' && typeof view.translate === 'function') {\n      return true;\n    }\n\n    return false;\n  }\n\n  NodeView.isNodeView = isNodeView;\n})(NodeView || (NodeView = {}));\n\nNodeView.config({\n  isSvgElement: true,\n  priority: 0,\n  bootstrap: ['render'],\n  actions: {\n    view: ['render'],\n    markup: ['render'],\n    attrs: ['update'],\n    size: ['resize', 'ports', 'tools'],\n    angle: ['rotate', 'tools'],\n    position: ['translate', 'tools'],\n    ports: ['ports'],\n    tools: ['tools']\n  }\n});\nNodeView.registry.register('node', NodeView, true);","map":{"version":3,"mappings":"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","names":["JQuery","Util","Config","ArrayExt","FunctionExt","Dom","Vector","Rectangle","Point","Cell","CellView","Markup","NodeView","constructor","getPortMarkup","getPortLabelMarkup","getPortContainerMarkup","Symbol","toStringTag","getContainerClassName","classList","prefixClassName","can","push","join","updateClassName","e","target","hasAttribute","className","removeClass","addClass","isNodeView","confirmUpdate","flag","options","ret","hasAction","removePorts","cleanPortsCache","render","removeAction","handleAction","resize","update","useCSSSelector","translate","rotate","renderPorts","renderTools","partialAttrs","cleanCache","node","cell","size","getSize","attrs","getAttrs","updateAttrs","container","rootBBox","width","height","selectors","scalableNode","rotatableNode","renderMarkup","markup","renderStringMarkup","renderJSONMarkup","TypeError","parseJSONMarkup","one","elems","Array","isArray","rotatableSelector","scalableSelector","appendChild","fragment","append","toNodes","createVectors","findOne","rootSelector","empty","updateTransform","opt","updateSize","getAngle","updateTranslation","updateRotation","getTranslationString","position","getPosition","x","y","getRotationString","angle","transform","rot","setAttribute","removeAttribute","recursive","getElementsByTagName","length","scalableBBox","getBBox","sx","sy","getAttribute","rotatableBBox","graph","view","stage","prop","Object","updated","findPortElem","portId","selector","cache","portsCache","portRoot","portContentElement","portSelectors","portContentSelectors","initializePorts","refreshPorts","keys","forEach","cached","remove","portElement","getPortsContainer","references","childNodes","child","portsGropsByZ","groupBy","getParsedPorts","autoZIndexKey","port","getPortElement","key","zIndex","parseInt","appendPorts","updatePorts","ports","refs","map","p","before","Math","max","id","createPortElement","renderResult","elem","Error","setAttrs","group","label","portLabelElement","portLabelSelectors","portClass","hook","onPortRendered","labelContainer","labelSelectors","contentContainer","contentSelectors","updatePortGroup","groups","getParsedGroups","groupName","bbox","fromSize","metrics","getPortsLayoutByGroup","i","n","metric","portLayout","applyPortTransform","portAttrs","portSize","labelLayout","labelSize","element","layout","initialAngle","matrix","createSVGMatrix","absolute","defaultPortContainerMarkup","portMarkup","defaultPortMarkup","portLabelMarkup","defaultPortLabelMarkup","getEventArgs","notifyMouseDown","onMouseDown","notify","notifyMouseMove","onMouseMove","notifyMouseUp","onMouseUp","onClick","onDblClick","onContextMenu","isPropagationStopped","startNodeDragging","data","getEventData","action","dragMagnet","meta","targetView","dragNode","setEventData","stopMagnetDragging","stopNodeDragging","magnet","targetMagnet","onMagnetClick","checkMouseleave","onMouseOver","onMouseOut","onMouseEnter","onMouseLeave","onMouseWheel","delta","count","getMouseMovedCount","clickThreshold","onMagnetDblClick","onMagnetContextMenu","onMagnetMouseDown","startMagnetDragging","onCustomEvent","name","prepareEmbedding","findViewByCell","localPoint","snapToGrid","clientX","clientY","currentParent","getParent","processEmbedding","embedding","findParent","candidates","call","filter","c","isCell","isDescendantOf","model","getNodesUnderNode","by","frontOnly","zIndexMap","maxZIndex","candidate","visible","newCandidateView","prevCandidateView","candidateEmbedView","validateEmbeding","validate","findView","parent","childView","parentView","clearEmbedding","highlight","type","candidateParent","candidateView","unhighlight","finalizeEmbedding","insertChild","undefined","ui","unembed","getConnectedEdges","deep","edge","updateParent","previousParent","getDelegatedView","isEdge","hasParent","renderer","stopPropagation","currentTarget","validateMagnet","magnetThreshold","startConnectting","hasClass","closest","delegateDragEvents","startBatch","edgeView","createEdgeFromMagnet","prepareArrowheadDragging","isNewEdge","fallbackAction","getDefaultEdge","setSource","getSource","getEdgeTerminal","setTarget","getTarget","addTo","async","autoScrollGraph","getEventTarget","contains","eventData","stopBatch","notifyUnhandledMouseDown","notifyNodeMove","cells","selection","widget","movable","selectedCells","getSelectedCells","includes","isNode","create","moving","offset","diff","restrict","getRestrictArea","gridSize","getGridSize","posX","posY","setPosition","enabled","scroller","autoScroll","instance","tag","isEdgeView","config","isSvgElement","priority","bootstrap","actions","tools","registry","register"],"sourceRoot":"","sources":["../../src/view/node.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}