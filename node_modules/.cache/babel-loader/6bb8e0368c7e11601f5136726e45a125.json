{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Platform, Dom, FunctionExt, ObjectExt } from '../../util';\nimport { Attr } from '../../registry';\nimport { Base } from '../base';\nexport const TextBlock = Base.define({\n  shape: 'text-block',\n  markup: [{\n    tagName: 'rect',\n    selector: 'body'\n  }, Platform.SUPPORT_FOREIGNOBJECT ? {\n    tagName: 'foreignObject',\n    selector: 'foreignObject',\n    children: [{\n      tagName: 'div',\n      ns: Dom.ns.xhtml,\n      selector: 'label',\n      style: {\n        width: '100%',\n        height: '100%',\n        position: 'static',\n        backgroundColor: 'transparent',\n        textAlign: 'center',\n        margin: 0,\n        padding: '0px 5px',\n        boxSizing: 'border-box',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }]\n  } : {\n    tagName: 'text',\n    selector: 'label',\n    attrs: {\n      textAnchor: 'middle'\n    }\n  }],\n  attrs: {\n    body: Object.assign(Object.assign({}, Base.bodyAttr), {\n      refWidth: '100%',\n      refHeight: '100%'\n    }),\n    foreignObject: {\n      refWidth: '100%',\n      refHeight: '100%'\n    },\n    label: {\n      style: {\n        fontSize: 14\n      }\n    }\n  },\n\n  propHooks(metadata) {\n    const {\n      text\n    } = metadata,\n          others = __rest(metadata, [\"text\"]);\n\n    if (text) {\n      ObjectExt.setByPath(others, 'attrs/label/text', text);\n    }\n\n    return others;\n  },\n\n  attrHooks: {\n    text: {\n      set(text, {\n        cell,\n        view,\n        refBBox,\n        elem,\n        attrs\n      }) {\n        if (elem instanceof HTMLElement) {\n          elem.textContent = text;\n        } else {\n          // No foreign object\n          const style = attrs.style || {};\n          const wrapValue = {\n            text,\n            width: -5,\n            height: '100%'\n          };\n          const wrapAttrs = Object.assign({\n            textVerticalAnchor: 'middle'\n          }, style);\n          const textWrap = Attr.presets.textWrap;\n          FunctionExt.call(textWrap.set, this, wrapValue, {\n            cell,\n            view,\n            elem,\n            refBBox,\n            attrs: wrapAttrs\n          });\n          return {\n            fill: style.color || null\n          };\n        }\n      },\n\n      position(text, {\n        refBBox,\n        elem\n      }) {\n        if (elem instanceof SVGElement) {\n          return refBBox.getCenter();\n        }\n      }\n\n    }\n  }\n});","map":{"version":3,"mappings":"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","names":["Platform","Dom","FunctionExt","ObjectExt","Attr","Base","TextBlock","define","shape","markup","tagName","selector","SUPPORT_FOREIGNOBJECT","children","ns","xhtml","style","width","height","position","backgroundColor","textAlign","margin","padding","boxSizing","display","alignItems","justifyContent","attrs","textAnchor","body","bodyAttr","refWidth","refHeight","foreignObject","label","fontSize","propHooks","metadata","text","others","setByPath","attrHooks","set","cell","view","refBBox","elem","HTMLElement","textContent","wrapValue","wrapAttrs","textVerticalAnchor","textWrap","presets","call","fill","color","SVGElement","getCenter"],"sourceRoot":"","sources":["../../../src/shape/standard/text-block.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}