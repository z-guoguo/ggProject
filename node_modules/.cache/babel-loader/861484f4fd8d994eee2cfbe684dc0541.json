{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { mix } from '@antv/util';\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nregisterNode('rect', {\n  // 自定义节点时的配置\n  options: {\n    size: [100, 30],\n    style: {\n      radius: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    // 连接点，默认为左右\n    // anchorPoints: [{ x: 0, y: 0.5 }, { x: 1, y: 0.5 }]\n    anchorPoints: [[0, 0.5], [1, 0.5]],\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'rect',\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('rect', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      name: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var width = style.width || size[0];\n    var height = style.height || size[1];\n\n    var styles = __assign({\n      x: -width / 2,\n      y: -height / 2,\n      width: width,\n      height: height\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var keyShape = item.get('keyShape');\n\n    if (!cfg.size) {\n      size[0] = keyShape.attr('width') || defaultStyle.width;\n      size[1] = keyShape.attr('height') || defaultStyle.height;\n    } // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n\n\n    var strokeStyle = {\n      stroke: cfg.color,\n      x: -size[0] / 2,\n      y: -size[1] / 2,\n      width: size[0],\n      height: size[1]\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, false, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');","map":{"version":3,"names":["__assign","__rest","mix","registerNode","BaseGlobal","Global","options","size","style","radius","stroke","defaultNode","fill","lineWidth","labelCfg","nodeLabel","fontSize","fontFamily","windowFontFamily","linkPoints","top","right","bottom","left","icon","show","img","width","height","anchorPoints","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","getShapeStyle","keyShape","addShape","attrs","className","concat","type","name","draggable","drawLinkPoints","_a","mergeStyle","getOptions","markSize","markR","r","markStyle","getSize","x","y","isAnchorPoint","defaultStyle","strokeStyle","color","styles","update","item","updateType","getContainer","get","attr","updateShape","updateLinkPoints"],"sources":["/Users/wawalike/Desktop/ggProject/node_modules/@antv/g6-element/es/nodes/rect.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { mix } from '@antv/util';\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nregisterNode('rect', {\n  // 自定义节点时的配置\n  options: {\n    size: [100, 30],\n    style: {\n      radius: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    // 连接点，默认为左右\n    // anchorPoints: [{ x: 0, y: 0.5 }, { x: 1, y: 0.5 }]\n    anchorPoints: [[0, 0.5], [1, 0.5]],\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'rect',\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('rect', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      name: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var width = style.width || size[0];\n    var height = style.height || size[1];\n\n    var styles = __assign({\n      x: -width / 2,\n      y: -height / 2,\n      width: width,\n      height: height\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var keyShape = item.get('keyShape');\n\n    if (!cfg.size) {\n      size[0] = keyShape.attr('width') || defaultStyle.width;\n      size[1] = keyShape.attr('height') || defaultStyle.height;\n    } // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n\n\n    var strokeStyle = {\n      stroke: cfg.color,\n      x: -size[0] / 2,\n      y: -size[1] / 2,\n      width: size[0],\n      height: size[1]\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, false, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');"],"mappings":"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"},"metadata":{},"sourceType":"module"}