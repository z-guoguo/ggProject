{"ast":null,"code":"import { each, isArray, isString } from '@antv/util';\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi;\nvar regexDot = /[^\\s,]+/gi;\nexport function parseRadius(radius) {\n  var r1 = 0;\n  var r2 = 0;\n  var r3 = 0;\n  var r4 = 0;\n\n  if (isArray(radius)) {\n    if (radius.length === 1) {\n      r1 = r2 = r3 = r4 = radius[0];\n    } else if (radius.length === 2) {\n      r1 = r3 = radius[0];\n      r2 = r4 = radius[1];\n    } else if (radius.length === 3) {\n      r1 = radius[0];\n      r2 = r4 = radius[1];\n      r3 = radius[2];\n    } else {\n      r1 = radius[0];\n      r2 = radius[1];\n      r3 = radius[2];\n      r4 = radius[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = radius;\n  }\n\n  return {\n    r1: r1,\n    r2: r2,\n    r3: r3,\n    r4: r4\n  };\n}\nexport function parsePath(path) {\n  path = path || [];\n\n  if (isArray(path)) {\n    return path;\n  }\n\n  if (isString(path)) {\n    path = path.match(regexTags);\n    each(path, function (item, index) {\n      item = item.match(regexDot);\n\n      if (item[0].length > 1) {\n        var tag = item[0].charAt(0);\n        item.splice(1, 0, item[0].substr(1));\n        item[0] = tag;\n      }\n\n      each(item, function (sub, i) {\n        if (!isNaN(sub)) {\n          item[i] = +sub;\n        }\n      });\n      path[index] = item;\n    });\n    return path;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,QAAwC,YAAxC;AAEA,IAAMC,SAAS,GAAG,gCAAlB;AACA,IAAMC,QAAQ,GAAG,WAAjB;AAEA,OAAM,SAAUC,WAAV,CAAsBC,MAAtB,EAA4B;EAChC,IAAIC,EAAE,GAAG,CAAT;EACA,IAAIC,EAAE,GAAG,CAAT;EACA,IAAIC,EAAE,GAAG,CAAT;EACA,IAAIC,EAAE,GAAG,CAAT;;EACA,IAAIT,OAAO,CAACK,MAAD,CAAX,EAAqB;IACnB,IAAIA,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;MACvBJ,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGJ,MAAM,CAAC,CAAD,CAA1B;IACD,CAFD,MAEO,IAAIA,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;MAC9BJ,EAAE,GAAGE,EAAE,GAAGH,MAAM,CAAC,CAAD,CAAhB;MACAE,EAAE,GAAGE,EAAE,GAAGJ,MAAM,CAAC,CAAD,CAAhB;IACD,CAHM,MAGA,IAAIA,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;MAC9BJ,EAAE,GAAGD,MAAM,CAAC,CAAD,CAAX;MACAE,EAAE,GAAGE,EAAE,GAAGJ,MAAM,CAAC,CAAD,CAAhB;MACAG,EAAE,GAAGH,MAAM,CAAC,CAAD,CAAX;IACD,CAJM,MAIA;MACLC,EAAE,GAAGD,MAAM,CAAC,CAAD,CAAX;MACAE,EAAE,GAAGF,MAAM,CAAC,CAAD,CAAX;MACAG,EAAE,GAAGH,MAAM,CAAC,CAAD,CAAX;MACAI,EAAE,GAAGJ,MAAM,CAAC,CAAD,CAAX;IACD;EACF,CAhBD,MAgBO;IACLC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGJ,MAApB;EACD;;EACD,OAAO;IACLC,EAAE,IADG;IAELC,EAAE,IAFG;IAGLC,EAAE,IAHG;IAILC,EAAE;EAJG,CAAP;AAMD;AAED,OAAM,SAAUE,SAAV,CAAoBC,IAApB,EAAwB;EAC5BA,IAAI,GAAGA,IAAI,IAAI,EAAf;;EACA,IAAIZ,OAAO,CAACY,IAAD,CAAX,EAAmB;IACjB,OAAOA,IAAP;EACD;;EAED,IAAIX,QAAQ,CAACW,IAAD,CAAZ,EAAoB;IAClBA,IAAI,GAAGA,IAAI,CAACC,KAAL,CAAWX,SAAX,CAAP;IACAH,IAAI,CAACa,IAAD,EAAO,UAACE,IAAD,EAAOC,KAAP,EAAY;MACrBD,IAAI,GAAGA,IAAI,CAACD,KAAL,CAAWV,QAAX,CAAP;;MACA,IAAIW,IAAI,CAAC,CAAD,CAAJ,CAAQJ,MAAR,GAAiB,CAArB,EAAwB;QACtB,IAAMM,GAAG,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,MAAR,CAAe,CAAf,CAAZ;QACAH,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkBJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,MAAR,CAAe,CAAf,CAAlB;QACAL,IAAI,CAAC,CAAD,CAAJ,GAAUE,GAAV;MACD;;MACDjB,IAAI,CAACe,IAAD,EAAO,UAACM,GAAD,EAAMC,CAAN,EAAO;QAChB,IAAI,CAACC,KAAK,CAACF,GAAD,CAAV,EAAiB;UACfN,IAAI,CAACO,CAAD,CAAJ,GAAU,CAACD,GAAX;QACD;MACF,CAJG,CAAJ;MAKAR,IAAI,CAACG,KAAD,CAAJ,GAAcD,IAAd;IACD,CAbG,CAAJ;IAcA,OAAOF,IAAP;EACD;AACF","names":["each","isArray","isString","regexTags","regexDot","parseRadius","radius","r1","r2","r3","r4","length","parsePath","path","match","item","index","tag","charAt","splice","substr","sub","i","isNaN"],"sourceRoot":"","sources":["../../src/util/format.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}