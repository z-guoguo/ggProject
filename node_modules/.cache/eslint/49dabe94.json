[{"/Users/wawalike/Desktop/ggProject/src/main.ts":"1","/Users/wawalike/Desktop/ggProject/src/App.vue":"2","/Users/wawalike/Desktop/ggProject/src/router/index.ts":"3","/Users/wawalike/Desktop/ggProject/src/store/index.ts":"4","/Users/wawalike/Desktop/ggProject/src/views/builderView/index.vue":"5","/Users/wawalike/Desktop/ggProject/src/components/layout/index.vue":"6","/Users/wawalike/Desktop/ggProject/src/views/wait/index.vue":"7"},{"size":205,"mtime":1660722308937,"results":"8","hashOfConfig":"9"},{"size":1024,"mtime":1660787234806,"results":"10","hashOfConfig":"9"},{"size":517,"mtime":1660793540002,"results":"11","hashOfConfig":"9"},{"size":157,"mtime":1656660965482,"results":"12","hashOfConfig":"9"},{"size":6746,"mtime":1660793698392,"results":"13","hashOfConfig":"9"},{"size":3109,"mtime":1660787650014,"results":"14","hashOfConfig":"9"},{"size":270,"mtime":1660787332757,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"yl99cx",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wawalike/Desktop/ggProject/src/main.ts",[],[],"/Users/wawalike/Desktop/ggProject/src/App.vue",[],[],"/Users/wawalike/Desktop/ggProject/src/router/index.ts",[],"/Users/wawalike/Desktop/ggProject/src/store/index.ts",[],"/Users/wawalike/Desktop/ggProject/src/views/builderView/index.vue",["34","35","36","37","38"],"<template>\n    <div class=\"builderView\">\n         <div class=\"builderView_left\">\n            <div v-for=\"item in data.leftData\" :key=\"item.code\" :class=\"{rectangleStyle:item.code=='rectangle',prismaticStyle: item.code == 'prismatic'}\" @dragstart=\"dragDiv($event,item)\" draggable=\"true\"></div>\n         </div>\n         <div class=\"builderView_right\" @drop=\"dropEvent(data.currentData)\" @dragover.prevent>\n            <!--  @mousedown=\"mousedownDiv\" -->\n            <div v-for=\"(right,$index) in rightData\" :key=\"$index\" :style=\"{'margin-top':right.code == 'rectangle'&&$index!=0?'-6px':'0'}\" :class=\"{rectangleStyle:right.code=='rectangle',prismaticStyle: right.code == 'prismatic',lineStyle: right.code == 'line',arrowStyle: right.code == 'arrow'}\">\n                <input type=\"text\" class=\"rightInput\" v-if=\"right.code == 'rectangle'\">\n            </div>\n         </div>\n    </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, reactive, ref, Ref, toRefs } from 'vue';\nexport default defineComponent({\n    name: 'builderView',\n    setup(props,ctx) {\n        type P = {\n            name: string,\n            code: string,\n            value: string\n        }\n        //reactive设置响应式数据\n        const data = reactive({\n            leftData: [{\n                name: '长方形',\n                code: 'rectangle',\n                value: ''\n            }\n            // ,{\n            //     name: '棱形',\n            //     code: 'prismatic',\n            //     value: ''\n            // }\n            ],\n            clientX: '',//鼠标水平坐标\n            clientY: '',//鼠标垂直坐标\n            offsetLeft: '',//当前拖拽元素左侧偏移距离\n            offsetTop: '',//当前拖拽元素上方偏移距离\n            currentDragDom: '',\n            currentData: {},//当前拖拽数据\n        })\n        //ref设置响应式数据\n        const rightData: Ref<P[]> = ref([]);\n        const dragDiv = (event: any, item: never) => {\n            data.currentData = item;\n        }\n        const dropEvent = (item:P) => {\n            if(rightData.value.length!=0) {\n                rightData.value.push({\n                    name: '线',\n                    code: 'line',\n                    value: ''\n                },{\n                    name: '箭头',\n                    code: 'arrow',\n                    value: ''\n                })\n            }\n            rightData.value.push(item);\n            console.log(rightData.value);\n        }\n        /**\n         * @description js实现元素拖拽移动\n        */\n        const mousedownDiv = (e:any) => {\n            let offsetWidth = e.target.clientWidth;\n            let offsetHeight = e.target.clientHeight;\n            let parentNodeTop = e.target.parentNode.offsetTop + 20;//父元素上边距离上部距离\n            let parentNodeLeft = e.target.parentNode.offsetLeft + 20;//父元素左边距离左侧距离\n            let parentNodeBottomTop = e.target.parentNode.offsetTop + e.target.parentNode.offsetHeight - offsetHeight - 20;//父元素下边距离上部距离\n            let parentNodeRightLeft = e.target.parentNode.offsetLeft + e.target.parentNode.offsetWidth - offsetWidth - 20;//父元素右边距离左侧距离\n            let clientX = 0;\n            let clientY = 0;\n            document.onmousemove = function(event){\n                clientX = event.clientX;\n                clientY = event.clientY;\n                e.target.style.position = 'absolute';\n                e.target.style.left = ((clientX - offsetWidth/2) < parentNodeLeft)? (parentNodeLeft + \"px\") : ((clientX - offsetWidth/2)>parentNodeRightLeft)?(parentNodeRightLeft + 'px'):((clientX - offsetWidth/2) + \"px\")\n                e.target.style.top = ((clientY - offsetHeight/2) < parentNodeTop)? (parentNodeTop + \"px\") : ((clientY - offsetHeight/2)>parentNodeBottomTop?(parentNodeBottomTop+ 'px'):(clientY - offsetHeight/2) + \"px\")\n            };\n            document.onmouseup = function(){\n                //取消鼠标移动事件\n                document.onmousemove = null;\n                document.onmouseup = null;\n            }\n        }\n        return {\n            data,//reactive定义响应式数据\n            rightData,//ref定义响应式数据：右侧渲染数据\n            dragDiv,//开始拖拽\n            dropEvent,//拖拽接收元素松开被拖拽元素事件\n            mousedownDiv,//js实现元素拖拽（鼠标按下事件）\n        }\n    }\n})\n</script>\n<style lang=\"less\" scoped>\n.builderView {\n    display: flex;\n    height: 100%;\n    .builderView_left {\n        width: 300px;\n        height: 100%;\n        border: 1px solid #ddd;\n        border-radius: 6px;\n        padding: 20px 0;\n        box-sizing: border-box;\n        .rectangleStyle {\n            width: 100px;\n            height: 50px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            margin: 0 auto;\n            cursor: pointer;\n            background-color: #fff;\n        }\n        .prismaticStyle {\n            width: 80px;\n            height: 80px;\n            transform: rotate(45deg);\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            margin: 0 auto;\n            cursor: pointer;\n            background-color: #fff;\n            margin-top: 50px;\n        }\n    }\n    .builderView_right {\n        flex: 1;\n        height: 100%;\n        margin-left: 10px;\n        border: 1px solid #ddd;\n        border-radius: 6px;\n        padding: 20px;\n        box-sizing: border-box;\n        overflow: auto;\n        .rectangleStyle {\n            width: 100px;\n            min-height: 30px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            margin: 0 auto;\n            cursor: pointer;\n            background-color: #fff;\n            // padding: 10px 20px;\n            text-align: center;\n        }\n        .prismaticStyle {\n            width: 100px;\n            height: 100px;\n            transform: rotate(45deg);\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            margin: 0 auto;\n            cursor: pointer;\n            background-color: #fff;\n            text-align: center;\n            margin-top: 13px!important;\n        }\n        .lineStyle {\n            width: 2px;\n            height: 50px;\n            background-color: lightBlue;\n            margin: 0 auto;\n        }\n        .arrowStyle {\n            width: 0;\n            height: 0;\n            border: 6Px solid;\n            border-color: lightBlue transparent transparent transparent;\n            margin: 0 auto;\n        }\n        .rightInput {\n            width: 98%;\n            min-height: 30px;\n            border: none;\n            text-align: center;\n        }\n    }\n}\n</style>\n","/Users/wawalike/Desktop/ggProject/src/components/layout/index.vue",["39","40","41"],"<template>\n  <div class=\"layout\">\n    <div class=\"layout_nav\">\n      <div v-for=\"item in data.navDataList\" :key=\"item.code\" @click=\"tabNav(item)\" :class=\"{selected: item.code == data.currentActive}\">{{item.name}}</div>\n    </div>\n    <div class=\"layout_content\">\n      <slot name=\"content\"></slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, reactive, ref } from 'vue';\nimport { useRouter} from 'vue-router'\nexport default defineComponent({\n  name: 'layoutWorld',\n  /**\n   * @description props 外部传入数据说明\n   * @param navData {array} 头部导航菜单数据 {name:string,code:string} name 菜单展示名称 code对应菜单组件router路由name\n   * @param navHeight {string | number} 传入头部导航栏高度 例如 200 ｜ '200'\n  */\n  props: {\n    navData:{\n      type: Array,\n      default: function() {\n        return [{\n          name: '开发中，敬请期待',\n          code: 'mainView'\n        }]\n      }\n    },\n    navHeight: {\n      type:String || Number,\n      default: 60\n    }\n  },\n  setup(props:any, ctx) {\n    const router = useRouter();//router\n    // 定义DOM\n    type  HTMLElementTagNameMap = {\n      div: HTMLDivElement\n    }\n    // reactive 定义响应式数据\n    const data = reactive({\n      currentActive: 'Builder',\n      navDataList: []\n    });\n    data.navDataList = ref(props.navData)\n    // 类型设置\n    type tabNavP = {\n      name: string,\n      code: string\n    }\n    /**\n     * @description 导航栏菜单点击跳转相应组件\n     * @param item {tabNavP} 当前点击菜单数据信息\n     * @returns\n    */\n    const tabNav = (item:tabNavP) => {\n      console.log(item)\n      data.currentActive = item.code;//设置当前活动菜单，用于设置样式\n      router.push({\n        name: item.code\n      })\n    };\n    /**\n     * @description 钩子函数\n    */\n    onMounted(()=> {\n      // 根据引用组件者 传入值进行修改页面头部菜单样式默认值\n      let divObj = document.querySelectorAll<HTMLDivElement>('div.layout_nav');\n      if(divObj !== null) {\n        // 设置自定义高度\n        divObj[0].style.height = props.navHeight + 'px';\n        divObj[0].style.lineHeight = props.navHeight + 'px';\n        // 设置自定义颜色\n      }\n      // 初始化设置头部菜单活动页及样式\n      data.currentActive = props.navData[0].code;\n      router.push({\n        name: data.currentActive\n      })\n    });\n    return {\n      data,\n      tabNav\n    }\n  }\n});\n</script>\n<style lang=\"less\" scoped>\n@import \"@/assets/css/variable.less\";\n.layout {\n  height:100%;\n  position: relative;\n  .layout_nav {\n    display: flex;\n    height: 60px;\n    line-height: 60px;\n    padding: 0 20px;\n    box-sizing: border-box;\n    background-color: @mainColor;\n    >div {\n      padding: 0 10px;\n      box-sizing: border-box;\n      margin-right: 10px;\n      cursor: pointer;\n      color: #fff;\n    }\n    .selected {\n      background-color:@mainMatchColor;\n    }\n  }\n  .layout_content {\n    height: calc(100vh - 60px);\n    padding: 20px;\n    box-sizing: border-box;\n  }\n}\n</style>\n","/Users/wawalike/Desktop/ggProject/src/views/wait/index.vue",[],{"ruleId":"42","severity":1,"message":"43","line":15,"column":47,"nodeType":"44","messageId":"45","endLine":15,"endColumn":53},{"ruleId":"42","severity":1,"message":"46","line":18,"column":11,"nodeType":"44","messageId":"45","endLine":18,"endColumn":16},{"ruleId":"42","severity":1,"message":"47","line":18,"column":17,"nodeType":"44","messageId":"45","endLine":18,"endColumn":20},{"ruleId":"48","severity":1,"message":"49","line":46,"column":33,"nodeType":"50","messageId":"51","endLine":46,"endColumn":36,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":67,"column":33,"nodeType":"50","messageId":"51","endLine":67,"endColumn":36,"suggestions":"53"},{"ruleId":"48","severity":1,"message":"49","line":37,"column":15,"nodeType":"50","messageId":"51","endLine":37,"endColumn":18,"suggestions":"54"},{"ruleId":"42","severity":1,"message":"47","line":37,"column":20,"nodeType":"44","messageId":"45","endLine":37,"endColumn":23},{"ruleId":"42","severity":1,"message":"55","line":40,"column":11,"nodeType":"44","messageId":"45","endLine":40,"endColumn":32},"@typescript-eslint/no-unused-vars","'toRefs' is defined but never used.","Identifier","unusedVar","'props' is defined but never used.","'ctx' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["56","57"],["58","59"],["60","61"],"'HTMLElementTagNameMap' is defined but never used.",{"messageId":"62","fix":"63","desc":"64"},{"messageId":"65","fix":"66","desc":"67"},{"messageId":"62","fix":"68","desc":"64"},{"messageId":"65","fix":"69","desc":"67"},{"messageId":"62","fix":"70","desc":"64"},{"messageId":"65","fix":"71","desc":"67"},"suggestUnknown",{"range":"72","text":"73"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"72","text":"74"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"75","text":"73"},{"range":"75","text":"74"},{"range":"76","text":"73"},{"range":"76","text":"74"},[1832,1835],"unknown","never",[2452,2455],[976,979]]